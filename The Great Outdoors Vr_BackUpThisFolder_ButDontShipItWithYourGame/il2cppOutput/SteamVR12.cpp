#include "il2cpp-config.h"

#ifndef _MSC_VER
# include <alloca.h>
#else
# include <malloc.h>
#endif


#include <cstring>
#include <string.h>
#include <stdio.h>
#include <cmath>
#include <limits>
#include <assert.h>
#include <stdint.h>

#include "codegen/il2cpp-codegen.h"
#include "il2cpp-object-internals.h"

template <typename T1, typename T2>
struct VirtActionInvoker2
{
	typedef void (*Action)(void*, T1, T2, const RuntimeMethod*);

	static inline void Invoke (Il2CppMethodSlot slot, RuntimeObject* obj, T1 p1, T2 p2)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_virtual_invoke_data(slot, obj);
		((Action)invokeData.methodPtr)(obj, p1, p2, invokeData.method);
	}
};
template <typename T1, typename T2, typename T3>
struct VirtActionInvoker3
{
	typedef void (*Action)(void*, T1, T2, T3, const RuntimeMethod*);

	static inline void Invoke (Il2CppMethodSlot slot, RuntimeObject* obj, T1 p1, T2 p2, T3 p3)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_virtual_invoke_data(slot, obj);
		((Action)invokeData.methodPtr)(obj, p1, p2, p3, invokeData.method);
	}
};
template <typename T1, typename T2, typename T3, typename T4, typename T5>
struct VirtActionInvoker5
{
	typedef void (*Action)(void*, T1, T2, T3, T4, T5, const RuntimeMethod*);

	static inline void Invoke (Il2CppMethodSlot slot, RuntimeObject* obj, T1 p1, T2 p2, T3 p3, T4 p4, T5 p5)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_virtual_invoke_data(slot, obj);
		((Action)invokeData.methodPtr)(obj, p1, p2, p3, p4, p5, invokeData.method);
	}
};
template <typename T1, typename T2, typename T3, typename T4, typename T5, typename T6>
struct VirtActionInvoker6
{
	typedef void (*Action)(void*, T1, T2, T3, T4, T5, T6, const RuntimeMethod*);

	static inline void Invoke (Il2CppMethodSlot slot, RuntimeObject* obj, T1 p1, T2 p2, T3 p3, T4 p4, T5 p5, T6 p6)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_virtual_invoke_data(slot, obj);
		((Action)invokeData.methodPtr)(obj, p1, p2, p3, p4, p5, p6, invokeData.method);
	}
};
template <typename R>
struct VirtFuncInvoker0
{
	typedef R (*Func)(void*, const RuntimeMethod*);

	static inline R Invoke (Il2CppMethodSlot slot, RuntimeObject* obj)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_virtual_invoke_data(slot, obj);
		return ((Func)invokeData.methodPtr)(obj, invokeData.method);
	}
};
template <typename T1>
struct VirtActionInvoker1
{
	typedef void (*Action)(void*, T1, const RuntimeMethod*);

	static inline void Invoke (Il2CppMethodSlot slot, RuntimeObject* obj, T1 p1)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_virtual_invoke_data(slot, obj);
		((Action)invokeData.methodPtr)(obj, p1, invokeData.method);
	}
};
template <typename R, typename T1>
struct VirtFuncInvoker1
{
	typedef R (*Func)(void*, T1, const RuntimeMethod*);

	static inline R Invoke (Il2CppMethodSlot slot, RuntimeObject* obj, T1 p1)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_virtual_invoke_data(slot, obj);
		return ((Func)invokeData.methodPtr)(obj, p1, invokeData.method);
	}
};
struct VirtActionInvoker0
{
	typedef void (*Action)(void*, const RuntimeMethod*);

	static inline void Invoke (Il2CppMethodSlot slot, RuntimeObject* obj)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_virtual_invoke_data(slot, obj);
		((Action)invokeData.methodPtr)(obj, invokeData.method);
	}
};
template <typename T1, typename T2, typename T3, typename T4>
struct VirtActionInvoker4
{
	typedef void (*Action)(void*, T1, T2, T3, T4, const RuntimeMethod*);

	static inline void Invoke (Il2CppMethodSlot slot, RuntimeObject* obj, T1 p1, T2 p2, T3 p3, T4 p4)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_virtual_invoke_data(slot, obj);
		((Action)invokeData.methodPtr)(obj, p1, p2, p3, p4, invokeData.method);
	}
};
template <typename R, typename T1, typename T2>
struct VirtFuncInvoker2
{
	typedef R (*Func)(void*, T1, T2, const RuntimeMethod*);

	static inline R Invoke (Il2CppMethodSlot slot, RuntimeObject* obj, T1 p1, T2 p2)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_virtual_invoke_data(slot, obj);
		return ((Func)invokeData.methodPtr)(obj, p1, p2, invokeData.method);
	}
};
template <typename T1, typename T2>
struct GenericVirtActionInvoker2
{
	typedef void (*Action)(void*, T1, T2, const RuntimeMethod*);

	static inline void Invoke (const RuntimeMethod* method, RuntimeObject* obj, T1 p1, T2 p2)
	{
		VirtualInvokeData invokeData;
		il2cpp_codegen_get_generic_virtual_invoke_data(method, obj, &invokeData);
		((Action)invokeData.methodPtr)(obj, p1, p2, invokeData.method);
	}
};
template <typename T1, typename T2, typename T3>
struct GenericVirtActionInvoker3
{
	typedef void (*Action)(void*, T1, T2, T3, const RuntimeMethod*);

	static inline void Invoke (const RuntimeMethod* method, RuntimeObject* obj, T1 p1, T2 p2, T3 p3)
	{
		VirtualInvokeData invokeData;
		il2cpp_codegen_get_generic_virtual_invoke_data(method, obj, &invokeData);
		((Action)invokeData.methodPtr)(obj, p1, p2, p3, invokeData.method);
	}
};
template <typename T1, typename T2, typename T3, typename T4, typename T5>
struct GenericVirtActionInvoker5
{
	typedef void (*Action)(void*, T1, T2, T3, T4, T5, const RuntimeMethod*);

	static inline void Invoke (const RuntimeMethod* method, RuntimeObject* obj, T1 p1, T2 p2, T3 p3, T4 p4, T5 p5)
	{
		VirtualInvokeData invokeData;
		il2cpp_codegen_get_generic_virtual_invoke_data(method, obj, &invokeData);
		((Action)invokeData.methodPtr)(obj, p1, p2, p3, p4, p5, invokeData.method);
	}
};
template <typename T1, typename T2, typename T3, typename T4, typename T5, typename T6>
struct GenericVirtActionInvoker6
{
	typedef void (*Action)(void*, T1, T2, T3, T4, T5, T6, const RuntimeMethod*);

	static inline void Invoke (const RuntimeMethod* method, RuntimeObject* obj, T1 p1, T2 p2, T3 p3, T4 p4, T5 p5, T6 p6)
	{
		VirtualInvokeData invokeData;
		il2cpp_codegen_get_generic_virtual_invoke_data(method, obj, &invokeData);
		((Action)invokeData.methodPtr)(obj, p1, p2, p3, p4, p5, p6, invokeData.method);
	}
};
template <typename T1>
struct GenericVirtActionInvoker1
{
	typedef void (*Action)(void*, T1, const RuntimeMethod*);

	static inline void Invoke (const RuntimeMethod* method, RuntimeObject* obj, T1 p1)
	{
		VirtualInvokeData invokeData;
		il2cpp_codegen_get_generic_virtual_invoke_data(method, obj, &invokeData);
		((Action)invokeData.methodPtr)(obj, p1, invokeData.method);
	}
};
template <typename T1, typename T2, typename T3, typename T4>
struct GenericVirtActionInvoker4
{
	typedef void (*Action)(void*, T1, T2, T3, T4, const RuntimeMethod*);

	static inline void Invoke (const RuntimeMethod* method, RuntimeObject* obj, T1 p1, T2 p2, T3 p3, T4 p4)
	{
		VirtualInvokeData invokeData;
		il2cpp_codegen_get_generic_virtual_invoke_data(method, obj, &invokeData);
		((Action)invokeData.methodPtr)(obj, p1, p2, p3, p4, invokeData.method);
	}
};
template <typename T1, typename T2>
struct InterfaceActionInvoker2
{
	typedef void (*Action)(void*, T1, T2, const RuntimeMethod*);

	static inline void Invoke (Il2CppMethodSlot slot, RuntimeClass* declaringInterface, RuntimeObject* obj, T1 p1, T2 p2)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_interface_invoke_data(slot, obj, declaringInterface);
		((Action)invokeData.methodPtr)(obj, p1, p2, invokeData.method);
	}
};
template <typename T1, typename T2, typename T3>
struct InterfaceActionInvoker3
{
	typedef void (*Action)(void*, T1, T2, T3, const RuntimeMethod*);

	static inline void Invoke (Il2CppMethodSlot slot, RuntimeClass* declaringInterface, RuntimeObject* obj, T1 p1, T2 p2, T3 p3)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_interface_invoke_data(slot, obj, declaringInterface);
		((Action)invokeData.methodPtr)(obj, p1, p2, p3, invokeData.method);
	}
};
template <typename T1, typename T2, typename T3, typename T4, typename T5>
struct InterfaceActionInvoker5
{
	typedef void (*Action)(void*, T1, T2, T3, T4, T5, const RuntimeMethod*);

	static inline void Invoke (Il2CppMethodSlot slot, RuntimeClass* declaringInterface, RuntimeObject* obj, T1 p1, T2 p2, T3 p3, T4 p4, T5 p5)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_interface_invoke_data(slot, obj, declaringInterface);
		((Action)invokeData.methodPtr)(obj, p1, p2, p3, p4, p5, invokeData.method);
	}
};
template <typename T1, typename T2, typename T3, typename T4, typename T5, typename T6>
struct InterfaceActionInvoker6
{
	typedef void (*Action)(void*, T1, T2, T3, T4, T5, T6, const RuntimeMethod*);

	static inline void Invoke (Il2CppMethodSlot slot, RuntimeClass* declaringInterface, RuntimeObject* obj, T1 p1, T2 p2, T3 p3, T4 p4, T5 p5, T6 p6)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_interface_invoke_data(slot, obj, declaringInterface);
		((Action)invokeData.methodPtr)(obj, p1, p2, p3, p4, p5, p6, invokeData.method);
	}
};
template <typename T1>
struct InterfaceActionInvoker1
{
	typedef void (*Action)(void*, T1, const RuntimeMethod*);

	static inline void Invoke (Il2CppMethodSlot slot, RuntimeClass* declaringInterface, RuntimeObject* obj, T1 p1)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_interface_invoke_data(slot, obj, declaringInterface);
		((Action)invokeData.methodPtr)(obj, p1, invokeData.method);
	}
};
template <typename T1, typename T2, typename T3, typename T4>
struct InterfaceActionInvoker4
{
	typedef void (*Action)(void*, T1, T2, T3, T4, const RuntimeMethod*);

	static inline void Invoke (Il2CppMethodSlot slot, RuntimeClass* declaringInterface, RuntimeObject* obj, T1 p1, T2 p2, T3 p3, T4 p4)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_interface_invoke_data(slot, obj, declaringInterface);
		((Action)invokeData.methodPtr)(obj, p1, p2, p3, p4, invokeData.method);
	}
};
template <typename T1, typename T2>
struct GenericInterfaceActionInvoker2
{
	typedef void (*Action)(void*, T1, T2, const RuntimeMethod*);

	static inline void Invoke (const RuntimeMethod* method, RuntimeObject* obj, T1 p1, T2 p2)
	{
		VirtualInvokeData invokeData;
		il2cpp_codegen_get_generic_interface_invoke_data(method, obj, &invokeData);
		((Action)invokeData.methodPtr)(obj, p1, p2, invokeData.method);
	}
};
template <typename T1, typename T2, typename T3>
struct GenericInterfaceActionInvoker3
{
	typedef void (*Action)(void*, T1, T2, T3, const RuntimeMethod*);

	static inline void Invoke (const RuntimeMethod* method, RuntimeObject* obj, T1 p1, T2 p2, T3 p3)
	{
		VirtualInvokeData invokeData;
		il2cpp_codegen_get_generic_interface_invoke_data(method, obj, &invokeData);
		((Action)invokeData.methodPtr)(obj, p1, p2, p3, invokeData.method);
	}
};
template <typename T1, typename T2, typename T3, typename T4, typename T5>
struct GenericInterfaceActionInvoker5
{
	typedef void (*Action)(void*, T1, T2, T3, T4, T5, const RuntimeMethod*);

	static inline void Invoke (const RuntimeMethod* method, RuntimeObject* obj, T1 p1, T2 p2, T3 p3, T4 p4, T5 p5)
	{
		VirtualInvokeData invokeData;
		il2cpp_codegen_get_generic_interface_invoke_data(method, obj, &invokeData);
		((Action)invokeData.methodPtr)(obj, p1, p2, p3, p4, p5, invokeData.method);
	}
};
template <typename T1, typename T2, typename T3, typename T4, typename T5, typename T6>
struct GenericInterfaceActionInvoker6
{
	typedef void (*Action)(void*, T1, T2, T3, T4, T5, T6, const RuntimeMethod*);

	static inline void Invoke (const RuntimeMethod* method, RuntimeObject* obj, T1 p1, T2 p2, T3 p3, T4 p4, T5 p5, T6 p6)
	{
		VirtualInvokeData invokeData;
		il2cpp_codegen_get_generic_interface_invoke_data(method, obj, &invokeData);
		((Action)invokeData.methodPtr)(obj, p1, p2, p3, p4, p5, p6, invokeData.method);
	}
};
template <typename T1>
struct GenericInterfaceActionInvoker1
{
	typedef void (*Action)(void*, T1, const RuntimeMethod*);

	static inline void Invoke (const RuntimeMethod* method, RuntimeObject* obj, T1 p1)
	{
		VirtualInvokeData invokeData;
		il2cpp_codegen_get_generic_interface_invoke_data(method, obj, &invokeData);
		((Action)invokeData.methodPtr)(obj, p1, invokeData.method);
	}
};
template <typename T1, typename T2, typename T3, typename T4>
struct GenericInterfaceActionInvoker4
{
	typedef void (*Action)(void*, T1, T2, T3, T4, const RuntimeMethod*);

	static inline void Invoke (const RuntimeMethod* method, RuntimeObject* obj, T1 p1, T2 p2, T3 p3, T4 p4)
	{
		VirtualInvokeData invokeData;
		il2cpp_codegen_get_generic_interface_invoke_data(method, obj, &invokeData);
		((Action)invokeData.methodPtr)(obj, p1, p2, p3, p4, invokeData.method);
	}
};

// SteamVR_Utils/RigidTransform[]
struct RigidTransformU5BU5D_tC98EB3576009E5D825D0D43671A65D32A2449ECC;
// System.Action`1<System.Object>
struct Action_1_t551A279CEADCF6EEAE8FA2B1E1E757D0D15290D0;
// System.Action`1<System.String>
struct Action_1_t32A9EECF5D4397CC1B9A7C7079870875411B06D0;
// System.AsyncCallback
struct AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4;
// System.Char[]
struct CharU5BU5D_t4CC6ABF0AD71BEC97E3C2F1E9C5677E46D3A75C2;
// System.Collections.Generic.List`1<System.Int32>
struct List_1_tE1526161A558A17A39A8B69D8EEF3801393B6226;
// System.Collections.Generic.List`1<Valve.VR.SteamVR_Skeleton_Pose>
struct List_1_tEC9949C3AED865A8508B828F7285A69E9B978B64;
// System.Collections.Generic.List`1<Valve.VR.SteamVR_Skeleton_Poser/PoseBlendingBehaviour>
struct List_1_tA37A95A513EA43988C85E8625FFEA127707FFAF7;
// System.Collections.IDictionary
struct IDictionary_t1BD5C1546718A374EA8122FBD6C6EE45331E8CE7;
// System.Collections.IEnumerator
struct IEnumerator_t8789118187258CC88B77AFAC6315B5AF87D3E18A;
// System.Delegate
struct Delegate_t;
// System.DelegateData
struct DelegateData_t1BF9F691B56DAE5F8C28C5E084FDE94F15F27BBE;
// System.Delegate[]
struct DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86;
// System.Diagnostics.StackTrace[]
struct StackTraceU5BU5D_t855F09649EA34DEE7C1B6F088E0538E3CCC3F196;
// System.IAsyncResult
struct IAsyncResult_t8E194308510B375B42432981AE5E7488C458D598;
// System.IntPtr[]
struct IntPtrU5BU5D_t4DC01DCB9A6DF6C9792A6513595D7A11E637DCDD;
// System.NotSupportedException
struct NotSupportedException_tE75B318D6590A02A5D9B29FD97409B1750FA0010;
// System.Object[]
struct ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A;
// System.Reflection.MethodInfo
struct MethodInfo_t;
// System.Runtime.Serialization.SafeSerializationManager
struct SafeSerializationManager_t4A754D86B0F784B18CBC36C073BA564BED109770;
// System.Single[]
struct SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5;
// System.String
struct String_t;
// System.String[]
struct StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E;
// System.Void
struct Void_t22962CB4C05B1D89B55A6E1139F0E87A90987017;
// UnityEngine.Component
struct Component_t05064EF382ABCAF4B8C94F8A350EA85184C26621;
// UnityEngine.Coroutine
struct Coroutine_tAE7DB2FC70A0AE6477F896F852057CB0754F06EC;
// UnityEngine.Events.InvokableCallList
struct InvokableCallList_t18AA4F473C7B295216B7D4B9723B4F3DFCCC9A3F;
// UnityEngine.Events.PersistentCallGroup
struct PersistentCallGroup_t6E5DF2EBDA42794B5FE0C6DAA97DF65F0BFF571F;
// UnityEngine.Events.UnityAction
struct UnityAction_tD19B26F1B2C048E38FD5801A33573BE01064CAF4;
// UnityEngine.Events.UnityAction`1<Valve.VR.VREvent_t>
struct UnityAction_1_tB43C1CF1D8DCDDE3590ED959587DB9809C1294BF;
// UnityEngine.Events.UnityEvent`2<System.Object,System.Int32Enum>
struct UnityEvent_2_t805AE90FB19A3B2E903161B79BBB4F2DE5ADF91F;
// UnityEngine.Events.UnityEvent`2<Valve.VR.SteamVR_Behaviour_Pose,Valve.VR.SteamVR_Input_Sources>
struct UnityEvent_2_tA05085E47587B6E451DA7BFE1C3551696049307E;
// UnityEngine.Events.UnityEvent`2<Valve.VR.SteamVR_Behaviour_Skeleton,Valve.VR.SteamVR_Input_Sources>
struct UnityEvent_2_t1039E05662791F0E922DA5769E4F1664E336547D;
// UnityEngine.Events.UnityEvent`3<System.Object,System.Int32Enum,System.Boolean>
struct UnityEvent_3_t4DB54CE335910AFA0DAA4CDC4D3526D8245C94D5;
// UnityEngine.Events.UnityEvent`3<System.Object,System.Int32Enum,System.Int32>
struct UnityEvent_3_t703D19104F53A60C2167DF1AEA02C21EB9511988;
// UnityEngine.Events.UnityEvent`3<System.Object,System.Int32Enum,System.Int32Enum>
struct UnityEvent_3_tC1C064339F75149418E4C62873257F468D82018A;
// UnityEngine.Events.UnityEvent`3<Valve.VR.SteamVR_Behaviour_Boolean,Valve.VR.SteamVR_Input_Sources,System.Boolean>
struct UnityEvent_3_t6AB15570399D42C6377741DA4B8F5FD3CEED0539;
// UnityEngine.Events.UnityEvent`3<Valve.VR.SteamVR_Behaviour_Pose,Valve.VR.SteamVR_Input_Sources,System.Boolean>
struct UnityEvent_3_tBBC56B079516E009B4B82F815EA628510B08FB2B;
// UnityEngine.Events.UnityEvent`3<Valve.VR.SteamVR_Behaviour_Pose,Valve.VR.SteamVR_Input_Sources,System.Int32>
struct UnityEvent_3_t9F7FBE764B10ACE18D72DD1C3A0FD02372F2FDE4;
// UnityEngine.Events.UnityEvent`3<Valve.VR.SteamVR_Behaviour_Pose,Valve.VR.SteamVR_Input_Sources,Valve.VR.ETrackingResult>
struct UnityEvent_3_t391F2DDF36FA264C778F53EB8FDCE5A95F5064BE;
// UnityEngine.Events.UnityEvent`3<Valve.VR.SteamVR_Behaviour_Skeleton,Valve.VR.SteamVR_Input_Sources,System.Boolean>
struct UnityEvent_3_tC8A397CA8890011F49B784FC92F66521499D69BA;
// UnityEngine.Events.UnityEvent`3<Valve.VR.SteamVR_Behaviour_Skeleton,Valve.VR.SteamVR_Input_Sources,Valve.VR.ETrackingResult>
struct UnityEvent_3_t516983F871A6C39CE10EE0B4C19E30BE359971A0;
// UnityEngine.Events.UnityEvent`4<System.Object,System.Int32Enum,System.Single,System.Single>
struct UnityEvent_4_t1F826F09136C51BFD9170BD030317255794011D6;
// UnityEngine.Events.UnityEvent`4<System.Object,System.Int32Enum,UnityEngine.Vector2,UnityEngine.Vector2>
struct UnityEvent_4_t35A44AE1B2ED081A8B8F671116B82164C6E80B8D;
// UnityEngine.Events.UnityEvent`4<Valve.VR.SteamVR_Behaviour_Single,Valve.VR.SteamVR_Input_Sources,System.Single,System.Single>
struct UnityEvent_4_t3A547C01CD6A63A594A6C4E837E12268349BF0C7;
// UnityEngine.Events.UnityEvent`4<Valve.VR.SteamVR_Behaviour_Vector2,Valve.VR.SteamVR_Input_Sources,UnityEngine.Vector2,UnityEngine.Vector2>
struct UnityEvent_4_t980357B09A0DFE7E7E39E176C64C88B144A074AB;
// UnityEngine.GameObject
struct GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F;
// UnityEngine.MonoBehaviour
struct MonoBehaviour_t4A60845CF505405AF8BE8C61CC07F75CADEF6429;
// UnityEngine.Object
struct Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0;
// UnityEngine.Quaternion[]
struct QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3;
// UnityEngine.Transform
struct Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA;
// UnityEngine.Transform[]
struct TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804;
// UnityEngine.Vector3[]
struct Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28;
// UnityEngine.WaitForEndOfFrame
struct WaitForEndOfFrame_t75980FB3F246D6AD36A85CA2BFDF8474E5EEBCCA;
// Valve.VR.CVRInput
struct CVRInput_t2BE4417A3C1EA0C6CF647B0706BF37F886CE599B;
// Valve.VR.EVRInputStringBits[]
struct EVRInputStringBitsU5BU5D_t9F9E9B47CD745CAAB4F8EDC305D84DDF9E5BE511;
// Valve.VR.EVRScreenshotType[]
struct EVRScreenshotTypeU5BU5D_tD8F931B82D9D29E97B71BB630996E1E3F713D74E;
// Valve.VR.IVRInput/_DecompressSkeletalBoneData
struct _DecompressSkeletalBoneData_t8A92BDC21C8090D2E2952E48A5925D4B8DD48277;
// Valve.VR.IVRInput/_GetActionBindingInfo
struct _GetActionBindingInfo_t888BA9460789EBC395139AB0DBBBA3089B2E0FC5;
// Valve.VR.IVRInput/_GetActionHandle
struct _GetActionHandle_tAA6FC70C31E52EB9899414C5DF8666A660D73988;
// Valve.VR.IVRInput/_GetActionOrigins
struct _GetActionOrigins_tE0D9FE805034861066738B53CD6ED5D774553C69;
// Valve.VR.IVRInput/_GetActionSetHandle
struct _GetActionSetHandle_tDCCC10117A32D6F523EED20F9C35C8F104A6DE56;
// Valve.VR.IVRInput/_GetAnalogActionData
struct _GetAnalogActionData_t6B38FFFF0181415420E9380BDCFC944C9D73D6CB;
// Valve.VR.IVRInput/_GetBindingVariant
struct _GetBindingVariant_t54394654ADF0C4DFE91EC183B932B47AD3AD9F96;
// Valve.VR.IVRInput/_GetBoneCount
struct _GetBoneCount_t6C3C3EFD4AAFFC3A51B471217CA56C6CDB85A8A1;
// Valve.VR.IVRInput/_GetBoneHierarchy
struct _GetBoneHierarchy_t167DE2FE59F4348442E70AD40E9908D3396FE876;
// Valve.VR.IVRInput/_GetBoneName
struct _GetBoneName_t802A405B0C688F34E650358ED94EB5E83003B4FF;
// Valve.VR.IVRInput/_GetComponentStateForBinding
struct _GetComponentStateForBinding_t528D11F913578272C9159336F2B9473530BE99AA;
// Valve.VR.IVRInput/_GetDigitalActionData
struct _GetDigitalActionData_tF308BA2153B8638CAD78903A8E4A6FF63A0AE5E8;
// Valve.VR.IVRInput/_GetDominantHand
struct _GetDominantHand_tBA54323C6ADA02D432F6FB26A3AE1007002F5029;
// Valve.VR.IVRInput/_GetInputSourceHandle
struct _GetInputSourceHandle_tAB5E42F59BE5F64E4D025C405AD1DF589BE798EF;
// Valve.VR.IVRInput/_GetOriginLocalizedName
struct _GetOriginLocalizedName_t3FDAF7E14C966B8922289564E4EDFD9FD2708E4F;
// Valve.VR.IVRInput/_GetOriginTrackedDeviceInfo
struct _GetOriginTrackedDeviceInfo_tCCCCE9FC46CC32CD3CEE514462A4D2AAB295BA4B;
// Valve.VR.IVRInput/_GetPoseActionDataForNextFrame
struct _GetPoseActionDataForNextFrame_tAA10FE3259883E133F8F097728EED8DE994C157E;
// Valve.VR.IVRInput/_GetPoseActionDataRelativeToNow
struct _GetPoseActionDataRelativeToNow_t8ED7A8761F721F5713D809DB6B79BFDB91E01BB8;
// Valve.VR.IVRInput/_GetSkeletalActionData
struct _GetSkeletalActionData_t5F353A7DB921C384ACD71B83F4E7F83B8F957A1A;
// Valve.VR.IVRInput/_GetSkeletalBoneData
struct _GetSkeletalBoneData_tB6C26FFFE2DC1A4EBF7538C8B822BCF44FDE950A;
// Valve.VR.IVRInput/_GetSkeletalBoneDataCompressed
struct _GetSkeletalBoneDataCompressed_tE546DCB602D70AFE33D3988CA648F582BF4D795B;
// Valve.VR.IVRInput/_GetSkeletalReferenceTransforms
struct _GetSkeletalReferenceTransforms_tB13CA87584C074E43514FD286E673444A770C7F5;
// Valve.VR.IVRInput/_GetSkeletalSummaryData
struct _GetSkeletalSummaryData_tDBD7B97D7AEB5C6023AB7500B7EFB7B46FC00822;
// Valve.VR.IVRInput/_GetSkeletalTrackingLevel
struct _GetSkeletalTrackingLevel_t20487D8EE1F4E97466D3362B812896DAC707DE93;
// Valve.VR.IVRInput/_IsUsingLegacyInput
struct _IsUsingLegacyInput_t47530FACE216CEDA2B1629F03D1FE805B67664A7;
// Valve.VR.IVRInput/_OpenBindingUI
struct _OpenBindingUI_t04252A1EDE97A953F55220A73E647A8DD9EA831F;
// Valve.VR.IVRInput/_SetActionManifestPath
struct _SetActionManifestPath_tCC8157D33535562FA6C3DDCA5CBC0F82B51306FE;
// Valve.VR.IVRInput/_SetDominantHand
struct _SetDominantHand_t781C37553971079E806C986AF0571A5394BB608D;
// Valve.VR.IVRInput/_ShowActionOrigins
struct _ShowActionOrigins_t2D44C15D7A1A68B48BD8A5718303C019CB82DE71;
// Valve.VR.IVRInput/_ShowBindingsForActionSet
struct _ShowBindingsForActionSet_tE794CCA21EF1D46F19895A28146A79FA5B41BB2A;
// Valve.VR.IVRInput/_TriggerHapticVibrationAction
struct _TriggerHapticVibrationAction_tD6966DC222C78E33A391603FA738554C337292C8;
// Valve.VR.IVRInput/_UpdateActionState
struct _UpdateActionState_t34A07E451D658BB88598E974A3A804775EE414C5;
// Valve.VR.SteamVR_Action
struct SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734;
// Valve.VR.SteamVR_ActionSet
struct SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6;
// Valve.VR.SteamVR_ActionSet_Data
struct SteamVR_ActionSet_Data_tDA03CB718A3B3F5805D6D9C399D57E56AF9DA529;
// Valve.VR.SteamVR_Action_Boolean
struct SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20;
// Valve.VR.SteamVR_Action_Boolean/ActiveChangeHandler
struct ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884;
// Valve.VR.SteamVR_Action_Boolean/ChangeHandler
struct ChangeHandler_tBE955A4C204CE64CDAD63911BA738EC2873DF7B0;
// Valve.VR.SteamVR_Action_Boolean/StateDownHandler
struct StateDownHandler_t7D29100BA5CD0DFB8B7AE4388E1AB7AF114F4464;
// Valve.VR.SteamVR_Action_Boolean/StateHandler
struct StateHandler_tBBEC523C11F1EC99BF356128B427327EF349EAFA;
// Valve.VR.SteamVR_Action_Boolean/StateUpHandler
struct StateUpHandler_t74A1CE14E1749B62B14281BCFA09CB750D7A5ED8;
// Valve.VR.SteamVR_Action_Boolean/UpdateHandler
struct UpdateHandler_tC5DA62D5AA34319AAE9E044A4D98A942E9F7738B;
// Valve.VR.SteamVR_Action_Boolean_Source
struct SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB;
// Valve.VR.SteamVR_Action_Boolean_Source_Map
struct SteamVR_Action_Boolean_Source_Map_tF5558AC3C11798E60DC5152DD2FB5E835D79AA3B;
// Valve.VR.SteamVR_Action_In_Source
struct SteamVR_Action_In_Source_t6C3FA81DC7F53D302E49E09F5791E612AC7832AB;
// Valve.VR.SteamVR_Action_In_Source_Map`1<System.Object>
struct SteamVR_Action_In_Source_Map_1_t7F4F1E354FE5A814AEA83C884D31215ED36A1A8D;
// Valve.VR.SteamVR_Action_In_Source_Map`1<Valve.VR.SteamVR_Action_Vector3_Source>
struct SteamVR_Action_In_Source_Map_1_t462A1CF8307E7E62DA57F8FA49B7405C51117253;
// Valve.VR.SteamVR_Action_In`2<System.Object,System.Object>
struct SteamVR_Action_In_2_t69D3F3E304EB8FE2A070ACD581E61CDFF8732243;
// Valve.VR.SteamVR_Action_In`2<Valve.VR.SteamVR_Action_Boolean_Source_Map,Valve.VR.SteamVR_Action_Boolean_Source>
struct SteamVR_Action_In_2_t2F8E3210A305FC855ECD46AD48FA406BA177FAA9;
// Valve.VR.SteamVR_Action_In`2<Valve.VR.SteamVR_Action_Pose_Source_Map`1<Valve.VR.SteamVR_Action_Pose_Source>,Valve.VR.SteamVR_Action_Pose_Source>
struct SteamVR_Action_In_2_t2C5C166B83FDF97166A2B5B007C2A5742BBE2199;
// Valve.VR.SteamVR_Action_In`2<Valve.VR.SteamVR_Action_Single_Source_Map,Valve.VR.SteamVR_Action_Single_Source>
struct SteamVR_Action_In_2_t518EEA73CD833B39D557DDB94804313377E0FE02;
// Valve.VR.SteamVR_Action_In`2<Valve.VR.SteamVR_Action_Vector2_Source_Map,Valve.VR.SteamVR_Action_Vector2_Source>
struct SteamVR_Action_In_2_t4260173E99094920C69878272DE55CE93D5D5A9C;
// Valve.VR.SteamVR_Action_Out_Source
struct SteamVR_Action_Out_Source_t6BAB7CAA13DB2A871A892C09BFF55378A6D327D6;
// Valve.VR.SteamVR_Action_Out`2<System.Object,System.Object>
struct SteamVR_Action_Out_2_tBFC90712829F4A53DB24EF908459C469ADC749B7;
// Valve.VR.SteamVR_Action_Out`2<Valve.VR.SteamVR_Action_Vibration_Source_Map,Valve.VR.SteamVR_Action_Vibration_Source>
struct SteamVR_Action_Out_2_tA45864F69B273963D043D8A2A878B60DC5995BD0;
// Valve.VR.SteamVR_Action_Pose
struct SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C;
// Valve.VR.SteamVR_Action_Pose/ActiveChangeHandler
struct ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E;
// Valve.VR.SteamVR_Action_Pose/ChangeHandler
struct ChangeHandler_tBB749BC376815901B6E13DF03202383F3302BFBE;
// Valve.VR.SteamVR_Action_Pose/DeviceConnectedChangeHandler
struct DeviceConnectedChangeHandler_t4AC124A9A94D668A0FB45EA8FC718729CEA3D0D9;
// Valve.VR.SteamVR_Action_Pose/TrackingChangeHandler
struct TrackingChangeHandler_t1CC1FD6A7111B86684B749C4E751B1F5237D2914;
// Valve.VR.SteamVR_Action_Pose/UpdateHandler
struct UpdateHandler_t4F6AB1825F5E5CE6A7BBCD6C84541B3DF13C2AA1;
// Valve.VR.SteamVR_Action_Pose/ValidPoseChangeHandler
struct ValidPoseChangeHandler_t1D487A0B0E2FB0D02C72EF5365E81BCD3E33B41A;
// Valve.VR.SteamVR_Action_Pose_Source
struct SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27;
// Valve.VR.SteamVR_Action_Pose_Source_Map`1<Valve.VR.SteamVR_Action_Pose_Source>
struct SteamVR_Action_Pose_Source_Map_1_t191C12A385C6BE9645B171973AA0141ECCBA76A9;
// Valve.VR.SteamVR_Action_Single
struct SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81;
// Valve.VR.SteamVR_Action_Single/ActiveChangeHandler
struct ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE;
// Valve.VR.SteamVR_Action_Single/AxisHandler
struct AxisHandler_tB065AC6B40691A33562DB817EBD29E5721A64843;
// Valve.VR.SteamVR_Action_Single/ChangeHandler
struct ChangeHandler_tF837F67A16B6ED5F9B2C676AC0AF9C611397DFED;
// Valve.VR.SteamVR_Action_Single/UpdateHandler
struct UpdateHandler_t4011C6F65732B2D2AD73A21EBF2ADD943897886D;
// Valve.VR.SteamVR_Action_Single_Source
struct SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F;
// Valve.VR.SteamVR_Action_Single_Source_Map
struct SteamVR_Action_Single_Source_Map_tBD46D15F4FCB5A4B6BDA2B1FE96035D4DDBDBA37;
// Valve.VR.SteamVR_Action_Skeleton
struct SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504;
// Valve.VR.SteamVR_Action_Skeleton/DeviceConnectedChangeHandler
struct DeviceConnectedChangeHandler_tA531478A75E2F7B0C49D41DADBB9FD7BD46C4592;
// Valve.VR.SteamVR_Action_Skeleton/TrackingChangeHandler
struct TrackingChangeHandler_t8AD34E45FED47F362BB0D3E5B6B950708A0EC6B4;
// Valve.VR.SteamVR_Action_Skeleton_Source_Map
struct SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB;
// Valve.VR.SteamVR_Action_Source
struct SteamVR_Action_Source_t9D7428CDE39924074518EE6233D9A4FAB0C33CB0;
// Valve.VR.SteamVR_Action_Source_Map`1<System.Object>
struct SteamVR_Action_Source_Map_1_tCAA2C8FE17BA000619F1ADE00A17D8037F5B4B14;
// Valve.VR.SteamVR_Action_Source_Map`1<Valve.VR.SteamVR_Action_Vibration_Source>
struct SteamVR_Action_Source_Map_1_t4C60A6B852FEF89276918CCD2B6136E8FD572AA7;
// Valve.VR.SteamVR_Action_Vector2
struct SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37;
// Valve.VR.SteamVR_Action_Vector2/ActiveChangeHandler
struct ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2;
// Valve.VR.SteamVR_Action_Vector2/AxisHandler
struct AxisHandler_t97FB692AF5465040A2929AB663941933E3567689;
// Valve.VR.SteamVR_Action_Vector2/ChangeHandler
struct ChangeHandler_t716932883EC2BC15936E355D02A9D68B8F9EA6B6;
// Valve.VR.SteamVR_Action_Vector2/UpdateHandler
struct UpdateHandler_t5CC79EAAED92D106A0FBE46F2E73949A31CDA177;
// Valve.VR.SteamVR_Action_Vector2_Source
struct SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1;
// Valve.VR.SteamVR_Action_Vector2_Source_Map
struct SteamVR_Action_Vector2_Source_Map_tA43BF0AE8C89C3094C8375D1A82AE8676DA218D3;
// Valve.VR.SteamVR_Action_Vector3_Source[]
struct SteamVR_Action_Vector3_SourceU5BU5D_t3786953EC7D2DDE18FE5D1A5C158FE06D1C3E8BF;
// Valve.VR.SteamVR_Action_Vector3_Source_Map
struct SteamVR_Action_Vector3_Source_Map_t2469AF68483668A9E13B8CEC018862BF8D187C95;
// Valve.VR.SteamVR_Action_Vibration
struct SteamVR_Action_Vibration_t487523BCA03933B9812950511E8A4BCE00F03EAB;
// Valve.VR.SteamVR_Action_Vibration/ActiveChangeHandler
struct ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA;
// Valve.VR.SteamVR_Action_Vibration/ExecuteHandler
struct ExecuteHandler_t8B67500B15AC184E56E293FC390AB5683D50D865;
// Valve.VR.SteamVR_Action_Vibration_Source
struct SteamVR_Action_Vibration_Source_tB30315A543AA13F11BB80C1D5C7DEDF37058C151;
// Valve.VR.SteamVR_Action_Vibration_Source[]
struct SteamVR_Action_Vibration_SourceU5BU5D_tB39B74339680889980518AF68E5B5AB014912A04;
// Valve.VR.SteamVR_Action_Vibration_Source_Map
struct SteamVR_Action_Vibration_Source_Map_t81B9741E979634A2E0A6D7AE2518F89F3481047A;
// Valve.VR.SteamVR_Action`2<System.Object,System.Object>
struct SteamVR_Action_2_t17CE6363B177E4D037F3097259B68D6F8842CC5B;
// Valve.VR.SteamVR_Action`2<Valve.VR.SteamVR_Action_Vibration_Source_Map,Valve.VR.SteamVR_Action_Vibration_Source>
struct SteamVR_Action_2_t2615F9F41BCBF5EA1EE3A8AF266CE58FAFF6521D;
// Valve.VR.SteamVR_ActivateActionSetOnLoad
struct SteamVR_ActivateActionSetOnLoad_tFA2CB881F46FAEC2C6CAF162957F7FD1D0B12DB7;
// Valve.VR.SteamVR_Behaviour
struct SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586;
// Valve.VR.SteamVR_Behaviour/<DoInitializeSteamVR>d__15
struct U3CDoInitializeSteamVRU3Ed__15_tF2B5867E813D537B7B4B232138211FE3C01A21F7;
// Valve.VR.SteamVR_Behaviour_Boolean
struct SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00;
// Valve.VR.SteamVR_Behaviour_Boolean/ActiveChangeHandler
struct ActiveChangeHandler_t299D2C23766385EE91DB72700CF21326F803F453;
// Valve.VR.SteamVR_Behaviour_Boolean/ChangeHandler
struct ChangeHandler_tADA56232D143B2D18BA3D6F2A9B5CE2AC637CBB6;
// Valve.VR.SteamVR_Behaviour_Boolean/StateDownHandler
struct StateDownHandler_tFF77368F427C4FE6164A97B238F944123AA8FE24;
// Valve.VR.SteamVR_Behaviour_Boolean/StateHandler
struct StateHandler_tC57B51755B81869515107A3BE4BC3865F974190D;
// Valve.VR.SteamVR_Behaviour_Boolean/StateUpHandler
struct StateUpHandler_tC09A0C33E80BBF97F8E88D36519482DFE36DBCC5;
// Valve.VR.SteamVR_Behaviour_Boolean/UpdateHandler
struct UpdateHandler_t9FC31A405C9C47120C5307368335AD9F708511D1;
// Valve.VR.SteamVR_Behaviour_BooleanEvent
struct SteamVR_Behaviour_BooleanEvent_t96626CBD0A0BD84C51D1F9E03DE5BEBFF58A48E4;
// Valve.VR.SteamVR_Behaviour_Pose
struct SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787;
// Valve.VR.SteamVR_Behaviour_Pose/ActiveChangeHandler
struct ActiveChangeHandler_t1FB373EFCE81765E92E8482D412853F249193DDA;
// Valve.VR.SteamVR_Behaviour_Pose/ChangeHandler
struct ChangeHandler_t62B565E3F59005232530941762BA9C99466E7190;
// Valve.VR.SteamVR_Behaviour_Pose/DeviceConnectedChangeHandler
struct DeviceConnectedChangeHandler_tAC0D58B9BE0BEF1758FC23FC5A09211DAFC695AB;
// Valve.VR.SteamVR_Behaviour_Pose/DeviceIndexChangedHandler
struct DeviceIndexChangedHandler_t5AD6CF16FBFD1AFBCAABCE86FF9A5F9958E5E988;
// Valve.VR.SteamVR_Behaviour_Pose/TrackingChangeHandler
struct TrackingChangeHandler_tE2D5245E21857392ED2CCBEAD0D65408B5DC5443;
// Valve.VR.SteamVR_Behaviour_Pose/UpdateHandler
struct UpdateHandler_t7F4B3FFE3096B37EB5424E580DA100C61857DC4D;
// Valve.VR.SteamVR_Behaviour_Pose/ValidPoseChangeHandler
struct ValidPoseChangeHandler_t9F17891A8C5AE0FD1A06F1C3ED15A5EDEB119DE9;
// Valve.VR.SteamVR_Behaviour_PoseEvent
struct SteamVR_Behaviour_PoseEvent_t110293A57CED63A5C2FFEF4849FC452DE99B2F87;
// Valve.VR.SteamVR_Behaviour_Pose_ConnectedChangedEvent
struct SteamVR_Behaviour_Pose_ConnectedChangedEvent_t79FB8A09A29315BCF3A67CC1FA2D124C01D3EAE9;
// Valve.VR.SteamVR_Behaviour_Pose_DeviceIndexChangedEvent
struct SteamVR_Behaviour_Pose_DeviceIndexChangedEvent_tB4204CD58F5763D655B3B020CAEA0CD8A45D13E9;
// Valve.VR.SteamVR_Behaviour_Pose_TrackingChangedEvent
struct SteamVR_Behaviour_Pose_TrackingChangedEvent_tC76D95F0E8D943109311BCE1B35E1D8CDC3C2E6E;
// Valve.VR.SteamVR_Behaviour_Single
struct SteamVR_Behaviour_Single_t0224221A2437628A3FAFF02B7B02D88952021562;
// Valve.VR.SteamVR_Behaviour_Single/AxisHandler
struct AxisHandler_t6CD6525481A3708C4FFC01A49F13C96EBD464F6C;
// Valve.VR.SteamVR_Behaviour_Single/ChangeHandler
struct ChangeHandler_t5D78A5C2B8BE043F0EF515BB84766EC330B52DF7;
// Valve.VR.SteamVR_Behaviour_Single/UpdateHandler
struct UpdateHandler_t35B29D0C538D0A17C13EFD36765FF0278EE256D4;
// Valve.VR.SteamVR_Behaviour_SingleEvent
struct SteamVR_Behaviour_SingleEvent_tB6C52A82965E98E5B7A851CB572E9B6FD88FE4F4;
// Valve.VR.SteamVR_Behaviour_Skeleton
struct SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A;
// Valve.VR.SteamVR_Behaviour_Skeleton/<DoBlendRoutine>d__152
struct U3CDoBlendRoutineU3Ed__152_tFF832A9C1A3DA477A5CB7789B762723F29BB50D6;
// Valve.VR.SteamVR_Behaviour_Skeleton/<DoRangeOfMotionBlend>d__156
struct U3CDoRangeOfMotionBlendU3Ed__156_tA971D0B47D544B2CDCFFBDE43070BD5D7572E0C9;
// Valve.VR.SteamVR_Behaviour_Skeleton/ActiveChangeHandler
struct ActiveChangeHandler_tB3A5BB1A449EFD685FB81C2673E955D602F14A0E;
// Valve.VR.SteamVR_Behaviour_Skeleton/ChangeHandler
struct ChangeHandler_tB89A36613D65385655B73DBDA42D2F08868FD67F;
// Valve.VR.SteamVR_Behaviour_Skeleton/DeviceConnectedChangeHandler
struct DeviceConnectedChangeHandler_t0F6018732B70A6C87D60D7C71A04183CE5B1E617;
// Valve.VR.SteamVR_Behaviour_Skeleton/TrackingChangeHandler
struct TrackingChangeHandler_t0354ED148830BCEA31C451E8C314757B70B5D63F;
// Valve.VR.SteamVR_Behaviour_Skeleton/UpdateHandler
struct UpdateHandler_t529F28858847FB086B7F9A7A7E52860C7430976A;
// Valve.VR.SteamVR_Behaviour_Skeleton/ValidPoseChangeHandler
struct ValidPoseChangeHandler_tB007A90D7183653C99CE0E9FA649882562C1BE53;
// Valve.VR.SteamVR_Behaviour_SkeletonCustom
struct SteamVR_Behaviour_SkeletonCustom_t9C282A2B1009A9AEBA27B48F403138E32EC623E7;
// Valve.VR.SteamVR_Behaviour_SkeletonEvent
struct SteamVR_Behaviour_SkeletonEvent_t2A4AAE28B8BB6F5E52B7A7FAF6ADF1F3DE537627;
// Valve.VR.SteamVR_Behaviour_Skeleton_ConnectedChangedEvent
struct SteamVR_Behaviour_Skeleton_ConnectedChangedEvent_t448A3C929AA8F491BB03F8340DC791D40A546C85;
// Valve.VR.SteamVR_Behaviour_Skeleton_TrackingChangedEvent
struct SteamVR_Behaviour_Skeleton_TrackingChangedEvent_tE5D388C0E5523A46227EEF4DC31BB575AE0E6E90;
// Valve.VR.SteamVR_Behaviour_Vector2
struct SteamVR_Behaviour_Vector2_t4F9DB23C7DF068052EAAECC07B5D28C1A6971C46;
// Valve.VR.SteamVR_Behaviour_Vector2/AxisHandler
struct AxisHandler_tBA72843A01CF3BF4DFCBECF1BC75EB817AE2D064;
// Valve.VR.SteamVR_Behaviour_Vector2/ChangeHandler
struct ChangeHandler_t37E638BA62CC9B06D1DD916B56CFB6E3A61C31DE;
// Valve.VR.SteamVR_Behaviour_Vector2/UpdateHandler
struct UpdateHandler_tD71CF662F9B99D2E790533F02BA2B95FF3C1C1DF;
// Valve.VR.SteamVR_Behaviour_Vector2Event
struct SteamVR_Behaviour_Vector2Event_tE9ABC41564061B6A2699778A901EC2A11DD2FBA5;
// Valve.VR.SteamVR_Camera[]
struct SteamVR_CameraU5BU5D_tBBE78FA1F1681E27DDA1D64FF5A36D81E5927DA3;
// Valve.VR.SteamVR_Events/Event`1<Valve.VR.VREvent_t>
struct Event_1_t5DB0CDA7FD2616DA8770700B1A982E1A0F052262;
// Valve.VR.SteamVR_ExternalCamera
struct SteamVR_ExternalCamera_t249B349C10D9088DD9D5D9E76A6CC9A32449C53D;
// Valve.VR.SteamVR_HistoryBuffer
struct SteamVR_HistoryBuffer_tB82B2932C03165695AE1BE7BE8EDCADC6AE4A6E8;
// Valve.VR.SteamVR_HistoryStep
struct SteamVR_HistoryStep_t90A5A15C505B8C28A5E344A1431F49082DACCC5E;
// Valve.VR.SteamVR_HistoryStep[]
struct SteamVR_HistoryStepU5BU5D_t43030A4B81B2D8EF4C0661A965AA3C15F65E828F;
// Valve.VR.SteamVR_Input/SkeletonsUpdatedHandler
struct SkeletonsUpdatedHandler_t87EC02E2FFD91D305E5C4E8B64110AA2981F3DD6;
// Valve.VR.SteamVR_Render
struct SteamVR_Render_tE8610D8397284113646BAAD2B6991C16D4C26665;
// Valve.VR.SteamVR_RingBuffer`1<System.Object>
struct SteamVR_RingBuffer_1_tB6FE64DC340FF76D0FDC901B5FB739DA8458EE74;
// Valve.VR.SteamVR_RingBuffer`1<Valve.VR.SteamVR_HistoryStep>
struct SteamVR_RingBuffer_1_t57851A70FC812E73F42BD0FCB349E7612005C7A4;
// Valve.VR.SteamVR_Skeleton_Pose
struct SteamVR_Skeleton_Pose_tE0875BE0979F259871814680A295FF216A3FE593;
// Valve.VR.SteamVR_Skeleton_PoseSnapshot
struct SteamVR_Skeleton_PoseSnapshot_t0E1C4250EA9F357DFC204D8E5D9C2111593C3E18;
// Valve.VR.SteamVR_Skeleton_Pose_Hand
struct SteamVR_Skeleton_Pose_Hand_tB273028E85AA961B7A088E75DA7263BF6BAA395E;
// Valve.VR.SteamVR_Skeleton_Poser
struct SteamVR_Skeleton_Poser_t8BAF9FB80E002A7B21C380E9137C955DA4292CBA;
// Valve.VR.SteamVR_Skeleton_Poser/SkeletonBlendablePose[]
struct SkeletonBlendablePoseU5BU5D_t1F42997ACA8283764F25AD642DD4B2868449BAC2;
// Valve.VR.TrackedDevicePose_t[]
struct TrackedDevicePose_tU5BU5D_tF02F8D07A99963B656F6262B11E24ECF9747D196;

IL2CPP_EXTERN_C Il2CppSequencePoint g_sequencePointsSteamVR[];
IL2CPP_EXTERN_C RuntimeClass* Action_1_t32A9EECF5D4397CC1B9A7C7079870875411B06D0_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* AxisHandler_t97FB692AF5465040A2929AB663941933E3567689_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* AxisHandler_tB065AC6B40691A33562DB817EBD29E5721A64843_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* Boolean_tB53F6830F670160873277339AA58F15CAED4399C_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* ChangeHandler_t716932883EC2BC15936E355D02A9D68B8F9EA6B6_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* ChangeHandler_tADA56232D143B2D18BA3D6F2A9B5CE2AC637CBB6_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* ChangeHandler_tBB749BC376815901B6E13DF03202383F3302BFBE_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* ChangeHandler_tBE955A4C204CE64CDAD63911BA738EC2873DF7B0_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* ChangeHandler_tF837F67A16B6ED5F9B2C676AC0AF9C611397DFED_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* Debug_t7B5FCB117E2FD63B6838BC52821B252E2BFB61C4_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* DeviceConnectedChangeHandler_t4AC124A9A94D668A0FB45EA8FC718729CEA3D0D9_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* DeviceConnectedChangeHandler_tA531478A75E2F7B0C49D41DADBB9FD7BD46C4592_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* ETrackingResult_t989C2212A7DBCBBF86EA2C1E776BC60223B3126E_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* EVRInputError_tC8741BE3044407E8FA26F282526B259D93DBF22F_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* ExecuteHandler_t8B67500B15AC184E56E293FC390AB5683D50D865_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* Int32_t585191389E07734F19F3156FF88FB3EF4800D102_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* Mathf_tFBDE6467D269BFE410605C7D806FD9991D4A89CB_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* NotSupportedException_tE75B318D6590A02A5D9B29FD97409B1750FA0010_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* OpenVR_tE75A98955EC4AA4B219CE822AA43E79E4CB99DB3_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* Single_tDDDA9169C4E4E308AC6D7A824F9B28DC82204AE1_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* SkeletonsUpdatedHandler_t87EC02E2FFD91D305E5C4E8B64110AA2981F3DD6_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* StateDownHandler_t7D29100BA5CD0DFB8B7AE4388E1AB7AF114F4464_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* StateDownHandler_tFF77368F427C4FE6164A97B238F944123AA8FE24_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* StateHandler_tBBEC523C11F1EC99BF356128B427327EF349EAFA_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* StateHandler_tC57B51755B81869515107A3BE4BC3865F974190D_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* StateUpHandler_t74A1CE14E1749B62B14281BCFA09CB750D7A5ED8_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* StateUpHandler_tC09A0C33E80BBF97F8E88D36519482DFE36DBCC5_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* SteamVR_ActionSet_Manager_t52D7B7C8EA8A71B9AB6EB15002686B1F3C40B7DB_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* SteamVR_Action_Vibration_t487523BCA03933B9812950511E8A4BCE00F03EAB_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* SteamVR_Events_tEF9EC471E187D3A163781044AA4F8F0C392EB2B8_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* SteamVR_HistoryBuffer_tB82B2932C03165695AE1BE7BE8EDCADC6AE4A6E8_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* SteamVR_Input_Sources_tCE41AA589FB3B9516BDE0DFABDCB4AAEA29528F7_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* SteamVR_Input_tCE4A1EC6C51592CB9DCD7B860984CB2C4DD937BF_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* SteamVR_tE14648C0E73A16927B96F72915B425561B0D057F_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* TrackingChangeHandler_t1CC1FD6A7111B86684B749C4E751B1F5237D2914_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* TrackingChangeHandler_t8AD34E45FED47F362BB0D3E5B6B950708A0EC6B4_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* U3CDoBlendRoutineU3Ed__152_tFF832A9C1A3DA477A5CB7789B762723F29BB50D6_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* U3CDoInitializeSteamVRU3Ed__15_tF2B5867E813D537B7B4B232138211FE3C01A21F7_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* U3CDoRangeOfMotionBlendU3Ed__156_tA971D0B47D544B2CDCFFBDE43070BD5D7572E0C9_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* UnityAction_1_tB43C1CF1D8DCDDE3590ED959587DB9809C1294BF_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* UnityAction_tD19B26F1B2C048E38FD5801A33573BE01064CAF4_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* UpdateHandler_t4011C6F65732B2D2AD73A21EBF2ADD943897886D_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* UpdateHandler_t4F6AB1825F5E5CE6A7BBCD6C84541B3DF13C2AA1_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* UpdateHandler_t5CC79EAAED92D106A0FBE46F2E73949A31CDA177_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* UpdateHandler_t9FC31A405C9C47120C5307368335AD9F708511D1_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* UpdateHandler_tC5DA62D5AA34319AAE9E044A4D98A942E9F7738B_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* XRDevice_t392FCA3D1DCEB95FF500C8F374C88B034C31DF4A_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C String_t* _stringLiteral007325E7D8DEDACC6ED34288122B4689CB38DC84;
IL2CPP_EXTERN_C String_t* _stringLiteral10F48A333A65006B04813F9005BE901966239428;
IL2CPP_EXTERN_C String_t* _stringLiteral18B39452A606090B97AA8D84240CC83BE3E5D62B;
IL2CPP_EXTERN_C String_t* _stringLiteral4337EF337ECBAE01528EC15AA4029353FD42657C;
IL2CPP_EXTERN_C String_t* _stringLiteral7505D64A54E061B7ACD54CCD58B49DC43500B635;
IL2CPP_EXTERN_C String_t* _stringLiteral75490E2CC47551562599B8A6004682CA5D470BD7;
IL2CPP_EXTERN_C String_t* _stringLiteral82053ECBCAD6503F26FE33F5976A1604F67CDD45;
IL2CPP_EXTERN_C String_t* _stringLiteralA68F7597FD04F11DD2B6E704B46AE0F6A0899716;
IL2CPP_EXTERN_C String_t* _stringLiteralB2D273CF4E41155A2EF5D712B354AEA95E06A703;
IL2CPP_EXTERN_C String_t* _stringLiteralB54CB9DBF86B2FBF3225C977A4074AA174D5411E;
IL2CPP_EXTERN_C String_t* _stringLiteralB91DDC2EFB03413C08CDC78EFC577F9BF1680A14;
IL2CPP_EXTERN_C String_t* _stringLiteralC45DD4E1886367F0BF6631C4DA53924377B2E7A1;
IL2CPP_EXTERN_C String_t* _stringLiteralC8D5F6371B2F6BC2DEFFEF5B888A0F62ABB5C4CD;
IL2CPP_EXTERN_C String_t* _stringLiteralCB44AC67B21B251EB99E9B05420FCCE568E2BBC2;
IL2CPP_EXTERN_C String_t* _stringLiteralD92A04E3CAD38B3C3435F2D66D371A05D88CCDE8;
IL2CPP_EXTERN_C String_t* _stringLiteralE1618CDFD1BD995E3B0B980123E8C0041512616B;
IL2CPP_EXTERN_C String_t* _stringLiteralE2A944A620EA883F0C78E73BC291E675AFC7B603;
IL2CPP_EXTERN_C String_t* _stringLiteralE4187BF2FD07B599844663814FE58065E3DDA0E8;
IL2CPP_EXTERN_C String_t* _stringLiteralEAC095C8508D4D9F7B01D7D09BDECE985F78C376;
IL2CPP_EXTERN_C String_t* _stringLiteralFFB76599BB18A20E6DA029D1F971C11E0E56D630;
IL2CPP_EXTERN_C const RuntimeMethod* Action_1__ctor_m4F1B6EE6AB328B8B63B3B2CD8FB89A119C3143F3_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Component_GetComponentsInChildren_TisTransform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA_m335E18CE04D2AD7313D89DBEA3A88EDB76255113_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Event_1_Listen_m38BA8AB8A10A0202B52B3F5CA7DB8056FDC0FBE0_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Event_1_Remove_mF12BABD97A66E13257D4ECEDA7C4264DF073D93A_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* GameObject_AddComponent_TisSteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_m1C09710380A9C189D0FFC165FB260DE3D56089B4_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* GameObject_AddComponent_TisSteamVR_Render_tE8610D8397284113646BAAD2B6991C16D4C26665_m990762749AAEADE99FB0F725B95E7EC57F088801_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* GameObject_GetComponent_TisSteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_mB9F300C022DC646383A3C3810C88E9D8D22D1943_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* GameObject_GetComponent_TisSteamVR_Render_tE8610D8397284113646BAAD2B6991C16D4C26665_m506DA10EA4DA33BF1F43031780392E43E877129D_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Nullable_1_GetValueOrDefault_m256BDDFFC9F6CE76EBBC5A9A6ED0A6FFB9F0455F_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Nullable_1_GetValueOrDefault_m2ED1EF0EC4DE8912C2A0BC877B2F66CBF5789506_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Nullable_1__ctor_m6C36C3DE6765E158493B68F2697E0F4FB30A221A_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Nullable_1_get_HasValue_mB0A6989529561627BBB65E6E4342DAA6549DD5A9_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Nullable_1_get_HasValue_mDB6CB8F03CCDC2BB72988E311BC1B841C8D4BD35_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Nullable_1_get_Value_m76F1CC0EF9E5DB41AF44CAC048AE6C5CC55E583D_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Object_FindObjectOfType_TisSteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_mF4D4C690A8FB950CCD99B55888CF147043E7E034_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Object_FindObjectOfType_TisSteamVR_Render_tE8610D8397284113646BAAD2B6991C16D4C26665_m375DF65ED62003A8D0F1EEFAB02B0BFD8FC0DEF1_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_2_InitAfterDeserialize_m8D574ED27E33D3CA724920BE7E2E32C67FF5F700_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_In_2_GetLocalizedOriginPart_m06290187FCD54E2017BE7941CE0276DB4CFC24C4_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_In_2_GetLocalizedOriginPart_m36E1DB926E7A1E477057A130BB2121200989C1D5_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_In_2_GetLocalizedOriginPart_m54923EB664FBAAD29EFCB26E969517F74408FF6C_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_In_2_GetLocalizedOriginPart_m68B2DF7EE84BFF3AD79B5306A4D26E96F68E5B57_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_In_Source_Map_1__ctor_m6CA9EBD65879C9C800B369FA8D8E522A9D17B0DB_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Out_2__ctor_m73545DF08749932DD490F491CA01DA3630982496_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Pose_Source_get_angularVelocity_mACAA45CB05DB94C9292ED147F3156109DAFA0209_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Pose_Source_get_localPosition_mE065A826D8D1A8CF44D9E7F0D038F24D70985833_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Pose_Source_get_localRotation_m307D9DD92DFFFCC30446A71D9BD15674A797ED2A_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Pose_Source_get_velocity_m2B71BB7981006080D113442CB374529602A310BF_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Source_Map_1__ctor_m1D1C02D2A4FAC7A1673B7459262F588C80689CA3_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Source_Map_1_get_Item_mF968D2C3D5A487C1901E7350B275B57F80B57F82_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Source_get_inputSource_mAA1928183BB06E5C8CF950F65BA80635C25535D4_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Vector3_Source_Map__ctor_mD04CFEF10AFE7AA478AE8C52F8F7190C86020EE6_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Vibration_AddOnActiveBindingChangeListener_mF2413F58D7D9A1FFCDEC04FCA6F9BED450436F8E_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Vibration_AddOnActiveChangeListener_m89205B01162586F5466688EFB4281069F5011FC0_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Vibration_AddOnExecuteListener_m59B17CC78D6DB78C7D76D2FD15146B372A56EBD3_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Vibration_Execute_m87C481A1FB3D88E1CBC5A7889F290B4EB062FD4F_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Vibration_GetTimeLastChanged_m377CE96893DB85C64C1F1CAD33989BF531DA3658_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Vibration_IsUpdating_m8A5AA657620597929ACE7E3330798C40AF3FB178_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Vibration_RemoveOnActiveBindingChangeListener_m431858447DAD3C976B57607DDACC8DC853E8B71C_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Vibration_RemoveOnActiveChangeListener_m6447D0CC14DA4A4D82EC2B9BCC953E3DCF58CE58_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Vibration_RemoveOnExecuteListener_m3A5A1573091854239F0E847D0C76EE32A81664E5_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Vibration_Source_Execute_mFD6A3E9A8B119898CAA19AB046D11586BE3D568F_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Vibration_Source_Initialize_m009DBABE146A0DE5DCF9810F8230487AD2DE73C1_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Vibration_Source_Map_IsUpdating_m70351F6C802FC2324E42AEC421C2D5BEE3B29F1B_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Vibration_Source_Map__ctor_m0777815D081C7CBB05DCC8D5E2D3A35B300D9E7F_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Vibration_Source_Preinitialize_m190F867281CEFB16F31B42505053350ED5304CF8_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Vibration_Source__ctor_mF37C9A94C62FB5D92FCAA72D2EDF9E94747F5047_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Vibration_Source_add_onActiveBindingChange_m6A6695BE7B1D62E59D5E0B4E369411AD409CF956_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Vibration_Source_add_onActiveChange_m8A508C8A65E1ED100E5BA28DE7766AC0655E5D6B_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Vibration_Source_add_onExecute_m59A0F69E9BE6A9221F99FD66C4DA7122FE3E7F4E_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Vibration_Source_get_activeBinding_m6B111814AA4C4B43517A21614E4283F4525DDA21_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Vibration_Source_get_active_m74942EDB851B121FA4C3A5B06F86F091F06D96DA_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Vibration_Source_get_lastActiveBinding_mF9FCFD569DF70F631D98BD4196E60BB7C698E986_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Vibration_Source_get_lastActive_mD1EBF92AC60EF39AE0AA92A0B0453B891DE815F1_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Vibration_Source_get_timeLastExecuted_m43631CC69AD4730B6DAD747F8917FF1968E1782C_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Vibration_Source_remove_onActiveBindingChange_m22B0D76B3551A12B4050D889570C0977FDC736CC_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Vibration_Source_remove_onActiveChange_mA2D20EAC64D00053BD9E82610D958E31EEB6F571_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Vibration_Source_remove_onExecute_m0253F5609D3DE59ADDB805659B334D8A1FDD904E_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Vibration_Source_set_lastActive_m4BD24CD8315CBFD80AB0D4DA37E92BC343FDEF54_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Vibration_Source_set_timeLastExecuted_m4CC891E603F4C83A336138B5DB8628B429BA45D5_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Vibration_UnityEngine_ISerializationCallbackReceiver_OnAfterDeserialize_mD9D73F49678DD52353032BD42EA3D5290F4D02BF_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Vibration_UnityEngine_ISerializationCallbackReceiver_OnBeforeSerialize_m3E61112E8798AC9FE3889ECB23CADA908F64643A_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Vibration__ctor_m97911420850F4A3DB4C72F4A2D70C34656501250_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Vibration_add_onActiveBindingChange_m577DE8CACDACD63A6CB1690779536DD4E08F051B_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Vibration_add_onActiveChange_m94E35735F69E5757C14E4D478F3C55829B8C6E45_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Vibration_add_onExecute_m45EDA21147C684A39D6F54ED2E47E46A121EF99D_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Vibration_remove_onActiveBindingChange_m6AEB3EFEFAB193F18682D02F3F22EBC2351B201D_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Vibration_remove_onActiveChange_m31BEBDCD5E548D3EF1FE88061551B1E32F39FA7A_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Vibration_remove_onExecute_m040360261981DE9671A4FFBED062CF75256D8614_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_ActivateActionSetOnLoad_OnDestroy_mB9E6C33A3AF1501A1D6DBCB9B5912E98DA24F952_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_ActivateActionSetOnLoad_Start_mEA4BD06B5A3ED45F4D80FEE2D44AD63582BBA57A_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_ActivateActionSetOnLoad__ctor_m0AAEE31F209F055E3C46B61AC879EE09E7CD338A_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Behaviour_Awake_mAC490E2E91237CF64BCEE8FC535A9F0CAE6F3059_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Behaviour_BooleanEvent__ctor_m33798FEA433B2FC53CA7BC3F6EC450162099B83C_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Behaviour_Boolean_AddHandlers_m177D600059EE1F3A255ABE94B86940647FB8A61A_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Behaviour_Boolean_GetLocalizedName_mE96B914202186EA4C474A4DDC2EA2792DB46CBDD_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Behaviour_Boolean_OnDisable_mB213D24CEF50B25EDB9FEFB337609352A359BCAE_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Behaviour_Boolean_OnEnable_m9453FBB03A4B1E4AF7D304679626C37543BFEF3D_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Behaviour_Boolean_RemoveHandlers_m8E4317760BDED9334828696FBA2D1557BF69C5DD_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Behaviour_Boolean_SteamVR_Behaviour_Boolean_OnChange_mA8A5E8B564562CF67EE15E1D36446D2440A4E25E_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Behaviour_Boolean_SteamVR_Behaviour_Boolean_OnStateDown_mCE635F55BFC94B8E928AE2C4B64CF1DD142FF81C_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Behaviour_Boolean_SteamVR_Behaviour_Boolean_OnStateUp_m4A9487A3FA04E03EC09144B04B1510D5719DD349_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Behaviour_Boolean_SteamVR_Behaviour_Boolean_OnState_m1780B4C3A2C9559A4EB4B1AEC32FE99BDCC370A3_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Behaviour_Boolean_SteamVR_Behaviour_Boolean_OnUpdate_m8C821C2C8885633A23C1CC1DDBB66001F12986C9_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Behaviour_Boolean__ctor_m7DA42323297A7153BC4F968813D4071E6E751977_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Behaviour_Boolean_add_onChangeEvent_m1578F8F87A9CAD8DE453F42B1BF2D26349A1B8E0_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Behaviour_Boolean_add_onPressDownEvent_m44EE97419CA1C7DA28237D6B4AF6763C709D5965_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Behaviour_Boolean_add_onPressEvent_m78CB583B2435293C92AD72C72715BB9C975DBC2D_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Behaviour_Boolean_add_onPressUpEvent_m16A540FD9BD319DAB48EBE1FDB2382F4FE706D9C_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Behaviour_Boolean_add_onUpdateEvent_mCAE2327A051963F538C44016355233581F900E22_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Behaviour_Boolean_get_actionSet_m21C301CC7CE117FB00409868FC3B047494C72E53_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Behaviour_Boolean_get_isActive_m457796E8C22B2F4836F7A7ED4B815B4B6536527E_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Behaviour_Boolean_remove_onChangeEvent_m07C30D65CF899B6EE31E455C160C2402AE396267_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Behaviour_Boolean_remove_onPressDownEvent_m63B6DCE08B343ED946C513187583AB5DED2D86D0_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Behaviour_Boolean_remove_onPressEvent_m89A4E2359BCEAE601C15B51DB67997570E2087F5_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Behaviour_Boolean_remove_onPressUpEvent_mD752BBBB265F23E7902EB4BAFC468FACE9478695_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Behaviour_Boolean_remove_onUpdateEvent_mCDFDACEA7B803424CFC256C1FA1637794490CA2A_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Behaviour_DoInitializeSteamVR_m1E9D177FB8C0C2BEB6D386DE8237CB89462E7E0C_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Behaviour_EnableOpenVR_mF75014123CBFDC324A16EE948F1BE79ECB0B8658_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Behaviour_FixedUpdate_mE5FFD141F25C4249125EA5C5EB9A353BFC689192_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Behaviour_InitializeSteamVR_m33AC5057AB7443A7224E945883C156A9FC0FFB0D_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Behaviour_Initialize_mA34568CBC7E0F232551F456C378EA998B0AA66FB_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Behaviour_LateUpdate_m66EDB2A95E9E5AEF14A3C9ADA1AB97910B9088BE_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Behaviour_OnBeforeRender_m26DF386EE8C7C11C8BEAF362E0AA58DD9DD53C84_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Behaviour_OnDisable_m0232C2D9ADEF60527D20E98FEBAFC60B468C7CEB_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Behaviour_OnEnable_m713CCF5BB7424FD20E6C9350371C6815A1481A6A_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Behaviour_OnQuit_m01AF8BD113E677B77087A22ADF91B4266B99C0ED_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Behaviour_PoseEvent__ctor_mE21D7A6C21325526CC29883AC226EB797E66551F_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Behaviour_Pose_CheckDeviceIndex_m39CCC3BB184503F6591E65782C022ED9FE15FAAE_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Behaviour_Pose_ConnectedChangedEvent__ctor_mB3A7DDCFDFCB023AE4B30735EF83D7D587A78FF8_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Behaviour_Pose_DeviceIndexChangedEvent__ctor_m8D0C351CDDAC944761279EE787BA5C64CBAA7623_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Behaviour_Pose_GetAngularVelocity_mDD92D9D3AB3DEFF686F851056814F2D2C39FE19D_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Behaviour_Pose_GetDeviceIndex_mD5C081326EB0983D79B585EFC222B7E2F10C5DF6_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Behaviour_Pose_GetEstimatedPeakVelocities_m19E354C022B6413EAB6BD2B329D7EEF8B9B6BE39_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Behaviour_Pose_GetLocalizedName_mA5196F8EE8CF059F362E93532D9E30C95C4D73C4_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Behaviour_Pose_GetVelocitiesAtTimeOffset_mB6011F8E6EF24480384B98BAA608E0C33187CB7E_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Behaviour_Pose_GetVelocity_mBB18AD40A0D65C96D224253A7B275B512348ADEF_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Behaviour_Pose_OnDeviceConnectedChanged_m6B04726DF8F8CB18443D79B36C3255B8D58A571C_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Behaviour_Pose_OnDisable_m770F05909A237037B5CC75216B591C1875A63E93_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Behaviour_Pose_OnEnable_m71BB8AE16F7490930CB15222660F612E35F0411B_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Behaviour_Pose_OnTrackingChanged_mF2DFC24E6DE3E73283033A8BC837663E2F041990_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Behaviour_Pose_Start_m97059074D4F923E2FE787F0ED2F2F9743B17FBD6_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Behaviour_Pose_SteamVR_Behaviour_Pose_OnChange_mF4D37C55364E44522DB1A4EC21CEA17973FEFFC9_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Behaviour_Pose_SteamVR_Behaviour_Pose_OnUpdate_m64560EEC47CC5A8789248FC785F1DC09C82C6E18_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Behaviour_Pose_TrackingChangedEvent__ctor_mEDB13441B307DC7FD0DB04C5E935F46C739694EE_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Behaviour_Pose_UpdateHistoryBuffer_mE526E02932EAB531F93E8AB336EBBE7BB880E120_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Behaviour_Pose_UpdateTransform_m2CA63E642A823EF173A01935179452312F7E7464_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Behaviour_Pose__ctor_mC67126471413E301FCA36B9CB5624F7687A66FCB_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Behaviour_Pose_get_isActive_m40A24A17984B400137C0477A64B4936B8764728F_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Behaviour_Pose_get_isValid_mC439A09C94C9C2C860D673D2AF3A1250BF1D0ED1_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Behaviour_PreCull_mB10CED0C11CDE15D1E68B3AAC37CFDC56C7834C7_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Behaviour_SingleEvent__ctor_mCB263C5784C9521020523CB1D641F3212B620E65_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Behaviour_Single_AddHandlers_mA8B361755E3502B3485F63048BBB7936A97DBD78_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Behaviour_Single_GetLocalizedName_mB7382309743B679DF1148B459F6D4000D48D673A_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Behaviour_Single_OnDisable_mAEAD06F7B8D58C81D4C9B030CFC30CBF41FD84D5_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Behaviour_Single_OnEnable_m34F72F79DD21D6BAC95019E33A8FE25A2D558D2D_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Behaviour_Single_RemoveHandlers_m1836740684C0B04FB0D8E952785E7A0CBE269B00_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Behaviour_Single_SteamVR_Behaviour_Single_OnAxis_m7C907C6A3BCC3B3B45A8FA9202B221F7B05E317A_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Behaviour_Single_SteamVR_Behaviour_Single_OnChange_mF3F0B3C0B203C70B0E4408BB8E2971DEBE55786A_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Behaviour_Single_SteamVR_Behaviour_Single_OnUpdate_m3A0D7B72B650A79EA82489C424ECBC5E094C4644_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Behaviour_Single__ctor_m9BF52CED548807A2F0B39324A0AB28E3A047E546_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Behaviour_Single_get_isActive_m4E14A5A450D7858CA2CEE40BED2BEFE66196843B_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Behaviour_SkeletonCustom_AssignBonesArray_mBC0E357C3F265DB8DD0EBD24726563D65F825AF0_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Behaviour_SkeletonCustom__ctor_mE33662F16E792F1961913A771E275CE90D627F1E_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Behaviour_SkeletonEvent__ctor_m46F44931D19EC5405BD2E090465D85804F06324F_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Behaviour_Skeleton_AssignBonesArray_mFEA6008860951F615A995F2D5FFE1CEFCF8A0327_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Behaviour_Skeleton_Awake_m0C9DE5C9FFD5BDFE5F04E89072B607308C6111AF_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Behaviour_Skeleton_BlendToAnimation_m541806513667917D49B82A6488C23C8B29FF7D4E_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Behaviour_Skeleton_BlendToPoser_m765D7E5F374964D2B2B8965C7F5B0D36C5209EFB_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Behaviour_Skeleton_BlendToSkeleton_mC99E21112EBFA120AC0045BA98EF21957BC2328C_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Behaviour_Skeleton_BlendTo_m9212F504D764F114CCBD48D3510E93336C7ED353_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Behaviour_Skeleton_CheckSkeletonAction_m2BDDE69EA812CD3E7804C23E6EE65BD5FECC0FB6_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Behaviour_Skeleton_ConnectedChangedEvent__ctor_m5DD8EACEFBCDEF6BE0AE61BE1FC26FBF1F8EB6CF_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Behaviour_Skeleton_DoBlendRoutine_m1D4DD994425C4B916480E31F58E3787F09185CDE_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Behaviour_Skeleton_DoRangeOfMotionBlend_m95E3E709146E51D114E33DEE72CB991F2AE16AC7_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Behaviour_Skeleton_ForceToReferencePose_m7BC9ED8113B723A8C89BDB04983982F175708345_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Behaviour_Skeleton_GetBlendPoseForBone_mC14927EEE3A0F082B6B58C6F626C80BCA348FE37_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Behaviour_Skeleton_GetBonePosition_m93D130AC841B858219288EFDA208058A4D0F63C4_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Behaviour_Skeleton_GetBonePositions_m75282A7A4582E34D6C613827729532F3C279238D_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Behaviour_Skeleton_GetBoneRotation_m0154D8A9C1F0CBD415FFF1077DBEDD6806B3EB96_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Behaviour_Skeleton_GetBoneRotations_mDB798AEB8FCA9F3E884563A4E4FBCA07EE3D464B_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Behaviour_Skeleton_GetBone_m07F4F82851D27C2C50260064C80655F31ED2306E_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Behaviour_Skeleton_IsMetacarpal_mCE1D2618F91173E18ACEAAC758D247607CEFE3F0_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Behaviour_Skeleton_MirrorPosition_mB9224FC4CCE63FEC7C3884B98E2D6109DE157016_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Behaviour_Skeleton_MirrorRotation_m942A7A6E456AD7426D166B074280E0B01E5799C8_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Behaviour_Skeleton_OnDeviceConnectedChanged_mBB013D861DFBCE800C8A242E0FB46BB65E063358_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Behaviour_Skeleton_OnDisable_m336A8F4BFDDFB74C4C3AB14FD3A968E4B5023DC9_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Behaviour_Skeleton_OnEnable_m666F965B2ED6A54028F62E7FE1C8BE75B2D4C421_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Behaviour_Skeleton_OnTrackingChanged_m41FB143E880B6783DC175AF058D056ABF95A7CFB_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Behaviour_Skeleton_RangeOfMotionBlend_m25BEC8CDC3F025656BCCF6CA62CF19A4E50BBEAD_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Behaviour_Skeleton_ResetTemporaryRangeOfMotionBlend_m9DB5FE93F5496BA28DE90CB72D4B2E75590F6B7D_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Behaviour_Skeleton_ResetTemporaryRangeOfMotion_m4E2CEF87B74459C90B16E894FDE1AC9D4608D2EC_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Behaviour_Skeleton_SetBonePosition_mF68B1979177BF95A63611FE90E424C31A0A13D10_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Behaviour_Skeleton_SetBoneRotation_mD07C8CDEACEC3AA140BE927471DFD52D90B560F3_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Behaviour_Skeleton_SetRangeOfMotion_mC202AD3ED46108BE0AD87288B46179A5F7F0399F_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Behaviour_Skeleton_SetTemporaryRangeOfMotion_m8E38F56F2DC763DAE274D0FF8E560A2E527B6341_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Behaviour_Skeleton_SteamVR_Input_OnSkeletonsUpdated_m598443034B16E6CBC070FF31923991689A33BBBE_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Behaviour_Skeleton_TemporaryRangeOfMotionBlend_mECB584C8E1228F4834B1C3183C05EC9498C2DBBC_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Behaviour_Skeleton_TrackingChangedEvent__ctor_mC3CA08280EC00CE2BD1861112B52CF3F30ADFA8C_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Behaviour_Skeleton_UpdatePose_m12A5825F692EB2C33CEE63E994F23AB27D42383F_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Behaviour_Skeleton_UpdateSkeletonTransforms_m6CAAE4DB0C10D98DAE76647A2CAF20F8A4B3F97D_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Behaviour_Skeleton_UpdateSkeleton_m8A721557BCB584BAEE752332CF8089DDFCDD5165_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Behaviour_Skeleton__cctor_m06F36667084711207F0F24732006D1E982190A96_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Behaviour_Skeleton__ctor_m17A8835FCCADE3C113890BE1BCA5C9F2B3EA9E85_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Behaviour_Skeleton_get_actionSet_mA75400EF472E973EBC0A08E6EFE11D2C2DCB2D73_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Behaviour_Skeleton_get_auxs_m72AC37161D096F4092E72761E2F6060006BB64EB_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Behaviour_Skeleton_get_direction_mFE711368D78BB6517DD102486C71BFACAE4D648F_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Behaviour_Skeleton_get_distals_mE5C550FFA6E9223EB39BF988AB875D58965FBDD5_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Behaviour_Skeleton_get_fingerCurls_mFC2F3FB37B5E27AD00DFF92BA955D73F74130749_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Behaviour_Skeleton_get_indexAux_m94BBF354535FE699655BC855C045AB31676A8055_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Behaviour_Skeleton_get_indexCurl_mD1B41A04184ECE7B6F55FF7F1FB7F3C5EAB3DF6B_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Behaviour_Skeleton_get_indexDistal_m5C68558EE577F1A6D3CFB7CC616823E8DC19DB07_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Behaviour_Skeleton_get_indexMetacarpal_mD76F8BED852C7945BEDDCC1F548C32B363E5BEDC_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Behaviour_Skeleton_get_indexMiddle_mBC700387F3C19B996B52211EDB152C037F2BC445_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Behaviour_Skeleton_get_indexProximal_m12B2B068243D619BE16744095599DA88E55F14E9_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Behaviour_Skeleton_get_indexTip_m7BEF68906E2D53FE258E21179322DEB564D5BF5D_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Behaviour_Skeleton_get_isActive_m7A5399D4BDB910D528B36B9081868B1D8F20A6AB_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Behaviour_Skeleton_get_isBlending_m8A020CA28D67702590D64E541589BF3CE41D39F3_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Behaviour_Skeleton_get_middleAux_m488FFCDE7292ADF3EE6366E785D5E5A62A6C5B4D_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Behaviour_Skeleton_get_middleCurl_m28DD66133817793DB7179A4C41BADAD9ADEE7FFC_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Behaviour_Skeleton_get_middleDistal_m349C9ACA71BB75EF3789240F820F3C7C1F83106D_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Behaviour_Skeleton_get_middleMetacarpal_m472C2141EED2877E54822404E3C239CB73FD8AFF_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Behaviour_Skeleton_get_middleMiddle_m49B293EF0D60AFA7CAE933F392D317DC971BC8A7_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Behaviour_Skeleton_get_middleProximal_m2160F1117BA71E7BF52BF518FCB2BA156A4C9939_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Behaviour_Skeleton_get_middleTip_m92D8F32D6D39694B20C40E552AF7FE4A80B4426B_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Behaviour_Skeleton_get_middles_mD7DAC9171C603C3C45B4A9F1D89448CBCFFB390C_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Behaviour_Skeleton_get_pinkyAux_m08C510C97BC16F5911DD9FD0219CB1F610B99B39_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Behaviour_Skeleton_get_pinkyCurl_mD9E46EDAC22DAF10948A67B1C573DF43283D9D61_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Behaviour_Skeleton_get_pinkyDistal_m293037BC745BE67ADAA05821663D2120DEA39C2B_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Behaviour_Skeleton_get_pinkyMetacarpal_m841F6ED3D869C93F0384195A4C21CE08B071605F_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Behaviour_Skeleton_get_pinkyMiddle_m902A0ED89D0CB4F02183B58844BDFA102FA49215_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Behaviour_Skeleton_get_pinkyProximal_m248721E4423A15A1C7A681B6698658CFD75F4727_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Behaviour_Skeleton_get_pinkyTip_mB6410DCFB16FAD7E8BF984835E45C00B5BDA257A_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Behaviour_Skeleton_get_proximals_m9024F6277D6328C79249A56C1C961AA7E725B4BE_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Behaviour_Skeleton_get_ringAux_mC29BFE8AD2E1307BB9DC6E253D3C1CC577E7444C_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Behaviour_Skeleton_get_ringCurl_mF4985B2B88334870D9CFF939D14042C856BBF2E1_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Behaviour_Skeleton_get_ringDistal_mC8282D64379F0281AD5BFCEF468F59AF7BD36D86_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Behaviour_Skeleton_get_ringMetacarpal_mFBCCD061248927BA8ABEA7475393D23A9485C334_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Behaviour_Skeleton_get_ringMiddle_m95882BB0A66F1DBFCC2954B4368D51DC9C6B87A4_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Behaviour_Skeleton_get_ringProximal_m4F4648D23E440C842E806ADFA2EEEEB166C6380F_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Behaviour_Skeleton_get_ringTip_m08A038D2A81F1DCC692B7F8C52180B1CAAC07E7D_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Behaviour_Skeleton_get_root_mD3DAF1F8B126283FF4FA842767325C0A7A23D9DF_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Behaviour_Skeleton_get_skeletalTrackingLevel_m1B59D03F48D6C1BCBBC143F29C69A4E92C13E990_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Behaviour_Skeleton_get_skeletonAvailable_m29DBA8C30D07CAF0C3F1423F7886AB2F3D8422E2_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Behaviour_Skeleton_get_thumbAux_m201F1B59F4234329F05A42DB1147CA5273D74A4C_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Behaviour_Skeleton_get_thumbCurl_m7B2B803A55117F627E5F42D8A46D413A5A5E60A8_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Behaviour_Skeleton_get_thumbDistal_m1AAE37DA4600B5E65E440ECE9AF86A811F467F0E_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Behaviour_Skeleton_get_thumbMetacarpal_m1DD9F526A4600544142EB02B77EFC316614C4BC6_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Behaviour_Skeleton_get_thumbMiddle_m027A0D17549E8F231A9469445958DC7B14D016E8_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Behaviour_Skeleton_get_thumbProximal_m0CB4247ED100768398A3C9E9908E0C3ED240534A_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Behaviour_Skeleton_get_thumbTip_m760E6291B5983333C3A2B6D69B21E6CAC2C0C2F3_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Behaviour_Skeleton_get_tips_m26AB3F53089E1D3AE4B4821BB051E2D57200439A_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Behaviour_Skeleton_get_wrist_mC7D139233381826280F7225DFEF194495D7CEDAB_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Behaviour_Skeleton_set_auxs_m825F3D35FF398084D053A9968403269EA25E2A8A_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Behaviour_Skeleton_set_distals_m7D276F9D28125233D7AD24EA8A2F0F9F0A0B4541_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Behaviour_Skeleton_set_middles_mB85213CC9E37A3B86AEEA3A14EA16DB460136773_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Behaviour_Skeleton_set_proximals_mDDA03D4409588EB318C40F83363ABB3C4D463069_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Behaviour_Skeleton_set_tips_m7ED7EAB9823F9DC1C4E8E888D6C1FBE636C07331_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Behaviour_Update_m58657E5A3CBF0A7C978ABD7345E9CB5994236C5B_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Behaviour_Vector2_AddHandlers_mC05D9F4C900DFCEEB7E92A1B33D6B02D2941228B_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Behaviour_Vector2_GetLocalizedName_m6B57CC11DBDC04BCB16053C579FB0919D383D05C_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Behaviour_Vector2_OnDisable_m2D449C3E672D95A92FAE853BFA40A88194BC0969_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Behaviour_Vector2_OnEnable_mA29B13262AA398FA2E67A0C3912371EDB78207B8_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Behaviour_Vector2_RemoveHandlers_mAA7C45E84F7DBCB10D7FA01AA967FC8650519514_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Behaviour_Vector2_SteamVR_Behaviour_Vector2_OnAxis_m4A512AD29A9677D0DA0309B8A8DBACE6ABA3940A_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Behaviour_Vector2_SteamVR_Behaviour_Vector2_OnChange_mD4CAC74D32F7CCDF7593747535879B7611DF8CF0_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Behaviour_Vector2_SteamVR_Behaviour_Vector2_OnUpdate_m5FBD9BD66968730F6A07EC8DB43A81E5AB0508FC_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Behaviour_Vector2__ctor_m02B0D1C514750F0EE8806389ECD6650C6B005CA8_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Behaviour_Vector2_get_isActive_mC0F11ED81119D1F6819FC33BD07899381E13AFB1_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Behaviour_XRDevice_deviceLoaded_m9E35422E42CDBF4CEB2AC386C1A37C26A4AEE918_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Behaviour__cctor_mEA51C8EE69A144C35AE59F635863833F78530115_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Behaviour__ctor_m9B12433E546C4B15C5C944924BF103ED7DDECE24_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Behaviour_get_instance_mF736E7604C239882F0BC7ADF2611A3AE53DF0189_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Input_GetAction_TisSteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C_m6017595F00FF03D62CBFF0C3009BCD3A0C1BAB40_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Input_GetAction_TisSteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504_m0EC1DD77FC160AEEF0E26CB478B21769AD6BA3D5_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_RingBuffer_1_Clear_mE5008382A9E53B1C4D0513C1F308724ED2EB2DB6_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* U3CDoBlendRoutineU3Ed__152_MoveNext_m951C2CEF7277AB9A570F8893DAC0463C9CD0C3F1_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* U3CDoBlendRoutineU3Ed__152_System_Collections_Generic_IEnumeratorU3CSystem_ObjectU3E_get_Current_m1D860E4DA9A7FD6B2EF15EBAF4B90D5F136858BA_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* U3CDoBlendRoutineU3Ed__152_System_Collections_IEnumerator_Reset_m501E6355475FA4D9806B15ACCCE37D1A06EAC4FE_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* U3CDoBlendRoutineU3Ed__152_System_Collections_IEnumerator_get_Current_mBBFAF4F7EED53A4784FCEB7C17D3C06E6462C350_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* U3CDoBlendRoutineU3Ed__152_System_IDisposable_Dispose_mFC418AB1129C1187992B615A3194F61B2AB680C9_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* U3CDoBlendRoutineU3Ed__152__ctor_m3CFC1BF114C96CFC002A0C92C1B2794F788B107E_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* U3CDoInitializeSteamVRU3Ed__15_MoveNext_mC3B8289618A67FD97953CD2687ADC70C8D4512FA_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* U3CDoInitializeSteamVRU3Ed__15_System_Collections_Generic_IEnumeratorU3CSystem_ObjectU3E_get_Current_mC35C65BB635D3E640FBBD7E642940E62D65E796C_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* U3CDoInitializeSteamVRU3Ed__15_System_Collections_IEnumerator_Reset_m70B80D5374EEE17681EF415FC6DB3D5B7E1618AC_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* U3CDoInitializeSteamVRU3Ed__15_System_Collections_IEnumerator_get_Current_mE7F12C72E76E30CED3BFC26BB30EA2748A565D48_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* U3CDoInitializeSteamVRU3Ed__15_System_IDisposable_Dispose_m7D9C62EE8274A20E47E032D930D60A38B49EB460_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* U3CDoInitializeSteamVRU3Ed__15__ctor_m4AB754B2C599508761896C3F3B939E8C4F5BA537_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* U3CDoRangeOfMotionBlendU3Ed__156_MoveNext_m02E353A8E02832802C7D7285543CB3BB5B406528_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* U3CDoRangeOfMotionBlendU3Ed__156_System_Collections_Generic_IEnumeratorU3CSystem_ObjectU3E_get_Current_mB7294D7479BA67AEF908EC66E5527FB65EB63FDE_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* U3CDoRangeOfMotionBlendU3Ed__156_System_Collections_IEnumerator_Reset_m5BD6EDC1366B3079A2DAB49B328087F5877FCA55_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* U3CDoRangeOfMotionBlendU3Ed__156_System_Collections_IEnumerator_get_Current_mC214ACC1FAAA14231ED18F1ADB628EE4DFF14AFF_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* U3CDoRangeOfMotionBlendU3Ed__156_System_IDisposable_Dispose_m060638A22FB55D0936A81802400ECA855193FB53_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* U3CDoRangeOfMotionBlendU3Ed__156__ctor_m844C5227B6A1E8DFC65302D6B11586B7DC5EE1B8_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* UnityAction_1__ctor_m95AA3CDDC630B39635645E005E7D9BFCD3518199_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* UnityEvent_2_Invoke_mA149632942D05C483CA654D6D8355DB4EA1ED032_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* UnityEvent_2_Invoke_mEA7AB15B5A48CDDF5EBB6ED1E70152910A221CC8_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* UnityEvent_2__ctor_m3F350BFADEB9F4B824F64E47402AB7BAC7F62A9E_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* UnityEvent_2__ctor_mE94EED3D5D02FAC67378FC2787984A49F9DFD1B2_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* UnityEvent_3_Invoke_m0DB14EAF35361C179F364C7BF3681380E75E0089_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* UnityEvent_3_Invoke_m2432FA3F355A924507DF754FDAC9C9FC49D2B993_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* UnityEvent_3_Invoke_mA5EF9426BEE9D582B1CF18E40D0A27D0DC9AE099_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* UnityEvent_3_Invoke_mA7A524CEB38FBD452FBFB7274DBC451D4B72A1A9_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* UnityEvent_3_Invoke_mB847F82D2B4BB89E8D28F5B0DF0427181A45A4E4_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* UnityEvent_3_Invoke_mF184EA69621E2B6057B98E93802B15C7DED15615_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* UnityEvent_3__ctor_m44E339EBF173CA025EB43F196FFB59EDB3D2D9C8_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* UnityEvent_3__ctor_m4B73B3F2ED1B60992244628A5E78170B8628C013_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* UnityEvent_3__ctor_m572ABF176FBC7C0C230E5F33E58FB5BEF2FB59AE_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* UnityEvent_3__ctor_m574C424C59CC8F794C9F69BE3F30128F36D8D8BD_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* UnityEvent_3__ctor_m85EE828A60546309161F8608EF17D54E107B763D_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* UnityEvent_3__ctor_mC63650172D658E002E89CD9C8BC3E11ED2A0A0A2_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* UnityEvent_4_Invoke_m6CED405A95F61142712F4A0D69660CD9E94E65F6_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* UnityEvent_4_Invoke_m7C62CEBE22AEFFBA3F1FE11C5E7B46019F8E6B85_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* UnityEvent_4__ctor_m4979081DD527042CB93C3F1971860DDC9587C584_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeType* Boolean_tB53F6830F670160873277339AA58F15CAED4399C_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* EVRInputError_tC8741BE3044407E8FA26F282526B259D93DBF22F_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* EVRSkeletalMotionRange_t7B3CF169090271D1030B7DBCB36A9F6B9B5833F5_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* EVRSkeletalTrackingLevel_tDFEFEB2A62597359105A66DDF2A00CC5B7B8F1AD_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* Int32_t585191389E07734F19F3156FF88FB3EF4800D102_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* Nullable_1_t1A7B9FD0D5A1C2016BC211A63A5BB64D3B4E70DD_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* RigidTransformU5BU5D_tC98EB3576009E5D825D0D43671A65D32A2449ECC_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* Single_tDDDA9169C4E4E308AC6D7A824F9B28DC82204AE1_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* SteamVR_ActionDirections_tC7760C9A471565840E2F1D11A61E44735571D8B1_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* SteamVR_Action_Source_t9D7428CDE39924074518EE6233D9A4FAB0C33CB0_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* SteamVR_Action_Vibration_Source_Map_t81B9741E979634A2E0A6D7AE2518F89F3481047A_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* SteamVR_Action_Vibration_Source_tB30315A543AA13F11BB80C1D5C7DEDF37058C151_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* SteamVR_Action_Vibration_t487523BCA03933B9812950511E8A4BCE00F03EAB_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* SteamVR_ActivateActionSetOnLoad_tFA2CB881F46FAEC2C6CAF162957F7FD1D0B12DB7_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* SteamVR_Behaviour_Single_t0224221A2437628A3FAFF02B7B02D88952021562_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* SteamVR_Behaviour_SkeletonCustom_t9C282A2B1009A9AEBA27B48F403138E32EC623E7_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* SteamVR_Behaviour_Vector2_t4F9DB23C7DF068052EAAECC07B5D28C1A6971C46_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* SteamVR_Render_tE8610D8397284113646BAAD2B6991C16D4C26665_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* SteamVR_Skeleton_Pose_Hand_tB273028E85AA961B7A088E75DA7263BF6BAA395E_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* String_t_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* U3CDoBlendRoutineU3Ed__152_tFF832A9C1A3DA477A5CB7789B762723F29BB50D6_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* U3CDoInitializeSteamVRU3Ed__15_tF2B5867E813D537B7B4B232138211FE3C01A21F7_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* U3CDoRangeOfMotionBlendU3Ed__156_tA971D0B47D544B2CDCFFBDE43070BD5D7572E0C9_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* UInt64_tA02DF3B59C8FC4A849BD207DA11038CC64E4CB4E_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_0_0_0_var;
IL2CPP_EXTERN_C const uint32_t ActiveChangeHandler_BeginInvoke_m91F11D36D2E0CDD1AD8195432797D217BD59909D_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t ActiveChangeHandler_BeginInvoke_m9B072FF56F674388891CFDF3E2451C44EAFD4C18_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t ActiveChangeHandler_BeginInvoke_m9EFC58B55DD7CDEDE87787F2B0B53DE1B4DBFB01_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t ActiveChangeHandler_BeginInvoke_mC8544FB4F8CB99571370093CEFE27DA383B5E72A_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t AxisHandler_BeginInvoke_m88D17B13096F6C66E8A85564F2B616663CA053E9_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t ChangeHandler_BeginInvoke_m3008D7C90DA806880138D2FD68EF045135288C4F_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t ChangeHandler_BeginInvoke_m568B3F3E3D3E3471C79763C106FC6BB787AC63DE_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t ChangeHandler_BeginInvoke_mC46C07A1AAA22E75B4D3F7EA7E061AD632B5DD8E_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t ChangeHandler_BeginInvoke_mD4D7FCD9D98A908CF0D977DE88926EEDB8FFED4B_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t DeviceConnectedChangeHandler_BeginInvoke_m7F6303D252D3958EFC6FBFB88C39A7CAB730D808_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t DeviceConnectedChangeHandler_BeginInvoke_mF03CCF5F465DF6E9F5D448C0391BCA91C3F35F1B_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t DeviceIndexChangedHandler_BeginInvoke_m3EA06069FF0751CCC7FB5C16942FC12934E6D0AB_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t ExecuteHandler_BeginInvoke_mDFA401282597A868835E8D8FAECDAAF51492C6DE_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t Nullable_1_GetValueOrDefault_m256BDDFFC9F6CE76EBBC5A9A6ED0A6FFB9F0455FSteamVR12_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t Nullable_1_get_HasValue_mB0A6989529561627BBB65E6E4342DAA6549DD5A9SteamVR12_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t StateDownHandler_BeginInvoke_m736695B25518DFA422912F07C1001C6B117838A1_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t StateHandler_BeginInvoke_m22E1ECACA00FEEBB643E41AD34908284FD5CC052_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t StateUpHandler_BeginInvoke_m718D72474A82BA510E83D02651146FDEC0B8D118_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Pose_Source_get_angularVelocity_mACAA45CB05DB94C9292ED147F3156109DAFA0209SteamVR12_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Pose_Source_get_localPosition_mE065A826D8D1A8CF44D9E7F0D038F24D70985833SteamVR12_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Pose_Source_get_localRotation_m307D9DD92DFFFCC30446A71D9BD15674A797ED2ASteamVR12_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Pose_Source_get_velocity_m2B71BB7981006080D113442CB374529602A310BFSteamVR12_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Source_get_inputSource_mAA1928183BB06E5C8CF950F65BA80635C25535D4SteamVR12_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector3_Source_Map__ctor_mD04CFEF10AFE7AA478AE8C52F8F7190C86020EE6_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vibration_AddOnActiveBindingChangeListener_mF2413F58D7D9A1FFCDEC04FCA6F9BED450436F8E_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vibration_AddOnActiveChangeListener_m89205B01162586F5466688EFB4281069F5011FC0_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vibration_AddOnExecuteListener_m59B17CC78D6DB78C7D76D2FD15146B372A56EBD3_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vibration_Execute_m87C481A1FB3D88E1CBC5A7889F290B4EB062FD4F_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vibration_GetTimeLastChanged_m377CE96893DB85C64C1F1CAD33989BF531DA3658_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vibration_IsUpdating_m8A5AA657620597929ACE7E3330798C40AF3FB178_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vibration_RemoveOnActiveBindingChangeListener_m431858447DAD3C976B57607DDACC8DC853E8B71C_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vibration_RemoveOnActiveChangeListener_m6447D0CC14DA4A4D82EC2B9BCC953E3DCF58CE58_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vibration_RemoveOnExecuteListener_m3A5A1573091854239F0E847D0C76EE32A81664E5_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vibration_Source_Execute_mFD6A3E9A8B119898CAA19AB046D11586BE3D568F_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vibration_Source_Initialize_m009DBABE146A0DE5DCF9810F8230487AD2DE73C1_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vibration_Source_Map_IsUpdating_m70351F6C802FC2324E42AEC421C2D5BEE3B29F1B_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vibration_Source_Map__ctor_m0777815D081C7CBB05DCC8D5E2D3A35B300D9E7F_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vibration_Source_Preinitialize_m190F867281CEFB16F31B42505053350ED5304CF8_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vibration_Source__ctor_mF37C9A94C62FB5D92FCAA72D2EDF9E94747F5047_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vibration_Source_add_onActiveBindingChange_m6A6695BE7B1D62E59D5E0B4E369411AD409CF956_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vibration_Source_add_onActiveChange_m8A508C8A65E1ED100E5BA28DE7766AC0655E5D6B_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vibration_Source_add_onExecute_m59A0F69E9BE6A9221F99FD66C4DA7122FE3E7F4E_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vibration_Source_get_activeBinding_m6B111814AA4C4B43517A21614E4283F4525DDA21_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vibration_Source_get_active_m74942EDB851B121FA4C3A5B06F86F091F06D96DA_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vibration_Source_get_lastActiveBinding_mF9FCFD569DF70F631D98BD4196E60BB7C698E986_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vibration_Source_get_lastActive_mD1EBF92AC60EF39AE0AA92A0B0453B891DE815F1_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vibration_Source_get_timeLastExecuted_m43631CC69AD4730B6DAD747F8917FF1968E1782CSteamVR12_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vibration_Source_get_timeLastExecuted_m43631CC69AD4730B6DAD747F8917FF1968E1782C_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vibration_Source_remove_onActiveBindingChange_m22B0D76B3551A12B4050D889570C0977FDC736CC_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vibration_Source_remove_onActiveChange_mA2D20EAC64D00053BD9E82610D958E31EEB6F571_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vibration_Source_remove_onExecute_m0253F5609D3DE59ADDB805659B334D8A1FDD904E_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vibration_Source_set_lastActive_m4BD24CD8315CBFD80AB0D4DA37E92BC343FDEF54_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vibration_Source_set_timeLastExecuted_m4CC891E603F4C83A336138B5DB8628B429BA45D5SteamVR12_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vibration_Source_set_timeLastExecuted_m4CC891E603F4C83A336138B5DB8628B429BA45D5_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vibration_UnityEngine_ISerializationCallbackReceiver_OnAfterDeserialize_mD9D73F49678DD52353032BD42EA3D5290F4D02BF_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vibration_UnityEngine_ISerializationCallbackReceiver_OnBeforeSerialize_m3E61112E8798AC9FE3889ECB23CADA908F64643A_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vibration__ctor_m97911420850F4A3DB4C72F4A2D70C34656501250_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vibration_add_onActiveBindingChange_m577DE8CACDACD63A6CB1690779536DD4E08F051B_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vibration_add_onActiveChange_m94E35735F69E5757C14E4D478F3C55829B8C6E45_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vibration_add_onExecute_m45EDA21147C684A39D6F54ED2E47E46A121EF99D_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vibration_remove_onActiveBindingChange_m6AEB3EFEFAB193F18682D02F3F22EBC2351B201D_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vibration_remove_onActiveChange_m31BEBDCD5E548D3EF1FE88061551B1E32F39FA7A_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vibration_remove_onExecute_m040360261981DE9671A4FFBED062CF75256D8614_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_ActivateActionSetOnLoad_OnDestroy_mB9E6C33A3AF1501A1D6DBCB9B5912E98DA24F952_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_ActivateActionSetOnLoad_Start_mEA4BD06B5A3ED45F4D80FEE2D44AD63582BBA57A_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_ActivateActionSetOnLoad__ctor_m0AAEE31F209F055E3C46B61AC879EE09E7CD338A_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Awake_mAC490E2E91237CF64BCEE8FC535A9F0CAE6F3059_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_BooleanEvent__ctor_m33798FEA433B2FC53CA7BC3F6EC450162099B83C_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Boolean_AddHandlers_m177D600059EE1F3A255ABE94B86940647FB8A61A_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Boolean_GetLocalizedName_mE96B914202186EA4C474A4DDC2EA2792DB46CBDD_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Boolean_OnDisable_mB213D24CEF50B25EDB9FEFB337609352A359BCAE_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Boolean_OnEnable_m9453FBB03A4B1E4AF7D304679626C37543BFEF3D_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Boolean_RemoveHandlers_m8E4317760BDED9334828696FBA2D1557BF69C5DD_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Boolean_SteamVR_Behaviour_Boolean_OnChange_mA8A5E8B564562CF67EE15E1D36446D2440A4E25E_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Boolean_SteamVR_Behaviour_Boolean_OnStateDown_mCE635F55BFC94B8E928AE2C4B64CF1DD142FF81C_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Boolean_SteamVR_Behaviour_Boolean_OnStateUp_m4A9487A3FA04E03EC09144B04B1510D5719DD349_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Boolean_SteamVR_Behaviour_Boolean_OnState_m1780B4C3A2C9559A4EB4B1AEC32FE99BDCC370A3_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Boolean_SteamVR_Behaviour_Boolean_OnUpdate_m8C821C2C8885633A23C1CC1DDBB66001F12986C9_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Boolean__ctor_m7DA42323297A7153BC4F968813D4071E6E751977_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Boolean_add_onChangeEvent_m1578F8F87A9CAD8DE453F42B1BF2D26349A1B8E0_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Boolean_add_onPressDownEvent_m44EE97419CA1C7DA28237D6B4AF6763C709D5965_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Boolean_add_onPressEvent_m78CB583B2435293C92AD72C72715BB9C975DBC2D_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Boolean_add_onPressUpEvent_m16A540FD9BD319DAB48EBE1FDB2382F4FE706D9C_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Boolean_add_onUpdateEvent_mCAE2327A051963F538C44016355233581F900E22_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Boolean_get_actionSet_m21C301CC7CE117FB00409868FC3B047494C72E53_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Boolean_get_isActive_m457796E8C22B2F4836F7A7ED4B815B4B6536527E_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Boolean_remove_onChangeEvent_m07C30D65CF899B6EE31E455C160C2402AE396267_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Boolean_remove_onPressDownEvent_m63B6DCE08B343ED946C513187583AB5DED2D86D0_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Boolean_remove_onPressEvent_m89A4E2359BCEAE601C15B51DB67997570E2087F5_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Boolean_remove_onPressUpEvent_mD752BBBB265F23E7902EB4BAFC468FACE9478695_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Boolean_remove_onUpdateEvent_mCDFDACEA7B803424CFC256C1FA1637794490CA2A_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_DoInitializeSteamVR_m1E9D177FB8C0C2BEB6D386DE8237CB89462E7E0C_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_EnableOpenVR_mF75014123CBFDC324A16EE948F1BE79ECB0B8658_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_FixedUpdate_mE5FFD141F25C4249125EA5C5EB9A353BFC689192_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_InitializeSteamVR_m33AC5057AB7443A7224E945883C156A9FC0FFB0D_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Initialize_mA34568CBC7E0F232551F456C378EA998B0AA66FB_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_LateUpdate_m66EDB2A95E9E5AEF14A3C9ADA1AB97910B9088BE_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_OnBeforeRender_m26DF386EE8C7C11C8BEAF362E0AA58DD9DD53C84_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_OnDisable_m0232C2D9ADEF60527D20E98FEBAFC60B468C7CEB_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_OnEnable_m713CCF5BB7424FD20E6C9350371C6815A1481A6A_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_OnQuit_m01AF8BD113E677B77087A22ADF91B4266B99C0ED_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_PoseEvent__ctor_mE21D7A6C21325526CC29883AC226EB797E66551F_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Pose_CheckDeviceIndex_m39CCC3BB184503F6591E65782C022ED9FE15FAAE_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Pose_ConnectedChangedEvent__ctor_mB3A7DDCFDFCB023AE4B30735EF83D7D587A78FF8_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Pose_DeviceIndexChangedEvent__ctor_m8D0C351CDDAC944761279EE787BA5C64CBAA7623_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Pose_GetAngularVelocity_mDD92D9D3AB3DEFF686F851056814F2D2C39FE19D_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Pose_GetDeviceIndex_mD5C081326EB0983D79B585EFC222B7E2F10C5DF6_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Pose_GetEstimatedPeakVelocities_m19E354C022B6413EAB6BD2B329D7EEF8B9B6BE39_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Pose_GetLocalizedName_mA5196F8EE8CF059F362E93532D9E30C95C4D73C4_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Pose_GetVelocitiesAtTimeOffset_mB6011F8E6EF24480384B98BAA608E0C33187CB7E_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Pose_GetVelocity_mBB18AD40A0D65C96D224253A7B275B512348ADEF_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Pose_OnDeviceConnectedChanged_m6B04726DF8F8CB18443D79B36C3255B8D58A571C_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Pose_OnDisable_m770F05909A237037B5CC75216B591C1875A63E93_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Pose_OnEnable_m71BB8AE16F7490930CB15222660F612E35F0411B_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Pose_OnTrackingChanged_mF2DFC24E6DE3E73283033A8BC837663E2F041990_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Pose_Start_m97059074D4F923E2FE787F0ED2F2F9743B17FBD6_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Pose_SteamVR_Behaviour_Pose_OnChange_mF4D37C55364E44522DB1A4EC21CEA17973FEFFC9_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Pose_SteamVR_Behaviour_Pose_OnUpdate_m64560EEC47CC5A8789248FC785F1DC09C82C6E18_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Pose_TrackingChangedEvent__ctor_mEDB13441B307DC7FD0DB04C5E935F46C739694EE_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Pose_UpdateHistoryBuffer_mE526E02932EAB531F93E8AB336EBBE7BB880E120_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Pose_UpdateTransform_m2CA63E642A823EF173A01935179452312F7E7464_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Pose__ctor_mC67126471413E301FCA36B9CB5624F7687A66FCB_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Pose_get_isActive_m40A24A17984B400137C0477A64B4936B8764728F_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Pose_get_isValid_mC439A09C94C9C2C860D673D2AF3A1250BF1D0ED1_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_PreCull_mB10CED0C11CDE15D1E68B3AAC37CFDC56C7834C7_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_SingleEvent__ctor_mCB263C5784C9521020523CB1D641F3212B620E65_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Single_AddHandlers_mA8B361755E3502B3485F63048BBB7936A97DBD78_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Single_GetLocalizedName_mB7382309743B679DF1148B459F6D4000D48D673A_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Single_OnDisable_mAEAD06F7B8D58C81D4C9B030CFC30CBF41FD84D5_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Single_OnEnable_m34F72F79DD21D6BAC95019E33A8FE25A2D558D2D_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Single_RemoveHandlers_m1836740684C0B04FB0D8E952785E7A0CBE269B00_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Single_SteamVR_Behaviour_Single_OnAxis_m7C907C6A3BCC3B3B45A8FA9202B221F7B05E317A_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Single_SteamVR_Behaviour_Single_OnChange_mF3F0B3C0B203C70B0E4408BB8E2971DEBE55786A_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Single_SteamVR_Behaviour_Single_OnUpdate_m3A0D7B72B650A79EA82489C424ECBC5E094C4644_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Single__ctor_m9BF52CED548807A2F0B39324A0AB28E3A047E546_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Single_get_isActive_m4E14A5A450D7858CA2CEE40BED2BEFE66196843B_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_SkeletonCustom_AssignBonesArray_mBC0E357C3F265DB8DD0EBD24726563D65F825AF0_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_SkeletonCustom__ctor_mE33662F16E792F1961913A771E275CE90D627F1E_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_SkeletonEvent__ctor_m46F44931D19EC5405BD2E090465D85804F06324F_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Skeleton_AssignBonesArray_mFEA6008860951F615A995F2D5FFE1CEFCF8A0327_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Skeleton_Awake_m0C9DE5C9FFD5BDFE5F04E89072B607308C6111AF_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Skeleton_BlendToAnimation_m541806513667917D49B82A6488C23C8B29FF7D4E_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Skeleton_BlendToPoser_m765D7E5F374964D2B2B8965C7F5B0D36C5209EFB_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Skeleton_BlendToSkeleton_mC99E21112EBFA120AC0045BA98EF21957BC2328C_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Skeleton_BlendTo_m9212F504D764F114CCBD48D3510E93336C7ED353_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Skeleton_CheckSkeletonAction_m2BDDE69EA812CD3E7804C23E6EE65BD5FECC0FB6_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Skeleton_ConnectedChangedEvent__ctor_m5DD8EACEFBCDEF6BE0AE61BE1FC26FBF1F8EB6CF_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Skeleton_DoBlendRoutine_m1D4DD994425C4B916480E31F58E3787F09185CDE_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Skeleton_DoRangeOfMotionBlend_m95E3E709146E51D114E33DEE72CB991F2AE16AC7_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Skeleton_ForceToReferencePose_m7BC9ED8113B723A8C89BDB04983982F175708345_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Skeleton_GetBlendPoseForBone_mC14927EEE3A0F082B6B58C6F626C80BCA348FE37_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Skeleton_GetBonePosition_m93D130AC841B858219288EFDA208058A4D0F63C4_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Skeleton_GetBonePositions_m75282A7A4582E34D6C613827729532F3C279238D_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Skeleton_GetBoneRotation_m0154D8A9C1F0CBD415FFF1077DBEDD6806B3EB96_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Skeleton_GetBoneRotations_mDB798AEB8FCA9F3E884563A4E4FBCA07EE3D464B_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Skeleton_GetBone_m07F4F82851D27C2C50260064C80655F31ED2306E_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Skeleton_IsMetacarpal_mCE1D2618F91173E18ACEAAC758D247607CEFE3F0_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Skeleton_MirrorPosition_mB9224FC4CCE63FEC7C3884B98E2D6109DE157016_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Skeleton_MirrorRotation_m942A7A6E456AD7426D166B074280E0B01E5799C8_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Skeleton_OnDeviceConnectedChanged_mBB013D861DFBCE800C8A242E0FB46BB65E063358_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Skeleton_OnDisable_m336A8F4BFDDFB74C4C3AB14FD3A968E4B5023DC9_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Skeleton_OnEnable_m666F965B2ED6A54028F62E7FE1C8BE75B2D4C421_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Skeleton_OnTrackingChanged_m41FB143E880B6783DC175AF058D056ABF95A7CFB_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Skeleton_RangeOfMotionBlend_m25BEC8CDC3F025656BCCF6CA62CF19A4E50BBEAD_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Skeleton_ResetTemporaryRangeOfMotionBlend_m9DB5FE93F5496BA28DE90CB72D4B2E75590F6B7D_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Skeleton_ResetTemporaryRangeOfMotion_m4E2CEF87B74459C90B16E894FDE1AC9D4608D2EC_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Skeleton_SetBonePosition_mF68B1979177BF95A63611FE90E424C31A0A13D10_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Skeleton_SetBoneRotation_mD07C8CDEACEC3AA140BE927471DFD52D90B560F3_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Skeleton_SetRangeOfMotion_mC202AD3ED46108BE0AD87288B46179A5F7F0399F_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Skeleton_SetTemporaryRangeOfMotion_m8E38F56F2DC763DAE274D0FF8E560A2E527B6341_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Skeleton_SteamVR_Input_OnSkeletonsUpdated_m598443034B16E6CBC070FF31923991689A33BBBE_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Skeleton_TemporaryRangeOfMotionBlend_mECB584C8E1228F4834B1C3183C05EC9498C2DBBC_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Skeleton_TrackingChangedEvent__ctor_mC3CA08280EC00CE2BD1861112B52CF3F30ADFA8C_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Skeleton_UpdatePose_m12A5825F692EB2C33CEE63E994F23AB27D42383F_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Skeleton_UpdateSkeletonTransforms_m6CAAE4DB0C10D98DAE76647A2CAF20F8A4B3F97D_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Skeleton_UpdateSkeleton_m8A721557BCB584BAEE752332CF8089DDFCDD5165_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Skeleton__cctor_m06F36667084711207F0F24732006D1E982190A96_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Skeleton__ctor_m17A8835FCCADE3C113890BE1BCA5C9F2B3EA9E85_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Skeleton_get_actionSet_mA75400EF472E973EBC0A08E6EFE11D2C2DCB2D73_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Skeleton_get_auxs_m72AC37161D096F4092E72761E2F6060006BB64EB_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Skeleton_get_direction_mFE711368D78BB6517DD102486C71BFACAE4D648F_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Skeleton_get_distals_mE5C550FFA6E9223EB39BF988AB875D58965FBDD5_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Skeleton_get_fingerCurls_mFC2F3FB37B5E27AD00DFF92BA955D73F74130749_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Skeleton_get_indexAux_m94BBF354535FE699655BC855C045AB31676A8055_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Skeleton_get_indexCurl_mD1B41A04184ECE7B6F55FF7F1FB7F3C5EAB3DF6B_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Skeleton_get_indexDistal_m5C68558EE577F1A6D3CFB7CC616823E8DC19DB07_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Skeleton_get_indexMetacarpal_mD76F8BED852C7945BEDDCC1F548C32B363E5BEDC_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Skeleton_get_indexMiddle_mBC700387F3C19B996B52211EDB152C037F2BC445_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Skeleton_get_indexProximal_m12B2B068243D619BE16744095599DA88E55F14E9_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Skeleton_get_indexTip_m7BEF68906E2D53FE258E21179322DEB564D5BF5D_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Skeleton_get_isActive_m7A5399D4BDB910D528B36B9081868B1D8F20A6AB_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Skeleton_get_isBlending_m8A020CA28D67702590D64E541589BF3CE41D39F3_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Skeleton_get_middleAux_m488FFCDE7292ADF3EE6366E785D5E5A62A6C5B4D_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Skeleton_get_middleCurl_m28DD66133817793DB7179A4C41BADAD9ADEE7FFC_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Skeleton_get_middleDistal_m349C9ACA71BB75EF3789240F820F3C7C1F83106D_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Skeleton_get_middleMetacarpal_m472C2141EED2877E54822404E3C239CB73FD8AFF_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Skeleton_get_middleMiddle_m49B293EF0D60AFA7CAE933F392D317DC971BC8A7_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Skeleton_get_middleProximal_m2160F1117BA71E7BF52BF518FCB2BA156A4C9939_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Skeleton_get_middleTip_m92D8F32D6D39694B20C40E552AF7FE4A80B4426B_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Skeleton_get_middles_mD7DAC9171C603C3C45B4A9F1D89448CBCFFB390C_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Skeleton_get_pinkyAux_m08C510C97BC16F5911DD9FD0219CB1F610B99B39_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Skeleton_get_pinkyCurl_mD9E46EDAC22DAF10948A67B1C573DF43283D9D61_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Skeleton_get_pinkyDistal_m293037BC745BE67ADAA05821663D2120DEA39C2B_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Skeleton_get_pinkyMetacarpal_m841F6ED3D869C93F0384195A4C21CE08B071605F_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Skeleton_get_pinkyMiddle_m902A0ED89D0CB4F02183B58844BDFA102FA49215_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Skeleton_get_pinkyProximal_m248721E4423A15A1C7A681B6698658CFD75F4727_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Skeleton_get_pinkyTip_mB6410DCFB16FAD7E8BF984835E45C00B5BDA257A_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Skeleton_get_proximals_m9024F6277D6328C79249A56C1C961AA7E725B4BE_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Skeleton_get_ringAux_mC29BFE8AD2E1307BB9DC6E253D3C1CC577E7444C_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Skeleton_get_ringCurl_mF4985B2B88334870D9CFF939D14042C856BBF2E1_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Skeleton_get_ringDistal_mC8282D64379F0281AD5BFCEF468F59AF7BD36D86_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Skeleton_get_ringMetacarpal_mFBCCD061248927BA8ABEA7475393D23A9485C334_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Skeleton_get_ringMiddle_m95882BB0A66F1DBFCC2954B4368D51DC9C6B87A4_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Skeleton_get_ringProximal_m4F4648D23E440C842E806ADFA2EEEEB166C6380F_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Skeleton_get_ringTip_m08A038D2A81F1DCC692B7F8C52180B1CAAC07E7D_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Skeleton_get_root_mD3DAF1F8B126283FF4FA842767325C0A7A23D9DF_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Skeleton_get_skeletalTrackingLevel_m1B59D03F48D6C1BCBBC143F29C69A4E92C13E990_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Skeleton_get_skeletonAvailable_m29DBA8C30D07CAF0C3F1423F7886AB2F3D8422E2_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Skeleton_get_thumbAux_m201F1B59F4234329F05A42DB1147CA5273D74A4C_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Skeleton_get_thumbCurl_m7B2B803A55117F627E5F42D8A46D413A5A5E60A8_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Skeleton_get_thumbDistal_m1AAE37DA4600B5E65E440ECE9AF86A811F467F0E_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Skeleton_get_thumbMetacarpal_m1DD9F526A4600544142EB02B77EFC316614C4BC6_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Skeleton_get_thumbMiddle_m027A0D17549E8F231A9469445958DC7B14D016E8_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Skeleton_get_thumbProximal_m0CB4247ED100768398A3C9E9908E0C3ED240534A_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Skeleton_get_thumbTip_m760E6291B5983333C3A2B6D69B21E6CAC2C0C2F3_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Skeleton_get_tips_m26AB3F53089E1D3AE4B4821BB051E2D57200439A_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Skeleton_get_wrist_mC7D139233381826280F7225DFEF194495D7CEDAB_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Skeleton_set_auxs_m825F3D35FF398084D053A9968403269EA25E2A8ASteamVR12_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Skeleton_set_auxs_m825F3D35FF398084D053A9968403269EA25E2A8A_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Skeleton_set_distals_m7D276F9D28125233D7AD24EA8A2F0F9F0A0B4541SteamVR12_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Skeleton_set_distals_m7D276F9D28125233D7AD24EA8A2F0F9F0A0B4541_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Skeleton_set_middles_mB85213CC9E37A3B86AEEA3A14EA16DB460136773SteamVR12_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Skeleton_set_middles_mB85213CC9E37A3B86AEEA3A14EA16DB460136773_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Skeleton_set_proximals_mDDA03D4409588EB318C40F83363ABB3C4D463069SteamVR12_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Skeleton_set_proximals_mDDA03D4409588EB318C40F83363ABB3C4D463069_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Skeleton_set_tips_m7ED7EAB9823F9DC1C4E8E888D6C1FBE636C07331SteamVR12_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Skeleton_set_tips_m7ED7EAB9823F9DC1C4E8E888D6C1FBE636C07331_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Update_m58657E5A3CBF0A7C978ABD7345E9CB5994236C5B_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Vector2_AddHandlers_mC05D9F4C900DFCEEB7E92A1B33D6B02D2941228B_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Vector2_GetLocalizedName_m6B57CC11DBDC04BCB16053C579FB0919D383D05C_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Vector2_OnDisable_m2D449C3E672D95A92FAE853BFA40A88194BC0969_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Vector2_OnEnable_mA29B13262AA398FA2E67A0C3912371EDB78207B8_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Vector2_RemoveHandlers_mAA7C45E84F7DBCB10D7FA01AA967FC8650519514_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Vector2_SteamVR_Behaviour_Vector2_OnAxis_m4A512AD29A9677D0DA0309B8A8DBACE6ABA3940A_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Vector2_SteamVR_Behaviour_Vector2_OnChange_mD4CAC74D32F7CCDF7593747535879B7611DF8CF0_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Vector2_SteamVR_Behaviour_Vector2_OnUpdate_m5FBD9BD66968730F6A07EC8DB43A81E5AB0508FC_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Vector2__ctor_m02B0D1C514750F0EE8806389ECD6650C6B005CA8_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Vector2_get_isActive_mC0F11ED81119D1F6819FC33BD07899381E13AFB1_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_XRDevice_deviceLoaded_m9E35422E42CDBF4CEB2AC386C1A37C26A4AEE918_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour__cctor_mEA51C8EE69A144C35AE59F635863833F78530115_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour__ctor_m9B12433E546C4B15C5C944924BF103ED7DDECE24_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_get_instance_mF736E7604C239882F0BC7ADF2611A3AE53DF0189_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t TrackingChangeHandler_BeginInvoke_m00461B7455FB2690F02EF8F8DD48C5AF8FDEEA38_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t TrackingChangeHandler_BeginInvoke_m7F4C8EDAEDC0EB2EB09B9C9622F7D09F70C61902_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t U3CDoBlendRoutineU3Ed__152_MoveNext_m951C2CEF7277AB9A570F8893DAC0463C9CD0C3F1_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t U3CDoBlendRoutineU3Ed__152_System_Collections_Generic_IEnumeratorU3CSystem_ObjectU3E_get_Current_m1D860E4DA9A7FD6B2EF15EBAF4B90D5F136858BA_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t U3CDoBlendRoutineU3Ed__152_System_Collections_IEnumerator_Reset_m501E6355475FA4D9806B15ACCCE37D1A06EAC4FE_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t U3CDoBlendRoutineU3Ed__152_System_Collections_IEnumerator_get_Current_mBBFAF4F7EED53A4784FCEB7C17D3C06E6462C350_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t U3CDoBlendRoutineU3Ed__152_System_IDisposable_Dispose_mFC418AB1129C1187992B615A3194F61B2AB680C9_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t U3CDoBlendRoutineU3Ed__152__ctor_m3CFC1BF114C96CFC002A0C92C1B2794F788B107E_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t U3CDoInitializeSteamVRU3Ed__15_MoveNext_mC3B8289618A67FD97953CD2687ADC70C8D4512FA_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t U3CDoInitializeSteamVRU3Ed__15_System_Collections_Generic_IEnumeratorU3CSystem_ObjectU3E_get_Current_mC35C65BB635D3E640FBBD7E642940E62D65E796C_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t U3CDoInitializeSteamVRU3Ed__15_System_Collections_IEnumerator_Reset_m70B80D5374EEE17681EF415FC6DB3D5B7E1618AC_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t U3CDoInitializeSteamVRU3Ed__15_System_Collections_IEnumerator_get_Current_mE7F12C72E76E30CED3BFC26BB30EA2748A565D48_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t U3CDoInitializeSteamVRU3Ed__15_System_IDisposable_Dispose_m7D9C62EE8274A20E47E032D930D60A38B49EB460_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t U3CDoInitializeSteamVRU3Ed__15__ctor_m4AB754B2C599508761896C3F3B939E8C4F5BA537_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t U3CDoRangeOfMotionBlendU3Ed__156_MoveNext_m02E353A8E02832802C7D7285543CB3BB5B406528_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t U3CDoRangeOfMotionBlendU3Ed__156_System_Collections_Generic_IEnumeratorU3CSystem_ObjectU3E_get_Current_mB7294D7479BA67AEF908EC66E5527FB65EB63FDE_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t U3CDoRangeOfMotionBlendU3Ed__156_System_Collections_IEnumerator_Reset_m5BD6EDC1366B3079A2DAB49B328087F5877FCA55_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t U3CDoRangeOfMotionBlendU3Ed__156_System_Collections_IEnumerator_get_Current_mC214ACC1FAAA14231ED18F1ADB628EE4DFF14AFF_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t U3CDoRangeOfMotionBlendU3Ed__156_System_IDisposable_Dispose_m060638A22FB55D0936A81802400ECA855193FB53_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t U3CDoRangeOfMotionBlendU3Ed__156__ctor_m844C5227B6A1E8DFC65302D6B11586B7DC5EE1B8_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t UpdateHandler_BeginInvoke_m26B03747F3053EB2308D3E232A493776D6F4DCA6_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t UpdateHandler_BeginInvoke_m35C396791BD00AED1D9D225BA0AF383D2CC9AAF8_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t UpdateHandler_BeginInvoke_mAF0630E1F8F6494E517F3A8E3F85291A5E63BC04_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t UpdateHandler_BeginInvoke_mC7F8AD7BCDC463BCE3670EF86097ADAEA8FD3C5E_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t ValidPoseChangeHandler_BeginInvoke_m6535B5B602C12A1ED567C6399E3E5F397607041B_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t ValidPoseChangeHandler_BeginInvoke_m90A22A3018762948878C3076A235AF7B629BA3EE_MetadataUsageId;
struct Delegate_t_marshaled_com;
struct Delegate_t_marshaled_pinvoke;
struct Exception_t_marshaled_com;
struct Exception_t_marshaled_pinvoke;

struct RigidTransformU5BU5D_tC98EB3576009E5D825D0D43671A65D32A2449ECC;
struct DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86;
struct SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5;
struct StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E;
struct QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3;
struct TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804;
struct Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28;
struct EVRInputStringBitsU5BU5D_t9F9E9B47CD745CAAB4F8EDC305D84DDF9E5BE511;
struct SteamVR_Action_Vibration_SourceU5BU5D_tB39B74339680889980518AF68E5B5AB014912A04;

IL2CPP_EXTERN_C_BEGIN
IL2CPP_EXTERN_C_END

#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// System.Object

struct Il2CppArrayBounds;

// System.Array


// System.String
struct  String_t  : public RuntimeObject
{
public:
	// System.Int32 System.String::m_stringLength
	int32_t ___m_stringLength_0;
	// System.Char System.String::m_firstChar
	Il2CppChar ___m_firstChar_1;

public:
	inline static int32_t get_offset_of_m_stringLength_0() { return static_cast<int32_t>(offsetof(String_t, ___m_stringLength_0)); }
	inline int32_t get_m_stringLength_0() const { return ___m_stringLength_0; }
	inline int32_t* get_address_of_m_stringLength_0() { return &___m_stringLength_0; }
	inline void set_m_stringLength_0(int32_t value)
	{
		___m_stringLength_0 = value;
	}

	inline static int32_t get_offset_of_m_firstChar_1() { return static_cast<int32_t>(offsetof(String_t, ___m_firstChar_1)); }
	inline Il2CppChar get_m_firstChar_1() const { return ___m_firstChar_1; }
	inline Il2CppChar* get_address_of_m_firstChar_1() { return &___m_firstChar_1; }
	inline void set_m_firstChar_1(Il2CppChar value)
	{
		___m_firstChar_1 = value;
	}
};

struct String_t_StaticFields
{
public:
	// System.String System.String::Empty
	String_t* ___Empty_5;

public:
	inline static int32_t get_offset_of_Empty_5() { return static_cast<int32_t>(offsetof(String_t_StaticFields, ___Empty_5)); }
	inline String_t* get_Empty_5() const { return ___Empty_5; }
	inline String_t** get_address_of_Empty_5() { return &___Empty_5; }
	inline void set_Empty_5(String_t* value)
	{
		___Empty_5 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___Empty_5), (void*)value);
	}
};


// System.ValueType
struct  ValueType_t4D0C27076F7C36E76190FB3328E232BCB1CD1FFF  : public RuntimeObject
{
public:

public:
};

// Native definition for P/Invoke marshalling of System.ValueType
struct ValueType_t4D0C27076F7C36E76190FB3328E232BCB1CD1FFF_marshaled_pinvoke
{
};
// Native definition for COM marshalling of System.ValueType
struct ValueType_t4D0C27076F7C36E76190FB3328E232BCB1CD1FFF_marshaled_com
{
};

// UnityEngine.Events.UnityEventBase
struct  UnityEventBase_t6E0F7823762EE94BB8489B5AE41C7802A266D3D5  : public RuntimeObject
{
public:
	// UnityEngine.Events.InvokableCallList UnityEngine.Events.UnityEventBase::m_Calls
	InvokableCallList_t18AA4F473C7B295216B7D4B9723B4F3DFCCC9A3F * ___m_Calls_0;
	// UnityEngine.Events.PersistentCallGroup UnityEngine.Events.UnityEventBase::m_PersistentCalls
	PersistentCallGroup_t6E5DF2EBDA42794B5FE0C6DAA97DF65F0BFF571F * ___m_PersistentCalls_1;
	// System.Boolean UnityEngine.Events.UnityEventBase::m_CallsDirty
	bool ___m_CallsDirty_2;

public:
	inline static int32_t get_offset_of_m_Calls_0() { return static_cast<int32_t>(offsetof(UnityEventBase_t6E0F7823762EE94BB8489B5AE41C7802A266D3D5, ___m_Calls_0)); }
	inline InvokableCallList_t18AA4F473C7B295216B7D4B9723B4F3DFCCC9A3F * get_m_Calls_0() const { return ___m_Calls_0; }
	inline InvokableCallList_t18AA4F473C7B295216B7D4B9723B4F3DFCCC9A3F ** get_address_of_m_Calls_0() { return &___m_Calls_0; }
	inline void set_m_Calls_0(InvokableCallList_t18AA4F473C7B295216B7D4B9723B4F3DFCCC9A3F * value)
	{
		___m_Calls_0 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___m_Calls_0), (void*)value);
	}

	inline static int32_t get_offset_of_m_PersistentCalls_1() { return static_cast<int32_t>(offsetof(UnityEventBase_t6E0F7823762EE94BB8489B5AE41C7802A266D3D5, ___m_PersistentCalls_1)); }
	inline PersistentCallGroup_t6E5DF2EBDA42794B5FE0C6DAA97DF65F0BFF571F * get_m_PersistentCalls_1() const { return ___m_PersistentCalls_1; }
	inline PersistentCallGroup_t6E5DF2EBDA42794B5FE0C6DAA97DF65F0BFF571F ** get_address_of_m_PersistentCalls_1() { return &___m_PersistentCalls_1; }
	inline void set_m_PersistentCalls_1(PersistentCallGroup_t6E5DF2EBDA42794B5FE0C6DAA97DF65F0BFF571F * value)
	{
		___m_PersistentCalls_1 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___m_PersistentCalls_1), (void*)value);
	}

	inline static int32_t get_offset_of_m_CallsDirty_2() { return static_cast<int32_t>(offsetof(UnityEventBase_t6E0F7823762EE94BB8489B5AE41C7802A266D3D5, ___m_CallsDirty_2)); }
	inline bool get_m_CallsDirty_2() const { return ___m_CallsDirty_2; }
	inline bool* get_address_of_m_CallsDirty_2() { return &___m_CallsDirty_2; }
	inline void set_m_CallsDirty_2(bool value)
	{
		___m_CallsDirty_2 = value;
	}
};


// UnityEngine.YieldInstruction
struct  YieldInstruction_t836035AC7BD07A3C7909F7AD2A5B42DE99D91C44  : public RuntimeObject
{
public:

public:
};

// Native definition for P/Invoke marshalling of UnityEngine.YieldInstruction
struct YieldInstruction_t836035AC7BD07A3C7909F7AD2A5B42DE99D91C44_marshaled_pinvoke
{
};
// Native definition for COM marshalling of UnityEngine.YieldInstruction
struct YieldInstruction_t836035AC7BD07A3C7909F7AD2A5B42DE99D91C44_marshaled_com
{
};

// Valve.VR.SteamVR_Action
struct  SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734  : public RuntimeObject
{
public:
	// System.String Valve.VR.SteamVR_Action::actionPath
	String_t* ___actionPath_0;
	// System.Boolean Valve.VR.SteamVR_Action::needsReinit
	bool ___needsReinit_1;
	// System.String Valve.VR.SteamVR_Action::cachedShortName
	String_t* ___cachedShortName_3;

public:
	inline static int32_t get_offset_of_actionPath_0() { return static_cast<int32_t>(offsetof(SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734, ___actionPath_0)); }
	inline String_t* get_actionPath_0() const { return ___actionPath_0; }
	inline String_t** get_address_of_actionPath_0() { return &___actionPath_0; }
	inline void set_actionPath_0(String_t* value)
	{
		___actionPath_0 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___actionPath_0), (void*)value);
	}

	inline static int32_t get_offset_of_needsReinit_1() { return static_cast<int32_t>(offsetof(SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734, ___needsReinit_1)); }
	inline bool get_needsReinit_1() const { return ___needsReinit_1; }
	inline bool* get_address_of_needsReinit_1() { return &___needsReinit_1; }
	inline void set_needsReinit_1(bool value)
	{
		___needsReinit_1 = value;
	}

	inline static int32_t get_offset_of_cachedShortName_3() { return static_cast<int32_t>(offsetof(SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734, ___cachedShortName_3)); }
	inline String_t* get_cachedShortName_3() const { return ___cachedShortName_3; }
	inline String_t** get_address_of_cachedShortName_3() { return &___cachedShortName_3; }
	inline void set_cachedShortName_3(String_t* value)
	{
		___cachedShortName_3 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___cachedShortName_3), (void*)value);
	}
};

struct SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734_StaticFields
{
public:
	// System.Boolean Valve.VR.SteamVR_Action::startUpdatingSourceOnAccess
	bool ___startUpdatingSourceOnAccess_2;

public:
	inline static int32_t get_offset_of_startUpdatingSourceOnAccess_2() { return static_cast<int32_t>(offsetof(SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734_StaticFields, ___startUpdatingSourceOnAccess_2)); }
	inline bool get_startUpdatingSourceOnAccess_2() const { return ___startUpdatingSourceOnAccess_2; }
	inline bool* get_address_of_startUpdatingSourceOnAccess_2() { return &___startUpdatingSourceOnAccess_2; }
	inline void set_startUpdatingSourceOnAccess_2(bool value)
	{
		___startUpdatingSourceOnAccess_2 = value;
	}
};


// Valve.VR.SteamVR_ActionSet
struct  SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6  : public RuntimeObject
{
public:
	// System.String Valve.VR.SteamVR_ActionSet::actionSetPath
	String_t* ___actionSetPath_0;
	// Valve.VR.SteamVR_ActionSet_Data Valve.VR.SteamVR_ActionSet::setData
	SteamVR_ActionSet_Data_tDA03CB718A3B3F5805D6D9C399D57E56AF9DA529 * ___setData_1;
	// System.Boolean Valve.VR.SteamVR_ActionSet::initialized
	bool ___initialized_2;

public:
	inline static int32_t get_offset_of_actionSetPath_0() { return static_cast<int32_t>(offsetof(SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6, ___actionSetPath_0)); }
	inline String_t* get_actionSetPath_0() const { return ___actionSetPath_0; }
	inline String_t** get_address_of_actionSetPath_0() { return &___actionSetPath_0; }
	inline void set_actionSetPath_0(String_t* value)
	{
		___actionSetPath_0 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___actionSetPath_0), (void*)value);
	}

	inline static int32_t get_offset_of_setData_1() { return static_cast<int32_t>(offsetof(SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6, ___setData_1)); }
	inline SteamVR_ActionSet_Data_tDA03CB718A3B3F5805D6D9C399D57E56AF9DA529 * get_setData_1() const { return ___setData_1; }
	inline SteamVR_ActionSet_Data_tDA03CB718A3B3F5805D6D9C399D57E56AF9DA529 ** get_address_of_setData_1() { return &___setData_1; }
	inline void set_setData_1(SteamVR_ActionSet_Data_tDA03CB718A3B3F5805D6D9C399D57E56AF9DA529 * value)
	{
		___setData_1 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___setData_1), (void*)value);
	}

	inline static int32_t get_offset_of_initialized_2() { return static_cast<int32_t>(offsetof(SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6, ___initialized_2)); }
	inline bool get_initialized_2() const { return ___initialized_2; }
	inline bool* get_address_of_initialized_2() { return &___initialized_2; }
	inline void set_initialized_2(bool value)
	{
		___initialized_2 = value;
	}
};


// Valve.VR.SteamVR_Behaviour_<DoInitializeSteamVR>d__15
struct  U3CDoInitializeSteamVRU3Ed__15_tF2B5867E813D537B7B4B232138211FE3C01A21F7  : public RuntimeObject
{
public:
	// System.Int32 Valve.VR.SteamVR_Behaviour_<DoInitializeSteamVR>d__15::<>1__state
	int32_t ___U3CU3E1__state_0;
	// System.Object Valve.VR.SteamVR_Behaviour_<DoInitializeSteamVR>d__15::<>2__current
	RuntimeObject * ___U3CU3E2__current_1;
	// System.Boolean Valve.VR.SteamVR_Behaviour_<DoInitializeSteamVR>d__15::forceUnityVRToOpenVR
	bool ___forceUnityVRToOpenVR_2;
	// Valve.VR.SteamVR_Behaviour Valve.VR.SteamVR_Behaviour_<DoInitializeSteamVR>d__15::<>4__this
	SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586 * ___U3CU3E4__this_3;

public:
	inline static int32_t get_offset_of_U3CU3E1__state_0() { return static_cast<int32_t>(offsetof(U3CDoInitializeSteamVRU3Ed__15_tF2B5867E813D537B7B4B232138211FE3C01A21F7, ___U3CU3E1__state_0)); }
	inline int32_t get_U3CU3E1__state_0() const { return ___U3CU3E1__state_0; }
	inline int32_t* get_address_of_U3CU3E1__state_0() { return &___U3CU3E1__state_0; }
	inline void set_U3CU3E1__state_0(int32_t value)
	{
		___U3CU3E1__state_0 = value;
	}

	inline static int32_t get_offset_of_U3CU3E2__current_1() { return static_cast<int32_t>(offsetof(U3CDoInitializeSteamVRU3Ed__15_tF2B5867E813D537B7B4B232138211FE3C01A21F7, ___U3CU3E2__current_1)); }
	inline RuntimeObject * get_U3CU3E2__current_1() const { return ___U3CU3E2__current_1; }
	inline RuntimeObject ** get_address_of_U3CU3E2__current_1() { return &___U3CU3E2__current_1; }
	inline void set_U3CU3E2__current_1(RuntimeObject * value)
	{
		___U3CU3E2__current_1 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3CU3E2__current_1), (void*)value);
	}

	inline static int32_t get_offset_of_forceUnityVRToOpenVR_2() { return static_cast<int32_t>(offsetof(U3CDoInitializeSteamVRU3Ed__15_tF2B5867E813D537B7B4B232138211FE3C01A21F7, ___forceUnityVRToOpenVR_2)); }
	inline bool get_forceUnityVRToOpenVR_2() const { return ___forceUnityVRToOpenVR_2; }
	inline bool* get_address_of_forceUnityVRToOpenVR_2() { return &___forceUnityVRToOpenVR_2; }
	inline void set_forceUnityVRToOpenVR_2(bool value)
	{
		___forceUnityVRToOpenVR_2 = value;
	}

	inline static int32_t get_offset_of_U3CU3E4__this_3() { return static_cast<int32_t>(offsetof(U3CDoInitializeSteamVRU3Ed__15_tF2B5867E813D537B7B4B232138211FE3C01A21F7, ___U3CU3E4__this_3)); }
	inline SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586 * get_U3CU3E4__this_3() const { return ___U3CU3E4__this_3; }
	inline SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586 ** get_address_of_U3CU3E4__this_3() { return &___U3CU3E4__this_3; }
	inline void set_U3CU3E4__this_3(SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586 * value)
	{
		___U3CU3E4__this_3 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3CU3E4__this_3), (void*)value);
	}
};


// Valve.VR.SteamVR_Behaviour_Skeleton_<DoBlendRoutine>d__152
struct  U3CDoBlendRoutineU3Ed__152_tFF832A9C1A3DA477A5CB7789B762723F29BB50D6  : public RuntimeObject
{
public:
	// System.Int32 Valve.VR.SteamVR_Behaviour_Skeleton_<DoBlendRoutine>d__152::<>1__state
	int32_t ___U3CU3E1__state_0;
	// System.Object Valve.VR.SteamVR_Behaviour_Skeleton_<DoBlendRoutine>d__152::<>2__current
	RuntimeObject * ___U3CU3E2__current_1;
	// System.Single Valve.VR.SteamVR_Behaviour_Skeleton_<DoBlendRoutine>d__152::blendToAmount
	float ___blendToAmount_2;
	// System.Single Valve.VR.SteamVR_Behaviour_Skeleton_<DoBlendRoutine>d__152::overTime
	float ___overTime_3;
	// Valve.VR.SteamVR_Behaviour_Skeleton Valve.VR.SteamVR_Behaviour_Skeleton_<DoBlendRoutine>d__152::<>4__this
	SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A * ___U3CU3E4__this_4;
	// System.Single Valve.VR.SteamVR_Behaviour_Skeleton_<DoBlendRoutine>d__152::<startTime>5__1
	float ___U3CstartTimeU3E5__1_5;
	// System.Single Valve.VR.SteamVR_Behaviour_Skeleton_<DoBlendRoutine>d__152::<endTime>5__2
	float ___U3CendTimeU3E5__2_6;
	// System.Single Valve.VR.SteamVR_Behaviour_Skeleton_<DoBlendRoutine>d__152::<startAmount>5__3
	float ___U3CstartAmountU3E5__3_7;

public:
	inline static int32_t get_offset_of_U3CU3E1__state_0() { return static_cast<int32_t>(offsetof(U3CDoBlendRoutineU3Ed__152_tFF832A9C1A3DA477A5CB7789B762723F29BB50D6, ___U3CU3E1__state_0)); }
	inline int32_t get_U3CU3E1__state_0() const { return ___U3CU3E1__state_0; }
	inline int32_t* get_address_of_U3CU3E1__state_0() { return &___U3CU3E1__state_0; }
	inline void set_U3CU3E1__state_0(int32_t value)
	{
		___U3CU3E1__state_0 = value;
	}

	inline static int32_t get_offset_of_U3CU3E2__current_1() { return static_cast<int32_t>(offsetof(U3CDoBlendRoutineU3Ed__152_tFF832A9C1A3DA477A5CB7789B762723F29BB50D6, ___U3CU3E2__current_1)); }
	inline RuntimeObject * get_U3CU3E2__current_1() const { return ___U3CU3E2__current_1; }
	inline RuntimeObject ** get_address_of_U3CU3E2__current_1() { return &___U3CU3E2__current_1; }
	inline void set_U3CU3E2__current_1(RuntimeObject * value)
	{
		___U3CU3E2__current_1 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3CU3E2__current_1), (void*)value);
	}

	inline static int32_t get_offset_of_blendToAmount_2() { return static_cast<int32_t>(offsetof(U3CDoBlendRoutineU3Ed__152_tFF832A9C1A3DA477A5CB7789B762723F29BB50D6, ___blendToAmount_2)); }
	inline float get_blendToAmount_2() const { return ___blendToAmount_2; }
	inline float* get_address_of_blendToAmount_2() { return &___blendToAmount_2; }
	inline void set_blendToAmount_2(float value)
	{
		___blendToAmount_2 = value;
	}

	inline static int32_t get_offset_of_overTime_3() { return static_cast<int32_t>(offsetof(U3CDoBlendRoutineU3Ed__152_tFF832A9C1A3DA477A5CB7789B762723F29BB50D6, ___overTime_3)); }
	inline float get_overTime_3() const { return ___overTime_3; }
	inline float* get_address_of_overTime_3() { return &___overTime_3; }
	inline void set_overTime_3(float value)
	{
		___overTime_3 = value;
	}

	inline static int32_t get_offset_of_U3CU3E4__this_4() { return static_cast<int32_t>(offsetof(U3CDoBlendRoutineU3Ed__152_tFF832A9C1A3DA477A5CB7789B762723F29BB50D6, ___U3CU3E4__this_4)); }
	inline SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A * get_U3CU3E4__this_4() const { return ___U3CU3E4__this_4; }
	inline SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A ** get_address_of_U3CU3E4__this_4() { return &___U3CU3E4__this_4; }
	inline void set_U3CU3E4__this_4(SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A * value)
	{
		___U3CU3E4__this_4 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3CU3E4__this_4), (void*)value);
	}

	inline static int32_t get_offset_of_U3CstartTimeU3E5__1_5() { return static_cast<int32_t>(offsetof(U3CDoBlendRoutineU3Ed__152_tFF832A9C1A3DA477A5CB7789B762723F29BB50D6, ___U3CstartTimeU3E5__1_5)); }
	inline float get_U3CstartTimeU3E5__1_5() const { return ___U3CstartTimeU3E5__1_5; }
	inline float* get_address_of_U3CstartTimeU3E5__1_5() { return &___U3CstartTimeU3E5__1_5; }
	inline void set_U3CstartTimeU3E5__1_5(float value)
	{
		___U3CstartTimeU3E5__1_5 = value;
	}

	inline static int32_t get_offset_of_U3CendTimeU3E5__2_6() { return static_cast<int32_t>(offsetof(U3CDoBlendRoutineU3Ed__152_tFF832A9C1A3DA477A5CB7789B762723F29BB50D6, ___U3CendTimeU3E5__2_6)); }
	inline float get_U3CendTimeU3E5__2_6() const { return ___U3CendTimeU3E5__2_6; }
	inline float* get_address_of_U3CendTimeU3E5__2_6() { return &___U3CendTimeU3E5__2_6; }
	inline void set_U3CendTimeU3E5__2_6(float value)
	{
		___U3CendTimeU3E5__2_6 = value;
	}

	inline static int32_t get_offset_of_U3CstartAmountU3E5__3_7() { return static_cast<int32_t>(offsetof(U3CDoBlendRoutineU3Ed__152_tFF832A9C1A3DA477A5CB7789B762723F29BB50D6, ___U3CstartAmountU3E5__3_7)); }
	inline float get_U3CstartAmountU3E5__3_7() const { return ___U3CstartAmountU3E5__3_7; }
	inline float* get_address_of_U3CstartAmountU3E5__3_7() { return &___U3CstartAmountU3E5__3_7; }
	inline void set_U3CstartAmountU3E5__3_7(float value)
	{
		___U3CstartAmountU3E5__3_7 = value;
	}
};


// Valve.VR.SteamVR_RingBuffer`1<Valve.VR.SteamVR_HistoryStep>
struct  SteamVR_RingBuffer_1_t57851A70FC812E73F42BD0FCB349E7612005C7A4  : public RuntimeObject
{
public:
	// T[] Valve.VR.SteamVR_RingBuffer`1::buffer
	SteamVR_HistoryStepU5BU5D_t43030A4B81B2D8EF4C0661A965AA3C15F65E828F* ___buffer_0;
	// System.Int32 Valve.VR.SteamVR_RingBuffer`1::currentIndex
	int32_t ___currentIndex_1;
	// T Valve.VR.SteamVR_RingBuffer`1::lastElement
	SteamVR_HistoryStep_t90A5A15C505B8C28A5E344A1431F49082DACCC5E * ___lastElement_2;
	// System.Boolean Valve.VR.SteamVR_RingBuffer`1::cleared
	bool ___cleared_3;

public:
	inline static int32_t get_offset_of_buffer_0() { return static_cast<int32_t>(offsetof(SteamVR_RingBuffer_1_t57851A70FC812E73F42BD0FCB349E7612005C7A4, ___buffer_0)); }
	inline SteamVR_HistoryStepU5BU5D_t43030A4B81B2D8EF4C0661A965AA3C15F65E828F* get_buffer_0() const { return ___buffer_0; }
	inline SteamVR_HistoryStepU5BU5D_t43030A4B81B2D8EF4C0661A965AA3C15F65E828F** get_address_of_buffer_0() { return &___buffer_0; }
	inline void set_buffer_0(SteamVR_HistoryStepU5BU5D_t43030A4B81B2D8EF4C0661A965AA3C15F65E828F* value)
	{
		___buffer_0 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___buffer_0), (void*)value);
	}

	inline static int32_t get_offset_of_currentIndex_1() { return static_cast<int32_t>(offsetof(SteamVR_RingBuffer_1_t57851A70FC812E73F42BD0FCB349E7612005C7A4, ___currentIndex_1)); }
	inline int32_t get_currentIndex_1() const { return ___currentIndex_1; }
	inline int32_t* get_address_of_currentIndex_1() { return &___currentIndex_1; }
	inline void set_currentIndex_1(int32_t value)
	{
		___currentIndex_1 = value;
	}

	inline static int32_t get_offset_of_lastElement_2() { return static_cast<int32_t>(offsetof(SteamVR_RingBuffer_1_t57851A70FC812E73F42BD0FCB349E7612005C7A4, ___lastElement_2)); }
	inline SteamVR_HistoryStep_t90A5A15C505B8C28A5E344A1431F49082DACCC5E * get_lastElement_2() const { return ___lastElement_2; }
	inline SteamVR_HistoryStep_t90A5A15C505B8C28A5E344A1431F49082DACCC5E ** get_address_of_lastElement_2() { return &___lastElement_2; }
	inline void set_lastElement_2(SteamVR_HistoryStep_t90A5A15C505B8C28A5E344A1431F49082DACCC5E * value)
	{
		___lastElement_2 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___lastElement_2), (void*)value);
	}

	inline static int32_t get_offset_of_cleared_3() { return static_cast<int32_t>(offsetof(SteamVR_RingBuffer_1_t57851A70FC812E73F42BD0FCB349E7612005C7A4, ___cleared_3)); }
	inline bool get_cleared_3() const { return ___cleared_3; }
	inline bool* get_address_of_cleared_3() { return &___cleared_3; }
	inline void set_cleared_3(bool value)
	{
		___cleared_3 = value;
	}
};


// System.Boolean
struct  Boolean_tB53F6830F670160873277339AA58F15CAED4399C 
{
public:
	// System.Boolean System.Boolean::m_value
	bool ___m_value_0;

public:
	inline static int32_t get_offset_of_m_value_0() { return static_cast<int32_t>(offsetof(Boolean_tB53F6830F670160873277339AA58F15CAED4399C, ___m_value_0)); }
	inline bool get_m_value_0() const { return ___m_value_0; }
	inline bool* get_address_of_m_value_0() { return &___m_value_0; }
	inline void set_m_value_0(bool value)
	{
		___m_value_0 = value;
	}
};

struct Boolean_tB53F6830F670160873277339AA58F15CAED4399C_StaticFields
{
public:
	// System.String System.Boolean::TrueString
	String_t* ___TrueString_5;
	// System.String System.Boolean::FalseString
	String_t* ___FalseString_6;

public:
	inline static int32_t get_offset_of_TrueString_5() { return static_cast<int32_t>(offsetof(Boolean_tB53F6830F670160873277339AA58F15CAED4399C_StaticFields, ___TrueString_5)); }
	inline String_t* get_TrueString_5() const { return ___TrueString_5; }
	inline String_t** get_address_of_TrueString_5() { return &___TrueString_5; }
	inline void set_TrueString_5(String_t* value)
	{
		___TrueString_5 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___TrueString_5), (void*)value);
	}

	inline static int32_t get_offset_of_FalseString_6() { return static_cast<int32_t>(offsetof(Boolean_tB53F6830F670160873277339AA58F15CAED4399C_StaticFields, ___FalseString_6)); }
	inline String_t* get_FalseString_6() const { return ___FalseString_6; }
	inline String_t** get_address_of_FalseString_6() { return &___FalseString_6; }
	inline void set_FalseString_6(String_t* value)
	{
		___FalseString_6 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___FalseString_6), (void*)value);
	}
};


// System.Enum
struct  Enum_t2AF27C02B8653AE29442467390005ABC74D8F521  : public ValueType_t4D0C27076F7C36E76190FB3328E232BCB1CD1FFF
{
public:

public:
};

struct Enum_t2AF27C02B8653AE29442467390005ABC74D8F521_StaticFields
{
public:
	// System.Char[] System.Enum::enumSeperatorCharArray
	CharU5BU5D_t4CC6ABF0AD71BEC97E3C2F1E9C5677E46D3A75C2* ___enumSeperatorCharArray_0;

public:
	inline static int32_t get_offset_of_enumSeperatorCharArray_0() { return static_cast<int32_t>(offsetof(Enum_t2AF27C02B8653AE29442467390005ABC74D8F521_StaticFields, ___enumSeperatorCharArray_0)); }
	inline CharU5BU5D_t4CC6ABF0AD71BEC97E3C2F1E9C5677E46D3A75C2* get_enumSeperatorCharArray_0() const { return ___enumSeperatorCharArray_0; }
	inline CharU5BU5D_t4CC6ABF0AD71BEC97E3C2F1E9C5677E46D3A75C2** get_address_of_enumSeperatorCharArray_0() { return &___enumSeperatorCharArray_0; }
	inline void set_enumSeperatorCharArray_0(CharU5BU5D_t4CC6ABF0AD71BEC97E3C2F1E9C5677E46D3A75C2* value)
	{
		___enumSeperatorCharArray_0 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___enumSeperatorCharArray_0), (void*)value);
	}
};

// Native definition for P/Invoke marshalling of System.Enum
struct Enum_t2AF27C02B8653AE29442467390005ABC74D8F521_marshaled_pinvoke
{
};
// Native definition for COM marshalling of System.Enum
struct Enum_t2AF27C02B8653AE29442467390005ABC74D8F521_marshaled_com
{
};

// System.Int32
struct  Int32_t585191389E07734F19F3156FF88FB3EF4800D102 
{
public:
	// System.Int32 System.Int32::m_value
	int32_t ___m_value_0;

public:
	inline static int32_t get_offset_of_m_value_0() { return static_cast<int32_t>(offsetof(Int32_t585191389E07734F19F3156FF88FB3EF4800D102, ___m_value_0)); }
	inline int32_t get_m_value_0() const { return ___m_value_0; }
	inline int32_t* get_address_of_m_value_0() { return &___m_value_0; }
	inline void set_m_value_0(int32_t value)
	{
		___m_value_0 = value;
	}
};


// System.IntPtr
struct  IntPtr_t 
{
public:
	// System.Void* System.IntPtr::m_value
	void* ___m_value_0;

public:
	inline static int32_t get_offset_of_m_value_0() { return static_cast<int32_t>(offsetof(IntPtr_t, ___m_value_0)); }
	inline void* get_m_value_0() const { return ___m_value_0; }
	inline void** get_address_of_m_value_0() { return &___m_value_0; }
	inline void set_m_value_0(void* value)
	{
		___m_value_0 = value;
	}
};

struct IntPtr_t_StaticFields
{
public:
	// System.IntPtr System.IntPtr::Zero
	intptr_t ___Zero_1;

public:
	inline static int32_t get_offset_of_Zero_1() { return static_cast<int32_t>(offsetof(IntPtr_t_StaticFields, ___Zero_1)); }
	inline intptr_t get_Zero_1() const { return ___Zero_1; }
	inline intptr_t* get_address_of_Zero_1() { return &___Zero_1; }
	inline void set_Zero_1(intptr_t value)
	{
		___Zero_1 = value;
	}
};


// System.Nullable`1<System.Boolean>
struct  Nullable_1_t9E6A67BECE376F0623B5C857F5674A0311C41793 
{
public:
	// T System.Nullable`1::value
	bool ___value_0;
	// System.Boolean System.Nullable`1::has_value
	bool ___has_value_1;

public:
	inline static int32_t get_offset_of_value_0() { return static_cast<int32_t>(offsetof(Nullable_1_t9E6A67BECE376F0623B5C857F5674A0311C41793, ___value_0)); }
	inline bool get_value_0() const { return ___value_0; }
	inline bool* get_address_of_value_0() { return &___value_0; }
	inline void set_value_0(bool value)
	{
		___value_0 = value;
	}

	inline static int32_t get_offset_of_has_value_1() { return static_cast<int32_t>(offsetof(Nullable_1_t9E6A67BECE376F0623B5C857F5674A0311C41793, ___has_value_1)); }
	inline bool get_has_value_1() const { return ___has_value_1; }
	inline bool* get_address_of_has_value_1() { return &___has_value_1; }
	inline void set_has_value_1(bool value)
	{
		___has_value_1 = value;
	}
};


// System.Single
struct  Single_tDDDA9169C4E4E308AC6D7A824F9B28DC82204AE1 
{
public:
	// System.Single System.Single::m_value
	float ___m_value_0;

public:
	inline static int32_t get_offset_of_m_value_0() { return static_cast<int32_t>(offsetof(Single_tDDDA9169C4E4E308AC6D7A824F9B28DC82204AE1, ___m_value_0)); }
	inline float get_m_value_0() const { return ___m_value_0; }
	inline float* get_address_of_m_value_0() { return &___m_value_0; }
	inline void set_m_value_0(float value)
	{
		___m_value_0 = value;
	}
};


// System.UInt32
struct  UInt32_t4980FA09003AFAAB5A6E361BA2748EA9A005709B 
{
public:
	// System.UInt32 System.UInt32::m_value
	uint32_t ___m_value_0;

public:
	inline static int32_t get_offset_of_m_value_0() { return static_cast<int32_t>(offsetof(UInt32_t4980FA09003AFAAB5A6E361BA2748EA9A005709B, ___m_value_0)); }
	inline uint32_t get_m_value_0() const { return ___m_value_0; }
	inline uint32_t* get_address_of_m_value_0() { return &___m_value_0; }
	inline void set_m_value_0(uint32_t value)
	{
		___m_value_0 = value;
	}
};


// System.UInt64
struct  UInt64_tA02DF3B59C8FC4A849BD207DA11038CC64E4CB4E 
{
public:
	// System.UInt64 System.UInt64::m_value
	uint64_t ___m_value_0;

public:
	inline static int32_t get_offset_of_m_value_0() { return static_cast<int32_t>(offsetof(UInt64_tA02DF3B59C8FC4A849BD207DA11038CC64E4CB4E, ___m_value_0)); }
	inline uint64_t get_m_value_0() const { return ___m_value_0; }
	inline uint64_t* get_address_of_m_value_0() { return &___m_value_0; }
	inline void set_m_value_0(uint64_t value)
	{
		___m_value_0 = value;
	}
};


// System.Void
struct  Void_t22962CB4C05B1D89B55A6E1139F0E87A90987017 
{
public:
	union
	{
		struct
		{
		};
		uint8_t Void_t22962CB4C05B1D89B55A6E1139F0E87A90987017__padding[1];
	};

public:
};


// UnityEngine.Events.UnityEvent`1<Valve.VR.VREvent_t>
struct  UnityEvent_1_t7E9560B75945B332DA5807C6061708BBAF5F7307  : public UnityEventBase_t6E0F7823762EE94BB8489B5AE41C7802A266D3D5
{
public:
	// System.Object[] UnityEngine.Events.UnityEvent`1::m_InvokeArray
	ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A* ___m_InvokeArray_3;

public:
	inline static int32_t get_offset_of_m_InvokeArray_3() { return static_cast<int32_t>(offsetof(UnityEvent_1_t7E9560B75945B332DA5807C6061708BBAF5F7307, ___m_InvokeArray_3)); }
	inline ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A* get_m_InvokeArray_3() const { return ___m_InvokeArray_3; }
	inline ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A** get_address_of_m_InvokeArray_3() { return &___m_InvokeArray_3; }
	inline void set_m_InvokeArray_3(ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A* value)
	{
		___m_InvokeArray_3 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___m_InvokeArray_3), (void*)value);
	}
};


// UnityEngine.Events.UnityEvent`2<Valve.VR.SteamVR_Behaviour_Pose,Valve.VR.SteamVR_Input_Sources>
struct  UnityEvent_2_tA05085E47587B6E451DA7BFE1C3551696049307E  : public UnityEventBase_t6E0F7823762EE94BB8489B5AE41C7802A266D3D5
{
public:
	// System.Object[] UnityEngine.Events.UnityEvent`2::m_InvokeArray
	ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A* ___m_InvokeArray_3;

public:
	inline static int32_t get_offset_of_m_InvokeArray_3() { return static_cast<int32_t>(offsetof(UnityEvent_2_tA05085E47587B6E451DA7BFE1C3551696049307E, ___m_InvokeArray_3)); }
	inline ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A* get_m_InvokeArray_3() const { return ___m_InvokeArray_3; }
	inline ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A** get_address_of_m_InvokeArray_3() { return &___m_InvokeArray_3; }
	inline void set_m_InvokeArray_3(ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A* value)
	{
		___m_InvokeArray_3 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___m_InvokeArray_3), (void*)value);
	}
};


// UnityEngine.Events.UnityEvent`2<Valve.VR.SteamVR_Behaviour_Skeleton,Valve.VR.SteamVR_Input_Sources>
struct  UnityEvent_2_t1039E05662791F0E922DA5769E4F1664E336547D  : public UnityEventBase_t6E0F7823762EE94BB8489B5AE41C7802A266D3D5
{
public:
	// System.Object[] UnityEngine.Events.UnityEvent`2::m_InvokeArray
	ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A* ___m_InvokeArray_3;

public:
	inline static int32_t get_offset_of_m_InvokeArray_3() { return static_cast<int32_t>(offsetof(UnityEvent_2_t1039E05662791F0E922DA5769E4F1664E336547D, ___m_InvokeArray_3)); }
	inline ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A* get_m_InvokeArray_3() const { return ___m_InvokeArray_3; }
	inline ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A** get_address_of_m_InvokeArray_3() { return &___m_InvokeArray_3; }
	inline void set_m_InvokeArray_3(ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A* value)
	{
		___m_InvokeArray_3 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___m_InvokeArray_3), (void*)value);
	}
};


// UnityEngine.Events.UnityEvent`3<Valve.VR.SteamVR_Behaviour_Boolean,Valve.VR.SteamVR_Input_Sources,System.Boolean>
struct  UnityEvent_3_t6AB15570399D42C6377741DA4B8F5FD3CEED0539  : public UnityEventBase_t6E0F7823762EE94BB8489B5AE41C7802A266D3D5
{
public:
	// System.Object[] UnityEngine.Events.UnityEvent`3::m_InvokeArray
	ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A* ___m_InvokeArray_3;

public:
	inline static int32_t get_offset_of_m_InvokeArray_3() { return static_cast<int32_t>(offsetof(UnityEvent_3_t6AB15570399D42C6377741DA4B8F5FD3CEED0539, ___m_InvokeArray_3)); }
	inline ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A* get_m_InvokeArray_3() const { return ___m_InvokeArray_3; }
	inline ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A** get_address_of_m_InvokeArray_3() { return &___m_InvokeArray_3; }
	inline void set_m_InvokeArray_3(ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A* value)
	{
		___m_InvokeArray_3 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___m_InvokeArray_3), (void*)value);
	}
};


// UnityEngine.Events.UnityEvent`3<Valve.VR.SteamVR_Behaviour_Pose,Valve.VR.SteamVR_Input_Sources,System.Boolean>
struct  UnityEvent_3_tBBC56B079516E009B4B82F815EA628510B08FB2B  : public UnityEventBase_t6E0F7823762EE94BB8489B5AE41C7802A266D3D5
{
public:
	// System.Object[] UnityEngine.Events.UnityEvent`3::m_InvokeArray
	ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A* ___m_InvokeArray_3;

public:
	inline static int32_t get_offset_of_m_InvokeArray_3() { return static_cast<int32_t>(offsetof(UnityEvent_3_tBBC56B079516E009B4B82F815EA628510B08FB2B, ___m_InvokeArray_3)); }
	inline ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A* get_m_InvokeArray_3() const { return ___m_InvokeArray_3; }
	inline ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A** get_address_of_m_InvokeArray_3() { return &___m_InvokeArray_3; }
	inline void set_m_InvokeArray_3(ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A* value)
	{
		___m_InvokeArray_3 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___m_InvokeArray_3), (void*)value);
	}
};


// UnityEngine.Events.UnityEvent`3<Valve.VR.SteamVR_Behaviour_Pose,Valve.VR.SteamVR_Input_Sources,System.Int32>
struct  UnityEvent_3_t9F7FBE764B10ACE18D72DD1C3A0FD02372F2FDE4  : public UnityEventBase_t6E0F7823762EE94BB8489B5AE41C7802A266D3D5
{
public:
	// System.Object[] UnityEngine.Events.UnityEvent`3::m_InvokeArray
	ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A* ___m_InvokeArray_3;

public:
	inline static int32_t get_offset_of_m_InvokeArray_3() { return static_cast<int32_t>(offsetof(UnityEvent_3_t9F7FBE764B10ACE18D72DD1C3A0FD02372F2FDE4, ___m_InvokeArray_3)); }
	inline ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A* get_m_InvokeArray_3() const { return ___m_InvokeArray_3; }
	inline ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A** get_address_of_m_InvokeArray_3() { return &___m_InvokeArray_3; }
	inline void set_m_InvokeArray_3(ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A* value)
	{
		___m_InvokeArray_3 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___m_InvokeArray_3), (void*)value);
	}
};


// UnityEngine.Events.UnityEvent`3<Valve.VR.SteamVR_Behaviour_Pose,Valve.VR.SteamVR_Input_Sources,Valve.VR.ETrackingResult>
struct  UnityEvent_3_t391F2DDF36FA264C778F53EB8FDCE5A95F5064BE  : public UnityEventBase_t6E0F7823762EE94BB8489B5AE41C7802A266D3D5
{
public:
	// System.Object[] UnityEngine.Events.UnityEvent`3::m_InvokeArray
	ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A* ___m_InvokeArray_3;

public:
	inline static int32_t get_offset_of_m_InvokeArray_3() { return static_cast<int32_t>(offsetof(UnityEvent_3_t391F2DDF36FA264C778F53EB8FDCE5A95F5064BE, ___m_InvokeArray_3)); }
	inline ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A* get_m_InvokeArray_3() const { return ___m_InvokeArray_3; }
	inline ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A** get_address_of_m_InvokeArray_3() { return &___m_InvokeArray_3; }
	inline void set_m_InvokeArray_3(ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A* value)
	{
		___m_InvokeArray_3 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___m_InvokeArray_3), (void*)value);
	}
};


// UnityEngine.Events.UnityEvent`3<Valve.VR.SteamVR_Behaviour_Skeleton,Valve.VR.SteamVR_Input_Sources,System.Boolean>
struct  UnityEvent_3_tC8A397CA8890011F49B784FC92F66521499D69BA  : public UnityEventBase_t6E0F7823762EE94BB8489B5AE41C7802A266D3D5
{
public:
	// System.Object[] UnityEngine.Events.UnityEvent`3::m_InvokeArray
	ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A* ___m_InvokeArray_3;

public:
	inline static int32_t get_offset_of_m_InvokeArray_3() { return static_cast<int32_t>(offsetof(UnityEvent_3_tC8A397CA8890011F49B784FC92F66521499D69BA, ___m_InvokeArray_3)); }
	inline ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A* get_m_InvokeArray_3() const { return ___m_InvokeArray_3; }
	inline ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A** get_address_of_m_InvokeArray_3() { return &___m_InvokeArray_3; }
	inline void set_m_InvokeArray_3(ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A* value)
	{
		___m_InvokeArray_3 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___m_InvokeArray_3), (void*)value);
	}
};


// UnityEngine.Events.UnityEvent`3<Valve.VR.SteamVR_Behaviour_Skeleton,Valve.VR.SteamVR_Input_Sources,Valve.VR.ETrackingResult>
struct  UnityEvent_3_t516983F871A6C39CE10EE0B4C19E30BE359971A0  : public UnityEventBase_t6E0F7823762EE94BB8489B5AE41C7802A266D3D5
{
public:
	// System.Object[] UnityEngine.Events.UnityEvent`3::m_InvokeArray
	ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A* ___m_InvokeArray_3;

public:
	inline static int32_t get_offset_of_m_InvokeArray_3() { return static_cast<int32_t>(offsetof(UnityEvent_3_t516983F871A6C39CE10EE0B4C19E30BE359971A0, ___m_InvokeArray_3)); }
	inline ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A* get_m_InvokeArray_3() const { return ___m_InvokeArray_3; }
	inline ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A** get_address_of_m_InvokeArray_3() { return &___m_InvokeArray_3; }
	inline void set_m_InvokeArray_3(ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A* value)
	{
		___m_InvokeArray_3 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___m_InvokeArray_3), (void*)value);
	}
};


// UnityEngine.Events.UnityEvent`4<Valve.VR.SteamVR_Behaviour_Single,Valve.VR.SteamVR_Input_Sources,System.Single,System.Single>
struct  UnityEvent_4_t3A547C01CD6A63A594A6C4E837E12268349BF0C7  : public UnityEventBase_t6E0F7823762EE94BB8489B5AE41C7802A266D3D5
{
public:
	// System.Object[] UnityEngine.Events.UnityEvent`4::m_InvokeArray
	ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A* ___m_InvokeArray_3;

public:
	inline static int32_t get_offset_of_m_InvokeArray_3() { return static_cast<int32_t>(offsetof(UnityEvent_4_t3A547C01CD6A63A594A6C4E837E12268349BF0C7, ___m_InvokeArray_3)); }
	inline ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A* get_m_InvokeArray_3() const { return ___m_InvokeArray_3; }
	inline ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A** get_address_of_m_InvokeArray_3() { return &___m_InvokeArray_3; }
	inline void set_m_InvokeArray_3(ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A* value)
	{
		___m_InvokeArray_3 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___m_InvokeArray_3), (void*)value);
	}
};


// UnityEngine.Events.UnityEvent`4<Valve.VR.SteamVR_Behaviour_Vector2,Valve.VR.SteamVR_Input_Sources,UnityEngine.Vector2,UnityEngine.Vector2>
struct  UnityEvent_4_t980357B09A0DFE7E7E39E176C64C88B144A074AB  : public UnityEventBase_t6E0F7823762EE94BB8489B5AE41C7802A266D3D5
{
public:
	// System.Object[] UnityEngine.Events.UnityEvent`4::m_InvokeArray
	ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A* ___m_InvokeArray_3;

public:
	inline static int32_t get_offset_of_m_InvokeArray_3() { return static_cast<int32_t>(offsetof(UnityEvent_4_t980357B09A0DFE7E7E39E176C64C88B144A074AB, ___m_InvokeArray_3)); }
	inline ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A* get_m_InvokeArray_3() const { return ___m_InvokeArray_3; }
	inline ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A** get_address_of_m_InvokeArray_3() { return &___m_InvokeArray_3; }
	inline void set_m_InvokeArray_3(ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A* value)
	{
		___m_InvokeArray_3 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___m_InvokeArray_3), (void*)value);
	}
};


// UnityEngine.Quaternion
struct  Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357 
{
public:
	// System.Single UnityEngine.Quaternion::x
	float ___x_0;
	// System.Single UnityEngine.Quaternion::y
	float ___y_1;
	// System.Single UnityEngine.Quaternion::z
	float ___z_2;
	// System.Single UnityEngine.Quaternion::w
	float ___w_3;

public:
	inline static int32_t get_offset_of_x_0() { return static_cast<int32_t>(offsetof(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357, ___x_0)); }
	inline float get_x_0() const { return ___x_0; }
	inline float* get_address_of_x_0() { return &___x_0; }
	inline void set_x_0(float value)
	{
		___x_0 = value;
	}

	inline static int32_t get_offset_of_y_1() { return static_cast<int32_t>(offsetof(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357, ___y_1)); }
	inline float get_y_1() const { return ___y_1; }
	inline float* get_address_of_y_1() { return &___y_1; }
	inline void set_y_1(float value)
	{
		___y_1 = value;
	}

	inline static int32_t get_offset_of_z_2() { return static_cast<int32_t>(offsetof(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357, ___z_2)); }
	inline float get_z_2() const { return ___z_2; }
	inline float* get_address_of_z_2() { return &___z_2; }
	inline void set_z_2(float value)
	{
		___z_2 = value;
	}

	inline static int32_t get_offset_of_w_3() { return static_cast<int32_t>(offsetof(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357, ___w_3)); }
	inline float get_w_3() const { return ___w_3; }
	inline float* get_address_of_w_3() { return &___w_3; }
	inline void set_w_3(float value)
	{
		___w_3 = value;
	}
};

struct Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357_StaticFields
{
public:
	// UnityEngine.Quaternion UnityEngine.Quaternion::identityQuaternion
	Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  ___identityQuaternion_4;

public:
	inline static int32_t get_offset_of_identityQuaternion_4() { return static_cast<int32_t>(offsetof(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357_StaticFields, ___identityQuaternion_4)); }
	inline Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  get_identityQuaternion_4() const { return ___identityQuaternion_4; }
	inline Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357 * get_address_of_identityQuaternion_4() { return &___identityQuaternion_4; }
	inline void set_identityQuaternion_4(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  value)
	{
		___identityQuaternion_4 = value;
	}
};


// UnityEngine.Vector2
struct  Vector2_tA85D2DD88578276CA8A8796756458277E72D073D 
{
public:
	// System.Single UnityEngine.Vector2::x
	float ___x_0;
	// System.Single UnityEngine.Vector2::y
	float ___y_1;

public:
	inline static int32_t get_offset_of_x_0() { return static_cast<int32_t>(offsetof(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D, ___x_0)); }
	inline float get_x_0() const { return ___x_0; }
	inline float* get_address_of_x_0() { return &___x_0; }
	inline void set_x_0(float value)
	{
		___x_0 = value;
	}

	inline static int32_t get_offset_of_y_1() { return static_cast<int32_t>(offsetof(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D, ___y_1)); }
	inline float get_y_1() const { return ___y_1; }
	inline float* get_address_of_y_1() { return &___y_1; }
	inline void set_y_1(float value)
	{
		___y_1 = value;
	}
};

struct Vector2_tA85D2DD88578276CA8A8796756458277E72D073D_StaticFields
{
public:
	// UnityEngine.Vector2 UnityEngine.Vector2::zeroVector
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___zeroVector_2;
	// UnityEngine.Vector2 UnityEngine.Vector2::oneVector
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___oneVector_3;
	// UnityEngine.Vector2 UnityEngine.Vector2::upVector
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___upVector_4;
	// UnityEngine.Vector2 UnityEngine.Vector2::downVector
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___downVector_5;
	// UnityEngine.Vector2 UnityEngine.Vector2::leftVector
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___leftVector_6;
	// UnityEngine.Vector2 UnityEngine.Vector2::rightVector
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___rightVector_7;
	// UnityEngine.Vector2 UnityEngine.Vector2::positiveInfinityVector
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___positiveInfinityVector_8;
	// UnityEngine.Vector2 UnityEngine.Vector2::negativeInfinityVector
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___negativeInfinityVector_9;

public:
	inline static int32_t get_offset_of_zeroVector_2() { return static_cast<int32_t>(offsetof(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D_StaticFields, ___zeroVector_2)); }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  get_zeroVector_2() const { return ___zeroVector_2; }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * get_address_of_zeroVector_2() { return &___zeroVector_2; }
	inline void set_zeroVector_2(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  value)
	{
		___zeroVector_2 = value;
	}

	inline static int32_t get_offset_of_oneVector_3() { return static_cast<int32_t>(offsetof(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D_StaticFields, ___oneVector_3)); }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  get_oneVector_3() const { return ___oneVector_3; }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * get_address_of_oneVector_3() { return &___oneVector_3; }
	inline void set_oneVector_3(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  value)
	{
		___oneVector_3 = value;
	}

	inline static int32_t get_offset_of_upVector_4() { return static_cast<int32_t>(offsetof(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D_StaticFields, ___upVector_4)); }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  get_upVector_4() const { return ___upVector_4; }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * get_address_of_upVector_4() { return &___upVector_4; }
	inline void set_upVector_4(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  value)
	{
		___upVector_4 = value;
	}

	inline static int32_t get_offset_of_downVector_5() { return static_cast<int32_t>(offsetof(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D_StaticFields, ___downVector_5)); }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  get_downVector_5() const { return ___downVector_5; }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * get_address_of_downVector_5() { return &___downVector_5; }
	inline void set_downVector_5(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  value)
	{
		___downVector_5 = value;
	}

	inline static int32_t get_offset_of_leftVector_6() { return static_cast<int32_t>(offsetof(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D_StaticFields, ___leftVector_6)); }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  get_leftVector_6() const { return ___leftVector_6; }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * get_address_of_leftVector_6() { return &___leftVector_6; }
	inline void set_leftVector_6(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  value)
	{
		___leftVector_6 = value;
	}

	inline static int32_t get_offset_of_rightVector_7() { return static_cast<int32_t>(offsetof(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D_StaticFields, ___rightVector_7)); }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  get_rightVector_7() const { return ___rightVector_7; }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * get_address_of_rightVector_7() { return &___rightVector_7; }
	inline void set_rightVector_7(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  value)
	{
		___rightVector_7 = value;
	}

	inline static int32_t get_offset_of_positiveInfinityVector_8() { return static_cast<int32_t>(offsetof(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D_StaticFields, ___positiveInfinityVector_8)); }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  get_positiveInfinityVector_8() const { return ___positiveInfinityVector_8; }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * get_address_of_positiveInfinityVector_8() { return &___positiveInfinityVector_8; }
	inline void set_positiveInfinityVector_8(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  value)
	{
		___positiveInfinityVector_8 = value;
	}

	inline static int32_t get_offset_of_negativeInfinityVector_9() { return static_cast<int32_t>(offsetof(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D_StaticFields, ___negativeInfinityVector_9)); }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  get_negativeInfinityVector_9() const { return ___negativeInfinityVector_9; }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * get_address_of_negativeInfinityVector_9() { return &___negativeInfinityVector_9; }
	inline void set_negativeInfinityVector_9(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  value)
	{
		___negativeInfinityVector_9 = value;
	}
};


// UnityEngine.Vector3
struct  Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 
{
public:
	// System.Single UnityEngine.Vector3::x
	float ___x_2;
	// System.Single UnityEngine.Vector3::y
	float ___y_3;
	// System.Single UnityEngine.Vector3::z
	float ___z_4;

public:
	inline static int32_t get_offset_of_x_2() { return static_cast<int32_t>(offsetof(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720, ___x_2)); }
	inline float get_x_2() const { return ___x_2; }
	inline float* get_address_of_x_2() { return &___x_2; }
	inline void set_x_2(float value)
	{
		___x_2 = value;
	}

	inline static int32_t get_offset_of_y_3() { return static_cast<int32_t>(offsetof(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720, ___y_3)); }
	inline float get_y_3() const { return ___y_3; }
	inline float* get_address_of_y_3() { return &___y_3; }
	inline void set_y_3(float value)
	{
		___y_3 = value;
	}

	inline static int32_t get_offset_of_z_4() { return static_cast<int32_t>(offsetof(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720, ___z_4)); }
	inline float get_z_4() const { return ___z_4; }
	inline float* get_address_of_z_4() { return &___z_4; }
	inline void set_z_4(float value)
	{
		___z_4 = value;
	}
};

struct Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_StaticFields
{
public:
	// UnityEngine.Vector3 UnityEngine.Vector3::zeroVector
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___zeroVector_5;
	// UnityEngine.Vector3 UnityEngine.Vector3::oneVector
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___oneVector_6;
	// UnityEngine.Vector3 UnityEngine.Vector3::upVector
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___upVector_7;
	// UnityEngine.Vector3 UnityEngine.Vector3::downVector
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___downVector_8;
	// UnityEngine.Vector3 UnityEngine.Vector3::leftVector
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___leftVector_9;
	// UnityEngine.Vector3 UnityEngine.Vector3::rightVector
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___rightVector_10;
	// UnityEngine.Vector3 UnityEngine.Vector3::forwardVector
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___forwardVector_11;
	// UnityEngine.Vector3 UnityEngine.Vector3::backVector
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___backVector_12;
	// UnityEngine.Vector3 UnityEngine.Vector3::positiveInfinityVector
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___positiveInfinityVector_13;
	// UnityEngine.Vector3 UnityEngine.Vector3::negativeInfinityVector
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___negativeInfinityVector_14;

public:
	inline static int32_t get_offset_of_zeroVector_5() { return static_cast<int32_t>(offsetof(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_StaticFields, ___zeroVector_5)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_zeroVector_5() const { return ___zeroVector_5; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_zeroVector_5() { return &___zeroVector_5; }
	inline void set_zeroVector_5(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___zeroVector_5 = value;
	}

	inline static int32_t get_offset_of_oneVector_6() { return static_cast<int32_t>(offsetof(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_StaticFields, ___oneVector_6)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_oneVector_6() const { return ___oneVector_6; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_oneVector_6() { return &___oneVector_6; }
	inline void set_oneVector_6(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___oneVector_6 = value;
	}

	inline static int32_t get_offset_of_upVector_7() { return static_cast<int32_t>(offsetof(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_StaticFields, ___upVector_7)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_upVector_7() const { return ___upVector_7; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_upVector_7() { return &___upVector_7; }
	inline void set_upVector_7(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___upVector_7 = value;
	}

	inline static int32_t get_offset_of_downVector_8() { return static_cast<int32_t>(offsetof(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_StaticFields, ___downVector_8)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_downVector_8() const { return ___downVector_8; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_downVector_8() { return &___downVector_8; }
	inline void set_downVector_8(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___downVector_8 = value;
	}

	inline static int32_t get_offset_of_leftVector_9() { return static_cast<int32_t>(offsetof(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_StaticFields, ___leftVector_9)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_leftVector_9() const { return ___leftVector_9; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_leftVector_9() { return &___leftVector_9; }
	inline void set_leftVector_9(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___leftVector_9 = value;
	}

	inline static int32_t get_offset_of_rightVector_10() { return static_cast<int32_t>(offsetof(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_StaticFields, ___rightVector_10)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_rightVector_10() const { return ___rightVector_10; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_rightVector_10() { return &___rightVector_10; }
	inline void set_rightVector_10(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___rightVector_10 = value;
	}

	inline static int32_t get_offset_of_forwardVector_11() { return static_cast<int32_t>(offsetof(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_StaticFields, ___forwardVector_11)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_forwardVector_11() const { return ___forwardVector_11; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_forwardVector_11() { return &___forwardVector_11; }
	inline void set_forwardVector_11(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___forwardVector_11 = value;
	}

	inline static int32_t get_offset_of_backVector_12() { return static_cast<int32_t>(offsetof(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_StaticFields, ___backVector_12)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_backVector_12() const { return ___backVector_12; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_backVector_12() { return &___backVector_12; }
	inline void set_backVector_12(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___backVector_12 = value;
	}

	inline static int32_t get_offset_of_positiveInfinityVector_13() { return static_cast<int32_t>(offsetof(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_StaticFields, ___positiveInfinityVector_13)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_positiveInfinityVector_13() const { return ___positiveInfinityVector_13; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_positiveInfinityVector_13() { return &___positiveInfinityVector_13; }
	inline void set_positiveInfinityVector_13(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___positiveInfinityVector_13 = value;
	}

	inline static int32_t get_offset_of_negativeInfinityVector_14() { return static_cast<int32_t>(offsetof(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_StaticFields, ___negativeInfinityVector_14)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_negativeInfinityVector_14() const { return ___negativeInfinityVector_14; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_negativeInfinityVector_14() { return &___negativeInfinityVector_14; }
	inline void set_negativeInfinityVector_14(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___negativeInfinityVector_14 = value;
	}
};


// Valve.VR.HmdMatrix34_t
struct  HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669 
{
public:
	// System.Single Valve.VR.HmdMatrix34_t::m0
	float ___m0_0;
	// System.Single Valve.VR.HmdMatrix34_t::m1
	float ___m1_1;
	// System.Single Valve.VR.HmdMatrix34_t::m2
	float ___m2_2;
	// System.Single Valve.VR.HmdMatrix34_t::m3
	float ___m3_3;
	// System.Single Valve.VR.HmdMatrix34_t::m4
	float ___m4_4;
	// System.Single Valve.VR.HmdMatrix34_t::m5
	float ___m5_5;
	// System.Single Valve.VR.HmdMatrix34_t::m6
	float ___m6_6;
	// System.Single Valve.VR.HmdMatrix34_t::m7
	float ___m7_7;
	// System.Single Valve.VR.HmdMatrix34_t::m8
	float ___m8_8;
	// System.Single Valve.VR.HmdMatrix34_t::m9
	float ___m9_9;
	// System.Single Valve.VR.HmdMatrix34_t::m10
	float ___m10_10;
	// System.Single Valve.VR.HmdMatrix34_t::m11
	float ___m11_11;

public:
	inline static int32_t get_offset_of_m0_0() { return static_cast<int32_t>(offsetof(HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669, ___m0_0)); }
	inline float get_m0_0() const { return ___m0_0; }
	inline float* get_address_of_m0_0() { return &___m0_0; }
	inline void set_m0_0(float value)
	{
		___m0_0 = value;
	}

	inline static int32_t get_offset_of_m1_1() { return static_cast<int32_t>(offsetof(HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669, ___m1_1)); }
	inline float get_m1_1() const { return ___m1_1; }
	inline float* get_address_of_m1_1() { return &___m1_1; }
	inline void set_m1_1(float value)
	{
		___m1_1 = value;
	}

	inline static int32_t get_offset_of_m2_2() { return static_cast<int32_t>(offsetof(HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669, ___m2_2)); }
	inline float get_m2_2() const { return ___m2_2; }
	inline float* get_address_of_m2_2() { return &___m2_2; }
	inline void set_m2_2(float value)
	{
		___m2_2 = value;
	}

	inline static int32_t get_offset_of_m3_3() { return static_cast<int32_t>(offsetof(HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669, ___m3_3)); }
	inline float get_m3_3() const { return ___m3_3; }
	inline float* get_address_of_m3_3() { return &___m3_3; }
	inline void set_m3_3(float value)
	{
		___m3_3 = value;
	}

	inline static int32_t get_offset_of_m4_4() { return static_cast<int32_t>(offsetof(HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669, ___m4_4)); }
	inline float get_m4_4() const { return ___m4_4; }
	inline float* get_address_of_m4_4() { return &___m4_4; }
	inline void set_m4_4(float value)
	{
		___m4_4 = value;
	}

	inline static int32_t get_offset_of_m5_5() { return static_cast<int32_t>(offsetof(HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669, ___m5_5)); }
	inline float get_m5_5() const { return ___m5_5; }
	inline float* get_address_of_m5_5() { return &___m5_5; }
	inline void set_m5_5(float value)
	{
		___m5_5 = value;
	}

	inline static int32_t get_offset_of_m6_6() { return static_cast<int32_t>(offsetof(HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669, ___m6_6)); }
	inline float get_m6_6() const { return ___m6_6; }
	inline float* get_address_of_m6_6() { return &___m6_6; }
	inline void set_m6_6(float value)
	{
		___m6_6 = value;
	}

	inline static int32_t get_offset_of_m7_7() { return static_cast<int32_t>(offsetof(HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669, ___m7_7)); }
	inline float get_m7_7() const { return ___m7_7; }
	inline float* get_address_of_m7_7() { return &___m7_7; }
	inline void set_m7_7(float value)
	{
		___m7_7 = value;
	}

	inline static int32_t get_offset_of_m8_8() { return static_cast<int32_t>(offsetof(HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669, ___m8_8)); }
	inline float get_m8_8() const { return ___m8_8; }
	inline float* get_address_of_m8_8() { return &___m8_8; }
	inline void set_m8_8(float value)
	{
		___m8_8 = value;
	}

	inline static int32_t get_offset_of_m9_9() { return static_cast<int32_t>(offsetof(HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669, ___m9_9)); }
	inline float get_m9_9() const { return ___m9_9; }
	inline float* get_address_of_m9_9() { return &___m9_9; }
	inline void set_m9_9(float value)
	{
		___m9_9 = value;
	}

	inline static int32_t get_offset_of_m10_10() { return static_cast<int32_t>(offsetof(HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669, ___m10_10)); }
	inline float get_m10_10() const { return ___m10_10; }
	inline float* get_address_of_m10_10() { return &___m10_10; }
	inline void set_m10_10(float value)
	{
		___m10_10 = value;
	}

	inline static int32_t get_offset_of_m11_11() { return static_cast<int32_t>(offsetof(HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669, ___m11_11)); }
	inline float get_m11_11() const { return ___m11_11; }
	inline float* get_address_of_m11_11() { return &___m11_11; }
	inline void set_m11_11(float value)
	{
		___m11_11 = value;
	}
};


// Valve.VR.HmdVector3_t
struct  HmdVector3_t_t62AE508B69C04959DCD5633927536E28C2E6113A 
{
public:
	// System.Single Valve.VR.HmdVector3_t::v0
	float ___v0_0;
	// System.Single Valve.VR.HmdVector3_t::v1
	float ___v1_1;
	// System.Single Valve.VR.HmdVector3_t::v2
	float ___v2_2;

public:
	inline static int32_t get_offset_of_v0_0() { return static_cast<int32_t>(offsetof(HmdVector3_t_t62AE508B69C04959DCD5633927536E28C2E6113A, ___v0_0)); }
	inline float get_v0_0() const { return ___v0_0; }
	inline float* get_address_of_v0_0() { return &___v0_0; }
	inline void set_v0_0(float value)
	{
		___v0_0 = value;
	}

	inline static int32_t get_offset_of_v1_1() { return static_cast<int32_t>(offsetof(HmdVector3_t_t62AE508B69C04959DCD5633927536E28C2E6113A, ___v1_1)); }
	inline float get_v1_1() const { return ___v1_1; }
	inline float* get_address_of_v1_1() { return &___v1_1; }
	inline void set_v1_1(float value)
	{
		___v1_1 = value;
	}

	inline static int32_t get_offset_of_v2_2() { return static_cast<int32_t>(offsetof(HmdVector3_t_t62AE508B69C04959DCD5633927536E28C2E6113A, ___v2_2)); }
	inline float get_v2_2() const { return ___v2_2; }
	inline float* get_address_of_v2_2() { return &___v2_2; }
	inline void set_v2_2(float value)
	{
		___v2_2 = value;
	}
};


// Valve.VR.IVRInput
struct  IVRInput_t5FB3A8D55A037DD0328F7BCEA3856E841BC4BC78 
{
public:
	// Valve.VR.IVRInput__SetActionManifestPath Valve.VR.IVRInput::SetActionManifestPath
	_SetActionManifestPath_tCC8157D33535562FA6C3DDCA5CBC0F82B51306FE * ___SetActionManifestPath_0;
	// Valve.VR.IVRInput__GetActionSetHandle Valve.VR.IVRInput::GetActionSetHandle
	_GetActionSetHandle_tDCCC10117A32D6F523EED20F9C35C8F104A6DE56 * ___GetActionSetHandle_1;
	// Valve.VR.IVRInput__GetActionHandle Valve.VR.IVRInput::GetActionHandle
	_GetActionHandle_tAA6FC70C31E52EB9899414C5DF8666A660D73988 * ___GetActionHandle_2;
	// Valve.VR.IVRInput__GetInputSourceHandle Valve.VR.IVRInput::GetInputSourceHandle
	_GetInputSourceHandle_tAB5E42F59BE5F64E4D025C405AD1DF589BE798EF * ___GetInputSourceHandle_3;
	// Valve.VR.IVRInput__UpdateActionState Valve.VR.IVRInput::UpdateActionState
	_UpdateActionState_t34A07E451D658BB88598E974A3A804775EE414C5 * ___UpdateActionState_4;
	// Valve.VR.IVRInput__GetDigitalActionData Valve.VR.IVRInput::GetDigitalActionData
	_GetDigitalActionData_tF308BA2153B8638CAD78903A8E4A6FF63A0AE5E8 * ___GetDigitalActionData_5;
	// Valve.VR.IVRInput__GetAnalogActionData Valve.VR.IVRInput::GetAnalogActionData
	_GetAnalogActionData_t6B38FFFF0181415420E9380BDCFC944C9D73D6CB * ___GetAnalogActionData_6;
	// Valve.VR.IVRInput__GetPoseActionDataRelativeToNow Valve.VR.IVRInput::GetPoseActionDataRelativeToNow
	_GetPoseActionDataRelativeToNow_t8ED7A8761F721F5713D809DB6B79BFDB91E01BB8 * ___GetPoseActionDataRelativeToNow_7;
	// Valve.VR.IVRInput__GetPoseActionDataForNextFrame Valve.VR.IVRInput::GetPoseActionDataForNextFrame
	_GetPoseActionDataForNextFrame_tAA10FE3259883E133F8F097728EED8DE994C157E * ___GetPoseActionDataForNextFrame_8;
	// Valve.VR.IVRInput__GetSkeletalActionData Valve.VR.IVRInput::GetSkeletalActionData
	_GetSkeletalActionData_t5F353A7DB921C384ACD71B83F4E7F83B8F957A1A * ___GetSkeletalActionData_9;
	// Valve.VR.IVRInput__GetDominantHand Valve.VR.IVRInput::GetDominantHand
	_GetDominantHand_tBA54323C6ADA02D432F6FB26A3AE1007002F5029 * ___GetDominantHand_10;
	// Valve.VR.IVRInput__SetDominantHand Valve.VR.IVRInput::SetDominantHand
	_SetDominantHand_t781C37553971079E806C986AF0571A5394BB608D * ___SetDominantHand_11;
	// Valve.VR.IVRInput__GetBoneCount Valve.VR.IVRInput::GetBoneCount
	_GetBoneCount_t6C3C3EFD4AAFFC3A51B471217CA56C6CDB85A8A1 * ___GetBoneCount_12;
	// Valve.VR.IVRInput__GetBoneHierarchy Valve.VR.IVRInput::GetBoneHierarchy
	_GetBoneHierarchy_t167DE2FE59F4348442E70AD40E9908D3396FE876 * ___GetBoneHierarchy_13;
	// Valve.VR.IVRInput__GetBoneName Valve.VR.IVRInput::GetBoneName
	_GetBoneName_t802A405B0C688F34E650358ED94EB5E83003B4FF * ___GetBoneName_14;
	// Valve.VR.IVRInput__GetSkeletalReferenceTransforms Valve.VR.IVRInput::GetSkeletalReferenceTransforms
	_GetSkeletalReferenceTransforms_tB13CA87584C074E43514FD286E673444A770C7F5 * ___GetSkeletalReferenceTransforms_15;
	// Valve.VR.IVRInput__GetSkeletalTrackingLevel Valve.VR.IVRInput::GetSkeletalTrackingLevel
	_GetSkeletalTrackingLevel_t20487D8EE1F4E97466D3362B812896DAC707DE93 * ___GetSkeletalTrackingLevel_16;
	// Valve.VR.IVRInput__GetSkeletalBoneData Valve.VR.IVRInput::GetSkeletalBoneData
	_GetSkeletalBoneData_tB6C26FFFE2DC1A4EBF7538C8B822BCF44FDE950A * ___GetSkeletalBoneData_17;
	// Valve.VR.IVRInput__GetSkeletalSummaryData Valve.VR.IVRInput::GetSkeletalSummaryData
	_GetSkeletalSummaryData_tDBD7B97D7AEB5C6023AB7500B7EFB7B46FC00822 * ___GetSkeletalSummaryData_18;
	// Valve.VR.IVRInput__GetSkeletalBoneDataCompressed Valve.VR.IVRInput::GetSkeletalBoneDataCompressed
	_GetSkeletalBoneDataCompressed_tE546DCB602D70AFE33D3988CA648F582BF4D795B * ___GetSkeletalBoneDataCompressed_19;
	// Valve.VR.IVRInput__DecompressSkeletalBoneData Valve.VR.IVRInput::DecompressSkeletalBoneData
	_DecompressSkeletalBoneData_t8A92BDC21C8090D2E2952E48A5925D4B8DD48277 * ___DecompressSkeletalBoneData_20;
	// Valve.VR.IVRInput__TriggerHapticVibrationAction Valve.VR.IVRInput::TriggerHapticVibrationAction
	_TriggerHapticVibrationAction_tD6966DC222C78E33A391603FA738554C337292C8 * ___TriggerHapticVibrationAction_21;
	// Valve.VR.IVRInput__GetActionOrigins Valve.VR.IVRInput::GetActionOrigins
	_GetActionOrigins_tE0D9FE805034861066738B53CD6ED5D774553C69 * ___GetActionOrigins_22;
	// Valve.VR.IVRInput__GetOriginLocalizedName Valve.VR.IVRInput::GetOriginLocalizedName
	_GetOriginLocalizedName_t3FDAF7E14C966B8922289564E4EDFD9FD2708E4F * ___GetOriginLocalizedName_23;
	// Valve.VR.IVRInput__GetOriginTrackedDeviceInfo Valve.VR.IVRInput::GetOriginTrackedDeviceInfo
	_GetOriginTrackedDeviceInfo_tCCCCE9FC46CC32CD3CEE514462A4D2AAB295BA4B * ___GetOriginTrackedDeviceInfo_24;
	// Valve.VR.IVRInput__GetActionBindingInfo Valve.VR.IVRInput::GetActionBindingInfo
	_GetActionBindingInfo_t888BA9460789EBC395139AB0DBBBA3089B2E0FC5 * ___GetActionBindingInfo_25;
	// Valve.VR.IVRInput__ShowActionOrigins Valve.VR.IVRInput::ShowActionOrigins
	_ShowActionOrigins_t2D44C15D7A1A68B48BD8A5718303C019CB82DE71 * ___ShowActionOrigins_26;
	// Valve.VR.IVRInput__ShowBindingsForActionSet Valve.VR.IVRInput::ShowBindingsForActionSet
	_ShowBindingsForActionSet_tE794CCA21EF1D46F19895A28146A79FA5B41BB2A * ___ShowBindingsForActionSet_27;
	// Valve.VR.IVRInput__GetComponentStateForBinding Valve.VR.IVRInput::GetComponentStateForBinding
	_GetComponentStateForBinding_t528D11F913578272C9159336F2B9473530BE99AA * ___GetComponentStateForBinding_28;
	// Valve.VR.IVRInput__IsUsingLegacyInput Valve.VR.IVRInput::IsUsingLegacyInput
	_IsUsingLegacyInput_t47530FACE216CEDA2B1629F03D1FE805B67664A7 * ___IsUsingLegacyInput_29;
	// Valve.VR.IVRInput__OpenBindingUI Valve.VR.IVRInput::OpenBindingUI
	_OpenBindingUI_t04252A1EDE97A953F55220A73E647A8DD9EA831F * ___OpenBindingUI_30;
	// Valve.VR.IVRInput__GetBindingVariant Valve.VR.IVRInput::GetBindingVariant
	_GetBindingVariant_t54394654ADF0C4DFE91EC183B932B47AD3AD9F96 * ___GetBindingVariant_31;

public:
	inline static int32_t get_offset_of_SetActionManifestPath_0() { return static_cast<int32_t>(offsetof(IVRInput_t5FB3A8D55A037DD0328F7BCEA3856E841BC4BC78, ___SetActionManifestPath_0)); }
	inline _SetActionManifestPath_tCC8157D33535562FA6C3DDCA5CBC0F82B51306FE * get_SetActionManifestPath_0() const { return ___SetActionManifestPath_0; }
	inline _SetActionManifestPath_tCC8157D33535562FA6C3DDCA5CBC0F82B51306FE ** get_address_of_SetActionManifestPath_0() { return &___SetActionManifestPath_0; }
	inline void set_SetActionManifestPath_0(_SetActionManifestPath_tCC8157D33535562FA6C3DDCA5CBC0F82B51306FE * value)
	{
		___SetActionManifestPath_0 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___SetActionManifestPath_0), (void*)value);
	}

	inline static int32_t get_offset_of_GetActionSetHandle_1() { return static_cast<int32_t>(offsetof(IVRInput_t5FB3A8D55A037DD0328F7BCEA3856E841BC4BC78, ___GetActionSetHandle_1)); }
	inline _GetActionSetHandle_tDCCC10117A32D6F523EED20F9C35C8F104A6DE56 * get_GetActionSetHandle_1() const { return ___GetActionSetHandle_1; }
	inline _GetActionSetHandle_tDCCC10117A32D6F523EED20F9C35C8F104A6DE56 ** get_address_of_GetActionSetHandle_1() { return &___GetActionSetHandle_1; }
	inline void set_GetActionSetHandle_1(_GetActionSetHandle_tDCCC10117A32D6F523EED20F9C35C8F104A6DE56 * value)
	{
		___GetActionSetHandle_1 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___GetActionSetHandle_1), (void*)value);
	}

	inline static int32_t get_offset_of_GetActionHandle_2() { return static_cast<int32_t>(offsetof(IVRInput_t5FB3A8D55A037DD0328F7BCEA3856E841BC4BC78, ___GetActionHandle_2)); }
	inline _GetActionHandle_tAA6FC70C31E52EB9899414C5DF8666A660D73988 * get_GetActionHandle_2() const { return ___GetActionHandle_2; }
	inline _GetActionHandle_tAA6FC70C31E52EB9899414C5DF8666A660D73988 ** get_address_of_GetActionHandle_2() { return &___GetActionHandle_2; }
	inline void set_GetActionHandle_2(_GetActionHandle_tAA6FC70C31E52EB9899414C5DF8666A660D73988 * value)
	{
		___GetActionHandle_2 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___GetActionHandle_2), (void*)value);
	}

	inline static int32_t get_offset_of_GetInputSourceHandle_3() { return static_cast<int32_t>(offsetof(IVRInput_t5FB3A8D55A037DD0328F7BCEA3856E841BC4BC78, ___GetInputSourceHandle_3)); }
	inline _GetInputSourceHandle_tAB5E42F59BE5F64E4D025C405AD1DF589BE798EF * get_GetInputSourceHandle_3() const { return ___GetInputSourceHandle_3; }
	inline _GetInputSourceHandle_tAB5E42F59BE5F64E4D025C405AD1DF589BE798EF ** get_address_of_GetInputSourceHandle_3() { return &___GetInputSourceHandle_3; }
	inline void set_GetInputSourceHandle_3(_GetInputSourceHandle_tAB5E42F59BE5F64E4D025C405AD1DF589BE798EF * value)
	{
		___GetInputSourceHandle_3 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___GetInputSourceHandle_3), (void*)value);
	}

	inline static int32_t get_offset_of_UpdateActionState_4() { return static_cast<int32_t>(offsetof(IVRInput_t5FB3A8D55A037DD0328F7BCEA3856E841BC4BC78, ___UpdateActionState_4)); }
	inline _UpdateActionState_t34A07E451D658BB88598E974A3A804775EE414C5 * get_UpdateActionState_4() const { return ___UpdateActionState_4; }
	inline _UpdateActionState_t34A07E451D658BB88598E974A3A804775EE414C5 ** get_address_of_UpdateActionState_4() { return &___UpdateActionState_4; }
	inline void set_UpdateActionState_4(_UpdateActionState_t34A07E451D658BB88598E974A3A804775EE414C5 * value)
	{
		___UpdateActionState_4 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___UpdateActionState_4), (void*)value);
	}

	inline static int32_t get_offset_of_GetDigitalActionData_5() { return static_cast<int32_t>(offsetof(IVRInput_t5FB3A8D55A037DD0328F7BCEA3856E841BC4BC78, ___GetDigitalActionData_5)); }
	inline _GetDigitalActionData_tF308BA2153B8638CAD78903A8E4A6FF63A0AE5E8 * get_GetDigitalActionData_5() const { return ___GetDigitalActionData_5; }
	inline _GetDigitalActionData_tF308BA2153B8638CAD78903A8E4A6FF63A0AE5E8 ** get_address_of_GetDigitalActionData_5() { return &___GetDigitalActionData_5; }
	inline void set_GetDigitalActionData_5(_GetDigitalActionData_tF308BA2153B8638CAD78903A8E4A6FF63A0AE5E8 * value)
	{
		___GetDigitalActionData_5 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___GetDigitalActionData_5), (void*)value);
	}

	inline static int32_t get_offset_of_GetAnalogActionData_6() { return static_cast<int32_t>(offsetof(IVRInput_t5FB3A8D55A037DD0328F7BCEA3856E841BC4BC78, ___GetAnalogActionData_6)); }
	inline _GetAnalogActionData_t6B38FFFF0181415420E9380BDCFC944C9D73D6CB * get_GetAnalogActionData_6() const { return ___GetAnalogActionData_6; }
	inline _GetAnalogActionData_t6B38FFFF0181415420E9380BDCFC944C9D73D6CB ** get_address_of_GetAnalogActionData_6() { return &___GetAnalogActionData_6; }
	inline void set_GetAnalogActionData_6(_GetAnalogActionData_t6B38FFFF0181415420E9380BDCFC944C9D73D6CB * value)
	{
		___GetAnalogActionData_6 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___GetAnalogActionData_6), (void*)value);
	}

	inline static int32_t get_offset_of_GetPoseActionDataRelativeToNow_7() { return static_cast<int32_t>(offsetof(IVRInput_t5FB3A8D55A037DD0328F7BCEA3856E841BC4BC78, ___GetPoseActionDataRelativeToNow_7)); }
	inline _GetPoseActionDataRelativeToNow_t8ED7A8761F721F5713D809DB6B79BFDB91E01BB8 * get_GetPoseActionDataRelativeToNow_7() const { return ___GetPoseActionDataRelativeToNow_7; }
	inline _GetPoseActionDataRelativeToNow_t8ED7A8761F721F5713D809DB6B79BFDB91E01BB8 ** get_address_of_GetPoseActionDataRelativeToNow_7() { return &___GetPoseActionDataRelativeToNow_7; }
	inline void set_GetPoseActionDataRelativeToNow_7(_GetPoseActionDataRelativeToNow_t8ED7A8761F721F5713D809DB6B79BFDB91E01BB8 * value)
	{
		___GetPoseActionDataRelativeToNow_7 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___GetPoseActionDataRelativeToNow_7), (void*)value);
	}

	inline static int32_t get_offset_of_GetPoseActionDataForNextFrame_8() { return static_cast<int32_t>(offsetof(IVRInput_t5FB3A8D55A037DD0328F7BCEA3856E841BC4BC78, ___GetPoseActionDataForNextFrame_8)); }
	inline _GetPoseActionDataForNextFrame_tAA10FE3259883E133F8F097728EED8DE994C157E * get_GetPoseActionDataForNextFrame_8() const { return ___GetPoseActionDataForNextFrame_8; }
	inline _GetPoseActionDataForNextFrame_tAA10FE3259883E133F8F097728EED8DE994C157E ** get_address_of_GetPoseActionDataForNextFrame_8() { return &___GetPoseActionDataForNextFrame_8; }
	inline void set_GetPoseActionDataForNextFrame_8(_GetPoseActionDataForNextFrame_tAA10FE3259883E133F8F097728EED8DE994C157E * value)
	{
		___GetPoseActionDataForNextFrame_8 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___GetPoseActionDataForNextFrame_8), (void*)value);
	}

	inline static int32_t get_offset_of_GetSkeletalActionData_9() { return static_cast<int32_t>(offsetof(IVRInput_t5FB3A8D55A037DD0328F7BCEA3856E841BC4BC78, ___GetSkeletalActionData_9)); }
	inline _GetSkeletalActionData_t5F353A7DB921C384ACD71B83F4E7F83B8F957A1A * get_GetSkeletalActionData_9() const { return ___GetSkeletalActionData_9; }
	inline _GetSkeletalActionData_t5F353A7DB921C384ACD71B83F4E7F83B8F957A1A ** get_address_of_GetSkeletalActionData_9() { return &___GetSkeletalActionData_9; }
	inline void set_GetSkeletalActionData_9(_GetSkeletalActionData_t5F353A7DB921C384ACD71B83F4E7F83B8F957A1A * value)
	{
		___GetSkeletalActionData_9 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___GetSkeletalActionData_9), (void*)value);
	}

	inline static int32_t get_offset_of_GetDominantHand_10() { return static_cast<int32_t>(offsetof(IVRInput_t5FB3A8D55A037DD0328F7BCEA3856E841BC4BC78, ___GetDominantHand_10)); }
	inline _GetDominantHand_tBA54323C6ADA02D432F6FB26A3AE1007002F5029 * get_GetDominantHand_10() const { return ___GetDominantHand_10; }
	inline _GetDominantHand_tBA54323C6ADA02D432F6FB26A3AE1007002F5029 ** get_address_of_GetDominantHand_10() { return &___GetDominantHand_10; }
	inline void set_GetDominantHand_10(_GetDominantHand_tBA54323C6ADA02D432F6FB26A3AE1007002F5029 * value)
	{
		___GetDominantHand_10 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___GetDominantHand_10), (void*)value);
	}

	inline static int32_t get_offset_of_SetDominantHand_11() { return static_cast<int32_t>(offsetof(IVRInput_t5FB3A8D55A037DD0328F7BCEA3856E841BC4BC78, ___SetDominantHand_11)); }
	inline _SetDominantHand_t781C37553971079E806C986AF0571A5394BB608D * get_SetDominantHand_11() const { return ___SetDominantHand_11; }
	inline _SetDominantHand_t781C37553971079E806C986AF0571A5394BB608D ** get_address_of_SetDominantHand_11() { return &___SetDominantHand_11; }
	inline void set_SetDominantHand_11(_SetDominantHand_t781C37553971079E806C986AF0571A5394BB608D * value)
	{
		___SetDominantHand_11 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___SetDominantHand_11), (void*)value);
	}

	inline static int32_t get_offset_of_GetBoneCount_12() { return static_cast<int32_t>(offsetof(IVRInput_t5FB3A8D55A037DD0328F7BCEA3856E841BC4BC78, ___GetBoneCount_12)); }
	inline _GetBoneCount_t6C3C3EFD4AAFFC3A51B471217CA56C6CDB85A8A1 * get_GetBoneCount_12() const { return ___GetBoneCount_12; }
	inline _GetBoneCount_t6C3C3EFD4AAFFC3A51B471217CA56C6CDB85A8A1 ** get_address_of_GetBoneCount_12() { return &___GetBoneCount_12; }
	inline void set_GetBoneCount_12(_GetBoneCount_t6C3C3EFD4AAFFC3A51B471217CA56C6CDB85A8A1 * value)
	{
		___GetBoneCount_12 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___GetBoneCount_12), (void*)value);
	}

	inline static int32_t get_offset_of_GetBoneHierarchy_13() { return static_cast<int32_t>(offsetof(IVRInput_t5FB3A8D55A037DD0328F7BCEA3856E841BC4BC78, ___GetBoneHierarchy_13)); }
	inline _GetBoneHierarchy_t167DE2FE59F4348442E70AD40E9908D3396FE876 * get_GetBoneHierarchy_13() const { return ___GetBoneHierarchy_13; }
	inline _GetBoneHierarchy_t167DE2FE59F4348442E70AD40E9908D3396FE876 ** get_address_of_GetBoneHierarchy_13() { return &___GetBoneHierarchy_13; }
	inline void set_GetBoneHierarchy_13(_GetBoneHierarchy_t167DE2FE59F4348442E70AD40E9908D3396FE876 * value)
	{
		___GetBoneHierarchy_13 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___GetBoneHierarchy_13), (void*)value);
	}

	inline static int32_t get_offset_of_GetBoneName_14() { return static_cast<int32_t>(offsetof(IVRInput_t5FB3A8D55A037DD0328F7BCEA3856E841BC4BC78, ___GetBoneName_14)); }
	inline _GetBoneName_t802A405B0C688F34E650358ED94EB5E83003B4FF * get_GetBoneName_14() const { return ___GetBoneName_14; }
	inline _GetBoneName_t802A405B0C688F34E650358ED94EB5E83003B4FF ** get_address_of_GetBoneName_14() { return &___GetBoneName_14; }
	inline void set_GetBoneName_14(_GetBoneName_t802A405B0C688F34E650358ED94EB5E83003B4FF * value)
	{
		___GetBoneName_14 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___GetBoneName_14), (void*)value);
	}

	inline static int32_t get_offset_of_GetSkeletalReferenceTransforms_15() { return static_cast<int32_t>(offsetof(IVRInput_t5FB3A8D55A037DD0328F7BCEA3856E841BC4BC78, ___GetSkeletalReferenceTransforms_15)); }
	inline _GetSkeletalReferenceTransforms_tB13CA87584C074E43514FD286E673444A770C7F5 * get_GetSkeletalReferenceTransforms_15() const { return ___GetSkeletalReferenceTransforms_15; }
	inline _GetSkeletalReferenceTransforms_tB13CA87584C074E43514FD286E673444A770C7F5 ** get_address_of_GetSkeletalReferenceTransforms_15() { return &___GetSkeletalReferenceTransforms_15; }
	inline void set_GetSkeletalReferenceTransforms_15(_GetSkeletalReferenceTransforms_tB13CA87584C074E43514FD286E673444A770C7F5 * value)
	{
		___GetSkeletalReferenceTransforms_15 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___GetSkeletalReferenceTransforms_15), (void*)value);
	}

	inline static int32_t get_offset_of_GetSkeletalTrackingLevel_16() { return static_cast<int32_t>(offsetof(IVRInput_t5FB3A8D55A037DD0328F7BCEA3856E841BC4BC78, ___GetSkeletalTrackingLevel_16)); }
	inline _GetSkeletalTrackingLevel_t20487D8EE1F4E97466D3362B812896DAC707DE93 * get_GetSkeletalTrackingLevel_16() const { return ___GetSkeletalTrackingLevel_16; }
	inline _GetSkeletalTrackingLevel_t20487D8EE1F4E97466D3362B812896DAC707DE93 ** get_address_of_GetSkeletalTrackingLevel_16() { return &___GetSkeletalTrackingLevel_16; }
	inline void set_GetSkeletalTrackingLevel_16(_GetSkeletalTrackingLevel_t20487D8EE1F4E97466D3362B812896DAC707DE93 * value)
	{
		___GetSkeletalTrackingLevel_16 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___GetSkeletalTrackingLevel_16), (void*)value);
	}

	inline static int32_t get_offset_of_GetSkeletalBoneData_17() { return static_cast<int32_t>(offsetof(IVRInput_t5FB3A8D55A037DD0328F7BCEA3856E841BC4BC78, ___GetSkeletalBoneData_17)); }
	inline _GetSkeletalBoneData_tB6C26FFFE2DC1A4EBF7538C8B822BCF44FDE950A * get_GetSkeletalBoneData_17() const { return ___GetSkeletalBoneData_17; }
	inline _GetSkeletalBoneData_tB6C26FFFE2DC1A4EBF7538C8B822BCF44FDE950A ** get_address_of_GetSkeletalBoneData_17() { return &___GetSkeletalBoneData_17; }
	inline void set_GetSkeletalBoneData_17(_GetSkeletalBoneData_tB6C26FFFE2DC1A4EBF7538C8B822BCF44FDE950A * value)
	{
		___GetSkeletalBoneData_17 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___GetSkeletalBoneData_17), (void*)value);
	}

	inline static int32_t get_offset_of_GetSkeletalSummaryData_18() { return static_cast<int32_t>(offsetof(IVRInput_t5FB3A8D55A037DD0328F7BCEA3856E841BC4BC78, ___GetSkeletalSummaryData_18)); }
	inline _GetSkeletalSummaryData_tDBD7B97D7AEB5C6023AB7500B7EFB7B46FC00822 * get_GetSkeletalSummaryData_18() const { return ___GetSkeletalSummaryData_18; }
	inline _GetSkeletalSummaryData_tDBD7B97D7AEB5C6023AB7500B7EFB7B46FC00822 ** get_address_of_GetSkeletalSummaryData_18() { return &___GetSkeletalSummaryData_18; }
	inline void set_GetSkeletalSummaryData_18(_GetSkeletalSummaryData_tDBD7B97D7AEB5C6023AB7500B7EFB7B46FC00822 * value)
	{
		___GetSkeletalSummaryData_18 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___GetSkeletalSummaryData_18), (void*)value);
	}

	inline static int32_t get_offset_of_GetSkeletalBoneDataCompressed_19() { return static_cast<int32_t>(offsetof(IVRInput_t5FB3A8D55A037DD0328F7BCEA3856E841BC4BC78, ___GetSkeletalBoneDataCompressed_19)); }
	inline _GetSkeletalBoneDataCompressed_tE546DCB602D70AFE33D3988CA648F582BF4D795B * get_GetSkeletalBoneDataCompressed_19() const { return ___GetSkeletalBoneDataCompressed_19; }
	inline _GetSkeletalBoneDataCompressed_tE546DCB602D70AFE33D3988CA648F582BF4D795B ** get_address_of_GetSkeletalBoneDataCompressed_19() { return &___GetSkeletalBoneDataCompressed_19; }
	inline void set_GetSkeletalBoneDataCompressed_19(_GetSkeletalBoneDataCompressed_tE546DCB602D70AFE33D3988CA648F582BF4D795B * value)
	{
		___GetSkeletalBoneDataCompressed_19 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___GetSkeletalBoneDataCompressed_19), (void*)value);
	}

	inline static int32_t get_offset_of_DecompressSkeletalBoneData_20() { return static_cast<int32_t>(offsetof(IVRInput_t5FB3A8D55A037DD0328F7BCEA3856E841BC4BC78, ___DecompressSkeletalBoneData_20)); }
	inline _DecompressSkeletalBoneData_t8A92BDC21C8090D2E2952E48A5925D4B8DD48277 * get_DecompressSkeletalBoneData_20() const { return ___DecompressSkeletalBoneData_20; }
	inline _DecompressSkeletalBoneData_t8A92BDC21C8090D2E2952E48A5925D4B8DD48277 ** get_address_of_DecompressSkeletalBoneData_20() { return &___DecompressSkeletalBoneData_20; }
	inline void set_DecompressSkeletalBoneData_20(_DecompressSkeletalBoneData_t8A92BDC21C8090D2E2952E48A5925D4B8DD48277 * value)
	{
		___DecompressSkeletalBoneData_20 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___DecompressSkeletalBoneData_20), (void*)value);
	}

	inline static int32_t get_offset_of_TriggerHapticVibrationAction_21() { return static_cast<int32_t>(offsetof(IVRInput_t5FB3A8D55A037DD0328F7BCEA3856E841BC4BC78, ___TriggerHapticVibrationAction_21)); }
	inline _TriggerHapticVibrationAction_tD6966DC222C78E33A391603FA738554C337292C8 * get_TriggerHapticVibrationAction_21() const { return ___TriggerHapticVibrationAction_21; }
	inline _TriggerHapticVibrationAction_tD6966DC222C78E33A391603FA738554C337292C8 ** get_address_of_TriggerHapticVibrationAction_21() { return &___TriggerHapticVibrationAction_21; }
	inline void set_TriggerHapticVibrationAction_21(_TriggerHapticVibrationAction_tD6966DC222C78E33A391603FA738554C337292C8 * value)
	{
		___TriggerHapticVibrationAction_21 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___TriggerHapticVibrationAction_21), (void*)value);
	}

	inline static int32_t get_offset_of_GetActionOrigins_22() { return static_cast<int32_t>(offsetof(IVRInput_t5FB3A8D55A037DD0328F7BCEA3856E841BC4BC78, ___GetActionOrigins_22)); }
	inline _GetActionOrigins_tE0D9FE805034861066738B53CD6ED5D774553C69 * get_GetActionOrigins_22() const { return ___GetActionOrigins_22; }
	inline _GetActionOrigins_tE0D9FE805034861066738B53CD6ED5D774553C69 ** get_address_of_GetActionOrigins_22() { return &___GetActionOrigins_22; }
	inline void set_GetActionOrigins_22(_GetActionOrigins_tE0D9FE805034861066738B53CD6ED5D774553C69 * value)
	{
		___GetActionOrigins_22 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___GetActionOrigins_22), (void*)value);
	}

	inline static int32_t get_offset_of_GetOriginLocalizedName_23() { return static_cast<int32_t>(offsetof(IVRInput_t5FB3A8D55A037DD0328F7BCEA3856E841BC4BC78, ___GetOriginLocalizedName_23)); }
	inline _GetOriginLocalizedName_t3FDAF7E14C966B8922289564E4EDFD9FD2708E4F * get_GetOriginLocalizedName_23() const { return ___GetOriginLocalizedName_23; }
	inline _GetOriginLocalizedName_t3FDAF7E14C966B8922289564E4EDFD9FD2708E4F ** get_address_of_GetOriginLocalizedName_23() { return &___GetOriginLocalizedName_23; }
	inline void set_GetOriginLocalizedName_23(_GetOriginLocalizedName_t3FDAF7E14C966B8922289564E4EDFD9FD2708E4F * value)
	{
		___GetOriginLocalizedName_23 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___GetOriginLocalizedName_23), (void*)value);
	}

	inline static int32_t get_offset_of_GetOriginTrackedDeviceInfo_24() { return static_cast<int32_t>(offsetof(IVRInput_t5FB3A8D55A037DD0328F7BCEA3856E841BC4BC78, ___GetOriginTrackedDeviceInfo_24)); }
	inline _GetOriginTrackedDeviceInfo_tCCCCE9FC46CC32CD3CEE514462A4D2AAB295BA4B * get_GetOriginTrackedDeviceInfo_24() const { return ___GetOriginTrackedDeviceInfo_24; }
	inline _GetOriginTrackedDeviceInfo_tCCCCE9FC46CC32CD3CEE514462A4D2AAB295BA4B ** get_address_of_GetOriginTrackedDeviceInfo_24() { return &___GetOriginTrackedDeviceInfo_24; }
	inline void set_GetOriginTrackedDeviceInfo_24(_GetOriginTrackedDeviceInfo_tCCCCE9FC46CC32CD3CEE514462A4D2AAB295BA4B * value)
	{
		___GetOriginTrackedDeviceInfo_24 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___GetOriginTrackedDeviceInfo_24), (void*)value);
	}

	inline static int32_t get_offset_of_GetActionBindingInfo_25() { return static_cast<int32_t>(offsetof(IVRInput_t5FB3A8D55A037DD0328F7BCEA3856E841BC4BC78, ___GetActionBindingInfo_25)); }
	inline _GetActionBindingInfo_t888BA9460789EBC395139AB0DBBBA3089B2E0FC5 * get_GetActionBindingInfo_25() const { return ___GetActionBindingInfo_25; }
	inline _GetActionBindingInfo_t888BA9460789EBC395139AB0DBBBA3089B2E0FC5 ** get_address_of_GetActionBindingInfo_25() { return &___GetActionBindingInfo_25; }
	inline void set_GetActionBindingInfo_25(_GetActionBindingInfo_t888BA9460789EBC395139AB0DBBBA3089B2E0FC5 * value)
	{
		___GetActionBindingInfo_25 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___GetActionBindingInfo_25), (void*)value);
	}

	inline static int32_t get_offset_of_ShowActionOrigins_26() { return static_cast<int32_t>(offsetof(IVRInput_t5FB3A8D55A037DD0328F7BCEA3856E841BC4BC78, ___ShowActionOrigins_26)); }
	inline _ShowActionOrigins_t2D44C15D7A1A68B48BD8A5718303C019CB82DE71 * get_ShowActionOrigins_26() const { return ___ShowActionOrigins_26; }
	inline _ShowActionOrigins_t2D44C15D7A1A68B48BD8A5718303C019CB82DE71 ** get_address_of_ShowActionOrigins_26() { return &___ShowActionOrigins_26; }
	inline void set_ShowActionOrigins_26(_ShowActionOrigins_t2D44C15D7A1A68B48BD8A5718303C019CB82DE71 * value)
	{
		___ShowActionOrigins_26 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___ShowActionOrigins_26), (void*)value);
	}

	inline static int32_t get_offset_of_ShowBindingsForActionSet_27() { return static_cast<int32_t>(offsetof(IVRInput_t5FB3A8D55A037DD0328F7BCEA3856E841BC4BC78, ___ShowBindingsForActionSet_27)); }
	inline _ShowBindingsForActionSet_tE794CCA21EF1D46F19895A28146A79FA5B41BB2A * get_ShowBindingsForActionSet_27() const { return ___ShowBindingsForActionSet_27; }
	inline _ShowBindingsForActionSet_tE794CCA21EF1D46F19895A28146A79FA5B41BB2A ** get_address_of_ShowBindingsForActionSet_27() { return &___ShowBindingsForActionSet_27; }
	inline void set_ShowBindingsForActionSet_27(_ShowBindingsForActionSet_tE794CCA21EF1D46F19895A28146A79FA5B41BB2A * value)
	{
		___ShowBindingsForActionSet_27 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___ShowBindingsForActionSet_27), (void*)value);
	}

	inline static int32_t get_offset_of_GetComponentStateForBinding_28() { return static_cast<int32_t>(offsetof(IVRInput_t5FB3A8D55A037DD0328F7BCEA3856E841BC4BC78, ___GetComponentStateForBinding_28)); }
	inline _GetComponentStateForBinding_t528D11F913578272C9159336F2B9473530BE99AA * get_GetComponentStateForBinding_28() const { return ___GetComponentStateForBinding_28; }
	inline _GetComponentStateForBinding_t528D11F913578272C9159336F2B9473530BE99AA ** get_address_of_GetComponentStateForBinding_28() { return &___GetComponentStateForBinding_28; }
	inline void set_GetComponentStateForBinding_28(_GetComponentStateForBinding_t528D11F913578272C9159336F2B9473530BE99AA * value)
	{
		___GetComponentStateForBinding_28 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___GetComponentStateForBinding_28), (void*)value);
	}

	inline static int32_t get_offset_of_IsUsingLegacyInput_29() { return static_cast<int32_t>(offsetof(IVRInput_t5FB3A8D55A037DD0328F7BCEA3856E841BC4BC78, ___IsUsingLegacyInput_29)); }
	inline _IsUsingLegacyInput_t47530FACE216CEDA2B1629F03D1FE805B67664A7 * get_IsUsingLegacyInput_29() const { return ___IsUsingLegacyInput_29; }
	inline _IsUsingLegacyInput_t47530FACE216CEDA2B1629F03D1FE805B67664A7 ** get_address_of_IsUsingLegacyInput_29() { return &___IsUsingLegacyInput_29; }
	inline void set_IsUsingLegacyInput_29(_IsUsingLegacyInput_t47530FACE216CEDA2B1629F03D1FE805B67664A7 * value)
	{
		___IsUsingLegacyInput_29 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___IsUsingLegacyInput_29), (void*)value);
	}

	inline static int32_t get_offset_of_OpenBindingUI_30() { return static_cast<int32_t>(offsetof(IVRInput_t5FB3A8D55A037DD0328F7BCEA3856E841BC4BC78, ___OpenBindingUI_30)); }
	inline _OpenBindingUI_t04252A1EDE97A953F55220A73E647A8DD9EA831F * get_OpenBindingUI_30() const { return ___OpenBindingUI_30; }
	inline _OpenBindingUI_t04252A1EDE97A953F55220A73E647A8DD9EA831F ** get_address_of_OpenBindingUI_30() { return &___OpenBindingUI_30; }
	inline void set_OpenBindingUI_30(_OpenBindingUI_t04252A1EDE97A953F55220A73E647A8DD9EA831F * value)
	{
		___OpenBindingUI_30 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___OpenBindingUI_30), (void*)value);
	}

	inline static int32_t get_offset_of_GetBindingVariant_31() { return static_cast<int32_t>(offsetof(IVRInput_t5FB3A8D55A037DD0328F7BCEA3856E841BC4BC78, ___GetBindingVariant_31)); }
	inline _GetBindingVariant_t54394654ADF0C4DFE91EC183B932B47AD3AD9F96 * get_GetBindingVariant_31() const { return ___GetBindingVariant_31; }
	inline _GetBindingVariant_t54394654ADF0C4DFE91EC183B932B47AD3AD9F96 ** get_address_of_GetBindingVariant_31() { return &___GetBindingVariant_31; }
	inline void set_GetBindingVariant_31(_GetBindingVariant_t54394654ADF0C4DFE91EC183B932B47AD3AD9F96 * value)
	{
		___GetBindingVariant_31 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___GetBindingVariant_31), (void*)value);
	}
};

// Native definition for P/Invoke marshalling of Valve.VR.IVRInput
struct IVRInput_t5FB3A8D55A037DD0328F7BCEA3856E841BC4BC78_marshaled_pinvoke
{
	Il2CppMethodPointer ___SetActionManifestPath_0;
	Il2CppMethodPointer ___GetActionSetHandle_1;
	Il2CppMethodPointer ___GetActionHandle_2;
	Il2CppMethodPointer ___GetInputSourceHandle_3;
	Il2CppMethodPointer ___UpdateActionState_4;
	Il2CppMethodPointer ___GetDigitalActionData_5;
	Il2CppMethodPointer ___GetAnalogActionData_6;
	Il2CppMethodPointer ___GetPoseActionDataRelativeToNow_7;
	Il2CppMethodPointer ___GetPoseActionDataForNextFrame_8;
	Il2CppMethodPointer ___GetSkeletalActionData_9;
	Il2CppMethodPointer ___GetDominantHand_10;
	Il2CppMethodPointer ___SetDominantHand_11;
	Il2CppMethodPointer ___GetBoneCount_12;
	Il2CppMethodPointer ___GetBoneHierarchy_13;
	Il2CppMethodPointer ___GetBoneName_14;
	Il2CppMethodPointer ___GetSkeletalReferenceTransforms_15;
	Il2CppMethodPointer ___GetSkeletalTrackingLevel_16;
	Il2CppMethodPointer ___GetSkeletalBoneData_17;
	Il2CppMethodPointer ___GetSkeletalSummaryData_18;
	Il2CppMethodPointer ___GetSkeletalBoneDataCompressed_19;
	Il2CppMethodPointer ___DecompressSkeletalBoneData_20;
	Il2CppMethodPointer ___TriggerHapticVibrationAction_21;
	Il2CppMethodPointer ___GetActionOrigins_22;
	Il2CppMethodPointer ___GetOriginLocalizedName_23;
	Il2CppMethodPointer ___GetOriginTrackedDeviceInfo_24;
	Il2CppMethodPointer ___GetActionBindingInfo_25;
	Il2CppMethodPointer ___ShowActionOrigins_26;
	Il2CppMethodPointer ___ShowBindingsForActionSet_27;
	Il2CppMethodPointer ___GetComponentStateForBinding_28;
	Il2CppMethodPointer ___IsUsingLegacyInput_29;
	Il2CppMethodPointer ___OpenBindingUI_30;
	Il2CppMethodPointer ___GetBindingVariant_31;
};
// Native definition for COM marshalling of Valve.VR.IVRInput
struct IVRInput_t5FB3A8D55A037DD0328F7BCEA3856E841BC4BC78_marshaled_com
{
	Il2CppMethodPointer ___SetActionManifestPath_0;
	Il2CppMethodPointer ___GetActionSetHandle_1;
	Il2CppMethodPointer ___GetActionHandle_2;
	Il2CppMethodPointer ___GetInputSourceHandle_3;
	Il2CppMethodPointer ___UpdateActionState_4;
	Il2CppMethodPointer ___GetDigitalActionData_5;
	Il2CppMethodPointer ___GetAnalogActionData_6;
	Il2CppMethodPointer ___GetPoseActionDataRelativeToNow_7;
	Il2CppMethodPointer ___GetPoseActionDataForNextFrame_8;
	Il2CppMethodPointer ___GetSkeletalActionData_9;
	Il2CppMethodPointer ___GetDominantHand_10;
	Il2CppMethodPointer ___SetDominantHand_11;
	Il2CppMethodPointer ___GetBoneCount_12;
	Il2CppMethodPointer ___GetBoneHierarchy_13;
	Il2CppMethodPointer ___GetBoneName_14;
	Il2CppMethodPointer ___GetSkeletalReferenceTransforms_15;
	Il2CppMethodPointer ___GetSkeletalTrackingLevel_16;
	Il2CppMethodPointer ___GetSkeletalBoneData_17;
	Il2CppMethodPointer ___GetSkeletalSummaryData_18;
	Il2CppMethodPointer ___GetSkeletalBoneDataCompressed_19;
	Il2CppMethodPointer ___DecompressSkeletalBoneData_20;
	Il2CppMethodPointer ___TriggerHapticVibrationAction_21;
	Il2CppMethodPointer ___GetActionOrigins_22;
	Il2CppMethodPointer ___GetOriginLocalizedName_23;
	Il2CppMethodPointer ___GetOriginTrackedDeviceInfo_24;
	Il2CppMethodPointer ___GetActionBindingInfo_25;
	Il2CppMethodPointer ___ShowActionOrigins_26;
	Il2CppMethodPointer ___ShowBindingsForActionSet_27;
	Il2CppMethodPointer ___GetComponentStateForBinding_28;
	Il2CppMethodPointer ___IsUsingLegacyInput_29;
	Il2CppMethodPointer ___OpenBindingUI_30;
	Il2CppMethodPointer ___GetBindingVariant_31;
};

// Valve.VR.InputAnalogActionData_t
struct  InputAnalogActionData_t_t14E9AA21212F14E11EE05E0C5D5D37705B14CB0C 
{
public:
	// System.Boolean Valve.VR.InputAnalogActionData_t::bActive
	bool ___bActive_0;
	// System.UInt64 Valve.VR.InputAnalogActionData_t::activeOrigin
	uint64_t ___activeOrigin_1;
	// System.Single Valve.VR.InputAnalogActionData_t::x
	float ___x_2;
	// System.Single Valve.VR.InputAnalogActionData_t::y
	float ___y_3;
	// System.Single Valve.VR.InputAnalogActionData_t::z
	float ___z_4;
	// System.Single Valve.VR.InputAnalogActionData_t::deltaX
	float ___deltaX_5;
	// System.Single Valve.VR.InputAnalogActionData_t::deltaY
	float ___deltaY_6;
	// System.Single Valve.VR.InputAnalogActionData_t::deltaZ
	float ___deltaZ_7;
	// System.Single Valve.VR.InputAnalogActionData_t::fUpdateTime
	float ___fUpdateTime_8;

public:
	inline static int32_t get_offset_of_bActive_0() { return static_cast<int32_t>(offsetof(InputAnalogActionData_t_t14E9AA21212F14E11EE05E0C5D5D37705B14CB0C, ___bActive_0)); }
	inline bool get_bActive_0() const { return ___bActive_0; }
	inline bool* get_address_of_bActive_0() { return &___bActive_0; }
	inline void set_bActive_0(bool value)
	{
		___bActive_0 = value;
	}

	inline static int32_t get_offset_of_activeOrigin_1() { return static_cast<int32_t>(offsetof(InputAnalogActionData_t_t14E9AA21212F14E11EE05E0C5D5D37705B14CB0C, ___activeOrigin_1)); }
	inline uint64_t get_activeOrigin_1() const { return ___activeOrigin_1; }
	inline uint64_t* get_address_of_activeOrigin_1() { return &___activeOrigin_1; }
	inline void set_activeOrigin_1(uint64_t value)
	{
		___activeOrigin_1 = value;
	}

	inline static int32_t get_offset_of_x_2() { return static_cast<int32_t>(offsetof(InputAnalogActionData_t_t14E9AA21212F14E11EE05E0C5D5D37705B14CB0C, ___x_2)); }
	inline float get_x_2() const { return ___x_2; }
	inline float* get_address_of_x_2() { return &___x_2; }
	inline void set_x_2(float value)
	{
		___x_2 = value;
	}

	inline static int32_t get_offset_of_y_3() { return static_cast<int32_t>(offsetof(InputAnalogActionData_t_t14E9AA21212F14E11EE05E0C5D5D37705B14CB0C, ___y_3)); }
	inline float get_y_3() const { return ___y_3; }
	inline float* get_address_of_y_3() { return &___y_3; }
	inline void set_y_3(float value)
	{
		___y_3 = value;
	}

	inline static int32_t get_offset_of_z_4() { return static_cast<int32_t>(offsetof(InputAnalogActionData_t_t14E9AA21212F14E11EE05E0C5D5D37705B14CB0C, ___z_4)); }
	inline float get_z_4() const { return ___z_4; }
	inline float* get_address_of_z_4() { return &___z_4; }
	inline void set_z_4(float value)
	{
		___z_4 = value;
	}

	inline static int32_t get_offset_of_deltaX_5() { return static_cast<int32_t>(offsetof(InputAnalogActionData_t_t14E9AA21212F14E11EE05E0C5D5D37705B14CB0C, ___deltaX_5)); }
	inline float get_deltaX_5() const { return ___deltaX_5; }
	inline float* get_address_of_deltaX_5() { return &___deltaX_5; }
	inline void set_deltaX_5(float value)
	{
		___deltaX_5 = value;
	}

	inline static int32_t get_offset_of_deltaY_6() { return static_cast<int32_t>(offsetof(InputAnalogActionData_t_t14E9AA21212F14E11EE05E0C5D5D37705B14CB0C, ___deltaY_6)); }
	inline float get_deltaY_6() const { return ___deltaY_6; }
	inline float* get_address_of_deltaY_6() { return &___deltaY_6; }
	inline void set_deltaY_6(float value)
	{
		___deltaY_6 = value;
	}

	inline static int32_t get_offset_of_deltaZ_7() { return static_cast<int32_t>(offsetof(InputAnalogActionData_t_t14E9AA21212F14E11EE05E0C5D5D37705B14CB0C, ___deltaZ_7)); }
	inline float get_deltaZ_7() const { return ___deltaZ_7; }
	inline float* get_address_of_deltaZ_7() { return &___deltaZ_7; }
	inline void set_deltaZ_7(float value)
	{
		___deltaZ_7 = value;
	}

	inline static int32_t get_offset_of_fUpdateTime_8() { return static_cast<int32_t>(offsetof(InputAnalogActionData_t_t14E9AA21212F14E11EE05E0C5D5D37705B14CB0C, ___fUpdateTime_8)); }
	inline float get_fUpdateTime_8() const { return ___fUpdateTime_8; }
	inline float* get_address_of_fUpdateTime_8() { return &___fUpdateTime_8; }
	inline void set_fUpdateTime_8(float value)
	{
		___fUpdateTime_8 = value;
	}
};


// Valve.VR.InputDigitalActionData_t
struct  InputDigitalActionData_t_tD29EC7460AD65DE5432FCB47474BDDC4F19A7AB1 
{
public:
	// System.Boolean Valve.VR.InputDigitalActionData_t::bActive
	bool ___bActive_0;
	// System.UInt64 Valve.VR.InputDigitalActionData_t::activeOrigin
	uint64_t ___activeOrigin_1;
	// System.Boolean Valve.VR.InputDigitalActionData_t::bState
	bool ___bState_2;
	// System.Boolean Valve.VR.InputDigitalActionData_t::bChanged
	bool ___bChanged_3;
	// System.Single Valve.VR.InputDigitalActionData_t::fUpdateTime
	float ___fUpdateTime_4;

public:
	inline static int32_t get_offset_of_bActive_0() { return static_cast<int32_t>(offsetof(InputDigitalActionData_t_tD29EC7460AD65DE5432FCB47474BDDC4F19A7AB1, ___bActive_0)); }
	inline bool get_bActive_0() const { return ___bActive_0; }
	inline bool* get_address_of_bActive_0() { return &___bActive_0; }
	inline void set_bActive_0(bool value)
	{
		___bActive_0 = value;
	}

	inline static int32_t get_offset_of_activeOrigin_1() { return static_cast<int32_t>(offsetof(InputDigitalActionData_t_tD29EC7460AD65DE5432FCB47474BDDC4F19A7AB1, ___activeOrigin_1)); }
	inline uint64_t get_activeOrigin_1() const { return ___activeOrigin_1; }
	inline uint64_t* get_address_of_activeOrigin_1() { return &___activeOrigin_1; }
	inline void set_activeOrigin_1(uint64_t value)
	{
		___activeOrigin_1 = value;
	}

	inline static int32_t get_offset_of_bState_2() { return static_cast<int32_t>(offsetof(InputDigitalActionData_t_tD29EC7460AD65DE5432FCB47474BDDC4F19A7AB1, ___bState_2)); }
	inline bool get_bState_2() const { return ___bState_2; }
	inline bool* get_address_of_bState_2() { return &___bState_2; }
	inline void set_bState_2(bool value)
	{
		___bState_2 = value;
	}

	inline static int32_t get_offset_of_bChanged_3() { return static_cast<int32_t>(offsetof(InputDigitalActionData_t_tD29EC7460AD65DE5432FCB47474BDDC4F19A7AB1, ___bChanged_3)); }
	inline bool get_bChanged_3() const { return ___bChanged_3; }
	inline bool* get_address_of_bChanged_3() { return &___bChanged_3; }
	inline void set_bChanged_3(bool value)
	{
		___bChanged_3 = value;
	}

	inline static int32_t get_offset_of_fUpdateTime_4() { return static_cast<int32_t>(offsetof(InputDigitalActionData_t_tD29EC7460AD65DE5432FCB47474BDDC4F19A7AB1, ___fUpdateTime_4)); }
	inline float get_fUpdateTime_4() const { return ___fUpdateTime_4; }
	inline float* get_address_of_fUpdateTime_4() { return &___fUpdateTime_4; }
	inline void set_fUpdateTime_4(float value)
	{
		___fUpdateTime_4 = value;
	}
};


// Valve.VR.InputOriginInfo_t
struct  InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A 
{
public:
	// System.UInt64 Valve.VR.InputOriginInfo_t::devicePath
	uint64_t ___devicePath_0;
	// System.UInt32 Valve.VR.InputOriginInfo_t::trackedDeviceIndex
	uint32_t ___trackedDeviceIndex_1;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName0
	uint8_t ___rchRenderModelComponentName0_2;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName1
	uint8_t ___rchRenderModelComponentName1_3;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName2
	uint8_t ___rchRenderModelComponentName2_4;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName3
	uint8_t ___rchRenderModelComponentName3_5;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName4
	uint8_t ___rchRenderModelComponentName4_6;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName5
	uint8_t ___rchRenderModelComponentName5_7;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName6
	uint8_t ___rchRenderModelComponentName6_8;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName7
	uint8_t ___rchRenderModelComponentName7_9;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName8
	uint8_t ___rchRenderModelComponentName8_10;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName9
	uint8_t ___rchRenderModelComponentName9_11;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName10
	uint8_t ___rchRenderModelComponentName10_12;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName11
	uint8_t ___rchRenderModelComponentName11_13;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName12
	uint8_t ___rchRenderModelComponentName12_14;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName13
	uint8_t ___rchRenderModelComponentName13_15;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName14
	uint8_t ___rchRenderModelComponentName14_16;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName15
	uint8_t ___rchRenderModelComponentName15_17;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName16
	uint8_t ___rchRenderModelComponentName16_18;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName17
	uint8_t ___rchRenderModelComponentName17_19;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName18
	uint8_t ___rchRenderModelComponentName18_20;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName19
	uint8_t ___rchRenderModelComponentName19_21;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName20
	uint8_t ___rchRenderModelComponentName20_22;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName21
	uint8_t ___rchRenderModelComponentName21_23;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName22
	uint8_t ___rchRenderModelComponentName22_24;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName23
	uint8_t ___rchRenderModelComponentName23_25;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName24
	uint8_t ___rchRenderModelComponentName24_26;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName25
	uint8_t ___rchRenderModelComponentName25_27;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName26
	uint8_t ___rchRenderModelComponentName26_28;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName27
	uint8_t ___rchRenderModelComponentName27_29;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName28
	uint8_t ___rchRenderModelComponentName28_30;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName29
	uint8_t ___rchRenderModelComponentName29_31;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName30
	uint8_t ___rchRenderModelComponentName30_32;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName31
	uint8_t ___rchRenderModelComponentName31_33;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName32
	uint8_t ___rchRenderModelComponentName32_34;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName33
	uint8_t ___rchRenderModelComponentName33_35;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName34
	uint8_t ___rchRenderModelComponentName34_36;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName35
	uint8_t ___rchRenderModelComponentName35_37;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName36
	uint8_t ___rchRenderModelComponentName36_38;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName37
	uint8_t ___rchRenderModelComponentName37_39;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName38
	uint8_t ___rchRenderModelComponentName38_40;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName39
	uint8_t ___rchRenderModelComponentName39_41;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName40
	uint8_t ___rchRenderModelComponentName40_42;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName41
	uint8_t ___rchRenderModelComponentName41_43;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName42
	uint8_t ___rchRenderModelComponentName42_44;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName43
	uint8_t ___rchRenderModelComponentName43_45;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName44
	uint8_t ___rchRenderModelComponentName44_46;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName45
	uint8_t ___rchRenderModelComponentName45_47;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName46
	uint8_t ___rchRenderModelComponentName46_48;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName47
	uint8_t ___rchRenderModelComponentName47_49;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName48
	uint8_t ___rchRenderModelComponentName48_50;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName49
	uint8_t ___rchRenderModelComponentName49_51;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName50
	uint8_t ___rchRenderModelComponentName50_52;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName51
	uint8_t ___rchRenderModelComponentName51_53;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName52
	uint8_t ___rchRenderModelComponentName52_54;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName53
	uint8_t ___rchRenderModelComponentName53_55;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName54
	uint8_t ___rchRenderModelComponentName54_56;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName55
	uint8_t ___rchRenderModelComponentName55_57;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName56
	uint8_t ___rchRenderModelComponentName56_58;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName57
	uint8_t ___rchRenderModelComponentName57_59;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName58
	uint8_t ___rchRenderModelComponentName58_60;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName59
	uint8_t ___rchRenderModelComponentName59_61;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName60
	uint8_t ___rchRenderModelComponentName60_62;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName61
	uint8_t ___rchRenderModelComponentName61_63;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName62
	uint8_t ___rchRenderModelComponentName62_64;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName63
	uint8_t ___rchRenderModelComponentName63_65;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName64
	uint8_t ___rchRenderModelComponentName64_66;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName65
	uint8_t ___rchRenderModelComponentName65_67;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName66
	uint8_t ___rchRenderModelComponentName66_68;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName67
	uint8_t ___rchRenderModelComponentName67_69;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName68
	uint8_t ___rchRenderModelComponentName68_70;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName69
	uint8_t ___rchRenderModelComponentName69_71;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName70
	uint8_t ___rchRenderModelComponentName70_72;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName71
	uint8_t ___rchRenderModelComponentName71_73;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName72
	uint8_t ___rchRenderModelComponentName72_74;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName73
	uint8_t ___rchRenderModelComponentName73_75;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName74
	uint8_t ___rchRenderModelComponentName74_76;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName75
	uint8_t ___rchRenderModelComponentName75_77;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName76
	uint8_t ___rchRenderModelComponentName76_78;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName77
	uint8_t ___rchRenderModelComponentName77_79;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName78
	uint8_t ___rchRenderModelComponentName78_80;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName79
	uint8_t ___rchRenderModelComponentName79_81;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName80
	uint8_t ___rchRenderModelComponentName80_82;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName81
	uint8_t ___rchRenderModelComponentName81_83;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName82
	uint8_t ___rchRenderModelComponentName82_84;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName83
	uint8_t ___rchRenderModelComponentName83_85;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName84
	uint8_t ___rchRenderModelComponentName84_86;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName85
	uint8_t ___rchRenderModelComponentName85_87;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName86
	uint8_t ___rchRenderModelComponentName86_88;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName87
	uint8_t ___rchRenderModelComponentName87_89;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName88
	uint8_t ___rchRenderModelComponentName88_90;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName89
	uint8_t ___rchRenderModelComponentName89_91;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName90
	uint8_t ___rchRenderModelComponentName90_92;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName91
	uint8_t ___rchRenderModelComponentName91_93;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName92
	uint8_t ___rchRenderModelComponentName92_94;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName93
	uint8_t ___rchRenderModelComponentName93_95;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName94
	uint8_t ___rchRenderModelComponentName94_96;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName95
	uint8_t ___rchRenderModelComponentName95_97;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName96
	uint8_t ___rchRenderModelComponentName96_98;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName97
	uint8_t ___rchRenderModelComponentName97_99;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName98
	uint8_t ___rchRenderModelComponentName98_100;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName99
	uint8_t ___rchRenderModelComponentName99_101;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName100
	uint8_t ___rchRenderModelComponentName100_102;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName101
	uint8_t ___rchRenderModelComponentName101_103;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName102
	uint8_t ___rchRenderModelComponentName102_104;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName103
	uint8_t ___rchRenderModelComponentName103_105;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName104
	uint8_t ___rchRenderModelComponentName104_106;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName105
	uint8_t ___rchRenderModelComponentName105_107;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName106
	uint8_t ___rchRenderModelComponentName106_108;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName107
	uint8_t ___rchRenderModelComponentName107_109;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName108
	uint8_t ___rchRenderModelComponentName108_110;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName109
	uint8_t ___rchRenderModelComponentName109_111;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName110
	uint8_t ___rchRenderModelComponentName110_112;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName111
	uint8_t ___rchRenderModelComponentName111_113;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName112
	uint8_t ___rchRenderModelComponentName112_114;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName113
	uint8_t ___rchRenderModelComponentName113_115;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName114
	uint8_t ___rchRenderModelComponentName114_116;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName115
	uint8_t ___rchRenderModelComponentName115_117;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName116
	uint8_t ___rchRenderModelComponentName116_118;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName117
	uint8_t ___rchRenderModelComponentName117_119;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName118
	uint8_t ___rchRenderModelComponentName118_120;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName119
	uint8_t ___rchRenderModelComponentName119_121;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName120
	uint8_t ___rchRenderModelComponentName120_122;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName121
	uint8_t ___rchRenderModelComponentName121_123;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName122
	uint8_t ___rchRenderModelComponentName122_124;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName123
	uint8_t ___rchRenderModelComponentName123_125;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName124
	uint8_t ___rchRenderModelComponentName124_126;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName125
	uint8_t ___rchRenderModelComponentName125_127;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName126
	uint8_t ___rchRenderModelComponentName126_128;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName127
	uint8_t ___rchRenderModelComponentName127_129;

public:
	inline static int32_t get_offset_of_devicePath_0() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___devicePath_0)); }
	inline uint64_t get_devicePath_0() const { return ___devicePath_0; }
	inline uint64_t* get_address_of_devicePath_0() { return &___devicePath_0; }
	inline void set_devicePath_0(uint64_t value)
	{
		___devicePath_0 = value;
	}

	inline static int32_t get_offset_of_trackedDeviceIndex_1() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___trackedDeviceIndex_1)); }
	inline uint32_t get_trackedDeviceIndex_1() const { return ___trackedDeviceIndex_1; }
	inline uint32_t* get_address_of_trackedDeviceIndex_1() { return &___trackedDeviceIndex_1; }
	inline void set_trackedDeviceIndex_1(uint32_t value)
	{
		___trackedDeviceIndex_1 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName0_2() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName0_2)); }
	inline uint8_t get_rchRenderModelComponentName0_2() const { return ___rchRenderModelComponentName0_2; }
	inline uint8_t* get_address_of_rchRenderModelComponentName0_2() { return &___rchRenderModelComponentName0_2; }
	inline void set_rchRenderModelComponentName0_2(uint8_t value)
	{
		___rchRenderModelComponentName0_2 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName1_3() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName1_3)); }
	inline uint8_t get_rchRenderModelComponentName1_3() const { return ___rchRenderModelComponentName1_3; }
	inline uint8_t* get_address_of_rchRenderModelComponentName1_3() { return &___rchRenderModelComponentName1_3; }
	inline void set_rchRenderModelComponentName1_3(uint8_t value)
	{
		___rchRenderModelComponentName1_3 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName2_4() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName2_4)); }
	inline uint8_t get_rchRenderModelComponentName2_4() const { return ___rchRenderModelComponentName2_4; }
	inline uint8_t* get_address_of_rchRenderModelComponentName2_4() { return &___rchRenderModelComponentName2_4; }
	inline void set_rchRenderModelComponentName2_4(uint8_t value)
	{
		___rchRenderModelComponentName2_4 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName3_5() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName3_5)); }
	inline uint8_t get_rchRenderModelComponentName3_5() const { return ___rchRenderModelComponentName3_5; }
	inline uint8_t* get_address_of_rchRenderModelComponentName3_5() { return &___rchRenderModelComponentName3_5; }
	inline void set_rchRenderModelComponentName3_5(uint8_t value)
	{
		___rchRenderModelComponentName3_5 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName4_6() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName4_6)); }
	inline uint8_t get_rchRenderModelComponentName4_6() const { return ___rchRenderModelComponentName4_6; }
	inline uint8_t* get_address_of_rchRenderModelComponentName4_6() { return &___rchRenderModelComponentName4_6; }
	inline void set_rchRenderModelComponentName4_6(uint8_t value)
	{
		___rchRenderModelComponentName4_6 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName5_7() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName5_7)); }
	inline uint8_t get_rchRenderModelComponentName5_7() const { return ___rchRenderModelComponentName5_7; }
	inline uint8_t* get_address_of_rchRenderModelComponentName5_7() { return &___rchRenderModelComponentName5_7; }
	inline void set_rchRenderModelComponentName5_7(uint8_t value)
	{
		___rchRenderModelComponentName5_7 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName6_8() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName6_8)); }
	inline uint8_t get_rchRenderModelComponentName6_8() const { return ___rchRenderModelComponentName6_8; }
	inline uint8_t* get_address_of_rchRenderModelComponentName6_8() { return &___rchRenderModelComponentName6_8; }
	inline void set_rchRenderModelComponentName6_8(uint8_t value)
	{
		___rchRenderModelComponentName6_8 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName7_9() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName7_9)); }
	inline uint8_t get_rchRenderModelComponentName7_9() const { return ___rchRenderModelComponentName7_9; }
	inline uint8_t* get_address_of_rchRenderModelComponentName7_9() { return &___rchRenderModelComponentName7_9; }
	inline void set_rchRenderModelComponentName7_9(uint8_t value)
	{
		___rchRenderModelComponentName7_9 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName8_10() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName8_10)); }
	inline uint8_t get_rchRenderModelComponentName8_10() const { return ___rchRenderModelComponentName8_10; }
	inline uint8_t* get_address_of_rchRenderModelComponentName8_10() { return &___rchRenderModelComponentName8_10; }
	inline void set_rchRenderModelComponentName8_10(uint8_t value)
	{
		___rchRenderModelComponentName8_10 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName9_11() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName9_11)); }
	inline uint8_t get_rchRenderModelComponentName9_11() const { return ___rchRenderModelComponentName9_11; }
	inline uint8_t* get_address_of_rchRenderModelComponentName9_11() { return &___rchRenderModelComponentName9_11; }
	inline void set_rchRenderModelComponentName9_11(uint8_t value)
	{
		___rchRenderModelComponentName9_11 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName10_12() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName10_12)); }
	inline uint8_t get_rchRenderModelComponentName10_12() const { return ___rchRenderModelComponentName10_12; }
	inline uint8_t* get_address_of_rchRenderModelComponentName10_12() { return &___rchRenderModelComponentName10_12; }
	inline void set_rchRenderModelComponentName10_12(uint8_t value)
	{
		___rchRenderModelComponentName10_12 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName11_13() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName11_13)); }
	inline uint8_t get_rchRenderModelComponentName11_13() const { return ___rchRenderModelComponentName11_13; }
	inline uint8_t* get_address_of_rchRenderModelComponentName11_13() { return &___rchRenderModelComponentName11_13; }
	inline void set_rchRenderModelComponentName11_13(uint8_t value)
	{
		___rchRenderModelComponentName11_13 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName12_14() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName12_14)); }
	inline uint8_t get_rchRenderModelComponentName12_14() const { return ___rchRenderModelComponentName12_14; }
	inline uint8_t* get_address_of_rchRenderModelComponentName12_14() { return &___rchRenderModelComponentName12_14; }
	inline void set_rchRenderModelComponentName12_14(uint8_t value)
	{
		___rchRenderModelComponentName12_14 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName13_15() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName13_15)); }
	inline uint8_t get_rchRenderModelComponentName13_15() const { return ___rchRenderModelComponentName13_15; }
	inline uint8_t* get_address_of_rchRenderModelComponentName13_15() { return &___rchRenderModelComponentName13_15; }
	inline void set_rchRenderModelComponentName13_15(uint8_t value)
	{
		___rchRenderModelComponentName13_15 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName14_16() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName14_16)); }
	inline uint8_t get_rchRenderModelComponentName14_16() const { return ___rchRenderModelComponentName14_16; }
	inline uint8_t* get_address_of_rchRenderModelComponentName14_16() { return &___rchRenderModelComponentName14_16; }
	inline void set_rchRenderModelComponentName14_16(uint8_t value)
	{
		___rchRenderModelComponentName14_16 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName15_17() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName15_17)); }
	inline uint8_t get_rchRenderModelComponentName15_17() const { return ___rchRenderModelComponentName15_17; }
	inline uint8_t* get_address_of_rchRenderModelComponentName15_17() { return &___rchRenderModelComponentName15_17; }
	inline void set_rchRenderModelComponentName15_17(uint8_t value)
	{
		___rchRenderModelComponentName15_17 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName16_18() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName16_18)); }
	inline uint8_t get_rchRenderModelComponentName16_18() const { return ___rchRenderModelComponentName16_18; }
	inline uint8_t* get_address_of_rchRenderModelComponentName16_18() { return &___rchRenderModelComponentName16_18; }
	inline void set_rchRenderModelComponentName16_18(uint8_t value)
	{
		___rchRenderModelComponentName16_18 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName17_19() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName17_19)); }
	inline uint8_t get_rchRenderModelComponentName17_19() const { return ___rchRenderModelComponentName17_19; }
	inline uint8_t* get_address_of_rchRenderModelComponentName17_19() { return &___rchRenderModelComponentName17_19; }
	inline void set_rchRenderModelComponentName17_19(uint8_t value)
	{
		___rchRenderModelComponentName17_19 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName18_20() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName18_20)); }
	inline uint8_t get_rchRenderModelComponentName18_20() const { return ___rchRenderModelComponentName18_20; }
	inline uint8_t* get_address_of_rchRenderModelComponentName18_20() { return &___rchRenderModelComponentName18_20; }
	inline void set_rchRenderModelComponentName18_20(uint8_t value)
	{
		___rchRenderModelComponentName18_20 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName19_21() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName19_21)); }
	inline uint8_t get_rchRenderModelComponentName19_21() const { return ___rchRenderModelComponentName19_21; }
	inline uint8_t* get_address_of_rchRenderModelComponentName19_21() { return &___rchRenderModelComponentName19_21; }
	inline void set_rchRenderModelComponentName19_21(uint8_t value)
	{
		___rchRenderModelComponentName19_21 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName20_22() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName20_22)); }
	inline uint8_t get_rchRenderModelComponentName20_22() const { return ___rchRenderModelComponentName20_22; }
	inline uint8_t* get_address_of_rchRenderModelComponentName20_22() { return &___rchRenderModelComponentName20_22; }
	inline void set_rchRenderModelComponentName20_22(uint8_t value)
	{
		___rchRenderModelComponentName20_22 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName21_23() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName21_23)); }
	inline uint8_t get_rchRenderModelComponentName21_23() const { return ___rchRenderModelComponentName21_23; }
	inline uint8_t* get_address_of_rchRenderModelComponentName21_23() { return &___rchRenderModelComponentName21_23; }
	inline void set_rchRenderModelComponentName21_23(uint8_t value)
	{
		___rchRenderModelComponentName21_23 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName22_24() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName22_24)); }
	inline uint8_t get_rchRenderModelComponentName22_24() const { return ___rchRenderModelComponentName22_24; }
	inline uint8_t* get_address_of_rchRenderModelComponentName22_24() { return &___rchRenderModelComponentName22_24; }
	inline void set_rchRenderModelComponentName22_24(uint8_t value)
	{
		___rchRenderModelComponentName22_24 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName23_25() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName23_25)); }
	inline uint8_t get_rchRenderModelComponentName23_25() const { return ___rchRenderModelComponentName23_25; }
	inline uint8_t* get_address_of_rchRenderModelComponentName23_25() { return &___rchRenderModelComponentName23_25; }
	inline void set_rchRenderModelComponentName23_25(uint8_t value)
	{
		___rchRenderModelComponentName23_25 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName24_26() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName24_26)); }
	inline uint8_t get_rchRenderModelComponentName24_26() const { return ___rchRenderModelComponentName24_26; }
	inline uint8_t* get_address_of_rchRenderModelComponentName24_26() { return &___rchRenderModelComponentName24_26; }
	inline void set_rchRenderModelComponentName24_26(uint8_t value)
	{
		___rchRenderModelComponentName24_26 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName25_27() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName25_27)); }
	inline uint8_t get_rchRenderModelComponentName25_27() const { return ___rchRenderModelComponentName25_27; }
	inline uint8_t* get_address_of_rchRenderModelComponentName25_27() { return &___rchRenderModelComponentName25_27; }
	inline void set_rchRenderModelComponentName25_27(uint8_t value)
	{
		___rchRenderModelComponentName25_27 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName26_28() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName26_28)); }
	inline uint8_t get_rchRenderModelComponentName26_28() const { return ___rchRenderModelComponentName26_28; }
	inline uint8_t* get_address_of_rchRenderModelComponentName26_28() { return &___rchRenderModelComponentName26_28; }
	inline void set_rchRenderModelComponentName26_28(uint8_t value)
	{
		___rchRenderModelComponentName26_28 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName27_29() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName27_29)); }
	inline uint8_t get_rchRenderModelComponentName27_29() const { return ___rchRenderModelComponentName27_29; }
	inline uint8_t* get_address_of_rchRenderModelComponentName27_29() { return &___rchRenderModelComponentName27_29; }
	inline void set_rchRenderModelComponentName27_29(uint8_t value)
	{
		___rchRenderModelComponentName27_29 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName28_30() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName28_30)); }
	inline uint8_t get_rchRenderModelComponentName28_30() const { return ___rchRenderModelComponentName28_30; }
	inline uint8_t* get_address_of_rchRenderModelComponentName28_30() { return &___rchRenderModelComponentName28_30; }
	inline void set_rchRenderModelComponentName28_30(uint8_t value)
	{
		___rchRenderModelComponentName28_30 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName29_31() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName29_31)); }
	inline uint8_t get_rchRenderModelComponentName29_31() const { return ___rchRenderModelComponentName29_31; }
	inline uint8_t* get_address_of_rchRenderModelComponentName29_31() { return &___rchRenderModelComponentName29_31; }
	inline void set_rchRenderModelComponentName29_31(uint8_t value)
	{
		___rchRenderModelComponentName29_31 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName30_32() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName30_32)); }
	inline uint8_t get_rchRenderModelComponentName30_32() const { return ___rchRenderModelComponentName30_32; }
	inline uint8_t* get_address_of_rchRenderModelComponentName30_32() { return &___rchRenderModelComponentName30_32; }
	inline void set_rchRenderModelComponentName30_32(uint8_t value)
	{
		___rchRenderModelComponentName30_32 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName31_33() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName31_33)); }
	inline uint8_t get_rchRenderModelComponentName31_33() const { return ___rchRenderModelComponentName31_33; }
	inline uint8_t* get_address_of_rchRenderModelComponentName31_33() { return &___rchRenderModelComponentName31_33; }
	inline void set_rchRenderModelComponentName31_33(uint8_t value)
	{
		___rchRenderModelComponentName31_33 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName32_34() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName32_34)); }
	inline uint8_t get_rchRenderModelComponentName32_34() const { return ___rchRenderModelComponentName32_34; }
	inline uint8_t* get_address_of_rchRenderModelComponentName32_34() { return &___rchRenderModelComponentName32_34; }
	inline void set_rchRenderModelComponentName32_34(uint8_t value)
	{
		___rchRenderModelComponentName32_34 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName33_35() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName33_35)); }
	inline uint8_t get_rchRenderModelComponentName33_35() const { return ___rchRenderModelComponentName33_35; }
	inline uint8_t* get_address_of_rchRenderModelComponentName33_35() { return &___rchRenderModelComponentName33_35; }
	inline void set_rchRenderModelComponentName33_35(uint8_t value)
	{
		___rchRenderModelComponentName33_35 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName34_36() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName34_36)); }
	inline uint8_t get_rchRenderModelComponentName34_36() const { return ___rchRenderModelComponentName34_36; }
	inline uint8_t* get_address_of_rchRenderModelComponentName34_36() { return &___rchRenderModelComponentName34_36; }
	inline void set_rchRenderModelComponentName34_36(uint8_t value)
	{
		___rchRenderModelComponentName34_36 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName35_37() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName35_37)); }
	inline uint8_t get_rchRenderModelComponentName35_37() const { return ___rchRenderModelComponentName35_37; }
	inline uint8_t* get_address_of_rchRenderModelComponentName35_37() { return &___rchRenderModelComponentName35_37; }
	inline void set_rchRenderModelComponentName35_37(uint8_t value)
	{
		___rchRenderModelComponentName35_37 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName36_38() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName36_38)); }
	inline uint8_t get_rchRenderModelComponentName36_38() const { return ___rchRenderModelComponentName36_38; }
	inline uint8_t* get_address_of_rchRenderModelComponentName36_38() { return &___rchRenderModelComponentName36_38; }
	inline void set_rchRenderModelComponentName36_38(uint8_t value)
	{
		___rchRenderModelComponentName36_38 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName37_39() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName37_39)); }
	inline uint8_t get_rchRenderModelComponentName37_39() const { return ___rchRenderModelComponentName37_39; }
	inline uint8_t* get_address_of_rchRenderModelComponentName37_39() { return &___rchRenderModelComponentName37_39; }
	inline void set_rchRenderModelComponentName37_39(uint8_t value)
	{
		___rchRenderModelComponentName37_39 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName38_40() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName38_40)); }
	inline uint8_t get_rchRenderModelComponentName38_40() const { return ___rchRenderModelComponentName38_40; }
	inline uint8_t* get_address_of_rchRenderModelComponentName38_40() { return &___rchRenderModelComponentName38_40; }
	inline void set_rchRenderModelComponentName38_40(uint8_t value)
	{
		___rchRenderModelComponentName38_40 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName39_41() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName39_41)); }
	inline uint8_t get_rchRenderModelComponentName39_41() const { return ___rchRenderModelComponentName39_41; }
	inline uint8_t* get_address_of_rchRenderModelComponentName39_41() { return &___rchRenderModelComponentName39_41; }
	inline void set_rchRenderModelComponentName39_41(uint8_t value)
	{
		___rchRenderModelComponentName39_41 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName40_42() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName40_42)); }
	inline uint8_t get_rchRenderModelComponentName40_42() const { return ___rchRenderModelComponentName40_42; }
	inline uint8_t* get_address_of_rchRenderModelComponentName40_42() { return &___rchRenderModelComponentName40_42; }
	inline void set_rchRenderModelComponentName40_42(uint8_t value)
	{
		___rchRenderModelComponentName40_42 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName41_43() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName41_43)); }
	inline uint8_t get_rchRenderModelComponentName41_43() const { return ___rchRenderModelComponentName41_43; }
	inline uint8_t* get_address_of_rchRenderModelComponentName41_43() { return &___rchRenderModelComponentName41_43; }
	inline void set_rchRenderModelComponentName41_43(uint8_t value)
	{
		___rchRenderModelComponentName41_43 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName42_44() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName42_44)); }
	inline uint8_t get_rchRenderModelComponentName42_44() const { return ___rchRenderModelComponentName42_44; }
	inline uint8_t* get_address_of_rchRenderModelComponentName42_44() { return &___rchRenderModelComponentName42_44; }
	inline void set_rchRenderModelComponentName42_44(uint8_t value)
	{
		___rchRenderModelComponentName42_44 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName43_45() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName43_45)); }
	inline uint8_t get_rchRenderModelComponentName43_45() const { return ___rchRenderModelComponentName43_45; }
	inline uint8_t* get_address_of_rchRenderModelComponentName43_45() { return &___rchRenderModelComponentName43_45; }
	inline void set_rchRenderModelComponentName43_45(uint8_t value)
	{
		___rchRenderModelComponentName43_45 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName44_46() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName44_46)); }
	inline uint8_t get_rchRenderModelComponentName44_46() const { return ___rchRenderModelComponentName44_46; }
	inline uint8_t* get_address_of_rchRenderModelComponentName44_46() { return &___rchRenderModelComponentName44_46; }
	inline void set_rchRenderModelComponentName44_46(uint8_t value)
	{
		___rchRenderModelComponentName44_46 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName45_47() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName45_47)); }
	inline uint8_t get_rchRenderModelComponentName45_47() const { return ___rchRenderModelComponentName45_47; }
	inline uint8_t* get_address_of_rchRenderModelComponentName45_47() { return &___rchRenderModelComponentName45_47; }
	inline void set_rchRenderModelComponentName45_47(uint8_t value)
	{
		___rchRenderModelComponentName45_47 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName46_48() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName46_48)); }
	inline uint8_t get_rchRenderModelComponentName46_48() const { return ___rchRenderModelComponentName46_48; }
	inline uint8_t* get_address_of_rchRenderModelComponentName46_48() { return &___rchRenderModelComponentName46_48; }
	inline void set_rchRenderModelComponentName46_48(uint8_t value)
	{
		___rchRenderModelComponentName46_48 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName47_49() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName47_49)); }
	inline uint8_t get_rchRenderModelComponentName47_49() const { return ___rchRenderModelComponentName47_49; }
	inline uint8_t* get_address_of_rchRenderModelComponentName47_49() { return &___rchRenderModelComponentName47_49; }
	inline void set_rchRenderModelComponentName47_49(uint8_t value)
	{
		___rchRenderModelComponentName47_49 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName48_50() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName48_50)); }
	inline uint8_t get_rchRenderModelComponentName48_50() const { return ___rchRenderModelComponentName48_50; }
	inline uint8_t* get_address_of_rchRenderModelComponentName48_50() { return &___rchRenderModelComponentName48_50; }
	inline void set_rchRenderModelComponentName48_50(uint8_t value)
	{
		___rchRenderModelComponentName48_50 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName49_51() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName49_51)); }
	inline uint8_t get_rchRenderModelComponentName49_51() const { return ___rchRenderModelComponentName49_51; }
	inline uint8_t* get_address_of_rchRenderModelComponentName49_51() { return &___rchRenderModelComponentName49_51; }
	inline void set_rchRenderModelComponentName49_51(uint8_t value)
	{
		___rchRenderModelComponentName49_51 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName50_52() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName50_52)); }
	inline uint8_t get_rchRenderModelComponentName50_52() const { return ___rchRenderModelComponentName50_52; }
	inline uint8_t* get_address_of_rchRenderModelComponentName50_52() { return &___rchRenderModelComponentName50_52; }
	inline void set_rchRenderModelComponentName50_52(uint8_t value)
	{
		___rchRenderModelComponentName50_52 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName51_53() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName51_53)); }
	inline uint8_t get_rchRenderModelComponentName51_53() const { return ___rchRenderModelComponentName51_53; }
	inline uint8_t* get_address_of_rchRenderModelComponentName51_53() { return &___rchRenderModelComponentName51_53; }
	inline void set_rchRenderModelComponentName51_53(uint8_t value)
	{
		___rchRenderModelComponentName51_53 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName52_54() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName52_54)); }
	inline uint8_t get_rchRenderModelComponentName52_54() const { return ___rchRenderModelComponentName52_54; }
	inline uint8_t* get_address_of_rchRenderModelComponentName52_54() { return &___rchRenderModelComponentName52_54; }
	inline void set_rchRenderModelComponentName52_54(uint8_t value)
	{
		___rchRenderModelComponentName52_54 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName53_55() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName53_55)); }
	inline uint8_t get_rchRenderModelComponentName53_55() const { return ___rchRenderModelComponentName53_55; }
	inline uint8_t* get_address_of_rchRenderModelComponentName53_55() { return &___rchRenderModelComponentName53_55; }
	inline void set_rchRenderModelComponentName53_55(uint8_t value)
	{
		___rchRenderModelComponentName53_55 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName54_56() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName54_56)); }
	inline uint8_t get_rchRenderModelComponentName54_56() const { return ___rchRenderModelComponentName54_56; }
	inline uint8_t* get_address_of_rchRenderModelComponentName54_56() { return &___rchRenderModelComponentName54_56; }
	inline void set_rchRenderModelComponentName54_56(uint8_t value)
	{
		___rchRenderModelComponentName54_56 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName55_57() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName55_57)); }
	inline uint8_t get_rchRenderModelComponentName55_57() const { return ___rchRenderModelComponentName55_57; }
	inline uint8_t* get_address_of_rchRenderModelComponentName55_57() { return &___rchRenderModelComponentName55_57; }
	inline void set_rchRenderModelComponentName55_57(uint8_t value)
	{
		___rchRenderModelComponentName55_57 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName56_58() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName56_58)); }
	inline uint8_t get_rchRenderModelComponentName56_58() const { return ___rchRenderModelComponentName56_58; }
	inline uint8_t* get_address_of_rchRenderModelComponentName56_58() { return &___rchRenderModelComponentName56_58; }
	inline void set_rchRenderModelComponentName56_58(uint8_t value)
	{
		___rchRenderModelComponentName56_58 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName57_59() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName57_59)); }
	inline uint8_t get_rchRenderModelComponentName57_59() const { return ___rchRenderModelComponentName57_59; }
	inline uint8_t* get_address_of_rchRenderModelComponentName57_59() { return &___rchRenderModelComponentName57_59; }
	inline void set_rchRenderModelComponentName57_59(uint8_t value)
	{
		___rchRenderModelComponentName57_59 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName58_60() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName58_60)); }
	inline uint8_t get_rchRenderModelComponentName58_60() const { return ___rchRenderModelComponentName58_60; }
	inline uint8_t* get_address_of_rchRenderModelComponentName58_60() { return &___rchRenderModelComponentName58_60; }
	inline void set_rchRenderModelComponentName58_60(uint8_t value)
	{
		___rchRenderModelComponentName58_60 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName59_61() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName59_61)); }
	inline uint8_t get_rchRenderModelComponentName59_61() const { return ___rchRenderModelComponentName59_61; }
	inline uint8_t* get_address_of_rchRenderModelComponentName59_61() { return &___rchRenderModelComponentName59_61; }
	inline void set_rchRenderModelComponentName59_61(uint8_t value)
	{
		___rchRenderModelComponentName59_61 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName60_62() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName60_62)); }
	inline uint8_t get_rchRenderModelComponentName60_62() const { return ___rchRenderModelComponentName60_62; }
	inline uint8_t* get_address_of_rchRenderModelComponentName60_62() { return &___rchRenderModelComponentName60_62; }
	inline void set_rchRenderModelComponentName60_62(uint8_t value)
	{
		___rchRenderModelComponentName60_62 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName61_63() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName61_63)); }
	inline uint8_t get_rchRenderModelComponentName61_63() const { return ___rchRenderModelComponentName61_63; }
	inline uint8_t* get_address_of_rchRenderModelComponentName61_63() { return &___rchRenderModelComponentName61_63; }
	inline void set_rchRenderModelComponentName61_63(uint8_t value)
	{
		___rchRenderModelComponentName61_63 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName62_64() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName62_64)); }
	inline uint8_t get_rchRenderModelComponentName62_64() const { return ___rchRenderModelComponentName62_64; }
	inline uint8_t* get_address_of_rchRenderModelComponentName62_64() { return &___rchRenderModelComponentName62_64; }
	inline void set_rchRenderModelComponentName62_64(uint8_t value)
	{
		___rchRenderModelComponentName62_64 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName63_65() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName63_65)); }
	inline uint8_t get_rchRenderModelComponentName63_65() const { return ___rchRenderModelComponentName63_65; }
	inline uint8_t* get_address_of_rchRenderModelComponentName63_65() { return &___rchRenderModelComponentName63_65; }
	inline void set_rchRenderModelComponentName63_65(uint8_t value)
	{
		___rchRenderModelComponentName63_65 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName64_66() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName64_66)); }
	inline uint8_t get_rchRenderModelComponentName64_66() const { return ___rchRenderModelComponentName64_66; }
	inline uint8_t* get_address_of_rchRenderModelComponentName64_66() { return &___rchRenderModelComponentName64_66; }
	inline void set_rchRenderModelComponentName64_66(uint8_t value)
	{
		___rchRenderModelComponentName64_66 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName65_67() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName65_67)); }
	inline uint8_t get_rchRenderModelComponentName65_67() const { return ___rchRenderModelComponentName65_67; }
	inline uint8_t* get_address_of_rchRenderModelComponentName65_67() { return &___rchRenderModelComponentName65_67; }
	inline void set_rchRenderModelComponentName65_67(uint8_t value)
	{
		___rchRenderModelComponentName65_67 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName66_68() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName66_68)); }
	inline uint8_t get_rchRenderModelComponentName66_68() const { return ___rchRenderModelComponentName66_68; }
	inline uint8_t* get_address_of_rchRenderModelComponentName66_68() { return &___rchRenderModelComponentName66_68; }
	inline void set_rchRenderModelComponentName66_68(uint8_t value)
	{
		___rchRenderModelComponentName66_68 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName67_69() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName67_69)); }
	inline uint8_t get_rchRenderModelComponentName67_69() const { return ___rchRenderModelComponentName67_69; }
	inline uint8_t* get_address_of_rchRenderModelComponentName67_69() { return &___rchRenderModelComponentName67_69; }
	inline void set_rchRenderModelComponentName67_69(uint8_t value)
	{
		___rchRenderModelComponentName67_69 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName68_70() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName68_70)); }
	inline uint8_t get_rchRenderModelComponentName68_70() const { return ___rchRenderModelComponentName68_70; }
	inline uint8_t* get_address_of_rchRenderModelComponentName68_70() { return &___rchRenderModelComponentName68_70; }
	inline void set_rchRenderModelComponentName68_70(uint8_t value)
	{
		___rchRenderModelComponentName68_70 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName69_71() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName69_71)); }
	inline uint8_t get_rchRenderModelComponentName69_71() const { return ___rchRenderModelComponentName69_71; }
	inline uint8_t* get_address_of_rchRenderModelComponentName69_71() { return &___rchRenderModelComponentName69_71; }
	inline void set_rchRenderModelComponentName69_71(uint8_t value)
	{
		___rchRenderModelComponentName69_71 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName70_72() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName70_72)); }
	inline uint8_t get_rchRenderModelComponentName70_72() const { return ___rchRenderModelComponentName70_72; }
	inline uint8_t* get_address_of_rchRenderModelComponentName70_72() { return &___rchRenderModelComponentName70_72; }
	inline void set_rchRenderModelComponentName70_72(uint8_t value)
	{
		___rchRenderModelComponentName70_72 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName71_73() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName71_73)); }
	inline uint8_t get_rchRenderModelComponentName71_73() const { return ___rchRenderModelComponentName71_73; }
	inline uint8_t* get_address_of_rchRenderModelComponentName71_73() { return &___rchRenderModelComponentName71_73; }
	inline void set_rchRenderModelComponentName71_73(uint8_t value)
	{
		___rchRenderModelComponentName71_73 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName72_74() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName72_74)); }
	inline uint8_t get_rchRenderModelComponentName72_74() const { return ___rchRenderModelComponentName72_74; }
	inline uint8_t* get_address_of_rchRenderModelComponentName72_74() { return &___rchRenderModelComponentName72_74; }
	inline void set_rchRenderModelComponentName72_74(uint8_t value)
	{
		___rchRenderModelComponentName72_74 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName73_75() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName73_75)); }
	inline uint8_t get_rchRenderModelComponentName73_75() const { return ___rchRenderModelComponentName73_75; }
	inline uint8_t* get_address_of_rchRenderModelComponentName73_75() { return &___rchRenderModelComponentName73_75; }
	inline void set_rchRenderModelComponentName73_75(uint8_t value)
	{
		___rchRenderModelComponentName73_75 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName74_76() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName74_76)); }
	inline uint8_t get_rchRenderModelComponentName74_76() const { return ___rchRenderModelComponentName74_76; }
	inline uint8_t* get_address_of_rchRenderModelComponentName74_76() { return &___rchRenderModelComponentName74_76; }
	inline void set_rchRenderModelComponentName74_76(uint8_t value)
	{
		___rchRenderModelComponentName74_76 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName75_77() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName75_77)); }
	inline uint8_t get_rchRenderModelComponentName75_77() const { return ___rchRenderModelComponentName75_77; }
	inline uint8_t* get_address_of_rchRenderModelComponentName75_77() { return &___rchRenderModelComponentName75_77; }
	inline void set_rchRenderModelComponentName75_77(uint8_t value)
	{
		___rchRenderModelComponentName75_77 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName76_78() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName76_78)); }
	inline uint8_t get_rchRenderModelComponentName76_78() const { return ___rchRenderModelComponentName76_78; }
	inline uint8_t* get_address_of_rchRenderModelComponentName76_78() { return &___rchRenderModelComponentName76_78; }
	inline void set_rchRenderModelComponentName76_78(uint8_t value)
	{
		___rchRenderModelComponentName76_78 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName77_79() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName77_79)); }
	inline uint8_t get_rchRenderModelComponentName77_79() const { return ___rchRenderModelComponentName77_79; }
	inline uint8_t* get_address_of_rchRenderModelComponentName77_79() { return &___rchRenderModelComponentName77_79; }
	inline void set_rchRenderModelComponentName77_79(uint8_t value)
	{
		___rchRenderModelComponentName77_79 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName78_80() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName78_80)); }
	inline uint8_t get_rchRenderModelComponentName78_80() const { return ___rchRenderModelComponentName78_80; }
	inline uint8_t* get_address_of_rchRenderModelComponentName78_80() { return &___rchRenderModelComponentName78_80; }
	inline void set_rchRenderModelComponentName78_80(uint8_t value)
	{
		___rchRenderModelComponentName78_80 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName79_81() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName79_81)); }
	inline uint8_t get_rchRenderModelComponentName79_81() const { return ___rchRenderModelComponentName79_81; }
	inline uint8_t* get_address_of_rchRenderModelComponentName79_81() { return &___rchRenderModelComponentName79_81; }
	inline void set_rchRenderModelComponentName79_81(uint8_t value)
	{
		___rchRenderModelComponentName79_81 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName80_82() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName80_82)); }
	inline uint8_t get_rchRenderModelComponentName80_82() const { return ___rchRenderModelComponentName80_82; }
	inline uint8_t* get_address_of_rchRenderModelComponentName80_82() { return &___rchRenderModelComponentName80_82; }
	inline void set_rchRenderModelComponentName80_82(uint8_t value)
	{
		___rchRenderModelComponentName80_82 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName81_83() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName81_83)); }
	inline uint8_t get_rchRenderModelComponentName81_83() const { return ___rchRenderModelComponentName81_83; }
	inline uint8_t* get_address_of_rchRenderModelComponentName81_83() { return &___rchRenderModelComponentName81_83; }
	inline void set_rchRenderModelComponentName81_83(uint8_t value)
	{
		___rchRenderModelComponentName81_83 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName82_84() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName82_84)); }
	inline uint8_t get_rchRenderModelComponentName82_84() const { return ___rchRenderModelComponentName82_84; }
	inline uint8_t* get_address_of_rchRenderModelComponentName82_84() { return &___rchRenderModelComponentName82_84; }
	inline void set_rchRenderModelComponentName82_84(uint8_t value)
	{
		___rchRenderModelComponentName82_84 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName83_85() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName83_85)); }
	inline uint8_t get_rchRenderModelComponentName83_85() const { return ___rchRenderModelComponentName83_85; }
	inline uint8_t* get_address_of_rchRenderModelComponentName83_85() { return &___rchRenderModelComponentName83_85; }
	inline void set_rchRenderModelComponentName83_85(uint8_t value)
	{
		___rchRenderModelComponentName83_85 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName84_86() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName84_86)); }
	inline uint8_t get_rchRenderModelComponentName84_86() const { return ___rchRenderModelComponentName84_86; }
	inline uint8_t* get_address_of_rchRenderModelComponentName84_86() { return &___rchRenderModelComponentName84_86; }
	inline void set_rchRenderModelComponentName84_86(uint8_t value)
	{
		___rchRenderModelComponentName84_86 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName85_87() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName85_87)); }
	inline uint8_t get_rchRenderModelComponentName85_87() const { return ___rchRenderModelComponentName85_87; }
	inline uint8_t* get_address_of_rchRenderModelComponentName85_87() { return &___rchRenderModelComponentName85_87; }
	inline void set_rchRenderModelComponentName85_87(uint8_t value)
	{
		___rchRenderModelComponentName85_87 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName86_88() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName86_88)); }
	inline uint8_t get_rchRenderModelComponentName86_88() const { return ___rchRenderModelComponentName86_88; }
	inline uint8_t* get_address_of_rchRenderModelComponentName86_88() { return &___rchRenderModelComponentName86_88; }
	inline void set_rchRenderModelComponentName86_88(uint8_t value)
	{
		___rchRenderModelComponentName86_88 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName87_89() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName87_89)); }
	inline uint8_t get_rchRenderModelComponentName87_89() const { return ___rchRenderModelComponentName87_89; }
	inline uint8_t* get_address_of_rchRenderModelComponentName87_89() { return &___rchRenderModelComponentName87_89; }
	inline void set_rchRenderModelComponentName87_89(uint8_t value)
	{
		___rchRenderModelComponentName87_89 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName88_90() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName88_90)); }
	inline uint8_t get_rchRenderModelComponentName88_90() const { return ___rchRenderModelComponentName88_90; }
	inline uint8_t* get_address_of_rchRenderModelComponentName88_90() { return &___rchRenderModelComponentName88_90; }
	inline void set_rchRenderModelComponentName88_90(uint8_t value)
	{
		___rchRenderModelComponentName88_90 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName89_91() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName89_91)); }
	inline uint8_t get_rchRenderModelComponentName89_91() const { return ___rchRenderModelComponentName89_91; }
	inline uint8_t* get_address_of_rchRenderModelComponentName89_91() { return &___rchRenderModelComponentName89_91; }
	inline void set_rchRenderModelComponentName89_91(uint8_t value)
	{
		___rchRenderModelComponentName89_91 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName90_92() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName90_92)); }
	inline uint8_t get_rchRenderModelComponentName90_92() const { return ___rchRenderModelComponentName90_92; }
	inline uint8_t* get_address_of_rchRenderModelComponentName90_92() { return &___rchRenderModelComponentName90_92; }
	inline void set_rchRenderModelComponentName90_92(uint8_t value)
	{
		___rchRenderModelComponentName90_92 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName91_93() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName91_93)); }
	inline uint8_t get_rchRenderModelComponentName91_93() const { return ___rchRenderModelComponentName91_93; }
	inline uint8_t* get_address_of_rchRenderModelComponentName91_93() { return &___rchRenderModelComponentName91_93; }
	inline void set_rchRenderModelComponentName91_93(uint8_t value)
	{
		___rchRenderModelComponentName91_93 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName92_94() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName92_94)); }
	inline uint8_t get_rchRenderModelComponentName92_94() const { return ___rchRenderModelComponentName92_94; }
	inline uint8_t* get_address_of_rchRenderModelComponentName92_94() { return &___rchRenderModelComponentName92_94; }
	inline void set_rchRenderModelComponentName92_94(uint8_t value)
	{
		___rchRenderModelComponentName92_94 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName93_95() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName93_95)); }
	inline uint8_t get_rchRenderModelComponentName93_95() const { return ___rchRenderModelComponentName93_95; }
	inline uint8_t* get_address_of_rchRenderModelComponentName93_95() { return &___rchRenderModelComponentName93_95; }
	inline void set_rchRenderModelComponentName93_95(uint8_t value)
	{
		___rchRenderModelComponentName93_95 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName94_96() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName94_96)); }
	inline uint8_t get_rchRenderModelComponentName94_96() const { return ___rchRenderModelComponentName94_96; }
	inline uint8_t* get_address_of_rchRenderModelComponentName94_96() { return &___rchRenderModelComponentName94_96; }
	inline void set_rchRenderModelComponentName94_96(uint8_t value)
	{
		___rchRenderModelComponentName94_96 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName95_97() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName95_97)); }
	inline uint8_t get_rchRenderModelComponentName95_97() const { return ___rchRenderModelComponentName95_97; }
	inline uint8_t* get_address_of_rchRenderModelComponentName95_97() { return &___rchRenderModelComponentName95_97; }
	inline void set_rchRenderModelComponentName95_97(uint8_t value)
	{
		___rchRenderModelComponentName95_97 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName96_98() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName96_98)); }
	inline uint8_t get_rchRenderModelComponentName96_98() const { return ___rchRenderModelComponentName96_98; }
	inline uint8_t* get_address_of_rchRenderModelComponentName96_98() { return &___rchRenderModelComponentName96_98; }
	inline void set_rchRenderModelComponentName96_98(uint8_t value)
	{
		___rchRenderModelComponentName96_98 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName97_99() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName97_99)); }
	inline uint8_t get_rchRenderModelComponentName97_99() const { return ___rchRenderModelComponentName97_99; }
	inline uint8_t* get_address_of_rchRenderModelComponentName97_99() { return &___rchRenderModelComponentName97_99; }
	inline void set_rchRenderModelComponentName97_99(uint8_t value)
	{
		___rchRenderModelComponentName97_99 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName98_100() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName98_100)); }
	inline uint8_t get_rchRenderModelComponentName98_100() const { return ___rchRenderModelComponentName98_100; }
	inline uint8_t* get_address_of_rchRenderModelComponentName98_100() { return &___rchRenderModelComponentName98_100; }
	inline void set_rchRenderModelComponentName98_100(uint8_t value)
	{
		___rchRenderModelComponentName98_100 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName99_101() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName99_101)); }
	inline uint8_t get_rchRenderModelComponentName99_101() const { return ___rchRenderModelComponentName99_101; }
	inline uint8_t* get_address_of_rchRenderModelComponentName99_101() { return &___rchRenderModelComponentName99_101; }
	inline void set_rchRenderModelComponentName99_101(uint8_t value)
	{
		___rchRenderModelComponentName99_101 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName100_102() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName100_102)); }
	inline uint8_t get_rchRenderModelComponentName100_102() const { return ___rchRenderModelComponentName100_102; }
	inline uint8_t* get_address_of_rchRenderModelComponentName100_102() { return &___rchRenderModelComponentName100_102; }
	inline void set_rchRenderModelComponentName100_102(uint8_t value)
	{
		___rchRenderModelComponentName100_102 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName101_103() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName101_103)); }
	inline uint8_t get_rchRenderModelComponentName101_103() const { return ___rchRenderModelComponentName101_103; }
	inline uint8_t* get_address_of_rchRenderModelComponentName101_103() { return &___rchRenderModelComponentName101_103; }
	inline void set_rchRenderModelComponentName101_103(uint8_t value)
	{
		___rchRenderModelComponentName101_103 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName102_104() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName102_104)); }
	inline uint8_t get_rchRenderModelComponentName102_104() const { return ___rchRenderModelComponentName102_104; }
	inline uint8_t* get_address_of_rchRenderModelComponentName102_104() { return &___rchRenderModelComponentName102_104; }
	inline void set_rchRenderModelComponentName102_104(uint8_t value)
	{
		___rchRenderModelComponentName102_104 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName103_105() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName103_105)); }
	inline uint8_t get_rchRenderModelComponentName103_105() const { return ___rchRenderModelComponentName103_105; }
	inline uint8_t* get_address_of_rchRenderModelComponentName103_105() { return &___rchRenderModelComponentName103_105; }
	inline void set_rchRenderModelComponentName103_105(uint8_t value)
	{
		___rchRenderModelComponentName103_105 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName104_106() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName104_106)); }
	inline uint8_t get_rchRenderModelComponentName104_106() const { return ___rchRenderModelComponentName104_106; }
	inline uint8_t* get_address_of_rchRenderModelComponentName104_106() { return &___rchRenderModelComponentName104_106; }
	inline void set_rchRenderModelComponentName104_106(uint8_t value)
	{
		___rchRenderModelComponentName104_106 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName105_107() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName105_107)); }
	inline uint8_t get_rchRenderModelComponentName105_107() const { return ___rchRenderModelComponentName105_107; }
	inline uint8_t* get_address_of_rchRenderModelComponentName105_107() { return &___rchRenderModelComponentName105_107; }
	inline void set_rchRenderModelComponentName105_107(uint8_t value)
	{
		___rchRenderModelComponentName105_107 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName106_108() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName106_108)); }
	inline uint8_t get_rchRenderModelComponentName106_108() const { return ___rchRenderModelComponentName106_108; }
	inline uint8_t* get_address_of_rchRenderModelComponentName106_108() { return &___rchRenderModelComponentName106_108; }
	inline void set_rchRenderModelComponentName106_108(uint8_t value)
	{
		___rchRenderModelComponentName106_108 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName107_109() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName107_109)); }
	inline uint8_t get_rchRenderModelComponentName107_109() const { return ___rchRenderModelComponentName107_109; }
	inline uint8_t* get_address_of_rchRenderModelComponentName107_109() { return &___rchRenderModelComponentName107_109; }
	inline void set_rchRenderModelComponentName107_109(uint8_t value)
	{
		___rchRenderModelComponentName107_109 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName108_110() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName108_110)); }
	inline uint8_t get_rchRenderModelComponentName108_110() const { return ___rchRenderModelComponentName108_110; }
	inline uint8_t* get_address_of_rchRenderModelComponentName108_110() { return &___rchRenderModelComponentName108_110; }
	inline void set_rchRenderModelComponentName108_110(uint8_t value)
	{
		___rchRenderModelComponentName108_110 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName109_111() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName109_111)); }
	inline uint8_t get_rchRenderModelComponentName109_111() const { return ___rchRenderModelComponentName109_111; }
	inline uint8_t* get_address_of_rchRenderModelComponentName109_111() { return &___rchRenderModelComponentName109_111; }
	inline void set_rchRenderModelComponentName109_111(uint8_t value)
	{
		___rchRenderModelComponentName109_111 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName110_112() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName110_112)); }
	inline uint8_t get_rchRenderModelComponentName110_112() const { return ___rchRenderModelComponentName110_112; }
	inline uint8_t* get_address_of_rchRenderModelComponentName110_112() { return &___rchRenderModelComponentName110_112; }
	inline void set_rchRenderModelComponentName110_112(uint8_t value)
	{
		___rchRenderModelComponentName110_112 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName111_113() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName111_113)); }
	inline uint8_t get_rchRenderModelComponentName111_113() const { return ___rchRenderModelComponentName111_113; }
	inline uint8_t* get_address_of_rchRenderModelComponentName111_113() { return &___rchRenderModelComponentName111_113; }
	inline void set_rchRenderModelComponentName111_113(uint8_t value)
	{
		___rchRenderModelComponentName111_113 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName112_114() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName112_114)); }
	inline uint8_t get_rchRenderModelComponentName112_114() const { return ___rchRenderModelComponentName112_114; }
	inline uint8_t* get_address_of_rchRenderModelComponentName112_114() { return &___rchRenderModelComponentName112_114; }
	inline void set_rchRenderModelComponentName112_114(uint8_t value)
	{
		___rchRenderModelComponentName112_114 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName113_115() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName113_115)); }
	inline uint8_t get_rchRenderModelComponentName113_115() const { return ___rchRenderModelComponentName113_115; }
	inline uint8_t* get_address_of_rchRenderModelComponentName113_115() { return &___rchRenderModelComponentName113_115; }
	inline void set_rchRenderModelComponentName113_115(uint8_t value)
	{
		___rchRenderModelComponentName113_115 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName114_116() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName114_116)); }
	inline uint8_t get_rchRenderModelComponentName114_116() const { return ___rchRenderModelComponentName114_116; }
	inline uint8_t* get_address_of_rchRenderModelComponentName114_116() { return &___rchRenderModelComponentName114_116; }
	inline void set_rchRenderModelComponentName114_116(uint8_t value)
	{
		___rchRenderModelComponentName114_116 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName115_117() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName115_117)); }
	inline uint8_t get_rchRenderModelComponentName115_117() const { return ___rchRenderModelComponentName115_117; }
	inline uint8_t* get_address_of_rchRenderModelComponentName115_117() { return &___rchRenderModelComponentName115_117; }
	inline void set_rchRenderModelComponentName115_117(uint8_t value)
	{
		___rchRenderModelComponentName115_117 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName116_118() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName116_118)); }
	inline uint8_t get_rchRenderModelComponentName116_118() const { return ___rchRenderModelComponentName116_118; }
	inline uint8_t* get_address_of_rchRenderModelComponentName116_118() { return &___rchRenderModelComponentName116_118; }
	inline void set_rchRenderModelComponentName116_118(uint8_t value)
	{
		___rchRenderModelComponentName116_118 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName117_119() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName117_119)); }
	inline uint8_t get_rchRenderModelComponentName117_119() const { return ___rchRenderModelComponentName117_119; }
	inline uint8_t* get_address_of_rchRenderModelComponentName117_119() { return &___rchRenderModelComponentName117_119; }
	inline void set_rchRenderModelComponentName117_119(uint8_t value)
	{
		___rchRenderModelComponentName117_119 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName118_120() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName118_120)); }
	inline uint8_t get_rchRenderModelComponentName118_120() const { return ___rchRenderModelComponentName118_120; }
	inline uint8_t* get_address_of_rchRenderModelComponentName118_120() { return &___rchRenderModelComponentName118_120; }
	inline void set_rchRenderModelComponentName118_120(uint8_t value)
	{
		___rchRenderModelComponentName118_120 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName119_121() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName119_121)); }
	inline uint8_t get_rchRenderModelComponentName119_121() const { return ___rchRenderModelComponentName119_121; }
	inline uint8_t* get_address_of_rchRenderModelComponentName119_121() { return &___rchRenderModelComponentName119_121; }
	inline void set_rchRenderModelComponentName119_121(uint8_t value)
	{
		___rchRenderModelComponentName119_121 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName120_122() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName120_122)); }
	inline uint8_t get_rchRenderModelComponentName120_122() const { return ___rchRenderModelComponentName120_122; }
	inline uint8_t* get_address_of_rchRenderModelComponentName120_122() { return &___rchRenderModelComponentName120_122; }
	inline void set_rchRenderModelComponentName120_122(uint8_t value)
	{
		___rchRenderModelComponentName120_122 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName121_123() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName121_123)); }
	inline uint8_t get_rchRenderModelComponentName121_123() const { return ___rchRenderModelComponentName121_123; }
	inline uint8_t* get_address_of_rchRenderModelComponentName121_123() { return &___rchRenderModelComponentName121_123; }
	inline void set_rchRenderModelComponentName121_123(uint8_t value)
	{
		___rchRenderModelComponentName121_123 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName122_124() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName122_124)); }
	inline uint8_t get_rchRenderModelComponentName122_124() const { return ___rchRenderModelComponentName122_124; }
	inline uint8_t* get_address_of_rchRenderModelComponentName122_124() { return &___rchRenderModelComponentName122_124; }
	inline void set_rchRenderModelComponentName122_124(uint8_t value)
	{
		___rchRenderModelComponentName122_124 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName123_125() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName123_125)); }
	inline uint8_t get_rchRenderModelComponentName123_125() const { return ___rchRenderModelComponentName123_125; }
	inline uint8_t* get_address_of_rchRenderModelComponentName123_125() { return &___rchRenderModelComponentName123_125; }
	inline void set_rchRenderModelComponentName123_125(uint8_t value)
	{
		___rchRenderModelComponentName123_125 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName124_126() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName124_126)); }
	inline uint8_t get_rchRenderModelComponentName124_126() const { return ___rchRenderModelComponentName124_126; }
	inline uint8_t* get_address_of_rchRenderModelComponentName124_126() { return &___rchRenderModelComponentName124_126; }
	inline void set_rchRenderModelComponentName124_126(uint8_t value)
	{
		___rchRenderModelComponentName124_126 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName125_127() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName125_127)); }
	inline uint8_t get_rchRenderModelComponentName125_127() const { return ___rchRenderModelComponentName125_127; }
	inline uint8_t* get_address_of_rchRenderModelComponentName125_127() { return &___rchRenderModelComponentName125_127; }
	inline void set_rchRenderModelComponentName125_127(uint8_t value)
	{
		___rchRenderModelComponentName125_127 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName126_128() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName126_128)); }
	inline uint8_t get_rchRenderModelComponentName126_128() const { return ___rchRenderModelComponentName126_128; }
	inline uint8_t* get_address_of_rchRenderModelComponentName126_128() { return &___rchRenderModelComponentName126_128; }
	inline void set_rchRenderModelComponentName126_128(uint8_t value)
	{
		___rchRenderModelComponentName126_128 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName127_129() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName127_129)); }
	inline uint8_t get_rchRenderModelComponentName127_129() const { return ___rchRenderModelComponentName127_129; }
	inline uint8_t* get_address_of_rchRenderModelComponentName127_129() { return &___rchRenderModelComponentName127_129; }
	inline void set_rchRenderModelComponentName127_129(uint8_t value)
	{
		___rchRenderModelComponentName127_129 = value;
	}
};


// Valve.VR.SteamVR_Action`2<Valve.VR.SteamVR_Action_Boolean_Source_Map,Valve.VR.SteamVR_Action_Boolean_Source>
struct  SteamVR_Action_2_tEF35EA9CF866C4CE33A6702A6D71E8DDE8081AC8  : public SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734
{
public:
	// SourceMap Valve.VR.SteamVR_Action`2::sourceMap
	SteamVR_Action_Boolean_Source_Map_tF5558AC3C11798E60DC5152DD2FB5E835D79AA3B * ___sourceMap_4;
	// System.Boolean Valve.VR.SteamVR_Action`2::initialized
	bool ___initialized_5;

public:
	inline static int32_t get_offset_of_sourceMap_4() { return static_cast<int32_t>(offsetof(SteamVR_Action_2_tEF35EA9CF866C4CE33A6702A6D71E8DDE8081AC8, ___sourceMap_4)); }
	inline SteamVR_Action_Boolean_Source_Map_tF5558AC3C11798E60DC5152DD2FB5E835D79AA3B * get_sourceMap_4() const { return ___sourceMap_4; }
	inline SteamVR_Action_Boolean_Source_Map_tF5558AC3C11798E60DC5152DD2FB5E835D79AA3B ** get_address_of_sourceMap_4() { return &___sourceMap_4; }
	inline void set_sourceMap_4(SteamVR_Action_Boolean_Source_Map_tF5558AC3C11798E60DC5152DD2FB5E835D79AA3B * value)
	{
		___sourceMap_4 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___sourceMap_4), (void*)value);
	}

	inline static int32_t get_offset_of_initialized_5() { return static_cast<int32_t>(offsetof(SteamVR_Action_2_tEF35EA9CF866C4CE33A6702A6D71E8DDE8081AC8, ___initialized_5)); }
	inline bool get_initialized_5() const { return ___initialized_5; }
	inline bool* get_address_of_initialized_5() { return &___initialized_5; }
	inline void set_initialized_5(bool value)
	{
		___initialized_5 = value;
	}
};


// Valve.VR.SteamVR_Action`2<Valve.VR.SteamVR_Action_Pose_Source_Map`1<Valve.VR.SteamVR_Action_Pose_Source>,Valve.VR.SteamVR_Action_Pose_Source>
struct  SteamVR_Action_2_tDED2DB9236CA9398BCDCB18DB8DDA3DB1D98FBAC  : public SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734
{
public:
	// SourceMap Valve.VR.SteamVR_Action`2::sourceMap
	SteamVR_Action_Pose_Source_Map_1_t191C12A385C6BE9645B171973AA0141ECCBA76A9 * ___sourceMap_4;
	// System.Boolean Valve.VR.SteamVR_Action`2::initialized
	bool ___initialized_5;

public:
	inline static int32_t get_offset_of_sourceMap_4() { return static_cast<int32_t>(offsetof(SteamVR_Action_2_tDED2DB9236CA9398BCDCB18DB8DDA3DB1D98FBAC, ___sourceMap_4)); }
	inline SteamVR_Action_Pose_Source_Map_1_t191C12A385C6BE9645B171973AA0141ECCBA76A9 * get_sourceMap_4() const { return ___sourceMap_4; }
	inline SteamVR_Action_Pose_Source_Map_1_t191C12A385C6BE9645B171973AA0141ECCBA76A9 ** get_address_of_sourceMap_4() { return &___sourceMap_4; }
	inline void set_sourceMap_4(SteamVR_Action_Pose_Source_Map_1_t191C12A385C6BE9645B171973AA0141ECCBA76A9 * value)
	{
		___sourceMap_4 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___sourceMap_4), (void*)value);
	}

	inline static int32_t get_offset_of_initialized_5() { return static_cast<int32_t>(offsetof(SteamVR_Action_2_tDED2DB9236CA9398BCDCB18DB8DDA3DB1D98FBAC, ___initialized_5)); }
	inline bool get_initialized_5() const { return ___initialized_5; }
	inline bool* get_address_of_initialized_5() { return &___initialized_5; }
	inline void set_initialized_5(bool value)
	{
		___initialized_5 = value;
	}
};


// Valve.VR.SteamVR_Action`2<Valve.VR.SteamVR_Action_Single_Source_Map,Valve.VR.SteamVR_Action_Single_Source>
struct  SteamVR_Action_2_t6C5A72BCD96947140E949B195C2578D4AE46E170  : public SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734
{
public:
	// SourceMap Valve.VR.SteamVR_Action`2::sourceMap
	SteamVR_Action_Single_Source_Map_tBD46D15F4FCB5A4B6BDA2B1FE96035D4DDBDBA37 * ___sourceMap_4;
	// System.Boolean Valve.VR.SteamVR_Action`2::initialized
	bool ___initialized_5;

public:
	inline static int32_t get_offset_of_sourceMap_4() { return static_cast<int32_t>(offsetof(SteamVR_Action_2_t6C5A72BCD96947140E949B195C2578D4AE46E170, ___sourceMap_4)); }
	inline SteamVR_Action_Single_Source_Map_tBD46D15F4FCB5A4B6BDA2B1FE96035D4DDBDBA37 * get_sourceMap_4() const { return ___sourceMap_4; }
	inline SteamVR_Action_Single_Source_Map_tBD46D15F4FCB5A4B6BDA2B1FE96035D4DDBDBA37 ** get_address_of_sourceMap_4() { return &___sourceMap_4; }
	inline void set_sourceMap_4(SteamVR_Action_Single_Source_Map_tBD46D15F4FCB5A4B6BDA2B1FE96035D4DDBDBA37 * value)
	{
		___sourceMap_4 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___sourceMap_4), (void*)value);
	}

	inline static int32_t get_offset_of_initialized_5() { return static_cast<int32_t>(offsetof(SteamVR_Action_2_t6C5A72BCD96947140E949B195C2578D4AE46E170, ___initialized_5)); }
	inline bool get_initialized_5() const { return ___initialized_5; }
	inline bool* get_address_of_initialized_5() { return &___initialized_5; }
	inline void set_initialized_5(bool value)
	{
		___initialized_5 = value;
	}
};


// Valve.VR.SteamVR_Action`2<Valve.VR.SteamVR_Action_Skeleton_Source_Map,Valve.VR.SteamVR_Action_Skeleton_Source>
struct  SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D  : public SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734
{
public:
	// SourceMap Valve.VR.SteamVR_Action`2::sourceMap
	SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * ___sourceMap_4;
	// System.Boolean Valve.VR.SteamVR_Action`2::initialized
	bool ___initialized_5;

public:
	inline static int32_t get_offset_of_sourceMap_4() { return static_cast<int32_t>(offsetof(SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D, ___sourceMap_4)); }
	inline SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * get_sourceMap_4() const { return ___sourceMap_4; }
	inline SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB ** get_address_of_sourceMap_4() { return &___sourceMap_4; }
	inline void set_sourceMap_4(SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * value)
	{
		___sourceMap_4 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___sourceMap_4), (void*)value);
	}

	inline static int32_t get_offset_of_initialized_5() { return static_cast<int32_t>(offsetof(SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D, ___initialized_5)); }
	inline bool get_initialized_5() const { return ___initialized_5; }
	inline bool* get_address_of_initialized_5() { return &___initialized_5; }
	inline void set_initialized_5(bool value)
	{
		___initialized_5 = value;
	}
};


// Valve.VR.SteamVR_Action`2<Valve.VR.SteamVR_Action_Vector2_Source_Map,Valve.VR.SteamVR_Action_Vector2_Source>
struct  SteamVR_Action_2_t83C041411A0CA61D62EE3A4F510D83333D049258  : public SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734
{
public:
	// SourceMap Valve.VR.SteamVR_Action`2::sourceMap
	SteamVR_Action_Vector2_Source_Map_tA43BF0AE8C89C3094C8375D1A82AE8676DA218D3 * ___sourceMap_4;
	// System.Boolean Valve.VR.SteamVR_Action`2::initialized
	bool ___initialized_5;

public:
	inline static int32_t get_offset_of_sourceMap_4() { return static_cast<int32_t>(offsetof(SteamVR_Action_2_t83C041411A0CA61D62EE3A4F510D83333D049258, ___sourceMap_4)); }
	inline SteamVR_Action_Vector2_Source_Map_tA43BF0AE8C89C3094C8375D1A82AE8676DA218D3 * get_sourceMap_4() const { return ___sourceMap_4; }
	inline SteamVR_Action_Vector2_Source_Map_tA43BF0AE8C89C3094C8375D1A82AE8676DA218D3 ** get_address_of_sourceMap_4() { return &___sourceMap_4; }
	inline void set_sourceMap_4(SteamVR_Action_Vector2_Source_Map_tA43BF0AE8C89C3094C8375D1A82AE8676DA218D3 * value)
	{
		___sourceMap_4 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___sourceMap_4), (void*)value);
	}

	inline static int32_t get_offset_of_initialized_5() { return static_cast<int32_t>(offsetof(SteamVR_Action_2_t83C041411A0CA61D62EE3A4F510D83333D049258, ___initialized_5)); }
	inline bool get_initialized_5() const { return ___initialized_5; }
	inline bool* get_address_of_initialized_5() { return &___initialized_5; }
	inline void set_initialized_5(bool value)
	{
		___initialized_5 = value;
	}
};


// Valve.VR.SteamVR_Action`2<Valve.VR.SteamVR_Action_Vibration_Source_Map,Valve.VR.SteamVR_Action_Vibration_Source>
struct  SteamVR_Action_2_t2615F9F41BCBF5EA1EE3A8AF266CE58FAFF6521D  : public SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734
{
public:
	// SourceMap Valve.VR.SteamVR_Action`2::sourceMap
	SteamVR_Action_Vibration_Source_Map_t81B9741E979634A2E0A6D7AE2518F89F3481047A * ___sourceMap_4;
	// System.Boolean Valve.VR.SteamVR_Action`2::initialized
	bool ___initialized_5;

public:
	inline static int32_t get_offset_of_sourceMap_4() { return static_cast<int32_t>(offsetof(SteamVR_Action_2_t2615F9F41BCBF5EA1EE3A8AF266CE58FAFF6521D, ___sourceMap_4)); }
	inline SteamVR_Action_Vibration_Source_Map_t81B9741E979634A2E0A6D7AE2518F89F3481047A * get_sourceMap_4() const { return ___sourceMap_4; }
	inline SteamVR_Action_Vibration_Source_Map_t81B9741E979634A2E0A6D7AE2518F89F3481047A ** get_address_of_sourceMap_4() { return &___sourceMap_4; }
	inline void set_sourceMap_4(SteamVR_Action_Vibration_Source_Map_t81B9741E979634A2E0A6D7AE2518F89F3481047A * value)
	{
		___sourceMap_4 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___sourceMap_4), (void*)value);
	}

	inline static int32_t get_offset_of_initialized_5() { return static_cast<int32_t>(offsetof(SteamVR_Action_2_t2615F9F41BCBF5EA1EE3A8AF266CE58FAFF6521D, ___initialized_5)); }
	inline bool get_initialized_5() const { return ___initialized_5; }
	inline bool* get_address_of_initialized_5() { return &___initialized_5; }
	inline void set_initialized_5(bool value)
	{
		___initialized_5 = value;
	}
};


// Valve.VR.SteamVR_HistoryBuffer
struct  SteamVR_HistoryBuffer_tB82B2932C03165695AE1BE7BE8EDCADC6AE4A6E8  : public SteamVR_RingBuffer_1_t57851A70FC812E73F42BD0FCB349E7612005C7A4
{
public:

public:
};


// Valve.VR.VREvent_ApplicationLaunch_t
struct  VREvent_ApplicationLaunch_t_t19D5E8E56A4A34EBA9497F8560DDBC045BC22389 
{
public:
	// System.UInt32 Valve.VR.VREvent_ApplicationLaunch_t::pid
	uint32_t ___pid_0;
	// System.UInt32 Valve.VR.VREvent_ApplicationLaunch_t::unArgsHandle
	uint32_t ___unArgsHandle_1;

public:
	inline static int32_t get_offset_of_pid_0() { return static_cast<int32_t>(offsetof(VREvent_ApplicationLaunch_t_t19D5E8E56A4A34EBA9497F8560DDBC045BC22389, ___pid_0)); }
	inline uint32_t get_pid_0() const { return ___pid_0; }
	inline uint32_t* get_address_of_pid_0() { return &___pid_0; }
	inline void set_pid_0(uint32_t value)
	{
		___pid_0 = value;
	}

	inline static int32_t get_offset_of_unArgsHandle_1() { return static_cast<int32_t>(offsetof(VREvent_ApplicationLaunch_t_t19D5E8E56A4A34EBA9497F8560DDBC045BC22389, ___unArgsHandle_1)); }
	inline uint32_t get_unArgsHandle_1() const { return ___unArgsHandle_1; }
	inline uint32_t* get_address_of_unArgsHandle_1() { return &___unArgsHandle_1; }
	inline void set_unArgsHandle_1(uint32_t value)
	{
		___unArgsHandle_1 = value;
	}
};


// Valve.VR.VREvent_Chaperone_t
struct  VREvent_Chaperone_t_tCFAB4B0381A4EF5741D86EF3A75514337B44EA85 
{
public:
	// System.UInt64 Valve.VR.VREvent_Chaperone_t::m_nPreviousUniverse
	uint64_t ___m_nPreviousUniverse_0;
	// System.UInt64 Valve.VR.VREvent_Chaperone_t::m_nCurrentUniverse
	uint64_t ___m_nCurrentUniverse_1;

public:
	inline static int32_t get_offset_of_m_nPreviousUniverse_0() { return static_cast<int32_t>(offsetof(VREvent_Chaperone_t_tCFAB4B0381A4EF5741D86EF3A75514337B44EA85, ___m_nPreviousUniverse_0)); }
	inline uint64_t get_m_nPreviousUniverse_0() const { return ___m_nPreviousUniverse_0; }
	inline uint64_t* get_address_of_m_nPreviousUniverse_0() { return &___m_nPreviousUniverse_0; }
	inline void set_m_nPreviousUniverse_0(uint64_t value)
	{
		___m_nPreviousUniverse_0 = value;
	}

	inline static int32_t get_offset_of_m_nCurrentUniverse_1() { return static_cast<int32_t>(offsetof(VREvent_Chaperone_t_tCFAB4B0381A4EF5741D86EF3A75514337B44EA85, ___m_nCurrentUniverse_1)); }
	inline uint64_t get_m_nCurrentUniverse_1() const { return ___m_nCurrentUniverse_1; }
	inline uint64_t* get_address_of_m_nCurrentUniverse_1() { return &___m_nCurrentUniverse_1; }
	inline void set_m_nCurrentUniverse_1(uint64_t value)
	{
		___m_nCurrentUniverse_1 = value;
	}
};


// Valve.VR.VREvent_Controller_t
struct  VREvent_Controller_t_t5976E21986D7CBB3313289F60169F60680DF5D05 
{
public:
	// System.UInt32 Valve.VR.VREvent_Controller_t::button
	uint32_t ___button_0;

public:
	inline static int32_t get_offset_of_button_0() { return static_cast<int32_t>(offsetof(VREvent_Controller_t_t5976E21986D7CBB3313289F60169F60680DF5D05, ___button_0)); }
	inline uint32_t get_button_0() const { return ___button_0; }
	inline uint32_t* get_address_of_button_0() { return &___button_0; }
	inline void set_button_0(uint32_t value)
	{
		___button_0 = value;
	}
};


// Valve.VR.VREvent_EditingCameraSurface_t
struct  VREvent_EditingCameraSurface_t_t001B622D6CDFD7226DB4337AEE63DB317E6420FC 
{
public:
	// System.UInt64 Valve.VR.VREvent_EditingCameraSurface_t::overlayHandle
	uint64_t ___overlayHandle_0;
	// System.UInt32 Valve.VR.VREvent_EditingCameraSurface_t::nVisualMode
	uint32_t ___nVisualMode_1;

public:
	inline static int32_t get_offset_of_overlayHandle_0() { return static_cast<int32_t>(offsetof(VREvent_EditingCameraSurface_t_t001B622D6CDFD7226DB4337AEE63DB317E6420FC, ___overlayHandle_0)); }
	inline uint64_t get_overlayHandle_0() const { return ___overlayHandle_0; }
	inline uint64_t* get_address_of_overlayHandle_0() { return &___overlayHandle_0; }
	inline void set_overlayHandle_0(uint64_t value)
	{
		___overlayHandle_0 = value;
	}

	inline static int32_t get_offset_of_nVisualMode_1() { return static_cast<int32_t>(offsetof(VREvent_EditingCameraSurface_t_t001B622D6CDFD7226DB4337AEE63DB317E6420FC, ___nVisualMode_1)); }
	inline uint32_t get_nVisualMode_1() const { return ___nVisualMode_1; }
	inline uint32_t* get_address_of_nVisualMode_1() { return &___nVisualMode_1; }
	inline void set_nVisualMode_1(uint32_t value)
	{
		___nVisualMode_1 = value;
	}
};


// Valve.VR.VREvent_HapticVibration_t
struct  VREvent_HapticVibration_t_tC31D4D068A151263ADCB11D4C8349D5774AC246F 
{
public:
	// System.UInt64 Valve.VR.VREvent_HapticVibration_t::containerHandle
	uint64_t ___containerHandle_0;
	// System.UInt64 Valve.VR.VREvent_HapticVibration_t::componentHandle
	uint64_t ___componentHandle_1;
	// System.Single Valve.VR.VREvent_HapticVibration_t::fDurationSeconds
	float ___fDurationSeconds_2;
	// System.Single Valve.VR.VREvent_HapticVibration_t::fFrequency
	float ___fFrequency_3;
	// System.Single Valve.VR.VREvent_HapticVibration_t::fAmplitude
	float ___fAmplitude_4;

public:
	inline static int32_t get_offset_of_containerHandle_0() { return static_cast<int32_t>(offsetof(VREvent_HapticVibration_t_tC31D4D068A151263ADCB11D4C8349D5774AC246F, ___containerHandle_0)); }
	inline uint64_t get_containerHandle_0() const { return ___containerHandle_0; }
	inline uint64_t* get_address_of_containerHandle_0() { return &___containerHandle_0; }
	inline void set_containerHandle_0(uint64_t value)
	{
		___containerHandle_0 = value;
	}

	inline static int32_t get_offset_of_componentHandle_1() { return static_cast<int32_t>(offsetof(VREvent_HapticVibration_t_tC31D4D068A151263ADCB11D4C8349D5774AC246F, ___componentHandle_1)); }
	inline uint64_t get_componentHandle_1() const { return ___componentHandle_1; }
	inline uint64_t* get_address_of_componentHandle_1() { return &___componentHandle_1; }
	inline void set_componentHandle_1(uint64_t value)
	{
		___componentHandle_1 = value;
	}

	inline static int32_t get_offset_of_fDurationSeconds_2() { return static_cast<int32_t>(offsetof(VREvent_HapticVibration_t_tC31D4D068A151263ADCB11D4C8349D5774AC246F, ___fDurationSeconds_2)); }
	inline float get_fDurationSeconds_2() const { return ___fDurationSeconds_2; }
	inline float* get_address_of_fDurationSeconds_2() { return &___fDurationSeconds_2; }
	inline void set_fDurationSeconds_2(float value)
	{
		___fDurationSeconds_2 = value;
	}

	inline static int32_t get_offset_of_fFrequency_3() { return static_cast<int32_t>(offsetof(VREvent_HapticVibration_t_tC31D4D068A151263ADCB11D4C8349D5774AC246F, ___fFrequency_3)); }
	inline float get_fFrequency_3() const { return ___fFrequency_3; }
	inline float* get_address_of_fFrequency_3() { return &___fFrequency_3; }
	inline void set_fFrequency_3(float value)
	{
		___fFrequency_3 = value;
	}

	inline static int32_t get_offset_of_fAmplitude_4() { return static_cast<int32_t>(offsetof(VREvent_HapticVibration_t_tC31D4D068A151263ADCB11D4C8349D5774AC246F, ___fAmplitude_4)); }
	inline float get_fAmplitude_4() const { return ___fAmplitude_4; }
	inline float* get_address_of_fAmplitude_4() { return &___fAmplitude_4; }
	inline void set_fAmplitude_4(float value)
	{
		___fAmplitude_4 = value;
	}
};


// Valve.VR.VREvent_InputActionManifestLoad_t
struct  VREvent_InputActionManifestLoad_t_t80FAEB7CDAA5F4A1992C9701923F26D79C3E3A76 
{
public:
	// System.UInt64 Valve.VR.VREvent_InputActionManifestLoad_t::pathAppKey
	uint64_t ___pathAppKey_0;
	// System.UInt64 Valve.VR.VREvent_InputActionManifestLoad_t::pathMessage
	uint64_t ___pathMessage_1;
	// System.UInt64 Valve.VR.VREvent_InputActionManifestLoad_t::pathMessageParam
	uint64_t ___pathMessageParam_2;
	// System.UInt64 Valve.VR.VREvent_InputActionManifestLoad_t::pathManifestPath
	uint64_t ___pathManifestPath_3;

public:
	inline static int32_t get_offset_of_pathAppKey_0() { return static_cast<int32_t>(offsetof(VREvent_InputActionManifestLoad_t_t80FAEB7CDAA5F4A1992C9701923F26D79C3E3A76, ___pathAppKey_0)); }
	inline uint64_t get_pathAppKey_0() const { return ___pathAppKey_0; }
	inline uint64_t* get_address_of_pathAppKey_0() { return &___pathAppKey_0; }
	inline void set_pathAppKey_0(uint64_t value)
	{
		___pathAppKey_0 = value;
	}

	inline static int32_t get_offset_of_pathMessage_1() { return static_cast<int32_t>(offsetof(VREvent_InputActionManifestLoad_t_t80FAEB7CDAA5F4A1992C9701923F26D79C3E3A76, ___pathMessage_1)); }
	inline uint64_t get_pathMessage_1() const { return ___pathMessage_1; }
	inline uint64_t* get_address_of_pathMessage_1() { return &___pathMessage_1; }
	inline void set_pathMessage_1(uint64_t value)
	{
		___pathMessage_1 = value;
	}

	inline static int32_t get_offset_of_pathMessageParam_2() { return static_cast<int32_t>(offsetof(VREvent_InputActionManifestLoad_t_t80FAEB7CDAA5F4A1992C9701923F26D79C3E3A76, ___pathMessageParam_2)); }
	inline uint64_t get_pathMessageParam_2() const { return ___pathMessageParam_2; }
	inline uint64_t* get_address_of_pathMessageParam_2() { return &___pathMessageParam_2; }
	inline void set_pathMessageParam_2(uint64_t value)
	{
		___pathMessageParam_2 = value;
	}

	inline static int32_t get_offset_of_pathManifestPath_3() { return static_cast<int32_t>(offsetof(VREvent_InputActionManifestLoad_t_t80FAEB7CDAA5F4A1992C9701923F26D79C3E3A76, ___pathManifestPath_3)); }
	inline uint64_t get_pathManifestPath_3() const { return ___pathManifestPath_3; }
	inline uint64_t* get_address_of_pathManifestPath_3() { return &___pathManifestPath_3; }
	inline void set_pathManifestPath_3(uint64_t value)
	{
		___pathManifestPath_3 = value;
	}
};


// Valve.VR.VREvent_InputBindingLoad_t
struct  VREvent_InputBindingLoad_t_tC758CE9776D2810CD958CB23032BE745D51E1EED 
{
public:
	// System.UInt64 Valve.VR.VREvent_InputBindingLoad_t::ulAppContainer
	uint64_t ___ulAppContainer_0;
	// System.UInt64 Valve.VR.VREvent_InputBindingLoad_t::pathMessage
	uint64_t ___pathMessage_1;
	// System.UInt64 Valve.VR.VREvent_InputBindingLoad_t::pathUrl
	uint64_t ___pathUrl_2;
	// System.UInt64 Valve.VR.VREvent_InputBindingLoad_t::pathControllerType
	uint64_t ___pathControllerType_3;

public:
	inline static int32_t get_offset_of_ulAppContainer_0() { return static_cast<int32_t>(offsetof(VREvent_InputBindingLoad_t_tC758CE9776D2810CD958CB23032BE745D51E1EED, ___ulAppContainer_0)); }
	inline uint64_t get_ulAppContainer_0() const { return ___ulAppContainer_0; }
	inline uint64_t* get_address_of_ulAppContainer_0() { return &___ulAppContainer_0; }
	inline void set_ulAppContainer_0(uint64_t value)
	{
		___ulAppContainer_0 = value;
	}

	inline static int32_t get_offset_of_pathMessage_1() { return static_cast<int32_t>(offsetof(VREvent_InputBindingLoad_t_tC758CE9776D2810CD958CB23032BE745D51E1EED, ___pathMessage_1)); }
	inline uint64_t get_pathMessage_1() const { return ___pathMessage_1; }
	inline uint64_t* get_address_of_pathMessage_1() { return &___pathMessage_1; }
	inline void set_pathMessage_1(uint64_t value)
	{
		___pathMessage_1 = value;
	}

	inline static int32_t get_offset_of_pathUrl_2() { return static_cast<int32_t>(offsetof(VREvent_InputBindingLoad_t_tC758CE9776D2810CD958CB23032BE745D51E1EED, ___pathUrl_2)); }
	inline uint64_t get_pathUrl_2() const { return ___pathUrl_2; }
	inline uint64_t* get_address_of_pathUrl_2() { return &___pathUrl_2; }
	inline void set_pathUrl_2(uint64_t value)
	{
		___pathUrl_2 = value;
	}

	inline static int32_t get_offset_of_pathControllerType_3() { return static_cast<int32_t>(offsetof(VREvent_InputBindingLoad_t_tC758CE9776D2810CD958CB23032BE745D51E1EED, ___pathControllerType_3)); }
	inline uint64_t get_pathControllerType_3() const { return ___pathControllerType_3; }
	inline uint64_t* get_address_of_pathControllerType_3() { return &___pathControllerType_3; }
	inline void set_pathControllerType_3(uint64_t value)
	{
		___pathControllerType_3 = value;
	}
};


// Valve.VR.VREvent_Ipd_t
struct  VREvent_Ipd_t_tA834CF90F72C0F1C4905DCCCA0D7AF0A3043B400 
{
public:
	// System.Single Valve.VR.VREvent_Ipd_t::ipdMeters
	float ___ipdMeters_0;

public:
	inline static int32_t get_offset_of_ipdMeters_0() { return static_cast<int32_t>(offsetof(VREvent_Ipd_t_tA834CF90F72C0F1C4905DCCCA0D7AF0A3043B400, ___ipdMeters_0)); }
	inline float get_ipdMeters_0() const { return ___ipdMeters_0; }
	inline float* get_address_of_ipdMeters_0() { return &___ipdMeters_0; }
	inline void set_ipdMeters_0(float value)
	{
		___ipdMeters_0 = value;
	}
};


// Valve.VR.VREvent_Keyboard_t
struct  VREvent_Keyboard_t_t0FAA9B97A441A22EC65002BC6FDEB4AF7A045297 
{
public:
	// System.Byte Valve.VR.VREvent_Keyboard_t::cNewInput0
	uint8_t ___cNewInput0_0;
	// System.Byte Valve.VR.VREvent_Keyboard_t::cNewInput1
	uint8_t ___cNewInput1_1;
	// System.Byte Valve.VR.VREvent_Keyboard_t::cNewInput2
	uint8_t ___cNewInput2_2;
	// System.Byte Valve.VR.VREvent_Keyboard_t::cNewInput3
	uint8_t ___cNewInput3_3;
	// System.Byte Valve.VR.VREvent_Keyboard_t::cNewInput4
	uint8_t ___cNewInput4_4;
	// System.Byte Valve.VR.VREvent_Keyboard_t::cNewInput5
	uint8_t ___cNewInput5_5;
	// System.Byte Valve.VR.VREvent_Keyboard_t::cNewInput6
	uint8_t ___cNewInput6_6;
	// System.Byte Valve.VR.VREvent_Keyboard_t::cNewInput7
	uint8_t ___cNewInput7_7;
	// System.UInt64 Valve.VR.VREvent_Keyboard_t::uUserValue
	uint64_t ___uUserValue_8;

public:
	inline static int32_t get_offset_of_cNewInput0_0() { return static_cast<int32_t>(offsetof(VREvent_Keyboard_t_t0FAA9B97A441A22EC65002BC6FDEB4AF7A045297, ___cNewInput0_0)); }
	inline uint8_t get_cNewInput0_0() const { return ___cNewInput0_0; }
	inline uint8_t* get_address_of_cNewInput0_0() { return &___cNewInput0_0; }
	inline void set_cNewInput0_0(uint8_t value)
	{
		___cNewInput0_0 = value;
	}

	inline static int32_t get_offset_of_cNewInput1_1() { return static_cast<int32_t>(offsetof(VREvent_Keyboard_t_t0FAA9B97A441A22EC65002BC6FDEB4AF7A045297, ___cNewInput1_1)); }
	inline uint8_t get_cNewInput1_1() const { return ___cNewInput1_1; }
	inline uint8_t* get_address_of_cNewInput1_1() { return &___cNewInput1_1; }
	inline void set_cNewInput1_1(uint8_t value)
	{
		___cNewInput1_1 = value;
	}

	inline static int32_t get_offset_of_cNewInput2_2() { return static_cast<int32_t>(offsetof(VREvent_Keyboard_t_t0FAA9B97A441A22EC65002BC6FDEB4AF7A045297, ___cNewInput2_2)); }
	inline uint8_t get_cNewInput2_2() const { return ___cNewInput2_2; }
	inline uint8_t* get_address_of_cNewInput2_2() { return &___cNewInput2_2; }
	inline void set_cNewInput2_2(uint8_t value)
	{
		___cNewInput2_2 = value;
	}

	inline static int32_t get_offset_of_cNewInput3_3() { return static_cast<int32_t>(offsetof(VREvent_Keyboard_t_t0FAA9B97A441A22EC65002BC6FDEB4AF7A045297, ___cNewInput3_3)); }
	inline uint8_t get_cNewInput3_3() const { return ___cNewInput3_3; }
	inline uint8_t* get_address_of_cNewInput3_3() { return &___cNewInput3_3; }
	inline void set_cNewInput3_3(uint8_t value)
	{
		___cNewInput3_3 = value;
	}

	inline static int32_t get_offset_of_cNewInput4_4() { return static_cast<int32_t>(offsetof(VREvent_Keyboard_t_t0FAA9B97A441A22EC65002BC6FDEB4AF7A045297, ___cNewInput4_4)); }
	inline uint8_t get_cNewInput4_4() const { return ___cNewInput4_4; }
	inline uint8_t* get_address_of_cNewInput4_4() { return &___cNewInput4_4; }
	inline void set_cNewInput4_4(uint8_t value)
	{
		___cNewInput4_4 = value;
	}

	inline static int32_t get_offset_of_cNewInput5_5() { return static_cast<int32_t>(offsetof(VREvent_Keyboard_t_t0FAA9B97A441A22EC65002BC6FDEB4AF7A045297, ___cNewInput5_5)); }
	inline uint8_t get_cNewInput5_5() const { return ___cNewInput5_5; }
	inline uint8_t* get_address_of_cNewInput5_5() { return &___cNewInput5_5; }
	inline void set_cNewInput5_5(uint8_t value)
	{
		___cNewInput5_5 = value;
	}

	inline static int32_t get_offset_of_cNewInput6_6() { return static_cast<int32_t>(offsetof(VREvent_Keyboard_t_t0FAA9B97A441A22EC65002BC6FDEB4AF7A045297, ___cNewInput6_6)); }
	inline uint8_t get_cNewInput6_6() const { return ___cNewInput6_6; }
	inline uint8_t* get_address_of_cNewInput6_6() { return &___cNewInput6_6; }
	inline void set_cNewInput6_6(uint8_t value)
	{
		___cNewInput6_6 = value;
	}

	inline static int32_t get_offset_of_cNewInput7_7() { return static_cast<int32_t>(offsetof(VREvent_Keyboard_t_t0FAA9B97A441A22EC65002BC6FDEB4AF7A045297, ___cNewInput7_7)); }
	inline uint8_t get_cNewInput7_7() const { return ___cNewInput7_7; }
	inline uint8_t* get_address_of_cNewInput7_7() { return &___cNewInput7_7; }
	inline void set_cNewInput7_7(uint8_t value)
	{
		___cNewInput7_7 = value;
	}

	inline static int32_t get_offset_of_uUserValue_8() { return static_cast<int32_t>(offsetof(VREvent_Keyboard_t_t0FAA9B97A441A22EC65002BC6FDEB4AF7A045297, ___uUserValue_8)); }
	inline uint64_t get_uUserValue_8() const { return ___uUserValue_8; }
	inline uint64_t* get_address_of_uUserValue_8() { return &___uUserValue_8; }
	inline void set_uUserValue_8(uint64_t value)
	{
		___uUserValue_8 = value;
	}
};


// Valve.VR.VREvent_MessageOverlay_t
struct  VREvent_MessageOverlay_t_t527A27CE8C9CDC089759AEF6257E7F5803D72BA1 
{
public:
	// System.UInt32 Valve.VR.VREvent_MessageOverlay_t::unVRMessageOverlayResponse
	uint32_t ___unVRMessageOverlayResponse_0;

public:
	inline static int32_t get_offset_of_unVRMessageOverlayResponse_0() { return static_cast<int32_t>(offsetof(VREvent_MessageOverlay_t_t527A27CE8C9CDC089759AEF6257E7F5803D72BA1, ___unVRMessageOverlayResponse_0)); }
	inline uint32_t get_unVRMessageOverlayResponse_0() const { return ___unVRMessageOverlayResponse_0; }
	inline uint32_t* get_address_of_unVRMessageOverlayResponse_0() { return &___unVRMessageOverlayResponse_0; }
	inline void set_unVRMessageOverlayResponse_0(uint32_t value)
	{
		___unVRMessageOverlayResponse_0 = value;
	}
};


// Valve.VR.VREvent_Mouse_t
struct  VREvent_Mouse_t_t6A0AB81EE408C60C23B2347B2D54DF92EB389B1B 
{
public:
	// System.Single Valve.VR.VREvent_Mouse_t::x
	float ___x_0;
	// System.Single Valve.VR.VREvent_Mouse_t::y
	float ___y_1;
	// System.UInt32 Valve.VR.VREvent_Mouse_t::button
	uint32_t ___button_2;

public:
	inline static int32_t get_offset_of_x_0() { return static_cast<int32_t>(offsetof(VREvent_Mouse_t_t6A0AB81EE408C60C23B2347B2D54DF92EB389B1B, ___x_0)); }
	inline float get_x_0() const { return ___x_0; }
	inline float* get_address_of_x_0() { return &___x_0; }
	inline void set_x_0(float value)
	{
		___x_0 = value;
	}

	inline static int32_t get_offset_of_y_1() { return static_cast<int32_t>(offsetof(VREvent_Mouse_t_t6A0AB81EE408C60C23B2347B2D54DF92EB389B1B, ___y_1)); }
	inline float get_y_1() const { return ___y_1; }
	inline float* get_address_of_y_1() { return &___y_1; }
	inline void set_y_1(float value)
	{
		___y_1 = value;
	}

	inline static int32_t get_offset_of_button_2() { return static_cast<int32_t>(offsetof(VREvent_Mouse_t_t6A0AB81EE408C60C23B2347B2D54DF92EB389B1B, ___button_2)); }
	inline uint32_t get_button_2() const { return ___button_2; }
	inline uint32_t* get_address_of_button_2() { return &___button_2; }
	inline void set_button_2(uint32_t value)
	{
		___button_2 = value;
	}
};


// Valve.VR.VREvent_Notification_t
struct  VREvent_Notification_t_t3307E55FBD25A98BF78C740FE9494406A45F94BB 
{
public:
	// System.UInt64 Valve.VR.VREvent_Notification_t::ulUserValue
	uint64_t ___ulUserValue_0;
	// System.UInt32 Valve.VR.VREvent_Notification_t::notificationId
	uint32_t ___notificationId_1;

public:
	inline static int32_t get_offset_of_ulUserValue_0() { return static_cast<int32_t>(offsetof(VREvent_Notification_t_t3307E55FBD25A98BF78C740FE9494406A45F94BB, ___ulUserValue_0)); }
	inline uint64_t get_ulUserValue_0() const { return ___ulUserValue_0; }
	inline uint64_t* get_address_of_ulUserValue_0() { return &___ulUserValue_0; }
	inline void set_ulUserValue_0(uint64_t value)
	{
		___ulUserValue_0 = value;
	}

	inline static int32_t get_offset_of_notificationId_1() { return static_cast<int32_t>(offsetof(VREvent_Notification_t_t3307E55FBD25A98BF78C740FE9494406A45F94BB, ___notificationId_1)); }
	inline uint32_t get_notificationId_1() const { return ___notificationId_1; }
	inline uint32_t* get_address_of_notificationId_1() { return &___notificationId_1; }
	inline void set_notificationId_1(uint32_t value)
	{
		___notificationId_1 = value;
	}
};


// Valve.VR.VREvent_Overlay_t
struct  VREvent_Overlay_t_t6D2D8442E708459C57882EA5E5D6EE0912FAD76C 
{
public:
	// System.UInt64 Valve.VR.VREvent_Overlay_t::overlayHandle
	uint64_t ___overlayHandle_0;
	// System.UInt64 Valve.VR.VREvent_Overlay_t::devicePath
	uint64_t ___devicePath_1;

public:
	inline static int32_t get_offset_of_overlayHandle_0() { return static_cast<int32_t>(offsetof(VREvent_Overlay_t_t6D2D8442E708459C57882EA5E5D6EE0912FAD76C, ___overlayHandle_0)); }
	inline uint64_t get_overlayHandle_0() const { return ___overlayHandle_0; }
	inline uint64_t* get_address_of_overlayHandle_0() { return &___overlayHandle_0; }
	inline void set_overlayHandle_0(uint64_t value)
	{
		___overlayHandle_0 = value;
	}

	inline static int32_t get_offset_of_devicePath_1() { return static_cast<int32_t>(offsetof(VREvent_Overlay_t_t6D2D8442E708459C57882EA5E5D6EE0912FAD76C, ___devicePath_1)); }
	inline uint64_t get_devicePath_1() const { return ___devicePath_1; }
	inline uint64_t* get_address_of_devicePath_1() { return &___devicePath_1; }
	inline void set_devicePath_1(uint64_t value)
	{
		___devicePath_1 = value;
	}
};


// Valve.VR.VREvent_PerformanceTest_t
struct  VREvent_PerformanceTest_t_t7907E419EE035B684299AF08075DE02A6D9AA7AA 
{
public:
	// System.UInt32 Valve.VR.VREvent_PerformanceTest_t::m_nFidelityLevel
	uint32_t ___m_nFidelityLevel_0;

public:
	inline static int32_t get_offset_of_m_nFidelityLevel_0() { return static_cast<int32_t>(offsetof(VREvent_PerformanceTest_t_t7907E419EE035B684299AF08075DE02A6D9AA7AA, ___m_nFidelityLevel_0)); }
	inline uint32_t get_m_nFidelityLevel_0() const { return ___m_nFidelityLevel_0; }
	inline uint32_t* get_address_of_m_nFidelityLevel_0() { return &___m_nFidelityLevel_0; }
	inline void set_m_nFidelityLevel_0(uint32_t value)
	{
		___m_nFidelityLevel_0 = value;
	}
};


// Valve.VR.VREvent_Process_t
struct  VREvent_Process_t_t83E4C3D9CAE8D898B914245BF7E34E2FD47EBE1E 
{
public:
	// System.UInt32 Valve.VR.VREvent_Process_t::pid
	uint32_t ___pid_0;
	// System.UInt32 Valve.VR.VREvent_Process_t::oldPid
	uint32_t ___oldPid_1;
	// System.Boolean Valve.VR.VREvent_Process_t::bForced
	bool ___bForced_2;
	// System.Boolean Valve.VR.VREvent_Process_t::bConnectionLost
	bool ___bConnectionLost_3;

public:
	inline static int32_t get_offset_of_pid_0() { return static_cast<int32_t>(offsetof(VREvent_Process_t_t83E4C3D9CAE8D898B914245BF7E34E2FD47EBE1E, ___pid_0)); }
	inline uint32_t get_pid_0() const { return ___pid_0; }
	inline uint32_t* get_address_of_pid_0() { return &___pid_0; }
	inline void set_pid_0(uint32_t value)
	{
		___pid_0 = value;
	}

	inline static int32_t get_offset_of_oldPid_1() { return static_cast<int32_t>(offsetof(VREvent_Process_t_t83E4C3D9CAE8D898B914245BF7E34E2FD47EBE1E, ___oldPid_1)); }
	inline uint32_t get_oldPid_1() const { return ___oldPid_1; }
	inline uint32_t* get_address_of_oldPid_1() { return &___oldPid_1; }
	inline void set_oldPid_1(uint32_t value)
	{
		___oldPid_1 = value;
	}

	inline static int32_t get_offset_of_bForced_2() { return static_cast<int32_t>(offsetof(VREvent_Process_t_t83E4C3D9CAE8D898B914245BF7E34E2FD47EBE1E, ___bForced_2)); }
	inline bool get_bForced_2() const { return ___bForced_2; }
	inline bool* get_address_of_bForced_2() { return &___bForced_2; }
	inline void set_bForced_2(bool value)
	{
		___bForced_2 = value;
	}

	inline static int32_t get_offset_of_bConnectionLost_3() { return static_cast<int32_t>(offsetof(VREvent_Process_t_t83E4C3D9CAE8D898B914245BF7E34E2FD47EBE1E, ___bConnectionLost_3)); }
	inline bool get_bConnectionLost_3() const { return ___bConnectionLost_3; }
	inline bool* get_address_of_bConnectionLost_3() { return &___bConnectionLost_3; }
	inline void set_bConnectionLost_3(bool value)
	{
		___bConnectionLost_3 = value;
	}
};


// Valve.VR.VREvent_ProgressUpdate_t
struct  VREvent_ProgressUpdate_t_tE2EE0FDAEB40796B73B8477434588652690495AE 
{
public:
	// System.UInt64 Valve.VR.VREvent_ProgressUpdate_t::ulApplicationPropertyContainer
	uint64_t ___ulApplicationPropertyContainer_0;
	// System.UInt64 Valve.VR.VREvent_ProgressUpdate_t::pathDevice
	uint64_t ___pathDevice_1;
	// System.UInt64 Valve.VR.VREvent_ProgressUpdate_t::pathInputSource
	uint64_t ___pathInputSource_2;
	// System.UInt64 Valve.VR.VREvent_ProgressUpdate_t::pathProgressAction
	uint64_t ___pathProgressAction_3;
	// System.UInt64 Valve.VR.VREvent_ProgressUpdate_t::pathIcon
	uint64_t ___pathIcon_4;
	// System.Single Valve.VR.VREvent_ProgressUpdate_t::fProgress
	float ___fProgress_5;

public:
	inline static int32_t get_offset_of_ulApplicationPropertyContainer_0() { return static_cast<int32_t>(offsetof(VREvent_ProgressUpdate_t_tE2EE0FDAEB40796B73B8477434588652690495AE, ___ulApplicationPropertyContainer_0)); }
	inline uint64_t get_ulApplicationPropertyContainer_0() const { return ___ulApplicationPropertyContainer_0; }
	inline uint64_t* get_address_of_ulApplicationPropertyContainer_0() { return &___ulApplicationPropertyContainer_0; }
	inline void set_ulApplicationPropertyContainer_0(uint64_t value)
	{
		___ulApplicationPropertyContainer_0 = value;
	}

	inline static int32_t get_offset_of_pathDevice_1() { return static_cast<int32_t>(offsetof(VREvent_ProgressUpdate_t_tE2EE0FDAEB40796B73B8477434588652690495AE, ___pathDevice_1)); }
	inline uint64_t get_pathDevice_1() const { return ___pathDevice_1; }
	inline uint64_t* get_address_of_pathDevice_1() { return &___pathDevice_1; }
	inline void set_pathDevice_1(uint64_t value)
	{
		___pathDevice_1 = value;
	}

	inline static int32_t get_offset_of_pathInputSource_2() { return static_cast<int32_t>(offsetof(VREvent_ProgressUpdate_t_tE2EE0FDAEB40796B73B8477434588652690495AE, ___pathInputSource_2)); }
	inline uint64_t get_pathInputSource_2() const { return ___pathInputSource_2; }
	inline uint64_t* get_address_of_pathInputSource_2() { return &___pathInputSource_2; }
	inline void set_pathInputSource_2(uint64_t value)
	{
		___pathInputSource_2 = value;
	}

	inline static int32_t get_offset_of_pathProgressAction_3() { return static_cast<int32_t>(offsetof(VREvent_ProgressUpdate_t_tE2EE0FDAEB40796B73B8477434588652690495AE, ___pathProgressAction_3)); }
	inline uint64_t get_pathProgressAction_3() const { return ___pathProgressAction_3; }
	inline uint64_t* get_address_of_pathProgressAction_3() { return &___pathProgressAction_3; }
	inline void set_pathProgressAction_3(uint64_t value)
	{
		___pathProgressAction_3 = value;
	}

	inline static int32_t get_offset_of_pathIcon_4() { return static_cast<int32_t>(offsetof(VREvent_ProgressUpdate_t_tE2EE0FDAEB40796B73B8477434588652690495AE, ___pathIcon_4)); }
	inline uint64_t get_pathIcon_4() const { return ___pathIcon_4; }
	inline uint64_t* get_address_of_pathIcon_4() { return &___pathIcon_4; }
	inline void set_pathIcon_4(uint64_t value)
	{
		___pathIcon_4 = value;
	}

	inline static int32_t get_offset_of_fProgress_5() { return static_cast<int32_t>(offsetof(VREvent_ProgressUpdate_t_tE2EE0FDAEB40796B73B8477434588652690495AE, ___fProgress_5)); }
	inline float get_fProgress_5() const { return ___fProgress_5; }
	inline float* get_address_of_fProgress_5() { return &___fProgress_5; }
	inline void set_fProgress_5(float value)
	{
		___fProgress_5 = value;
	}
};


// Valve.VR.VREvent_Reserved_t
struct  VREvent_Reserved_t_tD7AEEC778A329391A4DB25E9EACFC350464E7AB3 
{
public:
	// System.UInt64 Valve.VR.VREvent_Reserved_t::reserved0
	uint64_t ___reserved0_0;
	// System.UInt64 Valve.VR.VREvent_Reserved_t::reserved1
	uint64_t ___reserved1_1;
	// System.UInt64 Valve.VR.VREvent_Reserved_t::reserved2
	uint64_t ___reserved2_2;
	// System.UInt64 Valve.VR.VREvent_Reserved_t::reserved3
	uint64_t ___reserved3_3;
	// System.UInt64 Valve.VR.VREvent_Reserved_t::reserved4
	uint64_t ___reserved4_4;
	// System.UInt64 Valve.VR.VREvent_Reserved_t::reserved5
	uint64_t ___reserved5_5;

public:
	inline static int32_t get_offset_of_reserved0_0() { return static_cast<int32_t>(offsetof(VREvent_Reserved_t_tD7AEEC778A329391A4DB25E9EACFC350464E7AB3, ___reserved0_0)); }
	inline uint64_t get_reserved0_0() const { return ___reserved0_0; }
	inline uint64_t* get_address_of_reserved0_0() { return &___reserved0_0; }
	inline void set_reserved0_0(uint64_t value)
	{
		___reserved0_0 = value;
	}

	inline static int32_t get_offset_of_reserved1_1() { return static_cast<int32_t>(offsetof(VREvent_Reserved_t_tD7AEEC778A329391A4DB25E9EACFC350464E7AB3, ___reserved1_1)); }
	inline uint64_t get_reserved1_1() const { return ___reserved1_1; }
	inline uint64_t* get_address_of_reserved1_1() { return &___reserved1_1; }
	inline void set_reserved1_1(uint64_t value)
	{
		___reserved1_1 = value;
	}

	inline static int32_t get_offset_of_reserved2_2() { return static_cast<int32_t>(offsetof(VREvent_Reserved_t_tD7AEEC778A329391A4DB25E9EACFC350464E7AB3, ___reserved2_2)); }
	inline uint64_t get_reserved2_2() const { return ___reserved2_2; }
	inline uint64_t* get_address_of_reserved2_2() { return &___reserved2_2; }
	inline void set_reserved2_2(uint64_t value)
	{
		___reserved2_2 = value;
	}

	inline static int32_t get_offset_of_reserved3_3() { return static_cast<int32_t>(offsetof(VREvent_Reserved_t_tD7AEEC778A329391A4DB25E9EACFC350464E7AB3, ___reserved3_3)); }
	inline uint64_t get_reserved3_3() const { return ___reserved3_3; }
	inline uint64_t* get_address_of_reserved3_3() { return &___reserved3_3; }
	inline void set_reserved3_3(uint64_t value)
	{
		___reserved3_3 = value;
	}

	inline static int32_t get_offset_of_reserved4_4() { return static_cast<int32_t>(offsetof(VREvent_Reserved_t_tD7AEEC778A329391A4DB25E9EACFC350464E7AB3, ___reserved4_4)); }
	inline uint64_t get_reserved4_4() const { return ___reserved4_4; }
	inline uint64_t* get_address_of_reserved4_4() { return &___reserved4_4; }
	inline void set_reserved4_4(uint64_t value)
	{
		___reserved4_4 = value;
	}

	inline static int32_t get_offset_of_reserved5_5() { return static_cast<int32_t>(offsetof(VREvent_Reserved_t_tD7AEEC778A329391A4DB25E9EACFC350464E7AB3, ___reserved5_5)); }
	inline uint64_t get_reserved5_5() const { return ___reserved5_5; }
	inline uint64_t* get_address_of_reserved5_5() { return &___reserved5_5; }
	inline void set_reserved5_5(uint64_t value)
	{
		___reserved5_5 = value;
	}
};


// Valve.VR.VREvent_ScreenshotProgress_t
struct  VREvent_ScreenshotProgress_t_t9CD059D8FF2215EBC3F9014DE35F8847B904ECED 
{
public:
	// System.Single Valve.VR.VREvent_ScreenshotProgress_t::progress
	float ___progress_0;

public:
	inline static int32_t get_offset_of_progress_0() { return static_cast<int32_t>(offsetof(VREvent_ScreenshotProgress_t_t9CD059D8FF2215EBC3F9014DE35F8847B904ECED, ___progress_0)); }
	inline float get_progress_0() const { return ___progress_0; }
	inline float* get_address_of_progress_0() { return &___progress_0; }
	inline void set_progress_0(float value)
	{
		___progress_0 = value;
	}
};


// Valve.VR.VREvent_Screenshot_t
struct  VREvent_Screenshot_t_t1459B9F3FCD91BFF2A03D1F0DBC012594714BE97 
{
public:
	// System.UInt32 Valve.VR.VREvent_Screenshot_t::handle
	uint32_t ___handle_0;
	// System.UInt32 Valve.VR.VREvent_Screenshot_t::type
	uint32_t ___type_1;

public:
	inline static int32_t get_offset_of_handle_0() { return static_cast<int32_t>(offsetof(VREvent_Screenshot_t_t1459B9F3FCD91BFF2A03D1F0DBC012594714BE97, ___handle_0)); }
	inline uint32_t get_handle_0() const { return ___handle_0; }
	inline uint32_t* get_address_of_handle_0() { return &___handle_0; }
	inline void set_handle_0(uint32_t value)
	{
		___handle_0 = value;
	}

	inline static int32_t get_offset_of_type_1() { return static_cast<int32_t>(offsetof(VREvent_Screenshot_t_t1459B9F3FCD91BFF2A03D1F0DBC012594714BE97, ___type_1)); }
	inline uint32_t get_type_1() const { return ___type_1; }
	inline uint32_t* get_address_of_type_1() { return &___type_1; }
	inline void set_type_1(uint32_t value)
	{
		___type_1 = value;
	}
};


// Valve.VR.VREvent_Scroll_t
struct  VREvent_Scroll_t_t5F4F013D4311FA0416A98AAE7B1C67794857D160 
{
public:
	// System.Single Valve.VR.VREvent_Scroll_t::xdelta
	float ___xdelta_0;
	// System.Single Valve.VR.VREvent_Scroll_t::ydelta
	float ___ydelta_1;
	// System.UInt32 Valve.VR.VREvent_Scroll_t::unused
	uint32_t ___unused_2;
	// System.Single Valve.VR.VREvent_Scroll_t::viewportscale
	float ___viewportscale_3;

public:
	inline static int32_t get_offset_of_xdelta_0() { return static_cast<int32_t>(offsetof(VREvent_Scroll_t_t5F4F013D4311FA0416A98AAE7B1C67794857D160, ___xdelta_0)); }
	inline float get_xdelta_0() const { return ___xdelta_0; }
	inline float* get_address_of_xdelta_0() { return &___xdelta_0; }
	inline void set_xdelta_0(float value)
	{
		___xdelta_0 = value;
	}

	inline static int32_t get_offset_of_ydelta_1() { return static_cast<int32_t>(offsetof(VREvent_Scroll_t_t5F4F013D4311FA0416A98AAE7B1C67794857D160, ___ydelta_1)); }
	inline float get_ydelta_1() const { return ___ydelta_1; }
	inline float* get_address_of_ydelta_1() { return &___ydelta_1; }
	inline void set_ydelta_1(float value)
	{
		___ydelta_1 = value;
	}

	inline static int32_t get_offset_of_unused_2() { return static_cast<int32_t>(offsetof(VREvent_Scroll_t_t5F4F013D4311FA0416A98AAE7B1C67794857D160, ___unused_2)); }
	inline uint32_t get_unused_2() const { return ___unused_2; }
	inline uint32_t* get_address_of_unused_2() { return &___unused_2; }
	inline void set_unused_2(uint32_t value)
	{
		___unused_2 = value;
	}

	inline static int32_t get_offset_of_viewportscale_3() { return static_cast<int32_t>(offsetof(VREvent_Scroll_t_t5F4F013D4311FA0416A98AAE7B1C67794857D160, ___viewportscale_3)); }
	inline float get_viewportscale_3() const { return ___viewportscale_3; }
	inline float* get_address_of_viewportscale_3() { return &___viewportscale_3; }
	inline void set_viewportscale_3(float value)
	{
		___viewportscale_3 = value;
	}
};


// Valve.VR.VREvent_SeatedZeroPoseReset_t
struct  VREvent_SeatedZeroPoseReset_t_t4FE5B07657B5DD9A609F7A755C4592806767D323 
{
public:
	// System.Boolean Valve.VR.VREvent_SeatedZeroPoseReset_t::bResetBySystemMenu
	bool ___bResetBySystemMenu_0;

public:
	inline static int32_t get_offset_of_bResetBySystemMenu_0() { return static_cast<int32_t>(offsetof(VREvent_SeatedZeroPoseReset_t_t4FE5B07657B5DD9A609F7A755C4592806767D323, ___bResetBySystemMenu_0)); }
	inline bool get_bResetBySystemMenu_0() const { return ___bResetBySystemMenu_0; }
	inline bool* get_address_of_bResetBySystemMenu_0() { return &___bResetBySystemMenu_0; }
	inline void set_bResetBySystemMenu_0(bool value)
	{
		___bResetBySystemMenu_0 = value;
	}
};


// Valve.VR.VREvent_ShowDevTools_t
struct  VREvent_ShowDevTools_t_t39141238FE64295EF3CBCCF82984ACB8C97FABE6 
{
public:
	// System.Int32 Valve.VR.VREvent_ShowDevTools_t::nBrowserIdentifier
	int32_t ___nBrowserIdentifier_0;

public:
	inline static int32_t get_offset_of_nBrowserIdentifier_0() { return static_cast<int32_t>(offsetof(VREvent_ShowDevTools_t_t39141238FE64295EF3CBCCF82984ACB8C97FABE6, ___nBrowserIdentifier_0)); }
	inline int32_t get_nBrowserIdentifier_0() const { return ___nBrowserIdentifier_0; }
	inline int32_t* get_address_of_nBrowserIdentifier_0() { return &___nBrowserIdentifier_0; }
	inline void set_nBrowserIdentifier_0(int32_t value)
	{
		___nBrowserIdentifier_0 = value;
	}
};


// Valve.VR.VREvent_SpatialAnchor_t
struct  VREvent_SpatialAnchor_t_tEF1C8EF84EEA707BC3393810ECAF468F3B3B9473 
{
public:
	// System.UInt32 Valve.VR.VREvent_SpatialAnchor_t::unHandle
	uint32_t ___unHandle_0;

public:
	inline static int32_t get_offset_of_unHandle_0() { return static_cast<int32_t>(offsetof(VREvent_SpatialAnchor_t_tEF1C8EF84EEA707BC3393810ECAF468F3B3B9473, ___unHandle_0)); }
	inline uint32_t get_unHandle_0() const { return ___unHandle_0; }
	inline uint32_t* get_address_of_unHandle_0() { return &___unHandle_0; }
	inline void set_unHandle_0(uint32_t value)
	{
		___unHandle_0 = value;
	}
};


// Valve.VR.VREvent_Status_t
struct  VREvent_Status_t_t157A58D59F35CB5B07E1A83BA7E41C425AB766FB 
{
public:
	// System.UInt32 Valve.VR.VREvent_Status_t::statusState
	uint32_t ___statusState_0;

public:
	inline static int32_t get_offset_of_statusState_0() { return static_cast<int32_t>(offsetof(VREvent_Status_t_t157A58D59F35CB5B07E1A83BA7E41C425AB766FB, ___statusState_0)); }
	inline uint32_t get_statusState_0() const { return ___statusState_0; }
	inline uint32_t* get_address_of_statusState_0() { return &___statusState_0; }
	inline void set_statusState_0(uint32_t value)
	{
		___statusState_0 = value;
	}
};


// Valve.VR.VREvent_TouchPadMove_t
struct  VREvent_TouchPadMove_t_t239FBA15A2154F0A535575CDF1CF22A8F3EDEA3D 
{
public:
	// System.Boolean Valve.VR.VREvent_TouchPadMove_t::bFingerDown
	bool ___bFingerDown_0;
	// System.Single Valve.VR.VREvent_TouchPadMove_t::flSecondsFingerDown
	float ___flSecondsFingerDown_1;
	// System.Single Valve.VR.VREvent_TouchPadMove_t::fValueXFirst
	float ___fValueXFirst_2;
	// System.Single Valve.VR.VREvent_TouchPadMove_t::fValueYFirst
	float ___fValueYFirst_3;
	// System.Single Valve.VR.VREvent_TouchPadMove_t::fValueXRaw
	float ___fValueXRaw_4;
	// System.Single Valve.VR.VREvent_TouchPadMove_t::fValueYRaw
	float ___fValueYRaw_5;

public:
	inline static int32_t get_offset_of_bFingerDown_0() { return static_cast<int32_t>(offsetof(VREvent_TouchPadMove_t_t239FBA15A2154F0A535575CDF1CF22A8F3EDEA3D, ___bFingerDown_0)); }
	inline bool get_bFingerDown_0() const { return ___bFingerDown_0; }
	inline bool* get_address_of_bFingerDown_0() { return &___bFingerDown_0; }
	inline void set_bFingerDown_0(bool value)
	{
		___bFingerDown_0 = value;
	}

	inline static int32_t get_offset_of_flSecondsFingerDown_1() { return static_cast<int32_t>(offsetof(VREvent_TouchPadMove_t_t239FBA15A2154F0A535575CDF1CF22A8F3EDEA3D, ___flSecondsFingerDown_1)); }
	inline float get_flSecondsFingerDown_1() const { return ___flSecondsFingerDown_1; }
	inline float* get_address_of_flSecondsFingerDown_1() { return &___flSecondsFingerDown_1; }
	inline void set_flSecondsFingerDown_1(float value)
	{
		___flSecondsFingerDown_1 = value;
	}

	inline static int32_t get_offset_of_fValueXFirst_2() { return static_cast<int32_t>(offsetof(VREvent_TouchPadMove_t_t239FBA15A2154F0A535575CDF1CF22A8F3EDEA3D, ___fValueXFirst_2)); }
	inline float get_fValueXFirst_2() const { return ___fValueXFirst_2; }
	inline float* get_address_of_fValueXFirst_2() { return &___fValueXFirst_2; }
	inline void set_fValueXFirst_2(float value)
	{
		___fValueXFirst_2 = value;
	}

	inline static int32_t get_offset_of_fValueYFirst_3() { return static_cast<int32_t>(offsetof(VREvent_TouchPadMove_t_t239FBA15A2154F0A535575CDF1CF22A8F3EDEA3D, ___fValueYFirst_3)); }
	inline float get_fValueYFirst_3() const { return ___fValueYFirst_3; }
	inline float* get_address_of_fValueYFirst_3() { return &___fValueYFirst_3; }
	inline void set_fValueYFirst_3(float value)
	{
		___fValueYFirst_3 = value;
	}

	inline static int32_t get_offset_of_fValueXRaw_4() { return static_cast<int32_t>(offsetof(VREvent_TouchPadMove_t_t239FBA15A2154F0A535575CDF1CF22A8F3EDEA3D, ___fValueXRaw_4)); }
	inline float get_fValueXRaw_4() const { return ___fValueXRaw_4; }
	inline float* get_address_of_fValueXRaw_4() { return &___fValueXRaw_4; }
	inline void set_fValueXRaw_4(float value)
	{
		___fValueXRaw_4 = value;
	}

	inline static int32_t get_offset_of_fValueYRaw_5() { return static_cast<int32_t>(offsetof(VREvent_TouchPadMove_t_t239FBA15A2154F0A535575CDF1CF22A8F3EDEA3D, ___fValueYRaw_5)); }
	inline float get_fValueYRaw_5() const { return ___fValueYRaw_5; }
	inline float* get_address_of_fValueYRaw_5() { return &___fValueYRaw_5; }
	inline void set_fValueYRaw_5(float value)
	{
		___fValueYRaw_5 = value;
	}
};


// Valve.VR.VREvent_WebConsole_t
struct  VREvent_WebConsole_t_tB082ED62757425E442A9D3D77878DE178AE3DC75 
{
public:
	// System.UInt64 Valve.VR.VREvent_WebConsole_t::webConsoleHandle
	uint64_t ___webConsoleHandle_0;

public:
	inline static int32_t get_offset_of_webConsoleHandle_0() { return static_cast<int32_t>(offsetof(VREvent_WebConsole_t_tB082ED62757425E442A9D3D77878DE178AE3DC75, ___webConsoleHandle_0)); }
	inline uint64_t get_webConsoleHandle_0() const { return ___webConsoleHandle_0; }
	inline uint64_t* get_address_of_webConsoleHandle_0() { return &___webConsoleHandle_0; }
	inline void set_webConsoleHandle_0(uint64_t value)
	{
		___webConsoleHandle_0 = value;
	}
};


// SteamVR_Utils_RigidTransform
struct  RigidTransform_t0E8A00F7013270B6B2254F29B4FFEAA6783CD905 
{
public:
	// UnityEngine.Vector3 SteamVR_Utils_RigidTransform::pos
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___pos_0;
	// UnityEngine.Quaternion SteamVR_Utils_RigidTransform::rot
	Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  ___rot_1;

public:
	inline static int32_t get_offset_of_pos_0() { return static_cast<int32_t>(offsetof(RigidTransform_t0E8A00F7013270B6B2254F29B4FFEAA6783CD905, ___pos_0)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_pos_0() const { return ___pos_0; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_pos_0() { return &___pos_0; }
	inline void set_pos_0(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___pos_0 = value;
	}

	inline static int32_t get_offset_of_rot_1() { return static_cast<int32_t>(offsetof(RigidTransform_t0E8A00F7013270B6B2254F29B4FFEAA6783CD905, ___rot_1)); }
	inline Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  get_rot_1() const { return ___rot_1; }
	inline Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357 * get_address_of_rot_1() { return &___rot_1; }
	inline void set_rot_1(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  value)
	{
		___rot_1 = value;
	}
};


// System.Delegate
struct  Delegate_t  : public RuntimeObject
{
public:
	// System.IntPtr System.Delegate::method_ptr
	Il2CppMethodPointer ___method_ptr_0;
	// System.IntPtr System.Delegate::invoke_impl
	intptr_t ___invoke_impl_1;
	// System.Object System.Delegate::m_target
	RuntimeObject * ___m_target_2;
	// System.IntPtr System.Delegate::method
	intptr_t ___method_3;
	// System.IntPtr System.Delegate::delegate_trampoline
	intptr_t ___delegate_trampoline_4;
	// System.IntPtr System.Delegate::extra_arg
	intptr_t ___extra_arg_5;
	// System.IntPtr System.Delegate::method_code
	intptr_t ___method_code_6;
	// System.Reflection.MethodInfo System.Delegate::method_info
	MethodInfo_t * ___method_info_7;
	// System.Reflection.MethodInfo System.Delegate::original_method_info
	MethodInfo_t * ___original_method_info_8;
	// System.DelegateData System.Delegate::data
	DelegateData_t1BF9F691B56DAE5F8C28C5E084FDE94F15F27BBE * ___data_9;
	// System.Boolean System.Delegate::method_is_virtual
	bool ___method_is_virtual_10;

public:
	inline static int32_t get_offset_of_method_ptr_0() { return static_cast<int32_t>(offsetof(Delegate_t, ___method_ptr_0)); }
	inline Il2CppMethodPointer get_method_ptr_0() const { return ___method_ptr_0; }
	inline Il2CppMethodPointer* get_address_of_method_ptr_0() { return &___method_ptr_0; }
	inline void set_method_ptr_0(Il2CppMethodPointer value)
	{
		___method_ptr_0 = value;
	}

	inline static int32_t get_offset_of_invoke_impl_1() { return static_cast<int32_t>(offsetof(Delegate_t, ___invoke_impl_1)); }
	inline intptr_t get_invoke_impl_1() const { return ___invoke_impl_1; }
	inline intptr_t* get_address_of_invoke_impl_1() { return &___invoke_impl_1; }
	inline void set_invoke_impl_1(intptr_t value)
	{
		___invoke_impl_1 = value;
	}

	inline static int32_t get_offset_of_m_target_2() { return static_cast<int32_t>(offsetof(Delegate_t, ___m_target_2)); }
	inline RuntimeObject * get_m_target_2() const { return ___m_target_2; }
	inline RuntimeObject ** get_address_of_m_target_2() { return &___m_target_2; }
	inline void set_m_target_2(RuntimeObject * value)
	{
		___m_target_2 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___m_target_2), (void*)value);
	}

	inline static int32_t get_offset_of_method_3() { return static_cast<int32_t>(offsetof(Delegate_t, ___method_3)); }
	inline intptr_t get_method_3() const { return ___method_3; }
	inline intptr_t* get_address_of_method_3() { return &___method_3; }
	inline void set_method_3(intptr_t value)
	{
		___method_3 = value;
	}

	inline static int32_t get_offset_of_delegate_trampoline_4() { return static_cast<int32_t>(offsetof(Delegate_t, ___delegate_trampoline_4)); }
	inline intptr_t get_delegate_trampoline_4() const { return ___delegate_trampoline_4; }
	inline intptr_t* get_address_of_delegate_trampoline_4() { return &___delegate_trampoline_4; }
	inline void set_delegate_trampoline_4(intptr_t value)
	{
		___delegate_trampoline_4 = value;
	}

	inline static int32_t get_offset_of_extra_arg_5() { return static_cast<int32_t>(offsetof(Delegate_t, ___extra_arg_5)); }
	inline intptr_t get_extra_arg_5() const { return ___extra_arg_5; }
	inline intptr_t* get_address_of_extra_arg_5() { return &___extra_arg_5; }
	inline void set_extra_arg_5(intptr_t value)
	{
		___extra_arg_5 = value;
	}

	inline static int32_t get_offset_of_method_code_6() { return static_cast<int32_t>(offsetof(Delegate_t, ___method_code_6)); }
	inline intptr_t get_method_code_6() const { return ___method_code_6; }
	inline intptr_t* get_address_of_method_code_6() { return &___method_code_6; }
	inline void set_method_code_6(intptr_t value)
	{
		___method_code_6 = value;
	}

	inline static int32_t get_offset_of_method_info_7() { return static_cast<int32_t>(offsetof(Delegate_t, ___method_info_7)); }
	inline MethodInfo_t * get_method_info_7() const { return ___method_info_7; }
	inline MethodInfo_t ** get_address_of_method_info_7() { return &___method_info_7; }
	inline void set_method_info_7(MethodInfo_t * value)
	{
		___method_info_7 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___method_info_7), (void*)value);
	}

	inline static int32_t get_offset_of_original_method_info_8() { return static_cast<int32_t>(offsetof(Delegate_t, ___original_method_info_8)); }
	inline MethodInfo_t * get_original_method_info_8() const { return ___original_method_info_8; }
	inline MethodInfo_t ** get_address_of_original_method_info_8() { return &___original_method_info_8; }
	inline void set_original_method_info_8(MethodInfo_t * value)
	{
		___original_method_info_8 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___original_method_info_8), (void*)value);
	}

	inline static int32_t get_offset_of_data_9() { return static_cast<int32_t>(offsetof(Delegate_t, ___data_9)); }
	inline DelegateData_t1BF9F691B56DAE5F8C28C5E084FDE94F15F27BBE * get_data_9() const { return ___data_9; }
	inline DelegateData_t1BF9F691B56DAE5F8C28C5E084FDE94F15F27BBE ** get_address_of_data_9() { return &___data_9; }
	inline void set_data_9(DelegateData_t1BF9F691B56DAE5F8C28C5E084FDE94F15F27BBE * value)
	{
		___data_9 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___data_9), (void*)value);
	}

	inline static int32_t get_offset_of_method_is_virtual_10() { return static_cast<int32_t>(offsetof(Delegate_t, ___method_is_virtual_10)); }
	inline bool get_method_is_virtual_10() const { return ___method_is_virtual_10; }
	inline bool* get_address_of_method_is_virtual_10() { return &___method_is_virtual_10; }
	inline void set_method_is_virtual_10(bool value)
	{
		___method_is_virtual_10 = value;
	}
};

// Native definition for P/Invoke marshalling of System.Delegate
struct Delegate_t_marshaled_pinvoke
{
	intptr_t ___method_ptr_0;
	intptr_t ___invoke_impl_1;
	Il2CppIUnknown* ___m_target_2;
	intptr_t ___method_3;
	intptr_t ___delegate_trampoline_4;
	intptr_t ___extra_arg_5;
	intptr_t ___method_code_6;
	MethodInfo_t * ___method_info_7;
	MethodInfo_t * ___original_method_info_8;
	DelegateData_t1BF9F691B56DAE5F8C28C5E084FDE94F15F27BBE * ___data_9;
	int32_t ___method_is_virtual_10;
};
// Native definition for COM marshalling of System.Delegate
struct Delegate_t_marshaled_com
{
	intptr_t ___method_ptr_0;
	intptr_t ___invoke_impl_1;
	Il2CppIUnknown* ___m_target_2;
	intptr_t ___method_3;
	intptr_t ___delegate_trampoline_4;
	intptr_t ___extra_arg_5;
	intptr_t ___method_code_6;
	MethodInfo_t * ___method_info_7;
	MethodInfo_t * ___original_method_info_8;
	DelegateData_t1BF9F691B56DAE5F8C28C5E084FDE94F15F27BBE * ___data_9;
	int32_t ___method_is_virtual_10;
};

// System.Exception
struct  Exception_t  : public RuntimeObject
{
public:
	// System.String System.Exception::_className
	String_t* ____className_1;
	// System.String System.Exception::_message
	String_t* ____message_2;
	// System.Collections.IDictionary System.Exception::_data
	RuntimeObject* ____data_3;
	// System.Exception System.Exception::_innerException
	Exception_t * ____innerException_4;
	// System.String System.Exception::_helpURL
	String_t* ____helpURL_5;
	// System.Object System.Exception::_stackTrace
	RuntimeObject * ____stackTrace_6;
	// System.String System.Exception::_stackTraceString
	String_t* ____stackTraceString_7;
	// System.String System.Exception::_remoteStackTraceString
	String_t* ____remoteStackTraceString_8;
	// System.Int32 System.Exception::_remoteStackIndex
	int32_t ____remoteStackIndex_9;
	// System.Object System.Exception::_dynamicMethods
	RuntimeObject * ____dynamicMethods_10;
	// System.Int32 System.Exception::_HResult
	int32_t ____HResult_11;
	// System.String System.Exception::_source
	String_t* ____source_12;
	// System.Runtime.Serialization.SafeSerializationManager System.Exception::_safeSerializationManager
	SafeSerializationManager_t4A754D86B0F784B18CBC36C073BA564BED109770 * ____safeSerializationManager_13;
	// System.Diagnostics.StackTrace[] System.Exception::captured_traces
	StackTraceU5BU5D_t855F09649EA34DEE7C1B6F088E0538E3CCC3F196* ___captured_traces_14;
	// System.IntPtr[] System.Exception::native_trace_ips
	IntPtrU5BU5D_t4DC01DCB9A6DF6C9792A6513595D7A11E637DCDD* ___native_trace_ips_15;

public:
	inline static int32_t get_offset_of__className_1() { return static_cast<int32_t>(offsetof(Exception_t, ____className_1)); }
	inline String_t* get__className_1() const { return ____className_1; }
	inline String_t** get_address_of__className_1() { return &____className_1; }
	inline void set__className_1(String_t* value)
	{
		____className_1 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____className_1), (void*)value);
	}

	inline static int32_t get_offset_of__message_2() { return static_cast<int32_t>(offsetof(Exception_t, ____message_2)); }
	inline String_t* get__message_2() const { return ____message_2; }
	inline String_t** get_address_of__message_2() { return &____message_2; }
	inline void set__message_2(String_t* value)
	{
		____message_2 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____message_2), (void*)value);
	}

	inline static int32_t get_offset_of__data_3() { return static_cast<int32_t>(offsetof(Exception_t, ____data_3)); }
	inline RuntimeObject* get__data_3() const { return ____data_3; }
	inline RuntimeObject** get_address_of__data_3() { return &____data_3; }
	inline void set__data_3(RuntimeObject* value)
	{
		____data_3 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____data_3), (void*)value);
	}

	inline static int32_t get_offset_of__innerException_4() { return static_cast<int32_t>(offsetof(Exception_t, ____innerException_4)); }
	inline Exception_t * get__innerException_4() const { return ____innerException_4; }
	inline Exception_t ** get_address_of__innerException_4() { return &____innerException_4; }
	inline void set__innerException_4(Exception_t * value)
	{
		____innerException_4 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____innerException_4), (void*)value);
	}

	inline static int32_t get_offset_of__helpURL_5() { return static_cast<int32_t>(offsetof(Exception_t, ____helpURL_5)); }
	inline String_t* get__helpURL_5() const { return ____helpURL_5; }
	inline String_t** get_address_of__helpURL_5() { return &____helpURL_5; }
	inline void set__helpURL_5(String_t* value)
	{
		____helpURL_5 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____helpURL_5), (void*)value);
	}

	inline static int32_t get_offset_of__stackTrace_6() { return static_cast<int32_t>(offsetof(Exception_t, ____stackTrace_6)); }
	inline RuntimeObject * get__stackTrace_6() const { return ____stackTrace_6; }
	inline RuntimeObject ** get_address_of__stackTrace_6() { return &____stackTrace_6; }
	inline void set__stackTrace_6(RuntimeObject * value)
	{
		____stackTrace_6 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____stackTrace_6), (void*)value);
	}

	inline static int32_t get_offset_of__stackTraceString_7() { return static_cast<int32_t>(offsetof(Exception_t, ____stackTraceString_7)); }
	inline String_t* get__stackTraceString_7() const { return ____stackTraceString_7; }
	inline String_t** get_address_of__stackTraceString_7() { return &____stackTraceString_7; }
	inline void set__stackTraceString_7(String_t* value)
	{
		____stackTraceString_7 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____stackTraceString_7), (void*)value);
	}

	inline static int32_t get_offset_of__remoteStackTraceString_8() { return static_cast<int32_t>(offsetof(Exception_t, ____remoteStackTraceString_8)); }
	inline String_t* get__remoteStackTraceString_8() const { return ____remoteStackTraceString_8; }
	inline String_t** get_address_of__remoteStackTraceString_8() { return &____remoteStackTraceString_8; }
	inline void set__remoteStackTraceString_8(String_t* value)
	{
		____remoteStackTraceString_8 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____remoteStackTraceString_8), (void*)value);
	}

	inline static int32_t get_offset_of__remoteStackIndex_9() { return static_cast<int32_t>(offsetof(Exception_t, ____remoteStackIndex_9)); }
	inline int32_t get__remoteStackIndex_9() const { return ____remoteStackIndex_9; }
	inline int32_t* get_address_of__remoteStackIndex_9() { return &____remoteStackIndex_9; }
	inline void set__remoteStackIndex_9(int32_t value)
	{
		____remoteStackIndex_9 = value;
	}

	inline static int32_t get_offset_of__dynamicMethods_10() { return static_cast<int32_t>(offsetof(Exception_t, ____dynamicMethods_10)); }
	inline RuntimeObject * get__dynamicMethods_10() const { return ____dynamicMethods_10; }
	inline RuntimeObject ** get_address_of__dynamicMethods_10() { return &____dynamicMethods_10; }
	inline void set__dynamicMethods_10(RuntimeObject * value)
	{
		____dynamicMethods_10 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____dynamicMethods_10), (void*)value);
	}

	inline static int32_t get_offset_of__HResult_11() { return static_cast<int32_t>(offsetof(Exception_t, ____HResult_11)); }
	inline int32_t get__HResult_11() const { return ____HResult_11; }
	inline int32_t* get_address_of__HResult_11() { return &____HResult_11; }
	inline void set__HResult_11(int32_t value)
	{
		____HResult_11 = value;
	}

	inline static int32_t get_offset_of__source_12() { return static_cast<int32_t>(offsetof(Exception_t, ____source_12)); }
	inline String_t* get__source_12() const { return ____source_12; }
	inline String_t** get_address_of__source_12() { return &____source_12; }
	inline void set__source_12(String_t* value)
	{
		____source_12 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____source_12), (void*)value);
	}

	inline static int32_t get_offset_of__safeSerializationManager_13() { return static_cast<int32_t>(offsetof(Exception_t, ____safeSerializationManager_13)); }
	inline SafeSerializationManager_t4A754D86B0F784B18CBC36C073BA564BED109770 * get__safeSerializationManager_13() const { return ____safeSerializationManager_13; }
	inline SafeSerializationManager_t4A754D86B0F784B18CBC36C073BA564BED109770 ** get_address_of__safeSerializationManager_13() { return &____safeSerializationManager_13; }
	inline void set__safeSerializationManager_13(SafeSerializationManager_t4A754D86B0F784B18CBC36C073BA564BED109770 * value)
	{
		____safeSerializationManager_13 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____safeSerializationManager_13), (void*)value);
	}

	inline static int32_t get_offset_of_captured_traces_14() { return static_cast<int32_t>(offsetof(Exception_t, ___captured_traces_14)); }
	inline StackTraceU5BU5D_t855F09649EA34DEE7C1B6F088E0538E3CCC3F196* get_captured_traces_14() const { return ___captured_traces_14; }
	inline StackTraceU5BU5D_t855F09649EA34DEE7C1B6F088E0538E3CCC3F196** get_address_of_captured_traces_14() { return &___captured_traces_14; }
	inline void set_captured_traces_14(StackTraceU5BU5D_t855F09649EA34DEE7C1B6F088E0538E3CCC3F196* value)
	{
		___captured_traces_14 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___captured_traces_14), (void*)value);
	}

	inline static int32_t get_offset_of_native_trace_ips_15() { return static_cast<int32_t>(offsetof(Exception_t, ___native_trace_ips_15)); }
	inline IntPtrU5BU5D_t4DC01DCB9A6DF6C9792A6513595D7A11E637DCDD* get_native_trace_ips_15() const { return ___native_trace_ips_15; }
	inline IntPtrU5BU5D_t4DC01DCB9A6DF6C9792A6513595D7A11E637DCDD** get_address_of_native_trace_ips_15() { return &___native_trace_ips_15; }
	inline void set_native_trace_ips_15(IntPtrU5BU5D_t4DC01DCB9A6DF6C9792A6513595D7A11E637DCDD* value)
	{
		___native_trace_ips_15 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___native_trace_ips_15), (void*)value);
	}
};

struct Exception_t_StaticFields
{
public:
	// System.Object System.Exception::s_EDILock
	RuntimeObject * ___s_EDILock_0;

public:
	inline static int32_t get_offset_of_s_EDILock_0() { return static_cast<int32_t>(offsetof(Exception_t_StaticFields, ___s_EDILock_0)); }
	inline RuntimeObject * get_s_EDILock_0() const { return ___s_EDILock_0; }
	inline RuntimeObject ** get_address_of_s_EDILock_0() { return &___s_EDILock_0; }
	inline void set_s_EDILock_0(RuntimeObject * value)
	{
		___s_EDILock_0 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___s_EDILock_0), (void*)value);
	}
};

// Native definition for P/Invoke marshalling of System.Exception
struct Exception_t_marshaled_pinvoke
{
	char* ____className_1;
	char* ____message_2;
	RuntimeObject* ____data_3;
	Exception_t_marshaled_pinvoke* ____innerException_4;
	char* ____helpURL_5;
	Il2CppIUnknown* ____stackTrace_6;
	char* ____stackTraceString_7;
	char* ____remoteStackTraceString_8;
	int32_t ____remoteStackIndex_9;
	Il2CppIUnknown* ____dynamicMethods_10;
	int32_t ____HResult_11;
	char* ____source_12;
	SafeSerializationManager_t4A754D86B0F784B18CBC36C073BA564BED109770 * ____safeSerializationManager_13;
	StackTraceU5BU5D_t855F09649EA34DEE7C1B6F088E0538E3CCC3F196* ___captured_traces_14;
	Il2CppSafeArray/*NONE*/* ___native_trace_ips_15;
};
// Native definition for COM marshalling of System.Exception
struct Exception_t_marshaled_com
{
	Il2CppChar* ____className_1;
	Il2CppChar* ____message_2;
	RuntimeObject* ____data_3;
	Exception_t_marshaled_com* ____innerException_4;
	Il2CppChar* ____helpURL_5;
	Il2CppIUnknown* ____stackTrace_6;
	Il2CppChar* ____stackTraceString_7;
	Il2CppChar* ____remoteStackTraceString_8;
	int32_t ____remoteStackIndex_9;
	Il2CppIUnknown* ____dynamicMethods_10;
	int32_t ____HResult_11;
	Il2CppChar* ____source_12;
	SafeSerializationManager_t4A754D86B0F784B18CBC36C073BA564BED109770 * ____safeSerializationManager_13;
	StackTraceU5BU5D_t855F09649EA34DEE7C1B6F088E0538E3CCC3F196* ___captured_traces_14;
	Il2CppSafeArray/*NONE*/* ___native_trace_ips_15;
};

// System.Int32Enum
struct  Int32Enum_t6312CE4586C17FE2E2E513D2E7655B574F10FDCD 
{
public:
	// System.Int32 System.Int32Enum::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(Int32Enum_t6312CE4586C17FE2E2E513D2E7655B574F10FDCD, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// UnityEngine.Coroutine
struct  Coroutine_tAE7DB2FC70A0AE6477F896F852057CB0754F06EC  : public YieldInstruction_t836035AC7BD07A3C7909F7AD2A5B42DE99D91C44
{
public:
	// System.IntPtr UnityEngine.Coroutine::m_Ptr
	intptr_t ___m_Ptr_0;

public:
	inline static int32_t get_offset_of_m_Ptr_0() { return static_cast<int32_t>(offsetof(Coroutine_tAE7DB2FC70A0AE6477F896F852057CB0754F06EC, ___m_Ptr_0)); }
	inline intptr_t get_m_Ptr_0() const { return ___m_Ptr_0; }
	inline intptr_t* get_address_of_m_Ptr_0() { return &___m_Ptr_0; }
	inline void set_m_Ptr_0(intptr_t value)
	{
		___m_Ptr_0 = value;
	}
};

// Native definition for P/Invoke marshalling of UnityEngine.Coroutine
struct Coroutine_tAE7DB2FC70A0AE6477F896F852057CB0754F06EC_marshaled_pinvoke : public YieldInstruction_t836035AC7BD07A3C7909F7AD2A5B42DE99D91C44_marshaled_pinvoke
{
	intptr_t ___m_Ptr_0;
};
// Native definition for COM marshalling of UnityEngine.Coroutine
struct Coroutine_tAE7DB2FC70A0AE6477F896F852057CB0754F06EC_marshaled_com : public YieldInstruction_t836035AC7BD07A3C7909F7AD2A5B42DE99D91C44_marshaled_com
{
	intptr_t ___m_Ptr_0;
};

// UnityEngine.Object
struct  Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0  : public RuntimeObject
{
public:
	// System.IntPtr UnityEngine.Object::m_CachedPtr
	intptr_t ___m_CachedPtr_0;

public:
	inline static int32_t get_offset_of_m_CachedPtr_0() { return static_cast<int32_t>(offsetof(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0, ___m_CachedPtr_0)); }
	inline intptr_t get_m_CachedPtr_0() const { return ___m_CachedPtr_0; }
	inline intptr_t* get_address_of_m_CachedPtr_0() { return &___m_CachedPtr_0; }
	inline void set_m_CachedPtr_0(intptr_t value)
	{
		___m_CachedPtr_0 = value;
	}
};

struct Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_StaticFields
{
public:
	// System.Int32 UnityEngine.Object::OffsetOfInstanceIDInCPlusPlusObject
	int32_t ___OffsetOfInstanceIDInCPlusPlusObject_1;

public:
	inline static int32_t get_offset_of_OffsetOfInstanceIDInCPlusPlusObject_1() { return static_cast<int32_t>(offsetof(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_StaticFields, ___OffsetOfInstanceIDInCPlusPlusObject_1)); }
	inline int32_t get_OffsetOfInstanceIDInCPlusPlusObject_1() const { return ___OffsetOfInstanceIDInCPlusPlusObject_1; }
	inline int32_t* get_address_of_OffsetOfInstanceIDInCPlusPlusObject_1() { return &___OffsetOfInstanceIDInCPlusPlusObject_1; }
	inline void set_OffsetOfInstanceIDInCPlusPlusObject_1(int32_t value)
	{
		___OffsetOfInstanceIDInCPlusPlusObject_1 = value;
	}
};

// Native definition for P/Invoke marshalling of UnityEngine.Object
struct Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_marshaled_pinvoke
{
	intptr_t ___m_CachedPtr_0;
};
// Native definition for COM marshalling of UnityEngine.Object
struct Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_marshaled_com
{
	intptr_t ___m_CachedPtr_0;
};

// UnityEngine.SendMessageOptions
struct  SendMessageOptions_t4EA4645A7D0C4E0186BD7A984CDF4EE2C8F26250 
{
public:
	// System.Int32 UnityEngine.SendMessageOptions::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(SendMessageOptions_t4EA4645A7D0C4E0186BD7A984CDF4EE2C8F26250, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Valve.VR.CVRInput
struct  CVRInput_t2BE4417A3C1EA0C6CF647B0706BF37F886CE599B  : public RuntimeObject
{
public:
	// Valve.VR.IVRInput Valve.VR.CVRInput::FnTable
	IVRInput_t5FB3A8D55A037DD0328F7BCEA3856E841BC4BC78  ___FnTable_0;

public:
	inline static int32_t get_offset_of_FnTable_0() { return static_cast<int32_t>(offsetof(CVRInput_t2BE4417A3C1EA0C6CF647B0706BF37F886CE599B, ___FnTable_0)); }
	inline IVRInput_t5FB3A8D55A037DD0328F7BCEA3856E841BC4BC78  get_FnTable_0() const { return ___FnTable_0; }
	inline IVRInput_t5FB3A8D55A037DD0328F7BCEA3856E841BC4BC78 * get_address_of_FnTable_0() { return &___FnTable_0; }
	inline void set_FnTable_0(IVRInput_t5FB3A8D55A037DD0328F7BCEA3856E841BC4BC78  value)
	{
		___FnTable_0 = value;
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___SetActionManifestPath_0), (void*)NULL);
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___GetActionSetHandle_1), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___GetActionHandle_2), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___GetInputSourceHandle_3), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___UpdateActionState_4), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___GetDigitalActionData_5), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___GetAnalogActionData_6), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___GetPoseActionDataRelativeToNow_7), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___GetPoseActionDataForNextFrame_8), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___GetSkeletalActionData_9), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___GetDominantHand_10), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___SetDominantHand_11), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___GetBoneCount_12), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___GetBoneHierarchy_13), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___GetBoneName_14), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___GetSkeletalReferenceTransforms_15), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___GetSkeletalTrackingLevel_16), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___GetSkeletalBoneData_17), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___GetSkeletalSummaryData_18), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___GetSkeletalBoneDataCompressed_19), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___DecompressSkeletalBoneData_20), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___TriggerHapticVibrationAction_21), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___GetActionOrigins_22), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___GetOriginLocalizedName_23), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___GetOriginTrackedDeviceInfo_24), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___GetActionBindingInfo_25), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___ShowActionOrigins_26), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___ShowBindingsForActionSet_27), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___GetComponentStateForBinding_28), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___IsUsingLegacyInput_29), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___OpenBindingUI_30), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___GetBindingVariant_31), (void*)NULL);
		#endif
	}
};


// Valve.VR.EHDCPError
struct  EHDCPError_tEA1A3B61ABC539BEB5968E78D67A977D9B8FFC8F 
{
public:
	// System.Int32 Valve.VR.EHDCPError::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(EHDCPError_tEA1A3B61ABC539BEB5968E78D67A977D9B8FFC8F, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Valve.VR.EShowUIType
struct  EShowUIType_tBD146F5D1D019E27B82F6FCAE6A9EE94568DE7CF 
{
public:
	// System.Int32 Valve.VR.EShowUIType::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(EShowUIType_tBD146F5D1D019E27B82F6FCAE6A9EE94568DE7CF, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Valve.VR.ETrackedDeviceProperty
struct  ETrackedDeviceProperty_tF72385D21B16A4502DC9E4F05A6C3F3D63202678 
{
public:
	// System.Int32 Valve.VR.ETrackedDeviceProperty::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(ETrackedDeviceProperty_tF72385D21B16A4502DC9E4F05A6C3F3D63202678, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Valve.VR.ETrackingResult
struct  ETrackingResult_t989C2212A7DBCBBF86EA2C1E776BC60223B3126E 
{
public:
	// System.Int32 Valve.VR.ETrackingResult::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(ETrackingResult_t989C2212A7DBCBBF86EA2C1E776BC60223B3126E, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Valve.VR.ETrackingUniverseOrigin
struct  ETrackingUniverseOrigin_t3002504453445C01FD1564845C065DDDEE23937B 
{
public:
	// System.Int32 Valve.VR.ETrackingUniverseOrigin::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(ETrackingUniverseOrigin_t3002504453445C01FD1564845C065DDDEE23937B, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Valve.VR.EVREventType
struct  EVREventType_t9A248608EB346C24D3EC6F3C1DF3FA4C6A207BC3 
{
public:
	// System.Int32 Valve.VR.EVREventType::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(EVREventType_t9A248608EB346C24D3EC6F3C1DF3FA4C6A207BC3, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Valve.VR.EVREye
struct  EVREye_t7C413729402C81A69293253E13D4496F15B2F68A 
{
public:
	// System.Int32 Valve.VR.EVREye::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(EVREye_t7C413729402C81A69293253E13D4496F15B2F68A, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Valve.VR.EVRInputError
struct  EVRInputError_tC8741BE3044407E8FA26F282526B259D93DBF22F 
{
public:
	// System.Int32 Valve.VR.EVRInputError::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(EVRInputError_tC8741BE3044407E8FA26F282526B259D93DBF22F, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Valve.VR.EVRInputStringBits
struct  EVRInputStringBits_t6D50955CC5A3AB1CC794A0582C59C3AC98F60E60 
{
public:
	// System.Int32 Valve.VR.EVRInputStringBits::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(EVRInputStringBits_t6D50955CC5A3AB1CC794A0582C59C3AC98F60E60, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Valve.VR.EVRSkeletalMotionRange
struct  EVRSkeletalMotionRange_t7B3CF169090271D1030B7DBCB36A9F6B9B5833F5 
{
public:
	// System.Int32 Valve.VR.EVRSkeletalMotionRange::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(EVRSkeletalMotionRange_t7B3CF169090271D1030B7DBCB36A9F6B9B5833F5, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Valve.VR.EVRSkeletalReferencePose
struct  EVRSkeletalReferencePose_t9735ED60A5D110A7B9569A57B78D9B212143077F 
{
public:
	// System.Int32 Valve.VR.EVRSkeletalReferencePose::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(EVRSkeletalReferencePose_t9735ED60A5D110A7B9569A57B78D9B212143077F, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Valve.VR.EVRSkeletalTrackingLevel
struct  EVRSkeletalTrackingLevel_tDFEFEB2A62597359105A66DDF2A00CC5B7B8F1AD 
{
public:
	// System.Int32 Valve.VR.EVRSkeletalTrackingLevel::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(EVRSkeletalTrackingLevel_tDFEFEB2A62597359105A66DDF2A00CC5B7B8F1AD, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Valve.VR.EVRSkeletalTransformSpace
struct  EVRSkeletalTransformSpace_t42634E33BB67FB63D23667D5C12E7DCC6C4B90BB 
{
public:
	// System.Int32 Valve.VR.EVRSkeletalTransformSpace::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(EVRSkeletalTransformSpace_t42634E33BB67FB63D23667D5C12E7DCC6C4B90BB, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Valve.VR.SteamVR_ActionDirections
struct  SteamVR_ActionDirections_tC7760C9A471565840E2F1D11A61E44735571D8B1 
{
public:
	// System.Int32 Valve.VR.SteamVR_ActionDirections::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(SteamVR_ActionDirections_tC7760C9A471565840E2F1D11A61E44735571D8B1, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Valve.VR.SteamVR_Action_In`2<Valve.VR.SteamVR_Action_Boolean_Source_Map,Valve.VR.SteamVR_Action_Boolean_Source>
struct  SteamVR_Action_In_2_t2F8E3210A305FC855ECD46AD48FA406BA177FAA9  : public SteamVR_Action_2_tEF35EA9CF866C4CE33A6702A6D71E8DDE8081AC8
{
public:

public:
};


// Valve.VR.SteamVR_Action_In`2<Valve.VR.SteamVR_Action_Pose_Source_Map`1<Valve.VR.SteamVR_Action_Pose_Source>,Valve.VR.SteamVR_Action_Pose_Source>
struct  SteamVR_Action_In_2_t2C5C166B83FDF97166A2B5B007C2A5742BBE2199  : public SteamVR_Action_2_tDED2DB9236CA9398BCDCB18DB8DDA3DB1D98FBAC
{
public:

public:
};


// Valve.VR.SteamVR_Action_In`2<Valve.VR.SteamVR_Action_Single_Source_Map,Valve.VR.SteamVR_Action_Single_Source>
struct  SteamVR_Action_In_2_t518EEA73CD833B39D557DDB94804313377E0FE02  : public SteamVR_Action_2_t6C5A72BCD96947140E949B195C2578D4AE46E170
{
public:

public:
};


// Valve.VR.SteamVR_Action_In`2<Valve.VR.SteamVR_Action_Skeleton_Source_Map,Valve.VR.SteamVR_Action_Skeleton_Source>
struct  SteamVR_Action_In_2_t648DCC49A164ED0184532F0961391833D01917D6  : public SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D
{
public:

public:
};


// Valve.VR.SteamVR_Action_In`2<Valve.VR.SteamVR_Action_Vector2_Source_Map,Valve.VR.SteamVR_Action_Vector2_Source>
struct  SteamVR_Action_In_2_t4260173E99094920C69878272DE55CE93D5D5A9C  : public SteamVR_Action_2_t83C041411A0CA61D62EE3A4F510D83333D049258
{
public:

public:
};


// Valve.VR.SteamVR_Action_Out`2<Valve.VR.SteamVR_Action_Vibration_Source_Map,Valve.VR.SteamVR_Action_Vibration_Source>
struct  SteamVR_Action_Out_2_tA45864F69B273963D043D8A2A878B60DC5995BD0  : public SteamVR_Action_2_t2615F9F41BCBF5EA1EE3A8AF266CE58FAFF6521D
{
public:

public:
};


// Valve.VR.SteamVR_Behaviour_BooleanEvent
struct  SteamVR_Behaviour_BooleanEvent_t96626CBD0A0BD84C51D1F9E03DE5BEBFF58A48E4  : public UnityEvent_3_t6AB15570399D42C6377741DA4B8F5FD3CEED0539
{
public:

public:
};


// Valve.VR.SteamVR_Behaviour_PoseEvent
struct  SteamVR_Behaviour_PoseEvent_t110293A57CED63A5C2FFEF4849FC452DE99B2F87  : public UnityEvent_2_tA05085E47587B6E451DA7BFE1C3551696049307E
{
public:

public:
};


// Valve.VR.SteamVR_Behaviour_Pose_ConnectedChangedEvent
struct  SteamVR_Behaviour_Pose_ConnectedChangedEvent_t79FB8A09A29315BCF3A67CC1FA2D124C01D3EAE9  : public UnityEvent_3_tBBC56B079516E009B4B82F815EA628510B08FB2B
{
public:

public:
};


// Valve.VR.SteamVR_Behaviour_Pose_DeviceIndexChangedEvent
struct  SteamVR_Behaviour_Pose_DeviceIndexChangedEvent_tB4204CD58F5763D655B3B020CAEA0CD8A45D13E9  : public UnityEvent_3_t9F7FBE764B10ACE18D72DD1C3A0FD02372F2FDE4
{
public:

public:
};


// Valve.VR.SteamVR_Behaviour_Pose_TrackingChangedEvent
struct  SteamVR_Behaviour_Pose_TrackingChangedEvent_tC76D95F0E8D943109311BCE1B35E1D8CDC3C2E6E  : public UnityEvent_3_t391F2DDF36FA264C778F53EB8FDCE5A95F5064BE
{
public:

public:
};


// Valve.VR.SteamVR_Behaviour_SingleEvent
struct  SteamVR_Behaviour_SingleEvent_tB6C52A82965E98E5B7A851CB572E9B6FD88FE4F4  : public UnityEvent_4_t3A547C01CD6A63A594A6C4E837E12268349BF0C7
{
public:

public:
};


// Valve.VR.SteamVR_Behaviour_Skeleton_MirrorType
struct  MirrorType_tB9C4C8409706CBA9DE25E59205090865B0C3BF9C 
{
public:
	// System.Int32 Valve.VR.SteamVR_Behaviour_Skeleton_MirrorType::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(MirrorType_tB9C4C8409706CBA9DE25E59205090865B0C3BF9C, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Valve.VR.SteamVR_Behaviour_SkeletonEvent
struct  SteamVR_Behaviour_SkeletonEvent_t2A4AAE28B8BB6F5E52B7A7FAF6ADF1F3DE537627  : public UnityEvent_2_t1039E05662791F0E922DA5769E4F1664E336547D
{
public:

public:
};


// Valve.VR.SteamVR_Behaviour_Skeleton_ConnectedChangedEvent
struct  SteamVR_Behaviour_Skeleton_ConnectedChangedEvent_t448A3C929AA8F491BB03F8340DC791D40A546C85  : public UnityEvent_3_tC8A397CA8890011F49B784FC92F66521499D69BA
{
public:

public:
};


// Valve.VR.SteamVR_Behaviour_Skeleton_TrackingChangedEvent
struct  SteamVR_Behaviour_Skeleton_TrackingChangedEvent_tE5D388C0E5523A46227EEF4DC31BB575AE0E6E90  : public UnityEvent_3_t516983F871A6C39CE10EE0B4C19E30BE359971A0
{
public:

public:
};


// Valve.VR.SteamVR_Behaviour_Vector2Event
struct  SteamVR_Behaviour_Vector2Event_tE9ABC41564061B6A2699778A901EC2A11DD2FBA5  : public UnityEvent_4_t980357B09A0DFE7E7E39E176C64C88B144A074AB
{
public:

public:
};


// Valve.VR.SteamVR_Events_Event`1<Valve.VR.VREvent_t>
struct  Event_1_t5DB0CDA7FD2616DA8770700B1A982E1A0F052262  : public UnityEvent_1_t7E9560B75945B332DA5807C6061708BBAF5F7307
{
public:

public:
};


// Valve.VR.SteamVR_Input_Sources
struct  SteamVR_Input_Sources_tCE41AA589FB3B9516BDE0DFABDCB4AAEA29528F7 
{
public:
	// System.Int32 Valve.VR.SteamVR_Input_Sources::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(SteamVR_Input_Sources_tCE41AA589FB3B9516BDE0DFABDCB4AAEA29528F7, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Valve.VR.SteamVR_Skeleton_FingerExtensionTypes
struct  SteamVR_Skeleton_FingerExtensionTypes_t23F965584118606D48A0C2B87F34713E32028214 
{
public:
	// System.Int32 Valve.VR.SteamVR_Skeleton_FingerExtensionTypes::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(SteamVR_Skeleton_FingerExtensionTypes_t23F965584118606D48A0C2B87F34713E32028214, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Valve.VR.SteamVR_Skeleton_FingerIndexEnum
struct  SteamVR_Skeleton_FingerIndexEnum_t94461F3230EE21117A33A97E423D48FDF7CBF56F 
{
public:
	// System.Int32 Valve.VR.SteamVR_Skeleton_FingerIndexEnum::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(SteamVR_Skeleton_FingerIndexEnum_t94461F3230EE21117A33A97E423D48FDF7CBF56F, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// System.MulticastDelegate
struct  MulticastDelegate_t  : public Delegate_t
{
public:
	// System.Delegate[] System.MulticastDelegate::delegates
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* ___delegates_11;

public:
	inline static int32_t get_offset_of_delegates_11() { return static_cast<int32_t>(offsetof(MulticastDelegate_t, ___delegates_11)); }
	inline DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* get_delegates_11() const { return ___delegates_11; }
	inline DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86** get_address_of_delegates_11() { return &___delegates_11; }
	inline void set_delegates_11(DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* value)
	{
		___delegates_11 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___delegates_11), (void*)value);
	}
};

// Native definition for P/Invoke marshalling of System.MulticastDelegate
struct MulticastDelegate_t_marshaled_pinvoke : public Delegate_t_marshaled_pinvoke
{
	Delegate_t_marshaled_pinvoke** ___delegates_11;
};
// Native definition for COM marshalling of System.MulticastDelegate
struct MulticastDelegate_t_marshaled_com : public Delegate_t_marshaled_com
{
	Delegate_t_marshaled_com** ___delegates_11;
};

// System.Nullable`1<System.Int32Enum>
struct  Nullable_1_tBCA4780CE8E9555A53CF0BA48AF742DA998C0833 
{
public:
	// T System.Nullable`1::value
	int32_t ___value_0;
	// System.Boolean System.Nullable`1::has_value
	bool ___has_value_1;

public:
	inline static int32_t get_offset_of_value_0() { return static_cast<int32_t>(offsetof(Nullable_1_tBCA4780CE8E9555A53CF0BA48AF742DA998C0833, ___value_0)); }
	inline int32_t get_value_0() const { return ___value_0; }
	inline int32_t* get_address_of_value_0() { return &___value_0; }
	inline void set_value_0(int32_t value)
	{
		___value_0 = value;
	}

	inline static int32_t get_offset_of_has_value_1() { return static_cast<int32_t>(offsetof(Nullable_1_tBCA4780CE8E9555A53CF0BA48AF742DA998C0833, ___has_value_1)); }
	inline bool get_has_value_1() const { return ___has_value_1; }
	inline bool* get_address_of_has_value_1() { return &___has_value_1; }
	inline void set_has_value_1(bool value)
	{
		___has_value_1 = value;
	}
};


// System.Nullable`1<Valve.VR.EVRSkeletalMotionRange>
struct  Nullable_1_t1A7B9FD0D5A1C2016BC211A63A5BB64D3B4E70DD 
{
public:
	// T System.Nullable`1::value
	int32_t ___value_0;
	// System.Boolean System.Nullable`1::has_value
	bool ___has_value_1;

public:
	inline static int32_t get_offset_of_value_0() { return static_cast<int32_t>(offsetof(Nullable_1_t1A7B9FD0D5A1C2016BC211A63A5BB64D3B4E70DD, ___value_0)); }
	inline int32_t get_value_0() const { return ___value_0; }
	inline int32_t* get_address_of_value_0() { return &___value_0; }
	inline void set_value_0(int32_t value)
	{
		___value_0 = value;
	}

	inline static int32_t get_offset_of_has_value_1() { return static_cast<int32_t>(offsetof(Nullable_1_t1A7B9FD0D5A1C2016BC211A63A5BB64D3B4E70DD, ___has_value_1)); }
	inline bool get_has_value_1() const { return ___has_value_1; }
	inline bool* get_address_of_has_value_1() { return &___has_value_1; }
	inline void set_has_value_1(bool value)
	{
		___has_value_1 = value;
	}
};


// System.SystemException
struct  SystemException_t5380468142AA850BE4A341D7AF3EAB9C78746782  : public Exception_t
{
public:

public:
};


// UnityEngine.Component
struct  Component_t05064EF382ABCAF4B8C94F8A350EA85184C26621  : public Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0
{
public:

public:
};


// UnityEngine.GameObject
struct  GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F  : public Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0
{
public:

public:
};


// UnityEngine.ScriptableObject
struct  ScriptableObject_tAB015486CEAB714DA0D5C1BA389B84FB90427734  : public Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0
{
public:

public:
};

// Native definition for P/Invoke marshalling of UnityEngine.ScriptableObject
struct ScriptableObject_tAB015486CEAB714DA0D5C1BA389B84FB90427734_marshaled_pinvoke : public Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_marshaled_pinvoke
{
};
// Native definition for COM marshalling of UnityEngine.ScriptableObject
struct ScriptableObject_tAB015486CEAB714DA0D5C1BA389B84FB90427734_marshaled_com : public Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_marshaled_com
{
};

// Valve.VR.SteamVR_Action_Boolean
struct  SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20  : public SteamVR_Action_In_2_t2F8E3210A305FC855ECD46AD48FA406BA177FAA9
{
public:

public:
};


// Valve.VR.SteamVR_Action_Pose_Base`2<Valve.VR.SteamVR_Action_Pose_Source_Map`1<Valve.VR.SteamVR_Action_Pose_Source>,Valve.VR.SteamVR_Action_Pose_Source>
struct  SteamVR_Action_Pose_Base_2_tBAE9134F2B018AC078BAF24A2A5197F0A976D59A  : public SteamVR_Action_In_2_t2C5C166B83FDF97166A2B5B007C2A5742BBE2199
{
public:

public:
};


// Valve.VR.SteamVR_Action_Pose_Base`2<Valve.VR.SteamVR_Action_Skeleton_Source_Map,Valve.VR.SteamVR_Action_Skeleton_Source>
struct  SteamVR_Action_Pose_Base_2_tCF260D4E08F45DC042B3B5B7B7A2F6B84880C2C2  : public SteamVR_Action_In_2_t648DCC49A164ED0184532F0961391833D01917D6
{
public:

public:
};


// Valve.VR.SteamVR_Action_Single
struct  SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81  : public SteamVR_Action_In_2_t518EEA73CD833B39D557DDB94804313377E0FE02
{
public:

public:
};


// Valve.VR.SteamVR_Action_Source
struct  SteamVR_Action_Source_t9D7428CDE39924074518EE6233D9A4FAB0C33CB0  : public RuntimeObject
{
public:
	// Valve.VR.SteamVR_Input_Sources Valve.VR.SteamVR_Action_Source::<inputSource>k__BackingField
	int32_t ___U3CinputSourceU3Ek__BackingField_0;
	// System.UInt64 Valve.VR.SteamVR_Action_Source::inputSourceHandle
	uint64_t ___inputSourceHandle_1;
	// Valve.VR.SteamVR_Action Valve.VR.SteamVR_Action_Source::action
	SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 * ___action_2;

public:
	inline static int32_t get_offset_of_U3CinputSourceU3Ek__BackingField_0() { return static_cast<int32_t>(offsetof(SteamVR_Action_Source_t9D7428CDE39924074518EE6233D9A4FAB0C33CB0, ___U3CinputSourceU3Ek__BackingField_0)); }
	inline int32_t get_U3CinputSourceU3Ek__BackingField_0() const { return ___U3CinputSourceU3Ek__BackingField_0; }
	inline int32_t* get_address_of_U3CinputSourceU3Ek__BackingField_0() { return &___U3CinputSourceU3Ek__BackingField_0; }
	inline void set_U3CinputSourceU3Ek__BackingField_0(int32_t value)
	{
		___U3CinputSourceU3Ek__BackingField_0 = value;
	}

	inline static int32_t get_offset_of_inputSourceHandle_1() { return static_cast<int32_t>(offsetof(SteamVR_Action_Source_t9D7428CDE39924074518EE6233D9A4FAB0C33CB0, ___inputSourceHandle_1)); }
	inline uint64_t get_inputSourceHandle_1() const { return ___inputSourceHandle_1; }
	inline uint64_t* get_address_of_inputSourceHandle_1() { return &___inputSourceHandle_1; }
	inline void set_inputSourceHandle_1(uint64_t value)
	{
		___inputSourceHandle_1 = value;
	}

	inline static int32_t get_offset_of_action_2() { return static_cast<int32_t>(offsetof(SteamVR_Action_Source_t9D7428CDE39924074518EE6233D9A4FAB0C33CB0, ___action_2)); }
	inline SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 * get_action_2() const { return ___action_2; }
	inline SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 ** get_address_of_action_2() { return &___action_2; }
	inline void set_action_2(SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 * value)
	{
		___action_2 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___action_2), (void*)value);
	}
};


// Valve.VR.SteamVR_Action_Source_Map
struct  SteamVR_Action_Source_Map_t7EF8D4B037DC17D04177E758D64AA2C482031E17  : public RuntimeObject
{
public:
	// System.String Valve.VR.SteamVR_Action_Source_Map::<fullPath>k__BackingField
	String_t* ___U3CfullPathU3Ek__BackingField_0;
	// System.UInt64 Valve.VR.SteamVR_Action_Source_Map::<handle>k__BackingField
	uint64_t ___U3ChandleU3Ek__BackingField_1;
	// Valve.VR.SteamVR_ActionSet Valve.VR.SteamVR_Action_Source_Map::<actionSet>k__BackingField
	SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * ___U3CactionSetU3Ek__BackingField_2;
	// Valve.VR.SteamVR_ActionDirections Valve.VR.SteamVR_Action_Source_Map::<direction>k__BackingField
	int32_t ___U3CdirectionU3Ek__BackingField_3;
	// Valve.VR.SteamVR_Action Valve.VR.SteamVR_Action_Source_Map::action
	SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 * ___action_4;

public:
	inline static int32_t get_offset_of_U3CfullPathU3Ek__BackingField_0() { return static_cast<int32_t>(offsetof(SteamVR_Action_Source_Map_t7EF8D4B037DC17D04177E758D64AA2C482031E17, ___U3CfullPathU3Ek__BackingField_0)); }
	inline String_t* get_U3CfullPathU3Ek__BackingField_0() const { return ___U3CfullPathU3Ek__BackingField_0; }
	inline String_t** get_address_of_U3CfullPathU3Ek__BackingField_0() { return &___U3CfullPathU3Ek__BackingField_0; }
	inline void set_U3CfullPathU3Ek__BackingField_0(String_t* value)
	{
		___U3CfullPathU3Ek__BackingField_0 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3CfullPathU3Ek__BackingField_0), (void*)value);
	}

	inline static int32_t get_offset_of_U3ChandleU3Ek__BackingField_1() { return static_cast<int32_t>(offsetof(SteamVR_Action_Source_Map_t7EF8D4B037DC17D04177E758D64AA2C482031E17, ___U3ChandleU3Ek__BackingField_1)); }
	inline uint64_t get_U3ChandleU3Ek__BackingField_1() const { return ___U3ChandleU3Ek__BackingField_1; }
	inline uint64_t* get_address_of_U3ChandleU3Ek__BackingField_1() { return &___U3ChandleU3Ek__BackingField_1; }
	inline void set_U3ChandleU3Ek__BackingField_1(uint64_t value)
	{
		___U3ChandleU3Ek__BackingField_1 = value;
	}

	inline static int32_t get_offset_of_U3CactionSetU3Ek__BackingField_2() { return static_cast<int32_t>(offsetof(SteamVR_Action_Source_Map_t7EF8D4B037DC17D04177E758D64AA2C482031E17, ___U3CactionSetU3Ek__BackingField_2)); }
	inline SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * get_U3CactionSetU3Ek__BackingField_2() const { return ___U3CactionSetU3Ek__BackingField_2; }
	inline SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 ** get_address_of_U3CactionSetU3Ek__BackingField_2() { return &___U3CactionSetU3Ek__BackingField_2; }
	inline void set_U3CactionSetU3Ek__BackingField_2(SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * value)
	{
		___U3CactionSetU3Ek__BackingField_2 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3CactionSetU3Ek__BackingField_2), (void*)value);
	}

	inline static int32_t get_offset_of_U3CdirectionU3Ek__BackingField_3() { return static_cast<int32_t>(offsetof(SteamVR_Action_Source_Map_t7EF8D4B037DC17D04177E758D64AA2C482031E17, ___U3CdirectionU3Ek__BackingField_3)); }
	inline int32_t get_U3CdirectionU3Ek__BackingField_3() const { return ___U3CdirectionU3Ek__BackingField_3; }
	inline int32_t* get_address_of_U3CdirectionU3Ek__BackingField_3() { return &___U3CdirectionU3Ek__BackingField_3; }
	inline void set_U3CdirectionU3Ek__BackingField_3(int32_t value)
	{
		___U3CdirectionU3Ek__BackingField_3 = value;
	}

	inline static int32_t get_offset_of_action_4() { return static_cast<int32_t>(offsetof(SteamVR_Action_Source_Map_t7EF8D4B037DC17D04177E758D64AA2C482031E17, ___action_4)); }
	inline SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 * get_action_4() const { return ___action_4; }
	inline SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 ** get_address_of_action_4() { return &___action_4; }
	inline void set_action_4(SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 * value)
	{
		___action_4 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___action_4), (void*)value);
	}
};

struct SteamVR_Action_Source_Map_t7EF8D4B037DC17D04177E758D64AA2C482031E17_StaticFields
{
public:
	// System.String Valve.VR.SteamVR_Action_Source_Map::inLowered
	String_t* ___inLowered_5;
	// System.String Valve.VR.SteamVR_Action_Source_Map::outLowered
	String_t* ___outLowered_6;

public:
	inline static int32_t get_offset_of_inLowered_5() { return static_cast<int32_t>(offsetof(SteamVR_Action_Source_Map_t7EF8D4B037DC17D04177E758D64AA2C482031E17_StaticFields, ___inLowered_5)); }
	inline String_t* get_inLowered_5() const { return ___inLowered_5; }
	inline String_t** get_address_of_inLowered_5() { return &___inLowered_5; }
	inline void set_inLowered_5(String_t* value)
	{
		___inLowered_5 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___inLowered_5), (void*)value);
	}

	inline static int32_t get_offset_of_outLowered_6() { return static_cast<int32_t>(offsetof(SteamVR_Action_Source_Map_t7EF8D4B037DC17D04177E758D64AA2C482031E17_StaticFields, ___outLowered_6)); }
	inline String_t* get_outLowered_6() const { return ___outLowered_6; }
	inline String_t** get_address_of_outLowered_6() { return &___outLowered_6; }
	inline void set_outLowered_6(String_t* value)
	{
		___outLowered_6 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___outLowered_6), (void*)value);
	}
};


// Valve.VR.SteamVR_Action_Vector2
struct  SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37  : public SteamVR_Action_In_2_t4260173E99094920C69878272DE55CE93D5D5A9C
{
public:

public:
};


// Valve.VR.SteamVR_Action_Vibration
struct  SteamVR_Action_Vibration_t487523BCA03933B9812950511E8A4BCE00F03EAB  : public SteamVR_Action_Out_2_tA45864F69B273963D043D8A2A878B60DC5995BD0
{
public:

public:
};


// Valve.VR.SteamVR_Behaviour_Skeleton_<DoRangeOfMotionBlend>d__156
struct  U3CDoRangeOfMotionBlendU3Ed__156_tA971D0B47D544B2CDCFFBDE43070BD5D7572E0C9  : public RuntimeObject
{
public:
	// System.Int32 Valve.VR.SteamVR_Behaviour_Skeleton_<DoRangeOfMotionBlend>d__156::<>1__state
	int32_t ___U3CU3E1__state_0;
	// System.Object Valve.VR.SteamVR_Behaviour_Skeleton_<DoRangeOfMotionBlend>d__156::<>2__current
	RuntimeObject * ___U3CU3E2__current_1;
	// Valve.VR.EVRSkeletalMotionRange Valve.VR.SteamVR_Behaviour_Skeleton_<DoRangeOfMotionBlend>d__156::oldRangeOfMotion
	int32_t ___oldRangeOfMotion_2;
	// Valve.VR.EVRSkeletalMotionRange Valve.VR.SteamVR_Behaviour_Skeleton_<DoRangeOfMotionBlend>d__156::newRangeOfMotion
	int32_t ___newRangeOfMotion_3;
	// System.Single Valve.VR.SteamVR_Behaviour_Skeleton_<DoRangeOfMotionBlend>d__156::overTime
	float ___overTime_4;
	// Valve.VR.SteamVR_Behaviour_Skeleton Valve.VR.SteamVR_Behaviour_Skeleton_<DoRangeOfMotionBlend>d__156::<>4__this
	SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A * ___U3CU3E4__this_5;
	// System.Single Valve.VR.SteamVR_Behaviour_Skeleton_<DoRangeOfMotionBlend>d__156::<startTime>5__1
	float ___U3CstartTimeU3E5__1_6;
	// System.Single Valve.VR.SteamVR_Behaviour_Skeleton_<DoRangeOfMotionBlend>d__156::<endTime>5__2
	float ___U3CendTimeU3E5__2_7;
	// UnityEngine.Vector3[] Valve.VR.SteamVR_Behaviour_Skeleton_<DoRangeOfMotionBlend>d__156::<oldBonePositions>5__3
	Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* ___U3ColdBonePositionsU3E5__3_8;
	// UnityEngine.Quaternion[] Valve.VR.SteamVR_Behaviour_Skeleton_<DoRangeOfMotionBlend>d__156::<oldBoneRotations>5__4
	QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3* ___U3ColdBoneRotationsU3E5__4_9;
	// UnityEngine.Vector3[] Valve.VR.SteamVR_Behaviour_Skeleton_<DoRangeOfMotionBlend>d__156::<newBonePositions>5__5
	Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* ___U3CnewBonePositionsU3E5__5_10;
	// UnityEngine.Quaternion[] Valve.VR.SteamVR_Behaviour_Skeleton_<DoRangeOfMotionBlend>d__156::<newBoneRotations>5__6
	QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3* ___U3CnewBoneRotationsU3E5__6_11;
	// System.Single Valve.VR.SteamVR_Behaviour_Skeleton_<DoRangeOfMotionBlend>d__156::<lerp>5__7
	float ___U3ClerpU3E5__7_12;
	// System.Int32 Valve.VR.SteamVR_Behaviour_Skeleton_<DoRangeOfMotionBlend>d__156::<boneIndex>5__8
	int32_t ___U3CboneIndexU3E5__8_13;
	// UnityEngine.Vector3 Valve.VR.SteamVR_Behaviour_Skeleton_<DoRangeOfMotionBlend>d__156::<blendedRangeOfMotionPosition>5__9
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___U3CblendedRangeOfMotionPositionU3E5__9_14;
	// UnityEngine.Quaternion Valve.VR.SteamVR_Behaviour_Skeleton_<DoRangeOfMotionBlend>d__156::<blendedRangeOfMotionRotation>5__10
	Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  ___U3CblendedRangeOfMotionRotationU3E5__10_15;

public:
	inline static int32_t get_offset_of_U3CU3E1__state_0() { return static_cast<int32_t>(offsetof(U3CDoRangeOfMotionBlendU3Ed__156_tA971D0B47D544B2CDCFFBDE43070BD5D7572E0C9, ___U3CU3E1__state_0)); }
	inline int32_t get_U3CU3E1__state_0() const { return ___U3CU3E1__state_0; }
	inline int32_t* get_address_of_U3CU3E1__state_0() { return &___U3CU3E1__state_0; }
	inline void set_U3CU3E1__state_0(int32_t value)
	{
		___U3CU3E1__state_0 = value;
	}

	inline static int32_t get_offset_of_U3CU3E2__current_1() { return static_cast<int32_t>(offsetof(U3CDoRangeOfMotionBlendU3Ed__156_tA971D0B47D544B2CDCFFBDE43070BD5D7572E0C9, ___U3CU3E2__current_1)); }
	inline RuntimeObject * get_U3CU3E2__current_1() const { return ___U3CU3E2__current_1; }
	inline RuntimeObject ** get_address_of_U3CU3E2__current_1() { return &___U3CU3E2__current_1; }
	inline void set_U3CU3E2__current_1(RuntimeObject * value)
	{
		___U3CU3E2__current_1 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3CU3E2__current_1), (void*)value);
	}

	inline static int32_t get_offset_of_oldRangeOfMotion_2() { return static_cast<int32_t>(offsetof(U3CDoRangeOfMotionBlendU3Ed__156_tA971D0B47D544B2CDCFFBDE43070BD5D7572E0C9, ___oldRangeOfMotion_2)); }
	inline int32_t get_oldRangeOfMotion_2() const { return ___oldRangeOfMotion_2; }
	inline int32_t* get_address_of_oldRangeOfMotion_2() { return &___oldRangeOfMotion_2; }
	inline void set_oldRangeOfMotion_2(int32_t value)
	{
		___oldRangeOfMotion_2 = value;
	}

	inline static int32_t get_offset_of_newRangeOfMotion_3() { return static_cast<int32_t>(offsetof(U3CDoRangeOfMotionBlendU3Ed__156_tA971D0B47D544B2CDCFFBDE43070BD5D7572E0C9, ___newRangeOfMotion_3)); }
	inline int32_t get_newRangeOfMotion_3() const { return ___newRangeOfMotion_3; }
	inline int32_t* get_address_of_newRangeOfMotion_3() { return &___newRangeOfMotion_3; }
	inline void set_newRangeOfMotion_3(int32_t value)
	{
		___newRangeOfMotion_3 = value;
	}

	inline static int32_t get_offset_of_overTime_4() { return static_cast<int32_t>(offsetof(U3CDoRangeOfMotionBlendU3Ed__156_tA971D0B47D544B2CDCFFBDE43070BD5D7572E0C9, ___overTime_4)); }
	inline float get_overTime_4() const { return ___overTime_4; }
	inline float* get_address_of_overTime_4() { return &___overTime_4; }
	inline void set_overTime_4(float value)
	{
		___overTime_4 = value;
	}

	inline static int32_t get_offset_of_U3CU3E4__this_5() { return static_cast<int32_t>(offsetof(U3CDoRangeOfMotionBlendU3Ed__156_tA971D0B47D544B2CDCFFBDE43070BD5D7572E0C9, ___U3CU3E4__this_5)); }
	inline SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A * get_U3CU3E4__this_5() const { return ___U3CU3E4__this_5; }
	inline SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A ** get_address_of_U3CU3E4__this_5() { return &___U3CU3E4__this_5; }
	inline void set_U3CU3E4__this_5(SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A * value)
	{
		___U3CU3E4__this_5 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3CU3E4__this_5), (void*)value);
	}

	inline static int32_t get_offset_of_U3CstartTimeU3E5__1_6() { return static_cast<int32_t>(offsetof(U3CDoRangeOfMotionBlendU3Ed__156_tA971D0B47D544B2CDCFFBDE43070BD5D7572E0C9, ___U3CstartTimeU3E5__1_6)); }
	inline float get_U3CstartTimeU3E5__1_6() const { return ___U3CstartTimeU3E5__1_6; }
	inline float* get_address_of_U3CstartTimeU3E5__1_6() { return &___U3CstartTimeU3E5__1_6; }
	inline void set_U3CstartTimeU3E5__1_6(float value)
	{
		___U3CstartTimeU3E5__1_6 = value;
	}

	inline static int32_t get_offset_of_U3CendTimeU3E5__2_7() { return static_cast<int32_t>(offsetof(U3CDoRangeOfMotionBlendU3Ed__156_tA971D0B47D544B2CDCFFBDE43070BD5D7572E0C9, ___U3CendTimeU3E5__2_7)); }
	inline float get_U3CendTimeU3E5__2_7() const { return ___U3CendTimeU3E5__2_7; }
	inline float* get_address_of_U3CendTimeU3E5__2_7() { return &___U3CendTimeU3E5__2_7; }
	inline void set_U3CendTimeU3E5__2_7(float value)
	{
		___U3CendTimeU3E5__2_7 = value;
	}

	inline static int32_t get_offset_of_U3ColdBonePositionsU3E5__3_8() { return static_cast<int32_t>(offsetof(U3CDoRangeOfMotionBlendU3Ed__156_tA971D0B47D544B2CDCFFBDE43070BD5D7572E0C9, ___U3ColdBonePositionsU3E5__3_8)); }
	inline Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* get_U3ColdBonePositionsU3E5__3_8() const { return ___U3ColdBonePositionsU3E5__3_8; }
	inline Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28** get_address_of_U3ColdBonePositionsU3E5__3_8() { return &___U3ColdBonePositionsU3E5__3_8; }
	inline void set_U3ColdBonePositionsU3E5__3_8(Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* value)
	{
		___U3ColdBonePositionsU3E5__3_8 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3ColdBonePositionsU3E5__3_8), (void*)value);
	}

	inline static int32_t get_offset_of_U3ColdBoneRotationsU3E5__4_9() { return static_cast<int32_t>(offsetof(U3CDoRangeOfMotionBlendU3Ed__156_tA971D0B47D544B2CDCFFBDE43070BD5D7572E0C9, ___U3ColdBoneRotationsU3E5__4_9)); }
	inline QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3* get_U3ColdBoneRotationsU3E5__4_9() const { return ___U3ColdBoneRotationsU3E5__4_9; }
	inline QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3** get_address_of_U3ColdBoneRotationsU3E5__4_9() { return &___U3ColdBoneRotationsU3E5__4_9; }
	inline void set_U3ColdBoneRotationsU3E5__4_9(QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3* value)
	{
		___U3ColdBoneRotationsU3E5__4_9 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3ColdBoneRotationsU3E5__4_9), (void*)value);
	}

	inline static int32_t get_offset_of_U3CnewBonePositionsU3E5__5_10() { return static_cast<int32_t>(offsetof(U3CDoRangeOfMotionBlendU3Ed__156_tA971D0B47D544B2CDCFFBDE43070BD5D7572E0C9, ___U3CnewBonePositionsU3E5__5_10)); }
	inline Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* get_U3CnewBonePositionsU3E5__5_10() const { return ___U3CnewBonePositionsU3E5__5_10; }
	inline Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28** get_address_of_U3CnewBonePositionsU3E5__5_10() { return &___U3CnewBonePositionsU3E5__5_10; }
	inline void set_U3CnewBonePositionsU3E5__5_10(Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* value)
	{
		___U3CnewBonePositionsU3E5__5_10 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3CnewBonePositionsU3E5__5_10), (void*)value);
	}

	inline static int32_t get_offset_of_U3CnewBoneRotationsU3E5__6_11() { return static_cast<int32_t>(offsetof(U3CDoRangeOfMotionBlendU3Ed__156_tA971D0B47D544B2CDCFFBDE43070BD5D7572E0C9, ___U3CnewBoneRotationsU3E5__6_11)); }
	inline QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3* get_U3CnewBoneRotationsU3E5__6_11() const { return ___U3CnewBoneRotationsU3E5__6_11; }
	inline QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3** get_address_of_U3CnewBoneRotationsU3E5__6_11() { return &___U3CnewBoneRotationsU3E5__6_11; }
	inline void set_U3CnewBoneRotationsU3E5__6_11(QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3* value)
	{
		___U3CnewBoneRotationsU3E5__6_11 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3CnewBoneRotationsU3E5__6_11), (void*)value);
	}

	inline static int32_t get_offset_of_U3ClerpU3E5__7_12() { return static_cast<int32_t>(offsetof(U3CDoRangeOfMotionBlendU3Ed__156_tA971D0B47D544B2CDCFFBDE43070BD5D7572E0C9, ___U3ClerpU3E5__7_12)); }
	inline float get_U3ClerpU3E5__7_12() const { return ___U3ClerpU3E5__7_12; }
	inline float* get_address_of_U3ClerpU3E5__7_12() { return &___U3ClerpU3E5__7_12; }
	inline void set_U3ClerpU3E5__7_12(float value)
	{
		___U3ClerpU3E5__7_12 = value;
	}

	inline static int32_t get_offset_of_U3CboneIndexU3E5__8_13() { return static_cast<int32_t>(offsetof(U3CDoRangeOfMotionBlendU3Ed__156_tA971D0B47D544B2CDCFFBDE43070BD5D7572E0C9, ___U3CboneIndexU3E5__8_13)); }
	inline int32_t get_U3CboneIndexU3E5__8_13() const { return ___U3CboneIndexU3E5__8_13; }
	inline int32_t* get_address_of_U3CboneIndexU3E5__8_13() { return &___U3CboneIndexU3E5__8_13; }
	inline void set_U3CboneIndexU3E5__8_13(int32_t value)
	{
		___U3CboneIndexU3E5__8_13 = value;
	}

	inline static int32_t get_offset_of_U3CblendedRangeOfMotionPositionU3E5__9_14() { return static_cast<int32_t>(offsetof(U3CDoRangeOfMotionBlendU3Ed__156_tA971D0B47D544B2CDCFFBDE43070BD5D7572E0C9, ___U3CblendedRangeOfMotionPositionU3E5__9_14)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_U3CblendedRangeOfMotionPositionU3E5__9_14() const { return ___U3CblendedRangeOfMotionPositionU3E5__9_14; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_U3CblendedRangeOfMotionPositionU3E5__9_14() { return &___U3CblendedRangeOfMotionPositionU3E5__9_14; }
	inline void set_U3CblendedRangeOfMotionPositionU3E5__9_14(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___U3CblendedRangeOfMotionPositionU3E5__9_14 = value;
	}

	inline static int32_t get_offset_of_U3CblendedRangeOfMotionRotationU3E5__10_15() { return static_cast<int32_t>(offsetof(U3CDoRangeOfMotionBlendU3Ed__156_tA971D0B47D544B2CDCFFBDE43070BD5D7572E0C9, ___U3CblendedRangeOfMotionRotationU3E5__10_15)); }
	inline Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  get_U3CblendedRangeOfMotionRotationU3E5__10_15() const { return ___U3CblendedRangeOfMotionRotationU3E5__10_15; }
	inline Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357 * get_address_of_U3CblendedRangeOfMotionRotationU3E5__10_15() { return &___U3CblendedRangeOfMotionRotationU3E5__10_15; }
	inline void set_U3CblendedRangeOfMotionRotationU3E5__10_15(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  value)
	{
		___U3CblendedRangeOfMotionRotationU3E5__10_15 = value;
	}
};


// Valve.VR.SteamVR_Skeleton_PoseSnapshot
struct  SteamVR_Skeleton_PoseSnapshot_t0E1C4250EA9F357DFC204D8E5D9C2111593C3E18  : public RuntimeObject
{
public:
	// Valve.VR.SteamVR_Input_Sources Valve.VR.SteamVR_Skeleton_PoseSnapshot::inputSource
	int32_t ___inputSource_0;
	// UnityEngine.Vector3 Valve.VR.SteamVR_Skeleton_PoseSnapshot::position
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___position_1;
	// UnityEngine.Quaternion Valve.VR.SteamVR_Skeleton_PoseSnapshot::rotation
	Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  ___rotation_2;
	// UnityEngine.Vector3[] Valve.VR.SteamVR_Skeleton_PoseSnapshot::bonePositions
	Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* ___bonePositions_3;
	// UnityEngine.Quaternion[] Valve.VR.SteamVR_Skeleton_PoseSnapshot::boneRotations
	QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3* ___boneRotations_4;

public:
	inline static int32_t get_offset_of_inputSource_0() { return static_cast<int32_t>(offsetof(SteamVR_Skeleton_PoseSnapshot_t0E1C4250EA9F357DFC204D8E5D9C2111593C3E18, ___inputSource_0)); }
	inline int32_t get_inputSource_0() const { return ___inputSource_0; }
	inline int32_t* get_address_of_inputSource_0() { return &___inputSource_0; }
	inline void set_inputSource_0(int32_t value)
	{
		___inputSource_0 = value;
	}

	inline static int32_t get_offset_of_position_1() { return static_cast<int32_t>(offsetof(SteamVR_Skeleton_PoseSnapshot_t0E1C4250EA9F357DFC204D8E5D9C2111593C3E18, ___position_1)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_position_1() const { return ___position_1; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_position_1() { return &___position_1; }
	inline void set_position_1(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___position_1 = value;
	}

	inline static int32_t get_offset_of_rotation_2() { return static_cast<int32_t>(offsetof(SteamVR_Skeleton_PoseSnapshot_t0E1C4250EA9F357DFC204D8E5D9C2111593C3E18, ___rotation_2)); }
	inline Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  get_rotation_2() const { return ___rotation_2; }
	inline Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357 * get_address_of_rotation_2() { return &___rotation_2; }
	inline void set_rotation_2(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  value)
	{
		___rotation_2 = value;
	}

	inline static int32_t get_offset_of_bonePositions_3() { return static_cast<int32_t>(offsetof(SteamVR_Skeleton_PoseSnapshot_t0E1C4250EA9F357DFC204D8E5D9C2111593C3E18, ___bonePositions_3)); }
	inline Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* get_bonePositions_3() const { return ___bonePositions_3; }
	inline Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28** get_address_of_bonePositions_3() { return &___bonePositions_3; }
	inline void set_bonePositions_3(Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* value)
	{
		___bonePositions_3 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___bonePositions_3), (void*)value);
	}

	inline static int32_t get_offset_of_boneRotations_4() { return static_cast<int32_t>(offsetof(SteamVR_Skeleton_PoseSnapshot_t0E1C4250EA9F357DFC204D8E5D9C2111593C3E18, ___boneRotations_4)); }
	inline QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3* get_boneRotations_4() const { return ___boneRotations_4; }
	inline QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3** get_address_of_boneRotations_4() { return &___boneRotations_4; }
	inline void set_boneRotations_4(QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3* value)
	{
		___boneRotations_4 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___boneRotations_4), (void*)value);
	}
};


// Valve.VR.SteamVR_Skeleton_Pose_Hand
struct  SteamVR_Skeleton_Pose_Hand_tB273028E85AA961B7A088E75DA7263BF6BAA395E  : public RuntimeObject
{
public:
	// Valve.VR.SteamVR_Input_Sources Valve.VR.SteamVR_Skeleton_Pose_Hand::inputSource
	int32_t ___inputSource_0;
	// Valve.VR.SteamVR_Skeleton_FingerExtensionTypes Valve.VR.SteamVR_Skeleton_Pose_Hand::thumbFingerMovementType
	int32_t ___thumbFingerMovementType_1;
	// Valve.VR.SteamVR_Skeleton_FingerExtensionTypes Valve.VR.SteamVR_Skeleton_Pose_Hand::indexFingerMovementType
	int32_t ___indexFingerMovementType_2;
	// Valve.VR.SteamVR_Skeleton_FingerExtensionTypes Valve.VR.SteamVR_Skeleton_Pose_Hand::middleFingerMovementType
	int32_t ___middleFingerMovementType_3;
	// Valve.VR.SteamVR_Skeleton_FingerExtensionTypes Valve.VR.SteamVR_Skeleton_Pose_Hand::ringFingerMovementType
	int32_t ___ringFingerMovementType_4;
	// Valve.VR.SteamVR_Skeleton_FingerExtensionTypes Valve.VR.SteamVR_Skeleton_Pose_Hand::pinkyFingerMovementType
	int32_t ___pinkyFingerMovementType_5;
	// System.Boolean Valve.VR.SteamVR_Skeleton_Pose_Hand::ignoreRootPoseData
	bool ___ignoreRootPoseData_6;
	// System.Boolean Valve.VR.SteamVR_Skeleton_Pose_Hand::ignoreWristPoseData
	bool ___ignoreWristPoseData_7;
	// UnityEngine.Vector3 Valve.VR.SteamVR_Skeleton_Pose_Hand::position
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___position_8;
	// UnityEngine.Quaternion Valve.VR.SteamVR_Skeleton_Pose_Hand::rotation
	Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  ___rotation_9;
	// UnityEngine.Vector3[] Valve.VR.SteamVR_Skeleton_Pose_Hand::bonePositions
	Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* ___bonePositions_10;
	// UnityEngine.Quaternion[] Valve.VR.SteamVR_Skeleton_Pose_Hand::boneRotations
	QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3* ___boneRotations_11;

public:
	inline static int32_t get_offset_of_inputSource_0() { return static_cast<int32_t>(offsetof(SteamVR_Skeleton_Pose_Hand_tB273028E85AA961B7A088E75DA7263BF6BAA395E, ___inputSource_0)); }
	inline int32_t get_inputSource_0() const { return ___inputSource_0; }
	inline int32_t* get_address_of_inputSource_0() { return &___inputSource_0; }
	inline void set_inputSource_0(int32_t value)
	{
		___inputSource_0 = value;
	}

	inline static int32_t get_offset_of_thumbFingerMovementType_1() { return static_cast<int32_t>(offsetof(SteamVR_Skeleton_Pose_Hand_tB273028E85AA961B7A088E75DA7263BF6BAA395E, ___thumbFingerMovementType_1)); }
	inline int32_t get_thumbFingerMovementType_1() const { return ___thumbFingerMovementType_1; }
	inline int32_t* get_address_of_thumbFingerMovementType_1() { return &___thumbFingerMovementType_1; }
	inline void set_thumbFingerMovementType_1(int32_t value)
	{
		___thumbFingerMovementType_1 = value;
	}

	inline static int32_t get_offset_of_indexFingerMovementType_2() { return static_cast<int32_t>(offsetof(SteamVR_Skeleton_Pose_Hand_tB273028E85AA961B7A088E75DA7263BF6BAA395E, ___indexFingerMovementType_2)); }
	inline int32_t get_indexFingerMovementType_2() const { return ___indexFingerMovementType_2; }
	inline int32_t* get_address_of_indexFingerMovementType_2() { return &___indexFingerMovementType_2; }
	inline void set_indexFingerMovementType_2(int32_t value)
	{
		___indexFingerMovementType_2 = value;
	}

	inline static int32_t get_offset_of_middleFingerMovementType_3() { return static_cast<int32_t>(offsetof(SteamVR_Skeleton_Pose_Hand_tB273028E85AA961B7A088E75DA7263BF6BAA395E, ___middleFingerMovementType_3)); }
	inline int32_t get_middleFingerMovementType_3() const { return ___middleFingerMovementType_3; }
	inline int32_t* get_address_of_middleFingerMovementType_3() { return &___middleFingerMovementType_3; }
	inline void set_middleFingerMovementType_3(int32_t value)
	{
		___middleFingerMovementType_3 = value;
	}

	inline static int32_t get_offset_of_ringFingerMovementType_4() { return static_cast<int32_t>(offsetof(SteamVR_Skeleton_Pose_Hand_tB273028E85AA961B7A088E75DA7263BF6BAA395E, ___ringFingerMovementType_4)); }
	inline int32_t get_ringFingerMovementType_4() const { return ___ringFingerMovementType_4; }
	inline int32_t* get_address_of_ringFingerMovementType_4() { return &___ringFingerMovementType_4; }
	inline void set_ringFingerMovementType_4(int32_t value)
	{
		___ringFingerMovementType_4 = value;
	}

	inline static int32_t get_offset_of_pinkyFingerMovementType_5() { return static_cast<int32_t>(offsetof(SteamVR_Skeleton_Pose_Hand_tB273028E85AA961B7A088E75DA7263BF6BAA395E, ___pinkyFingerMovementType_5)); }
	inline int32_t get_pinkyFingerMovementType_5() const { return ___pinkyFingerMovementType_5; }
	inline int32_t* get_address_of_pinkyFingerMovementType_5() { return &___pinkyFingerMovementType_5; }
	inline void set_pinkyFingerMovementType_5(int32_t value)
	{
		___pinkyFingerMovementType_5 = value;
	}

	inline static int32_t get_offset_of_ignoreRootPoseData_6() { return static_cast<int32_t>(offsetof(SteamVR_Skeleton_Pose_Hand_tB273028E85AA961B7A088E75DA7263BF6BAA395E, ___ignoreRootPoseData_6)); }
	inline bool get_ignoreRootPoseData_6() const { return ___ignoreRootPoseData_6; }
	inline bool* get_address_of_ignoreRootPoseData_6() { return &___ignoreRootPoseData_6; }
	inline void set_ignoreRootPoseData_6(bool value)
	{
		___ignoreRootPoseData_6 = value;
	}

	inline static int32_t get_offset_of_ignoreWristPoseData_7() { return static_cast<int32_t>(offsetof(SteamVR_Skeleton_Pose_Hand_tB273028E85AA961B7A088E75DA7263BF6BAA395E, ___ignoreWristPoseData_7)); }
	inline bool get_ignoreWristPoseData_7() const { return ___ignoreWristPoseData_7; }
	inline bool* get_address_of_ignoreWristPoseData_7() { return &___ignoreWristPoseData_7; }
	inline void set_ignoreWristPoseData_7(bool value)
	{
		___ignoreWristPoseData_7 = value;
	}

	inline static int32_t get_offset_of_position_8() { return static_cast<int32_t>(offsetof(SteamVR_Skeleton_Pose_Hand_tB273028E85AA961B7A088E75DA7263BF6BAA395E, ___position_8)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_position_8() const { return ___position_8; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_position_8() { return &___position_8; }
	inline void set_position_8(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___position_8 = value;
	}

	inline static int32_t get_offset_of_rotation_9() { return static_cast<int32_t>(offsetof(SteamVR_Skeleton_Pose_Hand_tB273028E85AA961B7A088E75DA7263BF6BAA395E, ___rotation_9)); }
	inline Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  get_rotation_9() const { return ___rotation_9; }
	inline Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357 * get_address_of_rotation_9() { return &___rotation_9; }
	inline void set_rotation_9(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  value)
	{
		___rotation_9 = value;
	}

	inline static int32_t get_offset_of_bonePositions_10() { return static_cast<int32_t>(offsetof(SteamVR_Skeleton_Pose_Hand_tB273028E85AA961B7A088E75DA7263BF6BAA395E, ___bonePositions_10)); }
	inline Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* get_bonePositions_10() const { return ___bonePositions_10; }
	inline Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28** get_address_of_bonePositions_10() { return &___bonePositions_10; }
	inline void set_bonePositions_10(Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* value)
	{
		___bonePositions_10 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___bonePositions_10), (void*)value);
	}

	inline static int32_t get_offset_of_boneRotations_11() { return static_cast<int32_t>(offsetof(SteamVR_Skeleton_Pose_Hand_tB273028E85AA961B7A088E75DA7263BF6BAA395E, ___boneRotations_11)); }
	inline QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3* get_boneRotations_11() const { return ___boneRotations_11; }
	inline QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3** get_address_of_boneRotations_11() { return &___boneRotations_11; }
	inline void set_boneRotations_11(QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3* value)
	{
		___boneRotations_11 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___boneRotations_11), (void*)value);
	}
};


// Valve.VR.TrackedDevicePose_t
struct  TrackedDevicePose_t_t0028622C5DF863D4DC12877439D4A679A0D46365 
{
public:
	// Valve.VR.HmdMatrix34_t Valve.VR.TrackedDevicePose_t::mDeviceToAbsoluteTracking
	HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669  ___mDeviceToAbsoluteTracking_0;
	// Valve.VR.HmdVector3_t Valve.VR.TrackedDevicePose_t::vVelocity
	HmdVector3_t_t62AE508B69C04959DCD5633927536E28C2E6113A  ___vVelocity_1;
	// Valve.VR.HmdVector3_t Valve.VR.TrackedDevicePose_t::vAngularVelocity
	HmdVector3_t_t62AE508B69C04959DCD5633927536E28C2E6113A  ___vAngularVelocity_2;
	// Valve.VR.ETrackingResult Valve.VR.TrackedDevicePose_t::eTrackingResult
	int32_t ___eTrackingResult_3;
	// System.Boolean Valve.VR.TrackedDevicePose_t::bPoseIsValid
	bool ___bPoseIsValid_4;
	// System.Boolean Valve.VR.TrackedDevicePose_t::bDeviceIsConnected
	bool ___bDeviceIsConnected_5;

public:
	inline static int32_t get_offset_of_mDeviceToAbsoluteTracking_0() { return static_cast<int32_t>(offsetof(TrackedDevicePose_t_t0028622C5DF863D4DC12877439D4A679A0D46365, ___mDeviceToAbsoluteTracking_0)); }
	inline HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669  get_mDeviceToAbsoluteTracking_0() const { return ___mDeviceToAbsoluteTracking_0; }
	inline HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669 * get_address_of_mDeviceToAbsoluteTracking_0() { return &___mDeviceToAbsoluteTracking_0; }
	inline void set_mDeviceToAbsoluteTracking_0(HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669  value)
	{
		___mDeviceToAbsoluteTracking_0 = value;
	}

	inline static int32_t get_offset_of_vVelocity_1() { return static_cast<int32_t>(offsetof(TrackedDevicePose_t_t0028622C5DF863D4DC12877439D4A679A0D46365, ___vVelocity_1)); }
	inline HmdVector3_t_t62AE508B69C04959DCD5633927536E28C2E6113A  get_vVelocity_1() const { return ___vVelocity_1; }
	inline HmdVector3_t_t62AE508B69C04959DCD5633927536E28C2E6113A * get_address_of_vVelocity_1() { return &___vVelocity_1; }
	inline void set_vVelocity_1(HmdVector3_t_t62AE508B69C04959DCD5633927536E28C2E6113A  value)
	{
		___vVelocity_1 = value;
	}

	inline static int32_t get_offset_of_vAngularVelocity_2() { return static_cast<int32_t>(offsetof(TrackedDevicePose_t_t0028622C5DF863D4DC12877439D4A679A0D46365, ___vAngularVelocity_2)); }
	inline HmdVector3_t_t62AE508B69C04959DCD5633927536E28C2E6113A  get_vAngularVelocity_2() const { return ___vAngularVelocity_2; }
	inline HmdVector3_t_t62AE508B69C04959DCD5633927536E28C2E6113A * get_address_of_vAngularVelocity_2() { return &___vAngularVelocity_2; }
	inline void set_vAngularVelocity_2(HmdVector3_t_t62AE508B69C04959DCD5633927536E28C2E6113A  value)
	{
		___vAngularVelocity_2 = value;
	}

	inline static int32_t get_offset_of_eTrackingResult_3() { return static_cast<int32_t>(offsetof(TrackedDevicePose_t_t0028622C5DF863D4DC12877439D4A679A0D46365, ___eTrackingResult_3)); }
	inline int32_t get_eTrackingResult_3() const { return ___eTrackingResult_3; }
	inline int32_t* get_address_of_eTrackingResult_3() { return &___eTrackingResult_3; }
	inline void set_eTrackingResult_3(int32_t value)
	{
		___eTrackingResult_3 = value;
	}

	inline static int32_t get_offset_of_bPoseIsValid_4() { return static_cast<int32_t>(offsetof(TrackedDevicePose_t_t0028622C5DF863D4DC12877439D4A679A0D46365, ___bPoseIsValid_4)); }
	inline bool get_bPoseIsValid_4() const { return ___bPoseIsValid_4; }
	inline bool* get_address_of_bPoseIsValid_4() { return &___bPoseIsValid_4; }
	inline void set_bPoseIsValid_4(bool value)
	{
		___bPoseIsValid_4 = value;
	}

	inline static int32_t get_offset_of_bDeviceIsConnected_5() { return static_cast<int32_t>(offsetof(TrackedDevicePose_t_t0028622C5DF863D4DC12877439D4A679A0D46365, ___bDeviceIsConnected_5)); }
	inline bool get_bDeviceIsConnected_5() const { return ___bDeviceIsConnected_5; }
	inline bool* get_address_of_bDeviceIsConnected_5() { return &___bDeviceIsConnected_5; }
	inline void set_bDeviceIsConnected_5(bool value)
	{
		___bDeviceIsConnected_5 = value;
	}
};


// Valve.VR.VREvent_HDCPError_t
struct  VREvent_HDCPError_t_tB01E1AF666EA64FA9D948BC11978D08B58C7201E 
{
public:
	// Valve.VR.EHDCPError Valve.VR.VREvent_HDCPError_t::eCode
	int32_t ___eCode_0;

public:
	inline static int32_t get_offset_of_eCode_0() { return static_cast<int32_t>(offsetof(VREvent_HDCPError_t_tB01E1AF666EA64FA9D948BC11978D08B58C7201E, ___eCode_0)); }
	inline int32_t get_eCode_0() const { return ___eCode_0; }
	inline int32_t* get_address_of_eCode_0() { return &___eCode_0; }
	inline void set_eCode_0(int32_t value)
	{
		___eCode_0 = value;
	}
};


// Valve.VR.VREvent_Property_t
struct  VREvent_Property_t_tDA1B42C6B679945C10CE6A3E37ECAE1D03E586F5 
{
public:
	// System.UInt64 Valve.VR.VREvent_Property_t::container
	uint64_t ___container_0;
	// Valve.VR.ETrackedDeviceProperty Valve.VR.VREvent_Property_t::prop
	int32_t ___prop_1;

public:
	inline static int32_t get_offset_of_container_0() { return static_cast<int32_t>(offsetof(VREvent_Property_t_tDA1B42C6B679945C10CE6A3E37ECAE1D03E586F5, ___container_0)); }
	inline uint64_t get_container_0() const { return ___container_0; }
	inline uint64_t* get_address_of_container_0() { return &___container_0; }
	inline void set_container_0(uint64_t value)
	{
		___container_0 = value;
	}

	inline static int32_t get_offset_of_prop_1() { return static_cast<int32_t>(offsetof(VREvent_Property_t_tDA1B42C6B679945C10CE6A3E37ECAE1D03E586F5, ___prop_1)); }
	inline int32_t get_prop_1() const { return ___prop_1; }
	inline int32_t* get_address_of_prop_1() { return &___prop_1; }
	inline void set_prop_1(int32_t value)
	{
		___prop_1 = value;
	}
};


// Valve.VR.VREvent_ShowUI_t
struct  VREvent_ShowUI_t_tE3EDB9F7A3BCAC0C9A3812B850DA4F4A45933997 
{
public:
	// Valve.VR.EShowUIType Valve.VR.VREvent_ShowUI_t::eType
	int32_t ___eType_0;

public:
	inline static int32_t get_offset_of_eType_0() { return static_cast<int32_t>(offsetof(VREvent_ShowUI_t_tE3EDB9F7A3BCAC0C9A3812B850DA4F4A45933997, ___eType_0)); }
	inline int32_t get_eType_0() const { return ___eType_0; }
	inline int32_t* get_address_of_eType_0() { return &___eType_0; }
	inline void set_eType_0(int32_t value)
	{
		___eType_0 = value;
	}
};


// System.Action`1<System.String>
struct  Action_1_t32A9EECF5D4397CC1B9A7C7079870875411B06D0  : public MulticastDelegate_t
{
public:

public:
};


// System.AsyncCallback
struct  AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4  : public MulticastDelegate_t
{
public:

public:
};


// System.NotSupportedException
struct  NotSupportedException_tE75B318D6590A02A5D9B29FD97409B1750FA0010  : public SystemException_t5380468142AA850BE4A341D7AF3EAB9C78746782
{
public:

public:
};


// UnityEngine.Behaviour
struct  Behaviour_tBDC7E9C3C898AD8348891B82D3E345801D920CA8  : public Component_t05064EF382ABCAF4B8C94F8A350EA85184C26621
{
public:

public:
};


// UnityEngine.Events.UnityAction
struct  UnityAction_tD19B26F1B2C048E38FD5801A33573BE01064CAF4  : public MulticastDelegate_t
{
public:

public:
};


// UnityEngine.Transform
struct  Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA  : public Component_t05064EF382ABCAF4B8C94F8A350EA85184C26621
{
public:

public:
};


// Valve.VR.InputPoseActionData_t
struct  InputPoseActionData_t_t6F2C776E0AA5528E702E6079C156B7747182C607 
{
public:
	// System.Boolean Valve.VR.InputPoseActionData_t::bActive
	bool ___bActive_0;
	// System.UInt64 Valve.VR.InputPoseActionData_t::activeOrigin
	uint64_t ___activeOrigin_1;
	// Valve.VR.TrackedDevicePose_t Valve.VR.InputPoseActionData_t::pose
	TrackedDevicePose_t_t0028622C5DF863D4DC12877439D4A679A0D46365  ___pose_2;

public:
	inline static int32_t get_offset_of_bActive_0() { return static_cast<int32_t>(offsetof(InputPoseActionData_t_t6F2C776E0AA5528E702E6079C156B7747182C607, ___bActive_0)); }
	inline bool get_bActive_0() const { return ___bActive_0; }
	inline bool* get_address_of_bActive_0() { return &___bActive_0; }
	inline void set_bActive_0(bool value)
	{
		___bActive_0 = value;
	}

	inline static int32_t get_offset_of_activeOrigin_1() { return static_cast<int32_t>(offsetof(InputPoseActionData_t_t6F2C776E0AA5528E702E6079C156B7747182C607, ___activeOrigin_1)); }
	inline uint64_t get_activeOrigin_1() const { return ___activeOrigin_1; }
	inline uint64_t* get_address_of_activeOrigin_1() { return &___activeOrigin_1; }
	inline void set_activeOrigin_1(uint64_t value)
	{
		___activeOrigin_1 = value;
	}

	inline static int32_t get_offset_of_pose_2() { return static_cast<int32_t>(offsetof(InputPoseActionData_t_t6F2C776E0AA5528E702E6079C156B7747182C607, ___pose_2)); }
	inline TrackedDevicePose_t_t0028622C5DF863D4DC12877439D4A679A0D46365  get_pose_2() const { return ___pose_2; }
	inline TrackedDevicePose_t_t0028622C5DF863D4DC12877439D4A679A0D46365 * get_address_of_pose_2() { return &___pose_2; }
	inline void set_pose_2(TrackedDevicePose_t_t0028622C5DF863D4DC12877439D4A679A0D46365  value)
	{
		___pose_2 = value;
	}
};


// Valve.VR.SteamVR_Action_Boolean_ChangeHandler
struct  ChangeHandler_tBE955A4C204CE64CDAD63911BA738EC2873DF7B0  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.SteamVR_Action_Boolean_StateDownHandler
struct  StateDownHandler_t7D29100BA5CD0DFB8B7AE4388E1AB7AF114F4464  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.SteamVR_Action_Boolean_StateHandler
struct  StateHandler_tBBEC523C11F1EC99BF356128B427327EF349EAFA  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.SteamVR_Action_Boolean_StateUpHandler
struct  StateUpHandler_t74A1CE14E1749B62B14281BCFA09CB750D7A5ED8  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.SteamVR_Action_Boolean_UpdateHandler
struct  UpdateHandler_tC5DA62D5AA34319AAE9E044A4D98A942E9F7738B  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.SteamVR_Action_In_Source
struct  SteamVR_Action_In_Source_t6C3FA81DC7F53D302E49E09F5791E612AC7832AB  : public SteamVR_Action_Source_t9D7428CDE39924074518EE6233D9A4FAB0C33CB0
{
public:
	// System.Boolean Valve.VR.SteamVR_Action_In_Source::<isUpdating>k__BackingField
	bool ___U3CisUpdatingU3Ek__BackingField_4;
	// System.Single Valve.VR.SteamVR_Action_In_Source::<updateTime>k__BackingField
	float ___U3CupdateTimeU3Ek__BackingField_5;
	// System.Single Valve.VR.SteamVR_Action_In_Source::<changedTime>k__BackingField
	float ___U3CchangedTimeU3Ek__BackingField_6;
	// System.Int32 Valve.VR.SteamVR_Action_In_Source::<lastOriginGetFrame>k__BackingField
	int32_t ___U3ClastOriginGetFrameU3Ek__BackingField_7;
	// Valve.VR.InputOriginInfo_t Valve.VR.SteamVR_Action_In_Source::inputOriginInfo
	InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A  ___inputOriginInfo_8;
	// Valve.VR.InputOriginInfo_t Valve.VR.SteamVR_Action_In_Source::lastInputOriginInfo
	InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A  ___lastInputOriginInfo_9;

public:
	inline static int32_t get_offset_of_U3CisUpdatingU3Ek__BackingField_4() { return static_cast<int32_t>(offsetof(SteamVR_Action_In_Source_t6C3FA81DC7F53D302E49E09F5791E612AC7832AB, ___U3CisUpdatingU3Ek__BackingField_4)); }
	inline bool get_U3CisUpdatingU3Ek__BackingField_4() const { return ___U3CisUpdatingU3Ek__BackingField_4; }
	inline bool* get_address_of_U3CisUpdatingU3Ek__BackingField_4() { return &___U3CisUpdatingU3Ek__BackingField_4; }
	inline void set_U3CisUpdatingU3Ek__BackingField_4(bool value)
	{
		___U3CisUpdatingU3Ek__BackingField_4 = value;
	}

	inline static int32_t get_offset_of_U3CupdateTimeU3Ek__BackingField_5() { return static_cast<int32_t>(offsetof(SteamVR_Action_In_Source_t6C3FA81DC7F53D302E49E09F5791E612AC7832AB, ___U3CupdateTimeU3Ek__BackingField_5)); }
	inline float get_U3CupdateTimeU3Ek__BackingField_5() const { return ___U3CupdateTimeU3Ek__BackingField_5; }
	inline float* get_address_of_U3CupdateTimeU3Ek__BackingField_5() { return &___U3CupdateTimeU3Ek__BackingField_5; }
	inline void set_U3CupdateTimeU3Ek__BackingField_5(float value)
	{
		___U3CupdateTimeU3Ek__BackingField_5 = value;
	}

	inline static int32_t get_offset_of_U3CchangedTimeU3Ek__BackingField_6() { return static_cast<int32_t>(offsetof(SteamVR_Action_In_Source_t6C3FA81DC7F53D302E49E09F5791E612AC7832AB, ___U3CchangedTimeU3Ek__BackingField_6)); }
	inline float get_U3CchangedTimeU3Ek__BackingField_6() const { return ___U3CchangedTimeU3Ek__BackingField_6; }
	inline float* get_address_of_U3CchangedTimeU3Ek__BackingField_6() { return &___U3CchangedTimeU3Ek__BackingField_6; }
	inline void set_U3CchangedTimeU3Ek__BackingField_6(float value)
	{
		___U3CchangedTimeU3Ek__BackingField_6 = value;
	}

	inline static int32_t get_offset_of_U3ClastOriginGetFrameU3Ek__BackingField_7() { return static_cast<int32_t>(offsetof(SteamVR_Action_In_Source_t6C3FA81DC7F53D302E49E09F5791E612AC7832AB, ___U3ClastOriginGetFrameU3Ek__BackingField_7)); }
	inline int32_t get_U3ClastOriginGetFrameU3Ek__BackingField_7() const { return ___U3ClastOriginGetFrameU3Ek__BackingField_7; }
	inline int32_t* get_address_of_U3ClastOriginGetFrameU3Ek__BackingField_7() { return &___U3ClastOriginGetFrameU3Ek__BackingField_7; }
	inline void set_U3ClastOriginGetFrameU3Ek__BackingField_7(int32_t value)
	{
		___U3ClastOriginGetFrameU3Ek__BackingField_7 = value;
	}

	inline static int32_t get_offset_of_inputOriginInfo_8() { return static_cast<int32_t>(offsetof(SteamVR_Action_In_Source_t6C3FA81DC7F53D302E49E09F5791E612AC7832AB, ___inputOriginInfo_8)); }
	inline InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A  get_inputOriginInfo_8() const { return ___inputOriginInfo_8; }
	inline InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A * get_address_of_inputOriginInfo_8() { return &___inputOriginInfo_8; }
	inline void set_inputOriginInfo_8(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A  value)
	{
		___inputOriginInfo_8 = value;
	}

	inline static int32_t get_offset_of_lastInputOriginInfo_9() { return static_cast<int32_t>(offsetof(SteamVR_Action_In_Source_t6C3FA81DC7F53D302E49E09F5791E612AC7832AB, ___lastInputOriginInfo_9)); }
	inline InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A  get_lastInputOriginInfo_9() const { return ___lastInputOriginInfo_9; }
	inline InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A * get_address_of_lastInputOriginInfo_9() { return &___lastInputOriginInfo_9; }
	inline void set_lastInputOriginInfo_9(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A  value)
	{
		___lastInputOriginInfo_9 = value;
	}
};

struct SteamVR_Action_In_Source_t6C3FA81DC7F53D302E49E09F5791E612AC7832AB_StaticFields
{
public:
	// System.UInt32 Valve.VR.SteamVR_Action_In_Source::inputOriginInfo_size
	uint32_t ___inputOriginInfo_size_3;

public:
	inline static int32_t get_offset_of_inputOriginInfo_size_3() { return static_cast<int32_t>(offsetof(SteamVR_Action_In_Source_t6C3FA81DC7F53D302E49E09F5791E612AC7832AB_StaticFields, ___inputOriginInfo_size_3)); }
	inline uint32_t get_inputOriginInfo_size_3() const { return ___inputOriginInfo_size_3; }
	inline uint32_t* get_address_of_inputOriginInfo_size_3() { return &___inputOriginInfo_size_3; }
	inline void set_inputOriginInfo_size_3(uint32_t value)
	{
		___inputOriginInfo_size_3 = value;
	}
};


// Valve.VR.SteamVR_Action_Out_Source
struct  SteamVR_Action_Out_Source_t6BAB7CAA13DB2A871A892C09BFF55378A6D327D6  : public SteamVR_Action_Source_t9D7428CDE39924074518EE6233D9A4FAB0C33CB0
{
public:

public:
};


// Valve.VR.SteamVR_Action_Pose
struct  SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C  : public SteamVR_Action_Pose_Base_2_tBAE9134F2B018AC078BAF24A2A5197F0A976D59A
{
public:

public:
};


// Valve.VR.SteamVR_Action_Pose_ChangeHandler
struct  ChangeHandler_tBB749BC376815901B6E13DF03202383F3302BFBE  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.SteamVR_Action_Pose_DeviceConnectedChangeHandler
struct  DeviceConnectedChangeHandler_t4AC124A9A94D668A0FB45EA8FC718729CEA3D0D9  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.SteamVR_Action_Pose_TrackingChangeHandler
struct  TrackingChangeHandler_t1CC1FD6A7111B86684B749C4E751B1F5237D2914  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.SteamVR_Action_Pose_UpdateHandler
struct  UpdateHandler_t4F6AB1825F5E5CE6A7BBCD6C84541B3DF13C2AA1  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.SteamVR_Action_Single_AxisHandler
struct  AxisHandler_tB065AC6B40691A33562DB817EBD29E5721A64843  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.SteamVR_Action_Single_ChangeHandler
struct  ChangeHandler_tF837F67A16B6ED5F9B2C676AC0AF9C611397DFED  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.SteamVR_Action_Single_UpdateHandler
struct  UpdateHandler_t4011C6F65732B2D2AD73A21EBF2ADD943897886D  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.SteamVR_Action_Skeleton
struct  SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504  : public SteamVR_Action_Pose_Base_2_tCF260D4E08F45DC042B3B5B7B7A2F6B84880C2C2
{
public:

public:
};

struct SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504_StaticFields
{
public:
	// UnityEngine.Quaternion Valve.VR.SteamVR_Action_Skeleton::steamVRFixUpRotation
	Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  ___steamVRFixUpRotation_7;

public:
	inline static int32_t get_offset_of_steamVRFixUpRotation_7() { return static_cast<int32_t>(offsetof(SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504_StaticFields, ___steamVRFixUpRotation_7)); }
	inline Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  get_steamVRFixUpRotation_7() const { return ___steamVRFixUpRotation_7; }
	inline Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357 * get_address_of_steamVRFixUpRotation_7() { return &___steamVRFixUpRotation_7; }
	inline void set_steamVRFixUpRotation_7(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  value)
	{
		___steamVRFixUpRotation_7 = value;
	}
};


// Valve.VR.SteamVR_Action_Skeleton_DeviceConnectedChangeHandler
struct  DeviceConnectedChangeHandler_tA531478A75E2F7B0C49D41DADBB9FD7BD46C4592  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.SteamVR_Action_Skeleton_TrackingChangeHandler
struct  TrackingChangeHandler_t8AD34E45FED47F362BB0D3E5B6B950708A0EC6B4  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.SteamVR_Action_Source_Map`1<Valve.VR.SteamVR_Action_Vector3_Source>
struct  SteamVR_Action_Source_Map_1_tAA298402BDA6A553A0C30790E7129D18A7682C1F  : public SteamVR_Action_Source_Map_t7EF8D4B037DC17D04177E758D64AA2C482031E17
{
public:
	// SourceElement[] Valve.VR.SteamVR_Action_Source_Map`1::sources
	SteamVR_Action_Vector3_SourceU5BU5D_t3786953EC7D2DDE18FE5D1A5C158FE06D1C3E8BF* ___sources_7;

public:
	inline static int32_t get_offset_of_sources_7() { return static_cast<int32_t>(offsetof(SteamVR_Action_Source_Map_1_tAA298402BDA6A553A0C30790E7129D18A7682C1F, ___sources_7)); }
	inline SteamVR_Action_Vector3_SourceU5BU5D_t3786953EC7D2DDE18FE5D1A5C158FE06D1C3E8BF* get_sources_7() const { return ___sources_7; }
	inline SteamVR_Action_Vector3_SourceU5BU5D_t3786953EC7D2DDE18FE5D1A5C158FE06D1C3E8BF** get_address_of_sources_7() { return &___sources_7; }
	inline void set_sources_7(SteamVR_Action_Vector3_SourceU5BU5D_t3786953EC7D2DDE18FE5D1A5C158FE06D1C3E8BF* value)
	{
		___sources_7 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___sources_7), (void*)value);
	}
};


// Valve.VR.SteamVR_Action_Source_Map`1<Valve.VR.SteamVR_Action_Vibration_Source>
struct  SteamVR_Action_Source_Map_1_t4C60A6B852FEF89276918CCD2B6136E8FD572AA7  : public SteamVR_Action_Source_Map_t7EF8D4B037DC17D04177E758D64AA2C482031E17
{
public:
	// SourceElement[] Valve.VR.SteamVR_Action_Source_Map`1::sources
	SteamVR_Action_Vibration_SourceU5BU5D_tB39B74339680889980518AF68E5B5AB014912A04* ___sources_7;

public:
	inline static int32_t get_offset_of_sources_7() { return static_cast<int32_t>(offsetof(SteamVR_Action_Source_Map_1_t4C60A6B852FEF89276918CCD2B6136E8FD572AA7, ___sources_7)); }
	inline SteamVR_Action_Vibration_SourceU5BU5D_tB39B74339680889980518AF68E5B5AB014912A04* get_sources_7() const { return ___sources_7; }
	inline SteamVR_Action_Vibration_SourceU5BU5D_tB39B74339680889980518AF68E5B5AB014912A04** get_address_of_sources_7() { return &___sources_7; }
	inline void set_sources_7(SteamVR_Action_Vibration_SourceU5BU5D_tB39B74339680889980518AF68E5B5AB014912A04* value)
	{
		___sources_7 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___sources_7), (void*)value);
	}
};


// Valve.VR.SteamVR_Action_Vector2_AxisHandler
struct  AxisHandler_t97FB692AF5465040A2929AB663941933E3567689  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.SteamVR_Action_Vector2_ChangeHandler
struct  ChangeHandler_t716932883EC2BC15936E355D02A9D68B8F9EA6B6  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.SteamVR_Action_Vector2_UpdateHandler
struct  UpdateHandler_t5CC79EAAED92D106A0FBE46F2E73949A31CDA177  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.SteamVR_Action_Vibration_ActiveChangeHandler
struct  ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.SteamVR_Action_Vibration_ExecuteHandler
struct  ExecuteHandler_t8B67500B15AC184E56E293FC390AB5683D50D865  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.SteamVR_Behaviour_Boolean_ActiveChangeHandler
struct  ActiveChangeHandler_t299D2C23766385EE91DB72700CF21326F803F453  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.SteamVR_Behaviour_Boolean_ChangeHandler
struct  ChangeHandler_tADA56232D143B2D18BA3D6F2A9B5CE2AC637CBB6  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.SteamVR_Behaviour_Boolean_StateDownHandler
struct  StateDownHandler_tFF77368F427C4FE6164A97B238F944123AA8FE24  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.SteamVR_Behaviour_Boolean_StateHandler
struct  StateHandler_tC57B51755B81869515107A3BE4BC3865F974190D  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.SteamVR_Behaviour_Boolean_StateUpHandler
struct  StateUpHandler_tC09A0C33E80BBF97F8E88D36519482DFE36DBCC5  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.SteamVR_Behaviour_Boolean_UpdateHandler
struct  UpdateHandler_t9FC31A405C9C47120C5307368335AD9F708511D1  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.SteamVR_Behaviour_Pose_ActiveChangeHandler
struct  ActiveChangeHandler_t1FB373EFCE81765E92E8482D412853F249193DDA  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.SteamVR_Behaviour_Pose_ChangeHandler
struct  ChangeHandler_t62B565E3F59005232530941762BA9C99466E7190  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.SteamVR_Behaviour_Pose_DeviceConnectedChangeHandler
struct  DeviceConnectedChangeHandler_tAC0D58B9BE0BEF1758FC23FC5A09211DAFC695AB  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.SteamVR_Behaviour_Pose_DeviceIndexChangedHandler
struct  DeviceIndexChangedHandler_t5AD6CF16FBFD1AFBCAABCE86FF9A5F9958E5E988  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.SteamVR_Behaviour_Pose_TrackingChangeHandler
struct  TrackingChangeHandler_tE2D5245E21857392ED2CCBEAD0D65408B5DC5443  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.SteamVR_Behaviour_Pose_UpdateHandler
struct  UpdateHandler_t7F4B3FFE3096B37EB5424E580DA100C61857DC4D  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.SteamVR_Behaviour_Pose_ValidPoseChangeHandler
struct  ValidPoseChangeHandler_t9F17891A8C5AE0FD1A06F1C3ED15A5EDEB119DE9  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.SteamVR_Behaviour_Single_AxisHandler
struct  AxisHandler_t6CD6525481A3708C4FFC01A49F13C96EBD464F6C  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.SteamVR_Behaviour_Single_ChangeHandler
struct  ChangeHandler_t5D78A5C2B8BE043F0EF515BB84766EC330B52DF7  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.SteamVR_Behaviour_Single_UpdateHandler
struct  UpdateHandler_t35B29D0C538D0A17C13EFD36765FF0278EE256D4  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.SteamVR_Behaviour_Skeleton_ActiveChangeHandler
struct  ActiveChangeHandler_tB3A5BB1A449EFD685FB81C2673E955D602F14A0E  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.SteamVR_Behaviour_Skeleton_ChangeHandler
struct  ChangeHandler_tB89A36613D65385655B73DBDA42D2F08868FD67F  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.SteamVR_Behaviour_Skeleton_DeviceConnectedChangeHandler
struct  DeviceConnectedChangeHandler_t0F6018732B70A6C87D60D7C71A04183CE5B1E617  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.SteamVR_Behaviour_Skeleton_TrackingChangeHandler
struct  TrackingChangeHandler_t0354ED148830BCEA31C451E8C314757B70B5D63F  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.SteamVR_Behaviour_Skeleton_UpdateHandler
struct  UpdateHandler_t529F28858847FB086B7F9A7A7E52860C7430976A  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.SteamVR_Behaviour_Skeleton_ValidPoseChangeHandler
struct  ValidPoseChangeHandler_tB007A90D7183653C99CE0E9FA649882562C1BE53  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.SteamVR_Behaviour_Vector2_AxisHandler
struct  AxisHandler_tBA72843A01CF3BF4DFCBECF1BC75EB817AE2D064  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.SteamVR_Behaviour_Vector2_ChangeHandler
struct  ChangeHandler_t37E638BA62CC9B06D1DD916B56CFB6E3A61C31DE  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.SteamVR_Behaviour_Vector2_UpdateHandler
struct  UpdateHandler_tD71CF662F9B99D2E790533F02BA2B95FF3C1C1DF  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.SteamVR_Input_SkeletonsUpdatedHandler
struct  SkeletonsUpdatedHandler_t87EC02E2FFD91D305E5C4E8B64110AA2981F3DD6  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.SteamVR_Skeleton_Pose
struct  SteamVR_Skeleton_Pose_tE0875BE0979F259871814680A295FF216A3FE593  : public ScriptableObject_tAB015486CEAB714DA0D5C1BA389B84FB90427734
{
public:
	// Valve.VR.SteamVR_Skeleton_Pose_Hand Valve.VR.SteamVR_Skeleton_Pose::leftHand
	SteamVR_Skeleton_Pose_Hand_tB273028E85AA961B7A088E75DA7263BF6BAA395E * ___leftHand_4;
	// Valve.VR.SteamVR_Skeleton_Pose_Hand Valve.VR.SteamVR_Skeleton_Pose::rightHand
	SteamVR_Skeleton_Pose_Hand_tB273028E85AA961B7A088E75DA7263BF6BAA395E * ___rightHand_5;
	// System.Boolean Valve.VR.SteamVR_Skeleton_Pose::applyToSkeletonRoot
	bool ___applyToSkeletonRoot_8;

public:
	inline static int32_t get_offset_of_leftHand_4() { return static_cast<int32_t>(offsetof(SteamVR_Skeleton_Pose_tE0875BE0979F259871814680A295FF216A3FE593, ___leftHand_4)); }
	inline SteamVR_Skeleton_Pose_Hand_tB273028E85AA961B7A088E75DA7263BF6BAA395E * get_leftHand_4() const { return ___leftHand_4; }
	inline SteamVR_Skeleton_Pose_Hand_tB273028E85AA961B7A088E75DA7263BF6BAA395E ** get_address_of_leftHand_4() { return &___leftHand_4; }
	inline void set_leftHand_4(SteamVR_Skeleton_Pose_Hand_tB273028E85AA961B7A088E75DA7263BF6BAA395E * value)
	{
		___leftHand_4 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___leftHand_4), (void*)value);
	}

	inline static int32_t get_offset_of_rightHand_5() { return static_cast<int32_t>(offsetof(SteamVR_Skeleton_Pose_tE0875BE0979F259871814680A295FF216A3FE593, ___rightHand_5)); }
	inline SteamVR_Skeleton_Pose_Hand_tB273028E85AA961B7A088E75DA7263BF6BAA395E * get_rightHand_5() const { return ___rightHand_5; }
	inline SteamVR_Skeleton_Pose_Hand_tB273028E85AA961B7A088E75DA7263BF6BAA395E ** get_address_of_rightHand_5() { return &___rightHand_5; }
	inline void set_rightHand_5(SteamVR_Skeleton_Pose_Hand_tB273028E85AA961B7A088E75DA7263BF6BAA395E * value)
	{
		___rightHand_5 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___rightHand_5), (void*)value);
	}

	inline static int32_t get_offset_of_applyToSkeletonRoot_8() { return static_cast<int32_t>(offsetof(SteamVR_Skeleton_Pose_tE0875BE0979F259871814680A295FF216A3FE593, ___applyToSkeletonRoot_8)); }
	inline bool get_applyToSkeletonRoot_8() const { return ___applyToSkeletonRoot_8; }
	inline bool* get_address_of_applyToSkeletonRoot_8() { return &___applyToSkeletonRoot_8; }
	inline void set_applyToSkeletonRoot_8(bool value)
	{
		___applyToSkeletonRoot_8 = value;
	}
};


// Valve.VR.VREvent_Data_t
struct  VREvent_Data_t_t38985E196F3FFB84A2EC25F5F5300A1A465435F0 
{
public:
	union
	{
		#pragma pack(push, tp, 1)
		struct
		{
			// Valve.VR.VREvent_Reserved_t Valve.VR.VREvent_Data_t::reserved
			VREvent_Reserved_t_tD7AEEC778A329391A4DB25E9EACFC350464E7AB3  ___reserved_0;
		};
		#pragma pack(pop, tp)
		struct
		{
			VREvent_Reserved_t_tD7AEEC778A329391A4DB25E9EACFC350464E7AB3  ___reserved_0_forAlignmentOnly;
		};
		#pragma pack(push, tp, 1)
		struct
		{
			// Valve.VR.VREvent_Controller_t Valve.VR.VREvent_Data_t::controller
			VREvent_Controller_t_t5976E21986D7CBB3313289F60169F60680DF5D05  ___controller_1;
		};
		#pragma pack(pop, tp)
		struct
		{
			VREvent_Controller_t_t5976E21986D7CBB3313289F60169F60680DF5D05  ___controller_1_forAlignmentOnly;
		};
		#pragma pack(push, tp, 1)
		struct
		{
			// Valve.VR.VREvent_Mouse_t Valve.VR.VREvent_Data_t::mouse
			VREvent_Mouse_t_t6A0AB81EE408C60C23B2347B2D54DF92EB389B1B  ___mouse_2;
		};
		#pragma pack(pop, tp)
		struct
		{
			VREvent_Mouse_t_t6A0AB81EE408C60C23B2347B2D54DF92EB389B1B  ___mouse_2_forAlignmentOnly;
		};
		#pragma pack(push, tp, 1)
		struct
		{
			// Valve.VR.VREvent_Scroll_t Valve.VR.VREvent_Data_t::scroll
			VREvent_Scroll_t_t5F4F013D4311FA0416A98AAE7B1C67794857D160  ___scroll_3;
		};
		#pragma pack(pop, tp)
		struct
		{
			VREvent_Scroll_t_t5F4F013D4311FA0416A98AAE7B1C67794857D160  ___scroll_3_forAlignmentOnly;
		};
		#pragma pack(push, tp, 1)
		struct
		{
			// Valve.VR.VREvent_Process_t Valve.VR.VREvent_Data_t::process
			VREvent_Process_t_t83E4C3D9CAE8D898B914245BF7E34E2FD47EBE1E  ___process_4;
		};
		#pragma pack(pop, tp)
		struct
		{
			VREvent_Process_t_t83E4C3D9CAE8D898B914245BF7E34E2FD47EBE1E  ___process_4_forAlignmentOnly;
		};
		#pragma pack(push, tp, 1)
		struct
		{
			// Valve.VR.VREvent_Notification_t Valve.VR.VREvent_Data_t::notification
			VREvent_Notification_t_t3307E55FBD25A98BF78C740FE9494406A45F94BB  ___notification_5;
		};
		#pragma pack(pop, tp)
		struct
		{
			VREvent_Notification_t_t3307E55FBD25A98BF78C740FE9494406A45F94BB  ___notification_5_forAlignmentOnly;
		};
		#pragma pack(push, tp, 1)
		struct
		{
			// Valve.VR.VREvent_Overlay_t Valve.VR.VREvent_Data_t::overlay
			VREvent_Overlay_t_t6D2D8442E708459C57882EA5E5D6EE0912FAD76C  ___overlay_6;
		};
		#pragma pack(pop, tp)
		struct
		{
			VREvent_Overlay_t_t6D2D8442E708459C57882EA5E5D6EE0912FAD76C  ___overlay_6_forAlignmentOnly;
		};
		#pragma pack(push, tp, 1)
		struct
		{
			// Valve.VR.VREvent_Status_t Valve.VR.VREvent_Data_t::status
			VREvent_Status_t_t157A58D59F35CB5B07E1A83BA7E41C425AB766FB  ___status_7;
		};
		#pragma pack(pop, tp)
		struct
		{
			VREvent_Status_t_t157A58D59F35CB5B07E1A83BA7E41C425AB766FB  ___status_7_forAlignmentOnly;
		};
		#pragma pack(push, tp, 1)
		struct
		{
			// Valve.VR.VREvent_Ipd_t Valve.VR.VREvent_Data_t::ipd
			VREvent_Ipd_t_tA834CF90F72C0F1C4905DCCCA0D7AF0A3043B400  ___ipd_8;
		};
		#pragma pack(pop, tp)
		struct
		{
			VREvent_Ipd_t_tA834CF90F72C0F1C4905DCCCA0D7AF0A3043B400  ___ipd_8_forAlignmentOnly;
		};
		#pragma pack(push, tp, 1)
		struct
		{
			// Valve.VR.VREvent_Chaperone_t Valve.VR.VREvent_Data_t::chaperone
			VREvent_Chaperone_t_tCFAB4B0381A4EF5741D86EF3A75514337B44EA85  ___chaperone_9;
		};
		#pragma pack(pop, tp)
		struct
		{
			VREvent_Chaperone_t_tCFAB4B0381A4EF5741D86EF3A75514337B44EA85  ___chaperone_9_forAlignmentOnly;
		};
		#pragma pack(push, tp, 1)
		struct
		{
			// Valve.VR.VREvent_PerformanceTest_t Valve.VR.VREvent_Data_t::performanceTest
			VREvent_PerformanceTest_t_t7907E419EE035B684299AF08075DE02A6D9AA7AA  ___performanceTest_10;
		};
		#pragma pack(pop, tp)
		struct
		{
			VREvent_PerformanceTest_t_t7907E419EE035B684299AF08075DE02A6D9AA7AA  ___performanceTest_10_forAlignmentOnly;
		};
		#pragma pack(push, tp, 1)
		struct
		{
			// Valve.VR.VREvent_TouchPadMove_t Valve.VR.VREvent_Data_t::touchPadMove
			VREvent_TouchPadMove_t_t239FBA15A2154F0A535575CDF1CF22A8F3EDEA3D  ___touchPadMove_11;
		};
		#pragma pack(pop, tp)
		struct
		{
			VREvent_TouchPadMove_t_t239FBA15A2154F0A535575CDF1CF22A8F3EDEA3D  ___touchPadMove_11_forAlignmentOnly;
		};
		#pragma pack(push, tp, 1)
		struct
		{
			// Valve.VR.VREvent_SeatedZeroPoseReset_t Valve.VR.VREvent_Data_t::seatedZeroPoseReset
			VREvent_SeatedZeroPoseReset_t_t4FE5B07657B5DD9A609F7A755C4592806767D323  ___seatedZeroPoseReset_12;
		};
		#pragma pack(pop, tp)
		struct
		{
			VREvent_SeatedZeroPoseReset_t_t4FE5B07657B5DD9A609F7A755C4592806767D323  ___seatedZeroPoseReset_12_forAlignmentOnly;
		};
		#pragma pack(push, tp, 1)
		struct
		{
			// Valve.VR.VREvent_Screenshot_t Valve.VR.VREvent_Data_t::screenshot
			VREvent_Screenshot_t_t1459B9F3FCD91BFF2A03D1F0DBC012594714BE97  ___screenshot_13;
		};
		#pragma pack(pop, tp)
		struct
		{
			VREvent_Screenshot_t_t1459B9F3FCD91BFF2A03D1F0DBC012594714BE97  ___screenshot_13_forAlignmentOnly;
		};
		#pragma pack(push, tp, 1)
		struct
		{
			// Valve.VR.VREvent_ScreenshotProgress_t Valve.VR.VREvent_Data_t::screenshotProgress
			VREvent_ScreenshotProgress_t_t9CD059D8FF2215EBC3F9014DE35F8847B904ECED  ___screenshotProgress_14;
		};
		#pragma pack(pop, tp)
		struct
		{
			VREvent_ScreenshotProgress_t_t9CD059D8FF2215EBC3F9014DE35F8847B904ECED  ___screenshotProgress_14_forAlignmentOnly;
		};
		#pragma pack(push, tp, 1)
		struct
		{
			// Valve.VR.VREvent_ApplicationLaunch_t Valve.VR.VREvent_Data_t::applicationLaunch
			VREvent_ApplicationLaunch_t_t19D5E8E56A4A34EBA9497F8560DDBC045BC22389  ___applicationLaunch_15;
		};
		#pragma pack(pop, tp)
		struct
		{
			VREvent_ApplicationLaunch_t_t19D5E8E56A4A34EBA9497F8560DDBC045BC22389  ___applicationLaunch_15_forAlignmentOnly;
		};
		#pragma pack(push, tp, 1)
		struct
		{
			// Valve.VR.VREvent_EditingCameraSurface_t Valve.VR.VREvent_Data_t::cameraSurface
			VREvent_EditingCameraSurface_t_t001B622D6CDFD7226DB4337AEE63DB317E6420FC  ___cameraSurface_16;
		};
		#pragma pack(pop, tp)
		struct
		{
			VREvent_EditingCameraSurface_t_t001B622D6CDFD7226DB4337AEE63DB317E6420FC  ___cameraSurface_16_forAlignmentOnly;
		};
		#pragma pack(push, tp, 1)
		struct
		{
			// Valve.VR.VREvent_MessageOverlay_t Valve.VR.VREvent_Data_t::messageOverlay
			VREvent_MessageOverlay_t_t527A27CE8C9CDC089759AEF6257E7F5803D72BA1  ___messageOverlay_17;
		};
		#pragma pack(pop, tp)
		struct
		{
			VREvent_MessageOverlay_t_t527A27CE8C9CDC089759AEF6257E7F5803D72BA1  ___messageOverlay_17_forAlignmentOnly;
		};
		#pragma pack(push, tp, 1)
		struct
		{
			// Valve.VR.VREvent_Property_t Valve.VR.VREvent_Data_t::property
			VREvent_Property_t_tDA1B42C6B679945C10CE6A3E37ECAE1D03E586F5  ___property_18;
		};
		#pragma pack(pop, tp)
		struct
		{
			VREvent_Property_t_tDA1B42C6B679945C10CE6A3E37ECAE1D03E586F5  ___property_18_forAlignmentOnly;
		};
		#pragma pack(push, tp, 1)
		struct
		{
			// Valve.VR.VREvent_HapticVibration_t Valve.VR.VREvent_Data_t::hapticVibration
			VREvent_HapticVibration_t_tC31D4D068A151263ADCB11D4C8349D5774AC246F  ___hapticVibration_19;
		};
		#pragma pack(pop, tp)
		struct
		{
			VREvent_HapticVibration_t_tC31D4D068A151263ADCB11D4C8349D5774AC246F  ___hapticVibration_19_forAlignmentOnly;
		};
		#pragma pack(push, tp, 1)
		struct
		{
			// Valve.VR.VREvent_WebConsole_t Valve.VR.VREvent_Data_t::webConsole
			VREvent_WebConsole_t_tB082ED62757425E442A9D3D77878DE178AE3DC75  ___webConsole_20;
		};
		#pragma pack(pop, tp)
		struct
		{
			VREvent_WebConsole_t_tB082ED62757425E442A9D3D77878DE178AE3DC75  ___webConsole_20_forAlignmentOnly;
		};
		#pragma pack(push, tp, 1)
		struct
		{
			// Valve.VR.VREvent_InputBindingLoad_t Valve.VR.VREvent_Data_t::inputBinding
			VREvent_InputBindingLoad_t_tC758CE9776D2810CD958CB23032BE745D51E1EED  ___inputBinding_21;
		};
		#pragma pack(pop, tp)
		struct
		{
			VREvent_InputBindingLoad_t_tC758CE9776D2810CD958CB23032BE745D51E1EED  ___inputBinding_21_forAlignmentOnly;
		};
		#pragma pack(push, tp, 1)
		struct
		{
			// Valve.VR.VREvent_SpatialAnchor_t Valve.VR.VREvent_Data_t::spatialAnchor
			VREvent_SpatialAnchor_t_tEF1C8EF84EEA707BC3393810ECAF468F3B3B9473  ___spatialAnchor_22;
		};
		#pragma pack(pop, tp)
		struct
		{
			VREvent_SpatialAnchor_t_tEF1C8EF84EEA707BC3393810ECAF468F3B3B9473  ___spatialAnchor_22_forAlignmentOnly;
		};
		#pragma pack(push, tp, 1)
		struct
		{
			// Valve.VR.VREvent_InputActionManifestLoad_t Valve.VR.VREvent_Data_t::actionManifest
			VREvent_InputActionManifestLoad_t_t80FAEB7CDAA5F4A1992C9701923F26D79C3E3A76  ___actionManifest_23;
		};
		#pragma pack(pop, tp)
		struct
		{
			VREvent_InputActionManifestLoad_t_t80FAEB7CDAA5F4A1992C9701923F26D79C3E3A76  ___actionManifest_23_forAlignmentOnly;
		};
		#pragma pack(push, tp, 1)
		struct
		{
			// Valve.VR.VREvent_ProgressUpdate_t Valve.VR.VREvent_Data_t::progressUpdate
			VREvent_ProgressUpdate_t_tE2EE0FDAEB40796B73B8477434588652690495AE  ___progressUpdate_24;
		};
		#pragma pack(pop, tp)
		struct
		{
			VREvent_ProgressUpdate_t_tE2EE0FDAEB40796B73B8477434588652690495AE  ___progressUpdate_24_forAlignmentOnly;
		};
		#pragma pack(push, tp, 1)
		struct
		{
			// Valve.VR.VREvent_ShowUI_t Valve.VR.VREvent_Data_t::showUi
			VREvent_ShowUI_t_tE3EDB9F7A3BCAC0C9A3812B850DA4F4A45933997  ___showUi_25;
		};
		#pragma pack(pop, tp)
		struct
		{
			VREvent_ShowUI_t_tE3EDB9F7A3BCAC0C9A3812B850DA4F4A45933997  ___showUi_25_forAlignmentOnly;
		};
		#pragma pack(push, tp, 1)
		struct
		{
			// Valve.VR.VREvent_ShowDevTools_t Valve.VR.VREvent_Data_t::showDevTools
			VREvent_ShowDevTools_t_t39141238FE64295EF3CBCCF82984ACB8C97FABE6  ___showDevTools_26;
		};
		#pragma pack(pop, tp)
		struct
		{
			VREvent_ShowDevTools_t_t39141238FE64295EF3CBCCF82984ACB8C97FABE6  ___showDevTools_26_forAlignmentOnly;
		};
		#pragma pack(push, tp, 1)
		struct
		{
			// Valve.VR.VREvent_HDCPError_t Valve.VR.VREvent_Data_t::hdcpError
			VREvent_HDCPError_t_tB01E1AF666EA64FA9D948BC11978D08B58C7201E  ___hdcpError_27;
		};
		#pragma pack(pop, tp)
		struct
		{
			VREvent_HDCPError_t_tB01E1AF666EA64FA9D948BC11978D08B58C7201E  ___hdcpError_27_forAlignmentOnly;
		};
		#pragma pack(push, tp, 1)
		struct
		{
			// Valve.VR.VREvent_Keyboard_t Valve.VR.VREvent_Data_t::keyboard
			VREvent_Keyboard_t_t0FAA9B97A441A22EC65002BC6FDEB4AF7A045297  ___keyboard_28;
		};
		#pragma pack(pop, tp)
		struct
		{
			VREvent_Keyboard_t_t0FAA9B97A441A22EC65002BC6FDEB4AF7A045297  ___keyboard_28_forAlignmentOnly;
		};
	};

public:
	inline static int32_t get_offset_of_reserved_0() { return static_cast<int32_t>(offsetof(VREvent_Data_t_t38985E196F3FFB84A2EC25F5F5300A1A465435F0, ___reserved_0)); }
	inline VREvent_Reserved_t_tD7AEEC778A329391A4DB25E9EACFC350464E7AB3  get_reserved_0() const { return ___reserved_0; }
	inline VREvent_Reserved_t_tD7AEEC778A329391A4DB25E9EACFC350464E7AB3 * get_address_of_reserved_0() { return &___reserved_0; }
	inline void set_reserved_0(VREvent_Reserved_t_tD7AEEC778A329391A4DB25E9EACFC350464E7AB3  value)
	{
		___reserved_0 = value;
	}

	inline static int32_t get_offset_of_controller_1() { return static_cast<int32_t>(offsetof(VREvent_Data_t_t38985E196F3FFB84A2EC25F5F5300A1A465435F0, ___controller_1)); }
	inline VREvent_Controller_t_t5976E21986D7CBB3313289F60169F60680DF5D05  get_controller_1() const { return ___controller_1; }
	inline VREvent_Controller_t_t5976E21986D7CBB3313289F60169F60680DF5D05 * get_address_of_controller_1() { return &___controller_1; }
	inline void set_controller_1(VREvent_Controller_t_t5976E21986D7CBB3313289F60169F60680DF5D05  value)
	{
		___controller_1 = value;
	}

	inline static int32_t get_offset_of_mouse_2() { return static_cast<int32_t>(offsetof(VREvent_Data_t_t38985E196F3FFB84A2EC25F5F5300A1A465435F0, ___mouse_2)); }
	inline VREvent_Mouse_t_t6A0AB81EE408C60C23B2347B2D54DF92EB389B1B  get_mouse_2() const { return ___mouse_2; }
	inline VREvent_Mouse_t_t6A0AB81EE408C60C23B2347B2D54DF92EB389B1B * get_address_of_mouse_2() { return &___mouse_2; }
	inline void set_mouse_2(VREvent_Mouse_t_t6A0AB81EE408C60C23B2347B2D54DF92EB389B1B  value)
	{
		___mouse_2 = value;
	}

	inline static int32_t get_offset_of_scroll_3() { return static_cast<int32_t>(offsetof(VREvent_Data_t_t38985E196F3FFB84A2EC25F5F5300A1A465435F0, ___scroll_3)); }
	inline VREvent_Scroll_t_t5F4F013D4311FA0416A98AAE7B1C67794857D160  get_scroll_3() const { return ___scroll_3; }
	inline VREvent_Scroll_t_t5F4F013D4311FA0416A98AAE7B1C67794857D160 * get_address_of_scroll_3() { return &___scroll_3; }
	inline void set_scroll_3(VREvent_Scroll_t_t5F4F013D4311FA0416A98AAE7B1C67794857D160  value)
	{
		___scroll_3 = value;
	}

	inline static int32_t get_offset_of_process_4() { return static_cast<int32_t>(offsetof(VREvent_Data_t_t38985E196F3FFB84A2EC25F5F5300A1A465435F0, ___process_4)); }
	inline VREvent_Process_t_t83E4C3D9CAE8D898B914245BF7E34E2FD47EBE1E  get_process_4() const { return ___process_4; }
	inline VREvent_Process_t_t83E4C3D9CAE8D898B914245BF7E34E2FD47EBE1E * get_address_of_process_4() { return &___process_4; }
	inline void set_process_4(VREvent_Process_t_t83E4C3D9CAE8D898B914245BF7E34E2FD47EBE1E  value)
	{
		___process_4 = value;
	}

	inline static int32_t get_offset_of_notification_5() { return static_cast<int32_t>(offsetof(VREvent_Data_t_t38985E196F3FFB84A2EC25F5F5300A1A465435F0, ___notification_5)); }
	inline VREvent_Notification_t_t3307E55FBD25A98BF78C740FE9494406A45F94BB  get_notification_5() const { return ___notification_5; }
	inline VREvent_Notification_t_t3307E55FBD25A98BF78C740FE9494406A45F94BB * get_address_of_notification_5() { return &___notification_5; }
	inline void set_notification_5(VREvent_Notification_t_t3307E55FBD25A98BF78C740FE9494406A45F94BB  value)
	{
		___notification_5 = value;
	}

	inline static int32_t get_offset_of_overlay_6() { return static_cast<int32_t>(offsetof(VREvent_Data_t_t38985E196F3FFB84A2EC25F5F5300A1A465435F0, ___overlay_6)); }
	inline VREvent_Overlay_t_t6D2D8442E708459C57882EA5E5D6EE0912FAD76C  get_overlay_6() const { return ___overlay_6; }
	inline VREvent_Overlay_t_t6D2D8442E708459C57882EA5E5D6EE0912FAD76C * get_address_of_overlay_6() { return &___overlay_6; }
	inline void set_overlay_6(VREvent_Overlay_t_t6D2D8442E708459C57882EA5E5D6EE0912FAD76C  value)
	{
		___overlay_6 = value;
	}

	inline static int32_t get_offset_of_status_7() { return static_cast<int32_t>(offsetof(VREvent_Data_t_t38985E196F3FFB84A2EC25F5F5300A1A465435F0, ___status_7)); }
	inline VREvent_Status_t_t157A58D59F35CB5B07E1A83BA7E41C425AB766FB  get_status_7() const { return ___status_7; }
	inline VREvent_Status_t_t157A58D59F35CB5B07E1A83BA7E41C425AB766FB * get_address_of_status_7() { return &___status_7; }
	inline void set_status_7(VREvent_Status_t_t157A58D59F35CB5B07E1A83BA7E41C425AB766FB  value)
	{
		___status_7 = value;
	}

	inline static int32_t get_offset_of_ipd_8() { return static_cast<int32_t>(offsetof(VREvent_Data_t_t38985E196F3FFB84A2EC25F5F5300A1A465435F0, ___ipd_8)); }
	inline VREvent_Ipd_t_tA834CF90F72C0F1C4905DCCCA0D7AF0A3043B400  get_ipd_8() const { return ___ipd_8; }
	inline VREvent_Ipd_t_tA834CF90F72C0F1C4905DCCCA0D7AF0A3043B400 * get_address_of_ipd_8() { return &___ipd_8; }
	inline void set_ipd_8(VREvent_Ipd_t_tA834CF90F72C0F1C4905DCCCA0D7AF0A3043B400  value)
	{
		___ipd_8 = value;
	}

	inline static int32_t get_offset_of_chaperone_9() { return static_cast<int32_t>(offsetof(VREvent_Data_t_t38985E196F3FFB84A2EC25F5F5300A1A465435F0, ___chaperone_9)); }
	inline VREvent_Chaperone_t_tCFAB4B0381A4EF5741D86EF3A75514337B44EA85  get_chaperone_9() const { return ___chaperone_9; }
	inline VREvent_Chaperone_t_tCFAB4B0381A4EF5741D86EF3A75514337B44EA85 * get_address_of_chaperone_9() { return &___chaperone_9; }
	inline void set_chaperone_9(VREvent_Chaperone_t_tCFAB4B0381A4EF5741D86EF3A75514337B44EA85  value)
	{
		___chaperone_9 = value;
	}

	inline static int32_t get_offset_of_performanceTest_10() { return static_cast<int32_t>(offsetof(VREvent_Data_t_t38985E196F3FFB84A2EC25F5F5300A1A465435F0, ___performanceTest_10)); }
	inline VREvent_PerformanceTest_t_t7907E419EE035B684299AF08075DE02A6D9AA7AA  get_performanceTest_10() const { return ___performanceTest_10; }
	inline VREvent_PerformanceTest_t_t7907E419EE035B684299AF08075DE02A6D9AA7AA * get_address_of_performanceTest_10() { return &___performanceTest_10; }
	inline void set_performanceTest_10(VREvent_PerformanceTest_t_t7907E419EE035B684299AF08075DE02A6D9AA7AA  value)
	{
		___performanceTest_10 = value;
	}

	inline static int32_t get_offset_of_touchPadMove_11() { return static_cast<int32_t>(offsetof(VREvent_Data_t_t38985E196F3FFB84A2EC25F5F5300A1A465435F0, ___touchPadMove_11)); }
	inline VREvent_TouchPadMove_t_t239FBA15A2154F0A535575CDF1CF22A8F3EDEA3D  get_touchPadMove_11() const { return ___touchPadMove_11; }
	inline VREvent_TouchPadMove_t_t239FBA15A2154F0A535575CDF1CF22A8F3EDEA3D * get_address_of_touchPadMove_11() { return &___touchPadMove_11; }
	inline void set_touchPadMove_11(VREvent_TouchPadMove_t_t239FBA15A2154F0A535575CDF1CF22A8F3EDEA3D  value)
	{
		___touchPadMove_11 = value;
	}

	inline static int32_t get_offset_of_seatedZeroPoseReset_12() { return static_cast<int32_t>(offsetof(VREvent_Data_t_t38985E196F3FFB84A2EC25F5F5300A1A465435F0, ___seatedZeroPoseReset_12)); }
	inline VREvent_SeatedZeroPoseReset_t_t4FE5B07657B5DD9A609F7A755C4592806767D323  get_seatedZeroPoseReset_12() const { return ___seatedZeroPoseReset_12; }
	inline VREvent_SeatedZeroPoseReset_t_t4FE5B07657B5DD9A609F7A755C4592806767D323 * get_address_of_seatedZeroPoseReset_12() { return &___seatedZeroPoseReset_12; }
	inline void set_seatedZeroPoseReset_12(VREvent_SeatedZeroPoseReset_t_t4FE5B07657B5DD9A609F7A755C4592806767D323  value)
	{
		___seatedZeroPoseReset_12 = value;
	}

	inline static int32_t get_offset_of_screenshot_13() { return static_cast<int32_t>(offsetof(VREvent_Data_t_t38985E196F3FFB84A2EC25F5F5300A1A465435F0, ___screenshot_13)); }
	inline VREvent_Screenshot_t_t1459B9F3FCD91BFF2A03D1F0DBC012594714BE97  get_screenshot_13() const { return ___screenshot_13; }
	inline VREvent_Screenshot_t_t1459B9F3FCD91BFF2A03D1F0DBC012594714BE97 * get_address_of_screenshot_13() { return &___screenshot_13; }
	inline void set_screenshot_13(VREvent_Screenshot_t_t1459B9F3FCD91BFF2A03D1F0DBC012594714BE97  value)
	{
		___screenshot_13 = value;
	}

	inline static int32_t get_offset_of_screenshotProgress_14() { return static_cast<int32_t>(offsetof(VREvent_Data_t_t38985E196F3FFB84A2EC25F5F5300A1A465435F0, ___screenshotProgress_14)); }
	inline VREvent_ScreenshotProgress_t_t9CD059D8FF2215EBC3F9014DE35F8847B904ECED  get_screenshotProgress_14() const { return ___screenshotProgress_14; }
	inline VREvent_ScreenshotProgress_t_t9CD059D8FF2215EBC3F9014DE35F8847B904ECED * get_address_of_screenshotProgress_14() { return &___screenshotProgress_14; }
	inline void set_screenshotProgress_14(VREvent_ScreenshotProgress_t_t9CD059D8FF2215EBC3F9014DE35F8847B904ECED  value)
	{
		___screenshotProgress_14 = value;
	}

	inline static int32_t get_offset_of_applicationLaunch_15() { return static_cast<int32_t>(offsetof(VREvent_Data_t_t38985E196F3FFB84A2EC25F5F5300A1A465435F0, ___applicationLaunch_15)); }
	inline VREvent_ApplicationLaunch_t_t19D5E8E56A4A34EBA9497F8560DDBC045BC22389  get_applicationLaunch_15() const { return ___applicationLaunch_15; }
	inline VREvent_ApplicationLaunch_t_t19D5E8E56A4A34EBA9497F8560DDBC045BC22389 * get_address_of_applicationLaunch_15() { return &___applicationLaunch_15; }
	inline void set_applicationLaunch_15(VREvent_ApplicationLaunch_t_t19D5E8E56A4A34EBA9497F8560DDBC045BC22389  value)
	{
		___applicationLaunch_15 = value;
	}

	inline static int32_t get_offset_of_cameraSurface_16() { return static_cast<int32_t>(offsetof(VREvent_Data_t_t38985E196F3FFB84A2EC25F5F5300A1A465435F0, ___cameraSurface_16)); }
	inline VREvent_EditingCameraSurface_t_t001B622D6CDFD7226DB4337AEE63DB317E6420FC  get_cameraSurface_16() const { return ___cameraSurface_16; }
	inline VREvent_EditingCameraSurface_t_t001B622D6CDFD7226DB4337AEE63DB317E6420FC * get_address_of_cameraSurface_16() { return &___cameraSurface_16; }
	inline void set_cameraSurface_16(VREvent_EditingCameraSurface_t_t001B622D6CDFD7226DB4337AEE63DB317E6420FC  value)
	{
		___cameraSurface_16 = value;
	}

	inline static int32_t get_offset_of_messageOverlay_17() { return static_cast<int32_t>(offsetof(VREvent_Data_t_t38985E196F3FFB84A2EC25F5F5300A1A465435F0, ___messageOverlay_17)); }
	inline VREvent_MessageOverlay_t_t527A27CE8C9CDC089759AEF6257E7F5803D72BA1  get_messageOverlay_17() const { return ___messageOverlay_17; }
	inline VREvent_MessageOverlay_t_t527A27CE8C9CDC089759AEF6257E7F5803D72BA1 * get_address_of_messageOverlay_17() { return &___messageOverlay_17; }
	inline void set_messageOverlay_17(VREvent_MessageOverlay_t_t527A27CE8C9CDC089759AEF6257E7F5803D72BA1  value)
	{
		___messageOverlay_17 = value;
	}

	inline static int32_t get_offset_of_property_18() { return static_cast<int32_t>(offsetof(VREvent_Data_t_t38985E196F3FFB84A2EC25F5F5300A1A465435F0, ___property_18)); }
	inline VREvent_Property_t_tDA1B42C6B679945C10CE6A3E37ECAE1D03E586F5  get_property_18() const { return ___property_18; }
	inline VREvent_Property_t_tDA1B42C6B679945C10CE6A3E37ECAE1D03E586F5 * get_address_of_property_18() { return &___property_18; }
	inline void set_property_18(VREvent_Property_t_tDA1B42C6B679945C10CE6A3E37ECAE1D03E586F5  value)
	{
		___property_18 = value;
	}

	inline static int32_t get_offset_of_hapticVibration_19() { return static_cast<int32_t>(offsetof(VREvent_Data_t_t38985E196F3FFB84A2EC25F5F5300A1A465435F0, ___hapticVibration_19)); }
	inline VREvent_HapticVibration_t_tC31D4D068A151263ADCB11D4C8349D5774AC246F  get_hapticVibration_19() const { return ___hapticVibration_19; }
	inline VREvent_HapticVibration_t_tC31D4D068A151263ADCB11D4C8349D5774AC246F * get_address_of_hapticVibration_19() { return &___hapticVibration_19; }
	inline void set_hapticVibration_19(VREvent_HapticVibration_t_tC31D4D068A151263ADCB11D4C8349D5774AC246F  value)
	{
		___hapticVibration_19 = value;
	}

	inline static int32_t get_offset_of_webConsole_20() { return static_cast<int32_t>(offsetof(VREvent_Data_t_t38985E196F3FFB84A2EC25F5F5300A1A465435F0, ___webConsole_20)); }
	inline VREvent_WebConsole_t_tB082ED62757425E442A9D3D77878DE178AE3DC75  get_webConsole_20() const { return ___webConsole_20; }
	inline VREvent_WebConsole_t_tB082ED62757425E442A9D3D77878DE178AE3DC75 * get_address_of_webConsole_20() { return &___webConsole_20; }
	inline void set_webConsole_20(VREvent_WebConsole_t_tB082ED62757425E442A9D3D77878DE178AE3DC75  value)
	{
		___webConsole_20 = value;
	}

	inline static int32_t get_offset_of_inputBinding_21() { return static_cast<int32_t>(offsetof(VREvent_Data_t_t38985E196F3FFB84A2EC25F5F5300A1A465435F0, ___inputBinding_21)); }
	inline VREvent_InputBindingLoad_t_tC758CE9776D2810CD958CB23032BE745D51E1EED  get_inputBinding_21() const { return ___inputBinding_21; }
	inline VREvent_InputBindingLoad_t_tC758CE9776D2810CD958CB23032BE745D51E1EED * get_address_of_inputBinding_21() { return &___inputBinding_21; }
	inline void set_inputBinding_21(VREvent_InputBindingLoad_t_tC758CE9776D2810CD958CB23032BE745D51E1EED  value)
	{
		___inputBinding_21 = value;
	}

	inline static int32_t get_offset_of_spatialAnchor_22() { return static_cast<int32_t>(offsetof(VREvent_Data_t_t38985E196F3FFB84A2EC25F5F5300A1A465435F0, ___spatialAnchor_22)); }
	inline VREvent_SpatialAnchor_t_tEF1C8EF84EEA707BC3393810ECAF468F3B3B9473  get_spatialAnchor_22() const { return ___spatialAnchor_22; }
	inline VREvent_SpatialAnchor_t_tEF1C8EF84EEA707BC3393810ECAF468F3B3B9473 * get_address_of_spatialAnchor_22() { return &___spatialAnchor_22; }
	inline void set_spatialAnchor_22(VREvent_SpatialAnchor_t_tEF1C8EF84EEA707BC3393810ECAF468F3B3B9473  value)
	{
		___spatialAnchor_22 = value;
	}

	inline static int32_t get_offset_of_actionManifest_23() { return static_cast<int32_t>(offsetof(VREvent_Data_t_t38985E196F3FFB84A2EC25F5F5300A1A465435F0, ___actionManifest_23)); }
	inline VREvent_InputActionManifestLoad_t_t80FAEB7CDAA5F4A1992C9701923F26D79C3E3A76  get_actionManifest_23() const { return ___actionManifest_23; }
	inline VREvent_InputActionManifestLoad_t_t80FAEB7CDAA5F4A1992C9701923F26D79C3E3A76 * get_address_of_actionManifest_23() { return &___actionManifest_23; }
	inline void set_actionManifest_23(VREvent_InputActionManifestLoad_t_t80FAEB7CDAA5F4A1992C9701923F26D79C3E3A76  value)
	{
		___actionManifest_23 = value;
	}

	inline static int32_t get_offset_of_progressUpdate_24() { return static_cast<int32_t>(offsetof(VREvent_Data_t_t38985E196F3FFB84A2EC25F5F5300A1A465435F0, ___progressUpdate_24)); }
	inline VREvent_ProgressUpdate_t_tE2EE0FDAEB40796B73B8477434588652690495AE  get_progressUpdate_24() const { return ___progressUpdate_24; }
	inline VREvent_ProgressUpdate_t_tE2EE0FDAEB40796B73B8477434588652690495AE * get_address_of_progressUpdate_24() { return &___progressUpdate_24; }
	inline void set_progressUpdate_24(VREvent_ProgressUpdate_t_tE2EE0FDAEB40796B73B8477434588652690495AE  value)
	{
		___progressUpdate_24 = value;
	}

	inline static int32_t get_offset_of_showUi_25() { return static_cast<int32_t>(offsetof(VREvent_Data_t_t38985E196F3FFB84A2EC25F5F5300A1A465435F0, ___showUi_25)); }
	inline VREvent_ShowUI_t_tE3EDB9F7A3BCAC0C9A3812B850DA4F4A45933997  get_showUi_25() const { return ___showUi_25; }
	inline VREvent_ShowUI_t_tE3EDB9F7A3BCAC0C9A3812B850DA4F4A45933997 * get_address_of_showUi_25() { return &___showUi_25; }
	inline void set_showUi_25(VREvent_ShowUI_t_tE3EDB9F7A3BCAC0C9A3812B850DA4F4A45933997  value)
	{
		___showUi_25 = value;
	}

	inline static int32_t get_offset_of_showDevTools_26() { return static_cast<int32_t>(offsetof(VREvent_Data_t_t38985E196F3FFB84A2EC25F5F5300A1A465435F0, ___showDevTools_26)); }
	inline VREvent_ShowDevTools_t_t39141238FE64295EF3CBCCF82984ACB8C97FABE6  get_showDevTools_26() const { return ___showDevTools_26; }
	inline VREvent_ShowDevTools_t_t39141238FE64295EF3CBCCF82984ACB8C97FABE6 * get_address_of_showDevTools_26() { return &___showDevTools_26; }
	inline void set_showDevTools_26(VREvent_ShowDevTools_t_t39141238FE64295EF3CBCCF82984ACB8C97FABE6  value)
	{
		___showDevTools_26 = value;
	}

	inline static int32_t get_offset_of_hdcpError_27() { return static_cast<int32_t>(offsetof(VREvent_Data_t_t38985E196F3FFB84A2EC25F5F5300A1A465435F0, ___hdcpError_27)); }
	inline VREvent_HDCPError_t_tB01E1AF666EA64FA9D948BC11978D08B58C7201E  get_hdcpError_27() const { return ___hdcpError_27; }
	inline VREvent_HDCPError_t_tB01E1AF666EA64FA9D948BC11978D08B58C7201E * get_address_of_hdcpError_27() { return &___hdcpError_27; }
	inline void set_hdcpError_27(VREvent_HDCPError_t_tB01E1AF666EA64FA9D948BC11978D08B58C7201E  value)
	{
		___hdcpError_27 = value;
	}

	inline static int32_t get_offset_of_keyboard_28() { return static_cast<int32_t>(offsetof(VREvent_Data_t_t38985E196F3FFB84A2EC25F5F5300A1A465435F0, ___keyboard_28)); }
	inline VREvent_Keyboard_t_t0FAA9B97A441A22EC65002BC6FDEB4AF7A045297  get_keyboard_28() const { return ___keyboard_28; }
	inline VREvent_Keyboard_t_t0FAA9B97A441A22EC65002BC6FDEB4AF7A045297 * get_address_of_keyboard_28() { return &___keyboard_28; }
	inline void set_keyboard_28(VREvent_Keyboard_t_t0FAA9B97A441A22EC65002BC6FDEB4AF7A045297  value)
	{
		___keyboard_28 = value;
	}
};


// UnityEngine.MonoBehaviour
struct  MonoBehaviour_t4A60845CF505405AF8BE8C61CC07F75CADEF6429  : public Behaviour_tBDC7E9C3C898AD8348891B82D3E345801D920CA8
{
public:

public:
};


// Valve.VR.SteamVR_Action_Boolean_Source
struct  SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB  : public SteamVR_Action_In_Source_t6C3FA81DC7F53D302E49E09F5791E612AC7832AB
{
public:
	// Valve.VR.SteamVR_Action_Boolean_StateDownHandler Valve.VR.SteamVR_Action_Boolean_Source::onStateDown
	StateDownHandler_t7D29100BA5CD0DFB8B7AE4388E1AB7AF114F4464 * ___onStateDown_11;
	// Valve.VR.SteamVR_Action_Boolean_StateUpHandler Valve.VR.SteamVR_Action_Boolean_Source::onStateUp
	StateUpHandler_t74A1CE14E1749B62B14281BCFA09CB750D7A5ED8 * ___onStateUp_12;
	// Valve.VR.SteamVR_Action_Boolean_StateHandler Valve.VR.SteamVR_Action_Boolean_Source::onState
	StateHandler_tBBEC523C11F1EC99BF356128B427327EF349EAFA * ___onState_13;
	// Valve.VR.SteamVR_Action_Boolean_ActiveChangeHandler Valve.VR.SteamVR_Action_Boolean_Source::onActiveChange
	ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 * ___onActiveChange_14;
	// Valve.VR.SteamVR_Action_Boolean_ActiveChangeHandler Valve.VR.SteamVR_Action_Boolean_Source::onActiveBindingChange
	ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 * ___onActiveBindingChange_15;
	// Valve.VR.SteamVR_Action_Boolean_ChangeHandler Valve.VR.SteamVR_Action_Boolean_Source::onChange
	ChangeHandler_tBE955A4C204CE64CDAD63911BA738EC2873DF7B0 * ___onChange_16;
	// Valve.VR.SteamVR_Action_Boolean_UpdateHandler Valve.VR.SteamVR_Action_Boolean_Source::onUpdate
	UpdateHandler_tC5DA62D5AA34319AAE9E044A4D98A942E9F7738B * ___onUpdate_17;
	// System.Boolean Valve.VR.SteamVR_Action_Boolean_Source::<lastActive>k__BackingField
	bool ___U3ClastActiveU3Ek__BackingField_18;
	// Valve.VR.InputDigitalActionData_t Valve.VR.SteamVR_Action_Boolean_Source::actionData
	InputDigitalActionData_t_tD29EC7460AD65DE5432FCB47474BDDC4F19A7AB1  ___actionData_19;
	// Valve.VR.InputDigitalActionData_t Valve.VR.SteamVR_Action_Boolean_Source::lastActionData
	InputDigitalActionData_t_tD29EC7460AD65DE5432FCB47474BDDC4F19A7AB1  ___lastActionData_20;
	// Valve.VR.SteamVR_Action_Boolean Valve.VR.SteamVR_Action_Boolean_Source::booleanAction
	SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 * ___booleanAction_21;

public:
	inline static int32_t get_offset_of_onStateDown_11() { return static_cast<int32_t>(offsetof(SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB, ___onStateDown_11)); }
	inline StateDownHandler_t7D29100BA5CD0DFB8B7AE4388E1AB7AF114F4464 * get_onStateDown_11() const { return ___onStateDown_11; }
	inline StateDownHandler_t7D29100BA5CD0DFB8B7AE4388E1AB7AF114F4464 ** get_address_of_onStateDown_11() { return &___onStateDown_11; }
	inline void set_onStateDown_11(StateDownHandler_t7D29100BA5CD0DFB8B7AE4388E1AB7AF114F4464 * value)
	{
		___onStateDown_11 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onStateDown_11), (void*)value);
	}

	inline static int32_t get_offset_of_onStateUp_12() { return static_cast<int32_t>(offsetof(SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB, ___onStateUp_12)); }
	inline StateUpHandler_t74A1CE14E1749B62B14281BCFA09CB750D7A5ED8 * get_onStateUp_12() const { return ___onStateUp_12; }
	inline StateUpHandler_t74A1CE14E1749B62B14281BCFA09CB750D7A5ED8 ** get_address_of_onStateUp_12() { return &___onStateUp_12; }
	inline void set_onStateUp_12(StateUpHandler_t74A1CE14E1749B62B14281BCFA09CB750D7A5ED8 * value)
	{
		___onStateUp_12 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onStateUp_12), (void*)value);
	}

	inline static int32_t get_offset_of_onState_13() { return static_cast<int32_t>(offsetof(SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB, ___onState_13)); }
	inline StateHandler_tBBEC523C11F1EC99BF356128B427327EF349EAFA * get_onState_13() const { return ___onState_13; }
	inline StateHandler_tBBEC523C11F1EC99BF356128B427327EF349EAFA ** get_address_of_onState_13() { return &___onState_13; }
	inline void set_onState_13(StateHandler_tBBEC523C11F1EC99BF356128B427327EF349EAFA * value)
	{
		___onState_13 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onState_13), (void*)value);
	}

	inline static int32_t get_offset_of_onActiveChange_14() { return static_cast<int32_t>(offsetof(SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB, ___onActiveChange_14)); }
	inline ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 * get_onActiveChange_14() const { return ___onActiveChange_14; }
	inline ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 ** get_address_of_onActiveChange_14() { return &___onActiveChange_14; }
	inline void set_onActiveChange_14(ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 * value)
	{
		___onActiveChange_14 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onActiveChange_14), (void*)value);
	}

	inline static int32_t get_offset_of_onActiveBindingChange_15() { return static_cast<int32_t>(offsetof(SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB, ___onActiveBindingChange_15)); }
	inline ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 * get_onActiveBindingChange_15() const { return ___onActiveBindingChange_15; }
	inline ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 ** get_address_of_onActiveBindingChange_15() { return &___onActiveBindingChange_15; }
	inline void set_onActiveBindingChange_15(ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 * value)
	{
		___onActiveBindingChange_15 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onActiveBindingChange_15), (void*)value);
	}

	inline static int32_t get_offset_of_onChange_16() { return static_cast<int32_t>(offsetof(SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB, ___onChange_16)); }
	inline ChangeHandler_tBE955A4C204CE64CDAD63911BA738EC2873DF7B0 * get_onChange_16() const { return ___onChange_16; }
	inline ChangeHandler_tBE955A4C204CE64CDAD63911BA738EC2873DF7B0 ** get_address_of_onChange_16() { return &___onChange_16; }
	inline void set_onChange_16(ChangeHandler_tBE955A4C204CE64CDAD63911BA738EC2873DF7B0 * value)
	{
		___onChange_16 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onChange_16), (void*)value);
	}

	inline static int32_t get_offset_of_onUpdate_17() { return static_cast<int32_t>(offsetof(SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB, ___onUpdate_17)); }
	inline UpdateHandler_tC5DA62D5AA34319AAE9E044A4D98A942E9F7738B * get_onUpdate_17() const { return ___onUpdate_17; }
	inline UpdateHandler_tC5DA62D5AA34319AAE9E044A4D98A942E9F7738B ** get_address_of_onUpdate_17() { return &___onUpdate_17; }
	inline void set_onUpdate_17(UpdateHandler_tC5DA62D5AA34319AAE9E044A4D98A942E9F7738B * value)
	{
		___onUpdate_17 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onUpdate_17), (void*)value);
	}

	inline static int32_t get_offset_of_U3ClastActiveU3Ek__BackingField_18() { return static_cast<int32_t>(offsetof(SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB, ___U3ClastActiveU3Ek__BackingField_18)); }
	inline bool get_U3ClastActiveU3Ek__BackingField_18() const { return ___U3ClastActiveU3Ek__BackingField_18; }
	inline bool* get_address_of_U3ClastActiveU3Ek__BackingField_18() { return &___U3ClastActiveU3Ek__BackingField_18; }
	inline void set_U3ClastActiveU3Ek__BackingField_18(bool value)
	{
		___U3ClastActiveU3Ek__BackingField_18 = value;
	}

	inline static int32_t get_offset_of_actionData_19() { return static_cast<int32_t>(offsetof(SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB, ___actionData_19)); }
	inline InputDigitalActionData_t_tD29EC7460AD65DE5432FCB47474BDDC4F19A7AB1  get_actionData_19() const { return ___actionData_19; }
	inline InputDigitalActionData_t_tD29EC7460AD65DE5432FCB47474BDDC4F19A7AB1 * get_address_of_actionData_19() { return &___actionData_19; }
	inline void set_actionData_19(InputDigitalActionData_t_tD29EC7460AD65DE5432FCB47474BDDC4F19A7AB1  value)
	{
		___actionData_19 = value;
	}

	inline static int32_t get_offset_of_lastActionData_20() { return static_cast<int32_t>(offsetof(SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB, ___lastActionData_20)); }
	inline InputDigitalActionData_t_tD29EC7460AD65DE5432FCB47474BDDC4F19A7AB1  get_lastActionData_20() const { return ___lastActionData_20; }
	inline InputDigitalActionData_t_tD29EC7460AD65DE5432FCB47474BDDC4F19A7AB1 * get_address_of_lastActionData_20() { return &___lastActionData_20; }
	inline void set_lastActionData_20(InputDigitalActionData_t_tD29EC7460AD65DE5432FCB47474BDDC4F19A7AB1  value)
	{
		___lastActionData_20 = value;
	}

	inline static int32_t get_offset_of_booleanAction_21() { return static_cast<int32_t>(offsetof(SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB, ___booleanAction_21)); }
	inline SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 * get_booleanAction_21() const { return ___booleanAction_21; }
	inline SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 ** get_address_of_booleanAction_21() { return &___booleanAction_21; }
	inline void set_booleanAction_21(SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 * value)
	{
		___booleanAction_21 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___booleanAction_21), (void*)value);
	}
};

struct SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB_StaticFields
{
public:
	// System.UInt32 Valve.VR.SteamVR_Action_Boolean_Source::actionData_size
	uint32_t ___actionData_size_10;

public:
	inline static int32_t get_offset_of_actionData_size_10() { return static_cast<int32_t>(offsetof(SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB_StaticFields, ___actionData_size_10)); }
	inline uint32_t get_actionData_size_10() const { return ___actionData_size_10; }
	inline uint32_t* get_address_of_actionData_size_10() { return &___actionData_size_10; }
	inline void set_actionData_size_10(uint32_t value)
	{
		___actionData_size_10 = value;
	}
};


// Valve.VR.SteamVR_Action_In_Source_Map`1<Valve.VR.SteamVR_Action_Vector3_Source>
struct  SteamVR_Action_In_Source_Map_1_t462A1CF8307E7E62DA57F8FA49B7405C51117253  : public SteamVR_Action_Source_Map_1_tAA298402BDA6A553A0C30790E7129D18A7682C1F
{
public:
	// System.Collections.Generic.List`1<System.Int32> Valve.VR.SteamVR_Action_In_Source_Map`1::updatingSources
	List_1_tE1526161A558A17A39A8B69D8EEF3801393B6226 * ___updatingSources_8;

public:
	inline static int32_t get_offset_of_updatingSources_8() { return static_cast<int32_t>(offsetof(SteamVR_Action_In_Source_Map_1_t462A1CF8307E7E62DA57F8FA49B7405C51117253, ___updatingSources_8)); }
	inline List_1_tE1526161A558A17A39A8B69D8EEF3801393B6226 * get_updatingSources_8() const { return ___updatingSources_8; }
	inline List_1_tE1526161A558A17A39A8B69D8EEF3801393B6226 ** get_address_of_updatingSources_8() { return &___updatingSources_8; }
	inline void set_updatingSources_8(List_1_tE1526161A558A17A39A8B69D8EEF3801393B6226 * value)
	{
		___updatingSources_8 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___updatingSources_8), (void*)value);
	}
};


// Valve.VR.SteamVR_Action_Pose_Source
struct  SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27  : public SteamVR_Action_In_Source_t6C3FA81DC7F53D302E49E09F5791E612AC7832AB
{
public:
	// Valve.VR.ETrackingUniverseOrigin Valve.VR.SteamVR_Action_Pose_Source::universeOrigin
	int32_t ___universeOrigin_10;
	// System.Single Valve.VR.SteamVR_Action_Pose_Source::changeTolerance
	float ___changeTolerance_12;
	// Valve.VR.SteamVR_Action_Pose_ActiveChangeHandler Valve.VR.SteamVR_Action_Pose_Source::onActiveChange
	ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E * ___onActiveChange_13;
	// Valve.VR.SteamVR_Action_Pose_ActiveChangeHandler Valve.VR.SteamVR_Action_Pose_Source::onActiveBindingChange
	ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E * ___onActiveBindingChange_14;
	// Valve.VR.SteamVR_Action_Pose_ChangeHandler Valve.VR.SteamVR_Action_Pose_Source::onChange
	ChangeHandler_tBB749BC376815901B6E13DF03202383F3302BFBE * ___onChange_15;
	// Valve.VR.SteamVR_Action_Pose_UpdateHandler Valve.VR.SteamVR_Action_Pose_Source::onUpdate
	UpdateHandler_t4F6AB1825F5E5CE6A7BBCD6C84541B3DF13C2AA1 * ___onUpdate_16;
	// Valve.VR.SteamVR_Action_Pose_TrackingChangeHandler Valve.VR.SteamVR_Action_Pose_Source::onTrackingChanged
	TrackingChangeHandler_t1CC1FD6A7111B86684B749C4E751B1F5237D2914 * ___onTrackingChanged_17;
	// Valve.VR.SteamVR_Action_Pose_ValidPoseChangeHandler Valve.VR.SteamVR_Action_Pose_Source::onValidPoseChanged
	ValidPoseChangeHandler_t1D487A0B0E2FB0D02C72EF5365E81BCD3E33B41A * ___onValidPoseChanged_18;
	// Valve.VR.SteamVR_Action_Pose_DeviceConnectedChangeHandler Valve.VR.SteamVR_Action_Pose_Source::onDeviceConnectedChanged
	DeviceConnectedChangeHandler_t4AC124A9A94D668A0FB45EA8FC718729CEA3D0D9 * ___onDeviceConnectedChanged_19;
	// System.Boolean Valve.VR.SteamVR_Action_Pose_Source::<changed>k__BackingField
	bool ___U3CchangedU3Ek__BackingField_20;
	// System.Boolean Valve.VR.SteamVR_Action_Pose_Source::<lastChanged>k__BackingField
	bool ___U3ClastChangedU3Ek__BackingField_21;
	// System.Boolean Valve.VR.SteamVR_Action_Pose_Source::<lastActive>k__BackingField
	bool ___U3ClastActiveU3Ek__BackingField_22;
	// UnityEngine.Vector3 Valve.VR.SteamVR_Action_Pose_Source::<localPosition>k__BackingField
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___U3ClocalPositionU3Ek__BackingField_23;
	// UnityEngine.Quaternion Valve.VR.SteamVR_Action_Pose_Source::<localRotation>k__BackingField
	Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  ___U3ClocalRotationU3Ek__BackingField_24;
	// UnityEngine.Vector3 Valve.VR.SteamVR_Action_Pose_Source::<lastLocalPosition>k__BackingField
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___U3ClastLocalPositionU3Ek__BackingField_25;
	// UnityEngine.Quaternion Valve.VR.SteamVR_Action_Pose_Source::<lastLocalRotation>k__BackingField
	Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  ___U3ClastLocalRotationU3Ek__BackingField_26;
	// UnityEngine.Vector3 Valve.VR.SteamVR_Action_Pose_Source::<velocity>k__BackingField
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___U3CvelocityU3Ek__BackingField_27;
	// UnityEngine.Vector3 Valve.VR.SteamVR_Action_Pose_Source::<lastVelocity>k__BackingField
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___U3ClastVelocityU3Ek__BackingField_28;
	// UnityEngine.Vector3 Valve.VR.SteamVR_Action_Pose_Source::<angularVelocity>k__BackingField
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___U3CangularVelocityU3Ek__BackingField_29;
	// UnityEngine.Vector3 Valve.VR.SteamVR_Action_Pose_Source::<lastAngularVelocity>k__BackingField
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___U3ClastAngularVelocityU3Ek__BackingField_30;
	// Valve.VR.InputPoseActionData_t Valve.VR.SteamVR_Action_Pose_Source::poseActionData
	InputPoseActionData_t_t6F2C776E0AA5528E702E6079C156B7747182C607  ___poseActionData_31;
	// Valve.VR.InputPoseActionData_t Valve.VR.SteamVR_Action_Pose_Source::lastPoseActionData
	InputPoseActionData_t_t6F2C776E0AA5528E702E6079C156B7747182C607  ___lastPoseActionData_32;
	// Valve.VR.InputPoseActionData_t Valve.VR.SteamVR_Action_Pose_Source::tempPoseActionData
	InputPoseActionData_t_t6F2C776E0AA5528E702E6079C156B7747182C607  ___tempPoseActionData_33;
	// Valve.VR.SteamVR_Action_Pose Valve.VR.SteamVR_Action_Pose_Source::poseAction
	SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * ___poseAction_34;

public:
	inline static int32_t get_offset_of_universeOrigin_10() { return static_cast<int32_t>(offsetof(SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27, ___universeOrigin_10)); }
	inline int32_t get_universeOrigin_10() const { return ___universeOrigin_10; }
	inline int32_t* get_address_of_universeOrigin_10() { return &___universeOrigin_10; }
	inline void set_universeOrigin_10(int32_t value)
	{
		___universeOrigin_10 = value;
	}

	inline static int32_t get_offset_of_changeTolerance_12() { return static_cast<int32_t>(offsetof(SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27, ___changeTolerance_12)); }
	inline float get_changeTolerance_12() const { return ___changeTolerance_12; }
	inline float* get_address_of_changeTolerance_12() { return &___changeTolerance_12; }
	inline void set_changeTolerance_12(float value)
	{
		___changeTolerance_12 = value;
	}

	inline static int32_t get_offset_of_onActiveChange_13() { return static_cast<int32_t>(offsetof(SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27, ___onActiveChange_13)); }
	inline ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E * get_onActiveChange_13() const { return ___onActiveChange_13; }
	inline ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E ** get_address_of_onActiveChange_13() { return &___onActiveChange_13; }
	inline void set_onActiveChange_13(ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E * value)
	{
		___onActiveChange_13 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onActiveChange_13), (void*)value);
	}

	inline static int32_t get_offset_of_onActiveBindingChange_14() { return static_cast<int32_t>(offsetof(SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27, ___onActiveBindingChange_14)); }
	inline ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E * get_onActiveBindingChange_14() const { return ___onActiveBindingChange_14; }
	inline ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E ** get_address_of_onActiveBindingChange_14() { return &___onActiveBindingChange_14; }
	inline void set_onActiveBindingChange_14(ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E * value)
	{
		___onActiveBindingChange_14 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onActiveBindingChange_14), (void*)value);
	}

	inline static int32_t get_offset_of_onChange_15() { return static_cast<int32_t>(offsetof(SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27, ___onChange_15)); }
	inline ChangeHandler_tBB749BC376815901B6E13DF03202383F3302BFBE * get_onChange_15() const { return ___onChange_15; }
	inline ChangeHandler_tBB749BC376815901B6E13DF03202383F3302BFBE ** get_address_of_onChange_15() { return &___onChange_15; }
	inline void set_onChange_15(ChangeHandler_tBB749BC376815901B6E13DF03202383F3302BFBE * value)
	{
		___onChange_15 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onChange_15), (void*)value);
	}

	inline static int32_t get_offset_of_onUpdate_16() { return static_cast<int32_t>(offsetof(SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27, ___onUpdate_16)); }
	inline UpdateHandler_t4F6AB1825F5E5CE6A7BBCD6C84541B3DF13C2AA1 * get_onUpdate_16() const { return ___onUpdate_16; }
	inline UpdateHandler_t4F6AB1825F5E5CE6A7BBCD6C84541B3DF13C2AA1 ** get_address_of_onUpdate_16() { return &___onUpdate_16; }
	inline void set_onUpdate_16(UpdateHandler_t4F6AB1825F5E5CE6A7BBCD6C84541B3DF13C2AA1 * value)
	{
		___onUpdate_16 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onUpdate_16), (void*)value);
	}

	inline static int32_t get_offset_of_onTrackingChanged_17() { return static_cast<int32_t>(offsetof(SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27, ___onTrackingChanged_17)); }
	inline TrackingChangeHandler_t1CC1FD6A7111B86684B749C4E751B1F5237D2914 * get_onTrackingChanged_17() const { return ___onTrackingChanged_17; }
	inline TrackingChangeHandler_t1CC1FD6A7111B86684B749C4E751B1F5237D2914 ** get_address_of_onTrackingChanged_17() { return &___onTrackingChanged_17; }
	inline void set_onTrackingChanged_17(TrackingChangeHandler_t1CC1FD6A7111B86684B749C4E751B1F5237D2914 * value)
	{
		___onTrackingChanged_17 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onTrackingChanged_17), (void*)value);
	}

	inline static int32_t get_offset_of_onValidPoseChanged_18() { return static_cast<int32_t>(offsetof(SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27, ___onValidPoseChanged_18)); }
	inline ValidPoseChangeHandler_t1D487A0B0E2FB0D02C72EF5365E81BCD3E33B41A * get_onValidPoseChanged_18() const { return ___onValidPoseChanged_18; }
	inline ValidPoseChangeHandler_t1D487A0B0E2FB0D02C72EF5365E81BCD3E33B41A ** get_address_of_onValidPoseChanged_18() { return &___onValidPoseChanged_18; }
	inline void set_onValidPoseChanged_18(ValidPoseChangeHandler_t1D487A0B0E2FB0D02C72EF5365E81BCD3E33B41A * value)
	{
		___onValidPoseChanged_18 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onValidPoseChanged_18), (void*)value);
	}

	inline static int32_t get_offset_of_onDeviceConnectedChanged_19() { return static_cast<int32_t>(offsetof(SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27, ___onDeviceConnectedChanged_19)); }
	inline DeviceConnectedChangeHandler_t4AC124A9A94D668A0FB45EA8FC718729CEA3D0D9 * get_onDeviceConnectedChanged_19() const { return ___onDeviceConnectedChanged_19; }
	inline DeviceConnectedChangeHandler_t4AC124A9A94D668A0FB45EA8FC718729CEA3D0D9 ** get_address_of_onDeviceConnectedChanged_19() { return &___onDeviceConnectedChanged_19; }
	inline void set_onDeviceConnectedChanged_19(DeviceConnectedChangeHandler_t4AC124A9A94D668A0FB45EA8FC718729CEA3D0D9 * value)
	{
		___onDeviceConnectedChanged_19 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onDeviceConnectedChanged_19), (void*)value);
	}

	inline static int32_t get_offset_of_U3CchangedU3Ek__BackingField_20() { return static_cast<int32_t>(offsetof(SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27, ___U3CchangedU3Ek__BackingField_20)); }
	inline bool get_U3CchangedU3Ek__BackingField_20() const { return ___U3CchangedU3Ek__BackingField_20; }
	inline bool* get_address_of_U3CchangedU3Ek__BackingField_20() { return &___U3CchangedU3Ek__BackingField_20; }
	inline void set_U3CchangedU3Ek__BackingField_20(bool value)
	{
		___U3CchangedU3Ek__BackingField_20 = value;
	}

	inline static int32_t get_offset_of_U3ClastChangedU3Ek__BackingField_21() { return static_cast<int32_t>(offsetof(SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27, ___U3ClastChangedU3Ek__BackingField_21)); }
	inline bool get_U3ClastChangedU3Ek__BackingField_21() const { return ___U3ClastChangedU3Ek__BackingField_21; }
	inline bool* get_address_of_U3ClastChangedU3Ek__BackingField_21() { return &___U3ClastChangedU3Ek__BackingField_21; }
	inline void set_U3ClastChangedU3Ek__BackingField_21(bool value)
	{
		___U3ClastChangedU3Ek__BackingField_21 = value;
	}

	inline static int32_t get_offset_of_U3ClastActiveU3Ek__BackingField_22() { return static_cast<int32_t>(offsetof(SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27, ___U3ClastActiveU3Ek__BackingField_22)); }
	inline bool get_U3ClastActiveU3Ek__BackingField_22() const { return ___U3ClastActiveU3Ek__BackingField_22; }
	inline bool* get_address_of_U3ClastActiveU3Ek__BackingField_22() { return &___U3ClastActiveU3Ek__BackingField_22; }
	inline void set_U3ClastActiveU3Ek__BackingField_22(bool value)
	{
		___U3ClastActiveU3Ek__BackingField_22 = value;
	}

	inline static int32_t get_offset_of_U3ClocalPositionU3Ek__BackingField_23() { return static_cast<int32_t>(offsetof(SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27, ___U3ClocalPositionU3Ek__BackingField_23)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_U3ClocalPositionU3Ek__BackingField_23() const { return ___U3ClocalPositionU3Ek__BackingField_23; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_U3ClocalPositionU3Ek__BackingField_23() { return &___U3ClocalPositionU3Ek__BackingField_23; }
	inline void set_U3ClocalPositionU3Ek__BackingField_23(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___U3ClocalPositionU3Ek__BackingField_23 = value;
	}

	inline static int32_t get_offset_of_U3ClocalRotationU3Ek__BackingField_24() { return static_cast<int32_t>(offsetof(SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27, ___U3ClocalRotationU3Ek__BackingField_24)); }
	inline Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  get_U3ClocalRotationU3Ek__BackingField_24() const { return ___U3ClocalRotationU3Ek__BackingField_24; }
	inline Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357 * get_address_of_U3ClocalRotationU3Ek__BackingField_24() { return &___U3ClocalRotationU3Ek__BackingField_24; }
	inline void set_U3ClocalRotationU3Ek__BackingField_24(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  value)
	{
		___U3ClocalRotationU3Ek__BackingField_24 = value;
	}

	inline static int32_t get_offset_of_U3ClastLocalPositionU3Ek__BackingField_25() { return static_cast<int32_t>(offsetof(SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27, ___U3ClastLocalPositionU3Ek__BackingField_25)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_U3ClastLocalPositionU3Ek__BackingField_25() const { return ___U3ClastLocalPositionU3Ek__BackingField_25; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_U3ClastLocalPositionU3Ek__BackingField_25() { return &___U3ClastLocalPositionU3Ek__BackingField_25; }
	inline void set_U3ClastLocalPositionU3Ek__BackingField_25(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___U3ClastLocalPositionU3Ek__BackingField_25 = value;
	}

	inline static int32_t get_offset_of_U3ClastLocalRotationU3Ek__BackingField_26() { return static_cast<int32_t>(offsetof(SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27, ___U3ClastLocalRotationU3Ek__BackingField_26)); }
	inline Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  get_U3ClastLocalRotationU3Ek__BackingField_26() const { return ___U3ClastLocalRotationU3Ek__BackingField_26; }
	inline Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357 * get_address_of_U3ClastLocalRotationU3Ek__BackingField_26() { return &___U3ClastLocalRotationU3Ek__BackingField_26; }
	inline void set_U3ClastLocalRotationU3Ek__BackingField_26(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  value)
	{
		___U3ClastLocalRotationU3Ek__BackingField_26 = value;
	}

	inline static int32_t get_offset_of_U3CvelocityU3Ek__BackingField_27() { return static_cast<int32_t>(offsetof(SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27, ___U3CvelocityU3Ek__BackingField_27)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_U3CvelocityU3Ek__BackingField_27() const { return ___U3CvelocityU3Ek__BackingField_27; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_U3CvelocityU3Ek__BackingField_27() { return &___U3CvelocityU3Ek__BackingField_27; }
	inline void set_U3CvelocityU3Ek__BackingField_27(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___U3CvelocityU3Ek__BackingField_27 = value;
	}

	inline static int32_t get_offset_of_U3ClastVelocityU3Ek__BackingField_28() { return static_cast<int32_t>(offsetof(SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27, ___U3ClastVelocityU3Ek__BackingField_28)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_U3ClastVelocityU3Ek__BackingField_28() const { return ___U3ClastVelocityU3Ek__BackingField_28; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_U3ClastVelocityU3Ek__BackingField_28() { return &___U3ClastVelocityU3Ek__BackingField_28; }
	inline void set_U3ClastVelocityU3Ek__BackingField_28(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___U3ClastVelocityU3Ek__BackingField_28 = value;
	}

	inline static int32_t get_offset_of_U3CangularVelocityU3Ek__BackingField_29() { return static_cast<int32_t>(offsetof(SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27, ___U3CangularVelocityU3Ek__BackingField_29)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_U3CangularVelocityU3Ek__BackingField_29() const { return ___U3CangularVelocityU3Ek__BackingField_29; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_U3CangularVelocityU3Ek__BackingField_29() { return &___U3CangularVelocityU3Ek__BackingField_29; }
	inline void set_U3CangularVelocityU3Ek__BackingField_29(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___U3CangularVelocityU3Ek__BackingField_29 = value;
	}

	inline static int32_t get_offset_of_U3ClastAngularVelocityU3Ek__BackingField_30() { return static_cast<int32_t>(offsetof(SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27, ___U3ClastAngularVelocityU3Ek__BackingField_30)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_U3ClastAngularVelocityU3Ek__BackingField_30() const { return ___U3ClastAngularVelocityU3Ek__BackingField_30; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_U3ClastAngularVelocityU3Ek__BackingField_30() { return &___U3ClastAngularVelocityU3Ek__BackingField_30; }
	inline void set_U3ClastAngularVelocityU3Ek__BackingField_30(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___U3ClastAngularVelocityU3Ek__BackingField_30 = value;
	}

	inline static int32_t get_offset_of_poseActionData_31() { return static_cast<int32_t>(offsetof(SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27, ___poseActionData_31)); }
	inline InputPoseActionData_t_t6F2C776E0AA5528E702E6079C156B7747182C607  get_poseActionData_31() const { return ___poseActionData_31; }
	inline InputPoseActionData_t_t6F2C776E0AA5528E702E6079C156B7747182C607 * get_address_of_poseActionData_31() { return &___poseActionData_31; }
	inline void set_poseActionData_31(InputPoseActionData_t_t6F2C776E0AA5528E702E6079C156B7747182C607  value)
	{
		___poseActionData_31 = value;
	}

	inline static int32_t get_offset_of_lastPoseActionData_32() { return static_cast<int32_t>(offsetof(SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27, ___lastPoseActionData_32)); }
	inline InputPoseActionData_t_t6F2C776E0AA5528E702E6079C156B7747182C607  get_lastPoseActionData_32() const { return ___lastPoseActionData_32; }
	inline InputPoseActionData_t_t6F2C776E0AA5528E702E6079C156B7747182C607 * get_address_of_lastPoseActionData_32() { return &___lastPoseActionData_32; }
	inline void set_lastPoseActionData_32(InputPoseActionData_t_t6F2C776E0AA5528E702E6079C156B7747182C607  value)
	{
		___lastPoseActionData_32 = value;
	}

	inline static int32_t get_offset_of_tempPoseActionData_33() { return static_cast<int32_t>(offsetof(SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27, ___tempPoseActionData_33)); }
	inline InputPoseActionData_t_t6F2C776E0AA5528E702E6079C156B7747182C607  get_tempPoseActionData_33() const { return ___tempPoseActionData_33; }
	inline InputPoseActionData_t_t6F2C776E0AA5528E702E6079C156B7747182C607 * get_address_of_tempPoseActionData_33() { return &___tempPoseActionData_33; }
	inline void set_tempPoseActionData_33(InputPoseActionData_t_t6F2C776E0AA5528E702E6079C156B7747182C607  value)
	{
		___tempPoseActionData_33 = value;
	}

	inline static int32_t get_offset_of_poseAction_34() { return static_cast<int32_t>(offsetof(SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27, ___poseAction_34)); }
	inline SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * get_poseAction_34() const { return ___poseAction_34; }
	inline SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C ** get_address_of_poseAction_34() { return &___poseAction_34; }
	inline void set_poseAction_34(SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * value)
	{
		___poseAction_34 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___poseAction_34), (void*)value);
	}
};

struct SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27_StaticFields
{
public:
	// System.UInt32 Valve.VR.SteamVR_Action_Pose_Source::poseActionData_size
	uint32_t ___poseActionData_size_11;
	// System.Single Valve.VR.SteamVR_Action_Pose_Source::framesAhead
	float ___framesAhead_35;

public:
	inline static int32_t get_offset_of_poseActionData_size_11() { return static_cast<int32_t>(offsetof(SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27_StaticFields, ___poseActionData_size_11)); }
	inline uint32_t get_poseActionData_size_11() const { return ___poseActionData_size_11; }
	inline uint32_t* get_address_of_poseActionData_size_11() { return &___poseActionData_size_11; }
	inline void set_poseActionData_size_11(uint32_t value)
	{
		___poseActionData_size_11 = value;
	}

	inline static int32_t get_offset_of_framesAhead_35() { return static_cast<int32_t>(offsetof(SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27_StaticFields, ___framesAhead_35)); }
	inline float get_framesAhead_35() const { return ___framesAhead_35; }
	inline float* get_address_of_framesAhead_35() { return &___framesAhead_35; }
	inline void set_framesAhead_35(float value)
	{
		___framesAhead_35 = value;
	}
};


// Valve.VR.SteamVR_Action_Single_Source
struct  SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F  : public SteamVR_Action_In_Source_t6C3FA81DC7F53D302E49E09F5791E612AC7832AB
{
public:
	// System.Single Valve.VR.SteamVR_Action_Single_Source::changeTolerance
	float ___changeTolerance_11;
	// Valve.VR.SteamVR_Action_Single_AxisHandler Valve.VR.SteamVR_Action_Single_Source::onAxis
	AxisHandler_tB065AC6B40691A33562DB817EBD29E5721A64843 * ___onAxis_12;
	// Valve.VR.SteamVR_Action_Single_ActiveChangeHandler Valve.VR.SteamVR_Action_Single_Source::onActiveChange
	ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE * ___onActiveChange_13;
	// Valve.VR.SteamVR_Action_Single_ActiveChangeHandler Valve.VR.SteamVR_Action_Single_Source::onActiveBindingChange
	ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE * ___onActiveBindingChange_14;
	// Valve.VR.SteamVR_Action_Single_ChangeHandler Valve.VR.SteamVR_Action_Single_Source::onChange
	ChangeHandler_tF837F67A16B6ED5F9B2C676AC0AF9C611397DFED * ___onChange_15;
	// Valve.VR.SteamVR_Action_Single_UpdateHandler Valve.VR.SteamVR_Action_Single_Source::onUpdate
	UpdateHandler_t4011C6F65732B2D2AD73A21EBF2ADD943897886D * ___onUpdate_16;
	// System.Boolean Valve.VR.SteamVR_Action_Single_Source::<changed>k__BackingField
	bool ___U3CchangedU3Ek__BackingField_17;
	// System.Boolean Valve.VR.SteamVR_Action_Single_Source::<lastChanged>k__BackingField
	bool ___U3ClastChangedU3Ek__BackingField_18;
	// System.Boolean Valve.VR.SteamVR_Action_Single_Source::<lastActive>k__BackingField
	bool ___U3ClastActiveU3Ek__BackingField_19;
	// Valve.VR.InputAnalogActionData_t Valve.VR.SteamVR_Action_Single_Source::actionData
	InputAnalogActionData_t_t14E9AA21212F14E11EE05E0C5D5D37705B14CB0C  ___actionData_20;
	// Valve.VR.InputAnalogActionData_t Valve.VR.SteamVR_Action_Single_Source::lastActionData
	InputAnalogActionData_t_t14E9AA21212F14E11EE05E0C5D5D37705B14CB0C  ___lastActionData_21;
	// Valve.VR.SteamVR_Action_Single Valve.VR.SteamVR_Action_Single_Source::singleAction
	SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 * ___singleAction_22;

public:
	inline static int32_t get_offset_of_changeTolerance_11() { return static_cast<int32_t>(offsetof(SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F, ___changeTolerance_11)); }
	inline float get_changeTolerance_11() const { return ___changeTolerance_11; }
	inline float* get_address_of_changeTolerance_11() { return &___changeTolerance_11; }
	inline void set_changeTolerance_11(float value)
	{
		___changeTolerance_11 = value;
	}

	inline static int32_t get_offset_of_onAxis_12() { return static_cast<int32_t>(offsetof(SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F, ___onAxis_12)); }
	inline AxisHandler_tB065AC6B40691A33562DB817EBD29E5721A64843 * get_onAxis_12() const { return ___onAxis_12; }
	inline AxisHandler_tB065AC6B40691A33562DB817EBD29E5721A64843 ** get_address_of_onAxis_12() { return &___onAxis_12; }
	inline void set_onAxis_12(AxisHandler_tB065AC6B40691A33562DB817EBD29E5721A64843 * value)
	{
		___onAxis_12 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onAxis_12), (void*)value);
	}

	inline static int32_t get_offset_of_onActiveChange_13() { return static_cast<int32_t>(offsetof(SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F, ___onActiveChange_13)); }
	inline ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE * get_onActiveChange_13() const { return ___onActiveChange_13; }
	inline ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE ** get_address_of_onActiveChange_13() { return &___onActiveChange_13; }
	inline void set_onActiveChange_13(ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE * value)
	{
		___onActiveChange_13 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onActiveChange_13), (void*)value);
	}

	inline static int32_t get_offset_of_onActiveBindingChange_14() { return static_cast<int32_t>(offsetof(SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F, ___onActiveBindingChange_14)); }
	inline ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE * get_onActiveBindingChange_14() const { return ___onActiveBindingChange_14; }
	inline ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE ** get_address_of_onActiveBindingChange_14() { return &___onActiveBindingChange_14; }
	inline void set_onActiveBindingChange_14(ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE * value)
	{
		___onActiveBindingChange_14 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onActiveBindingChange_14), (void*)value);
	}

	inline static int32_t get_offset_of_onChange_15() { return static_cast<int32_t>(offsetof(SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F, ___onChange_15)); }
	inline ChangeHandler_tF837F67A16B6ED5F9B2C676AC0AF9C611397DFED * get_onChange_15() const { return ___onChange_15; }
	inline ChangeHandler_tF837F67A16B6ED5F9B2C676AC0AF9C611397DFED ** get_address_of_onChange_15() { return &___onChange_15; }
	inline void set_onChange_15(ChangeHandler_tF837F67A16B6ED5F9B2C676AC0AF9C611397DFED * value)
	{
		___onChange_15 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onChange_15), (void*)value);
	}

	inline static int32_t get_offset_of_onUpdate_16() { return static_cast<int32_t>(offsetof(SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F, ___onUpdate_16)); }
	inline UpdateHandler_t4011C6F65732B2D2AD73A21EBF2ADD943897886D * get_onUpdate_16() const { return ___onUpdate_16; }
	inline UpdateHandler_t4011C6F65732B2D2AD73A21EBF2ADD943897886D ** get_address_of_onUpdate_16() { return &___onUpdate_16; }
	inline void set_onUpdate_16(UpdateHandler_t4011C6F65732B2D2AD73A21EBF2ADD943897886D * value)
	{
		___onUpdate_16 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onUpdate_16), (void*)value);
	}

	inline static int32_t get_offset_of_U3CchangedU3Ek__BackingField_17() { return static_cast<int32_t>(offsetof(SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F, ___U3CchangedU3Ek__BackingField_17)); }
	inline bool get_U3CchangedU3Ek__BackingField_17() const { return ___U3CchangedU3Ek__BackingField_17; }
	inline bool* get_address_of_U3CchangedU3Ek__BackingField_17() { return &___U3CchangedU3Ek__BackingField_17; }
	inline void set_U3CchangedU3Ek__BackingField_17(bool value)
	{
		___U3CchangedU3Ek__BackingField_17 = value;
	}

	inline static int32_t get_offset_of_U3ClastChangedU3Ek__BackingField_18() { return static_cast<int32_t>(offsetof(SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F, ___U3ClastChangedU3Ek__BackingField_18)); }
	inline bool get_U3ClastChangedU3Ek__BackingField_18() const { return ___U3ClastChangedU3Ek__BackingField_18; }
	inline bool* get_address_of_U3ClastChangedU3Ek__BackingField_18() { return &___U3ClastChangedU3Ek__BackingField_18; }
	inline void set_U3ClastChangedU3Ek__BackingField_18(bool value)
	{
		___U3ClastChangedU3Ek__BackingField_18 = value;
	}

	inline static int32_t get_offset_of_U3ClastActiveU3Ek__BackingField_19() { return static_cast<int32_t>(offsetof(SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F, ___U3ClastActiveU3Ek__BackingField_19)); }
	inline bool get_U3ClastActiveU3Ek__BackingField_19() const { return ___U3ClastActiveU3Ek__BackingField_19; }
	inline bool* get_address_of_U3ClastActiveU3Ek__BackingField_19() { return &___U3ClastActiveU3Ek__BackingField_19; }
	inline void set_U3ClastActiveU3Ek__BackingField_19(bool value)
	{
		___U3ClastActiveU3Ek__BackingField_19 = value;
	}

	inline static int32_t get_offset_of_actionData_20() { return static_cast<int32_t>(offsetof(SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F, ___actionData_20)); }
	inline InputAnalogActionData_t_t14E9AA21212F14E11EE05E0C5D5D37705B14CB0C  get_actionData_20() const { return ___actionData_20; }
	inline InputAnalogActionData_t_t14E9AA21212F14E11EE05E0C5D5D37705B14CB0C * get_address_of_actionData_20() { return &___actionData_20; }
	inline void set_actionData_20(InputAnalogActionData_t_t14E9AA21212F14E11EE05E0C5D5D37705B14CB0C  value)
	{
		___actionData_20 = value;
	}

	inline static int32_t get_offset_of_lastActionData_21() { return static_cast<int32_t>(offsetof(SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F, ___lastActionData_21)); }
	inline InputAnalogActionData_t_t14E9AA21212F14E11EE05E0C5D5D37705B14CB0C  get_lastActionData_21() const { return ___lastActionData_21; }
	inline InputAnalogActionData_t_t14E9AA21212F14E11EE05E0C5D5D37705B14CB0C * get_address_of_lastActionData_21() { return &___lastActionData_21; }
	inline void set_lastActionData_21(InputAnalogActionData_t_t14E9AA21212F14E11EE05E0C5D5D37705B14CB0C  value)
	{
		___lastActionData_21 = value;
	}

	inline static int32_t get_offset_of_singleAction_22() { return static_cast<int32_t>(offsetof(SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F, ___singleAction_22)); }
	inline SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 * get_singleAction_22() const { return ___singleAction_22; }
	inline SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 ** get_address_of_singleAction_22() { return &___singleAction_22; }
	inline void set_singleAction_22(SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 * value)
	{
		___singleAction_22 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___singleAction_22), (void*)value);
	}
};

struct SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F_StaticFields
{
public:
	// System.UInt32 Valve.VR.SteamVR_Action_Single_Source::actionData_size
	uint32_t ___actionData_size_10;

public:
	inline static int32_t get_offset_of_actionData_size_10() { return static_cast<int32_t>(offsetof(SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F_StaticFields, ___actionData_size_10)); }
	inline uint32_t get_actionData_size_10() const { return ___actionData_size_10; }
	inline uint32_t* get_address_of_actionData_size_10() { return &___actionData_size_10; }
	inline void set_actionData_size_10(uint32_t value)
	{
		___actionData_size_10 = value;
	}
};


// Valve.VR.SteamVR_Action_Vector2_Source
struct  SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1  : public SteamVR_Action_In_Source_t6C3FA81DC7F53D302E49E09F5791E612AC7832AB
{
public:
	// System.Single Valve.VR.SteamVR_Action_Vector2_Source::changeTolerance
	float ___changeTolerance_11;
	// Valve.VR.SteamVR_Action_Vector2_AxisHandler Valve.VR.SteamVR_Action_Vector2_Source::onAxis
	AxisHandler_t97FB692AF5465040A2929AB663941933E3567689 * ___onAxis_12;
	// Valve.VR.SteamVR_Action_Vector2_ActiveChangeHandler Valve.VR.SteamVR_Action_Vector2_Source::onActiveChange
	ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * ___onActiveChange_13;
	// Valve.VR.SteamVR_Action_Vector2_ActiveChangeHandler Valve.VR.SteamVR_Action_Vector2_Source::onActiveBindingChange
	ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * ___onActiveBindingChange_14;
	// Valve.VR.SteamVR_Action_Vector2_ChangeHandler Valve.VR.SteamVR_Action_Vector2_Source::onChange
	ChangeHandler_t716932883EC2BC15936E355D02A9D68B8F9EA6B6 * ___onChange_15;
	// Valve.VR.SteamVR_Action_Vector2_UpdateHandler Valve.VR.SteamVR_Action_Vector2_Source::onUpdate
	UpdateHandler_t5CC79EAAED92D106A0FBE46F2E73949A31CDA177 * ___onUpdate_16;
	// UnityEngine.Vector2 Valve.VR.SteamVR_Action_Vector2_Source::<axis>k__BackingField
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___U3CaxisU3Ek__BackingField_17;
	// UnityEngine.Vector2 Valve.VR.SteamVR_Action_Vector2_Source::<lastAxis>k__BackingField
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___U3ClastAxisU3Ek__BackingField_18;
	// UnityEngine.Vector2 Valve.VR.SteamVR_Action_Vector2_Source::<delta>k__BackingField
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___U3CdeltaU3Ek__BackingField_19;
	// UnityEngine.Vector2 Valve.VR.SteamVR_Action_Vector2_Source::<lastDelta>k__BackingField
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___U3ClastDeltaU3Ek__BackingField_20;
	// System.Boolean Valve.VR.SteamVR_Action_Vector2_Source::<changed>k__BackingField
	bool ___U3CchangedU3Ek__BackingField_21;
	// System.Boolean Valve.VR.SteamVR_Action_Vector2_Source::<lastChanged>k__BackingField
	bool ___U3ClastChangedU3Ek__BackingField_22;
	// System.Boolean Valve.VR.SteamVR_Action_Vector2_Source::<lastActive>k__BackingField
	bool ___U3ClastActiveU3Ek__BackingField_23;
	// Valve.VR.InputAnalogActionData_t Valve.VR.SteamVR_Action_Vector2_Source::actionData
	InputAnalogActionData_t_t14E9AA21212F14E11EE05E0C5D5D37705B14CB0C  ___actionData_24;
	// Valve.VR.InputAnalogActionData_t Valve.VR.SteamVR_Action_Vector2_Source::lastActionData
	InputAnalogActionData_t_t14E9AA21212F14E11EE05E0C5D5D37705B14CB0C  ___lastActionData_25;
	// Valve.VR.SteamVR_Action_Vector2 Valve.VR.SteamVR_Action_Vector2_Source::vector2Action
	SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 * ___vector2Action_26;

public:
	inline static int32_t get_offset_of_changeTolerance_11() { return static_cast<int32_t>(offsetof(SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1, ___changeTolerance_11)); }
	inline float get_changeTolerance_11() const { return ___changeTolerance_11; }
	inline float* get_address_of_changeTolerance_11() { return &___changeTolerance_11; }
	inline void set_changeTolerance_11(float value)
	{
		___changeTolerance_11 = value;
	}

	inline static int32_t get_offset_of_onAxis_12() { return static_cast<int32_t>(offsetof(SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1, ___onAxis_12)); }
	inline AxisHandler_t97FB692AF5465040A2929AB663941933E3567689 * get_onAxis_12() const { return ___onAxis_12; }
	inline AxisHandler_t97FB692AF5465040A2929AB663941933E3567689 ** get_address_of_onAxis_12() { return &___onAxis_12; }
	inline void set_onAxis_12(AxisHandler_t97FB692AF5465040A2929AB663941933E3567689 * value)
	{
		___onAxis_12 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onAxis_12), (void*)value);
	}

	inline static int32_t get_offset_of_onActiveChange_13() { return static_cast<int32_t>(offsetof(SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1, ___onActiveChange_13)); }
	inline ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * get_onActiveChange_13() const { return ___onActiveChange_13; }
	inline ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 ** get_address_of_onActiveChange_13() { return &___onActiveChange_13; }
	inline void set_onActiveChange_13(ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * value)
	{
		___onActiveChange_13 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onActiveChange_13), (void*)value);
	}

	inline static int32_t get_offset_of_onActiveBindingChange_14() { return static_cast<int32_t>(offsetof(SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1, ___onActiveBindingChange_14)); }
	inline ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * get_onActiveBindingChange_14() const { return ___onActiveBindingChange_14; }
	inline ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 ** get_address_of_onActiveBindingChange_14() { return &___onActiveBindingChange_14; }
	inline void set_onActiveBindingChange_14(ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * value)
	{
		___onActiveBindingChange_14 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onActiveBindingChange_14), (void*)value);
	}

	inline static int32_t get_offset_of_onChange_15() { return static_cast<int32_t>(offsetof(SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1, ___onChange_15)); }
	inline ChangeHandler_t716932883EC2BC15936E355D02A9D68B8F9EA6B6 * get_onChange_15() const { return ___onChange_15; }
	inline ChangeHandler_t716932883EC2BC15936E355D02A9D68B8F9EA6B6 ** get_address_of_onChange_15() { return &___onChange_15; }
	inline void set_onChange_15(ChangeHandler_t716932883EC2BC15936E355D02A9D68B8F9EA6B6 * value)
	{
		___onChange_15 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onChange_15), (void*)value);
	}

	inline static int32_t get_offset_of_onUpdate_16() { return static_cast<int32_t>(offsetof(SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1, ___onUpdate_16)); }
	inline UpdateHandler_t5CC79EAAED92D106A0FBE46F2E73949A31CDA177 * get_onUpdate_16() const { return ___onUpdate_16; }
	inline UpdateHandler_t5CC79EAAED92D106A0FBE46F2E73949A31CDA177 ** get_address_of_onUpdate_16() { return &___onUpdate_16; }
	inline void set_onUpdate_16(UpdateHandler_t5CC79EAAED92D106A0FBE46F2E73949A31CDA177 * value)
	{
		___onUpdate_16 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onUpdate_16), (void*)value);
	}

	inline static int32_t get_offset_of_U3CaxisU3Ek__BackingField_17() { return static_cast<int32_t>(offsetof(SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1, ___U3CaxisU3Ek__BackingField_17)); }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  get_U3CaxisU3Ek__BackingField_17() const { return ___U3CaxisU3Ek__BackingField_17; }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * get_address_of_U3CaxisU3Ek__BackingField_17() { return &___U3CaxisU3Ek__BackingField_17; }
	inline void set_U3CaxisU3Ek__BackingField_17(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  value)
	{
		___U3CaxisU3Ek__BackingField_17 = value;
	}

	inline static int32_t get_offset_of_U3ClastAxisU3Ek__BackingField_18() { return static_cast<int32_t>(offsetof(SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1, ___U3ClastAxisU3Ek__BackingField_18)); }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  get_U3ClastAxisU3Ek__BackingField_18() const { return ___U3ClastAxisU3Ek__BackingField_18; }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * get_address_of_U3ClastAxisU3Ek__BackingField_18() { return &___U3ClastAxisU3Ek__BackingField_18; }
	inline void set_U3ClastAxisU3Ek__BackingField_18(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  value)
	{
		___U3ClastAxisU3Ek__BackingField_18 = value;
	}

	inline static int32_t get_offset_of_U3CdeltaU3Ek__BackingField_19() { return static_cast<int32_t>(offsetof(SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1, ___U3CdeltaU3Ek__BackingField_19)); }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  get_U3CdeltaU3Ek__BackingField_19() const { return ___U3CdeltaU3Ek__BackingField_19; }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * get_address_of_U3CdeltaU3Ek__BackingField_19() { return &___U3CdeltaU3Ek__BackingField_19; }
	inline void set_U3CdeltaU3Ek__BackingField_19(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  value)
	{
		___U3CdeltaU3Ek__BackingField_19 = value;
	}

	inline static int32_t get_offset_of_U3ClastDeltaU3Ek__BackingField_20() { return static_cast<int32_t>(offsetof(SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1, ___U3ClastDeltaU3Ek__BackingField_20)); }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  get_U3ClastDeltaU3Ek__BackingField_20() const { return ___U3ClastDeltaU3Ek__BackingField_20; }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * get_address_of_U3ClastDeltaU3Ek__BackingField_20() { return &___U3ClastDeltaU3Ek__BackingField_20; }
	inline void set_U3ClastDeltaU3Ek__BackingField_20(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  value)
	{
		___U3ClastDeltaU3Ek__BackingField_20 = value;
	}

	inline static int32_t get_offset_of_U3CchangedU3Ek__BackingField_21() { return static_cast<int32_t>(offsetof(SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1, ___U3CchangedU3Ek__BackingField_21)); }
	inline bool get_U3CchangedU3Ek__BackingField_21() const { return ___U3CchangedU3Ek__BackingField_21; }
	inline bool* get_address_of_U3CchangedU3Ek__BackingField_21() { return &___U3CchangedU3Ek__BackingField_21; }
	inline void set_U3CchangedU3Ek__BackingField_21(bool value)
	{
		___U3CchangedU3Ek__BackingField_21 = value;
	}

	inline static int32_t get_offset_of_U3ClastChangedU3Ek__BackingField_22() { return static_cast<int32_t>(offsetof(SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1, ___U3ClastChangedU3Ek__BackingField_22)); }
	inline bool get_U3ClastChangedU3Ek__BackingField_22() const { return ___U3ClastChangedU3Ek__BackingField_22; }
	inline bool* get_address_of_U3ClastChangedU3Ek__BackingField_22() { return &___U3ClastChangedU3Ek__BackingField_22; }
	inline void set_U3ClastChangedU3Ek__BackingField_22(bool value)
	{
		___U3ClastChangedU3Ek__BackingField_22 = value;
	}

	inline static int32_t get_offset_of_U3ClastActiveU3Ek__BackingField_23() { return static_cast<int32_t>(offsetof(SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1, ___U3ClastActiveU3Ek__BackingField_23)); }
	inline bool get_U3ClastActiveU3Ek__BackingField_23() const { return ___U3ClastActiveU3Ek__BackingField_23; }
	inline bool* get_address_of_U3ClastActiveU3Ek__BackingField_23() { return &___U3ClastActiveU3Ek__BackingField_23; }
	inline void set_U3ClastActiveU3Ek__BackingField_23(bool value)
	{
		___U3ClastActiveU3Ek__BackingField_23 = value;
	}

	inline static int32_t get_offset_of_actionData_24() { return static_cast<int32_t>(offsetof(SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1, ___actionData_24)); }
	inline InputAnalogActionData_t_t14E9AA21212F14E11EE05E0C5D5D37705B14CB0C  get_actionData_24() const { return ___actionData_24; }
	inline InputAnalogActionData_t_t14E9AA21212F14E11EE05E0C5D5D37705B14CB0C * get_address_of_actionData_24() { return &___actionData_24; }
	inline void set_actionData_24(InputAnalogActionData_t_t14E9AA21212F14E11EE05E0C5D5D37705B14CB0C  value)
	{
		___actionData_24 = value;
	}

	inline static int32_t get_offset_of_lastActionData_25() { return static_cast<int32_t>(offsetof(SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1, ___lastActionData_25)); }
	inline InputAnalogActionData_t_t14E9AA21212F14E11EE05E0C5D5D37705B14CB0C  get_lastActionData_25() const { return ___lastActionData_25; }
	inline InputAnalogActionData_t_t14E9AA21212F14E11EE05E0C5D5D37705B14CB0C * get_address_of_lastActionData_25() { return &___lastActionData_25; }
	inline void set_lastActionData_25(InputAnalogActionData_t_t14E9AA21212F14E11EE05E0C5D5D37705B14CB0C  value)
	{
		___lastActionData_25 = value;
	}

	inline static int32_t get_offset_of_vector2Action_26() { return static_cast<int32_t>(offsetof(SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1, ___vector2Action_26)); }
	inline SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 * get_vector2Action_26() const { return ___vector2Action_26; }
	inline SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 ** get_address_of_vector2Action_26() { return &___vector2Action_26; }
	inline void set_vector2Action_26(SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 * value)
	{
		___vector2Action_26 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___vector2Action_26), (void*)value);
	}
};

struct SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1_StaticFields
{
public:
	// System.UInt32 Valve.VR.SteamVR_Action_Vector2_Source::actionData_size
	uint32_t ___actionData_size_10;

public:
	inline static int32_t get_offset_of_actionData_size_10() { return static_cast<int32_t>(offsetof(SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1_StaticFields, ___actionData_size_10)); }
	inline uint32_t get_actionData_size_10() const { return ___actionData_size_10; }
	inline uint32_t* get_address_of_actionData_size_10() { return &___actionData_size_10; }
	inline void set_actionData_size_10(uint32_t value)
	{
		___actionData_size_10 = value;
	}
};


// Valve.VR.SteamVR_Action_Vibration_Source
struct  SteamVR_Action_Vibration_Source_tB30315A543AA13F11BB80C1D5C7DEDF37058C151  : public SteamVR_Action_Out_Source_t6BAB7CAA13DB2A871A892C09BFF55378A6D327D6
{
public:
	// Valve.VR.SteamVR_Action_Vibration_ActiveChangeHandler Valve.VR.SteamVR_Action_Vibration_Source::onActiveChange
	ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * ___onActiveChange_3;
	// Valve.VR.SteamVR_Action_Vibration_ActiveChangeHandler Valve.VR.SteamVR_Action_Vibration_Source::onActiveBindingChange
	ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * ___onActiveBindingChange_4;
	// Valve.VR.SteamVR_Action_Vibration_ExecuteHandler Valve.VR.SteamVR_Action_Vibration_Source::onExecute
	ExecuteHandler_t8B67500B15AC184E56E293FC390AB5683D50D865 * ___onExecute_5;
	// System.Boolean Valve.VR.SteamVR_Action_Vibration_Source::<lastActive>k__BackingField
	bool ___U3ClastActiveU3Ek__BackingField_6;
	// System.Single Valve.VR.SteamVR_Action_Vibration_Source::<timeLastExecuted>k__BackingField
	float ___U3CtimeLastExecutedU3Ek__BackingField_7;
	// Valve.VR.SteamVR_Action_Vibration Valve.VR.SteamVR_Action_Vibration_Source::vibrationAction
	SteamVR_Action_Vibration_t487523BCA03933B9812950511E8A4BCE00F03EAB * ___vibrationAction_8;

public:
	inline static int32_t get_offset_of_onActiveChange_3() { return static_cast<int32_t>(offsetof(SteamVR_Action_Vibration_Source_tB30315A543AA13F11BB80C1D5C7DEDF37058C151, ___onActiveChange_3)); }
	inline ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * get_onActiveChange_3() const { return ___onActiveChange_3; }
	inline ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA ** get_address_of_onActiveChange_3() { return &___onActiveChange_3; }
	inline void set_onActiveChange_3(ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * value)
	{
		___onActiveChange_3 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onActiveChange_3), (void*)value);
	}

	inline static int32_t get_offset_of_onActiveBindingChange_4() { return static_cast<int32_t>(offsetof(SteamVR_Action_Vibration_Source_tB30315A543AA13F11BB80C1D5C7DEDF37058C151, ___onActiveBindingChange_4)); }
	inline ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * get_onActiveBindingChange_4() const { return ___onActiveBindingChange_4; }
	inline ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA ** get_address_of_onActiveBindingChange_4() { return &___onActiveBindingChange_4; }
	inline void set_onActiveBindingChange_4(ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * value)
	{
		___onActiveBindingChange_4 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onActiveBindingChange_4), (void*)value);
	}

	inline static int32_t get_offset_of_onExecute_5() { return static_cast<int32_t>(offsetof(SteamVR_Action_Vibration_Source_tB30315A543AA13F11BB80C1D5C7DEDF37058C151, ___onExecute_5)); }
	inline ExecuteHandler_t8B67500B15AC184E56E293FC390AB5683D50D865 * get_onExecute_5() const { return ___onExecute_5; }
	inline ExecuteHandler_t8B67500B15AC184E56E293FC390AB5683D50D865 ** get_address_of_onExecute_5() { return &___onExecute_5; }
	inline void set_onExecute_5(ExecuteHandler_t8B67500B15AC184E56E293FC390AB5683D50D865 * value)
	{
		___onExecute_5 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onExecute_5), (void*)value);
	}

	inline static int32_t get_offset_of_U3ClastActiveU3Ek__BackingField_6() { return static_cast<int32_t>(offsetof(SteamVR_Action_Vibration_Source_tB30315A543AA13F11BB80C1D5C7DEDF37058C151, ___U3ClastActiveU3Ek__BackingField_6)); }
	inline bool get_U3ClastActiveU3Ek__BackingField_6() const { return ___U3ClastActiveU3Ek__BackingField_6; }
	inline bool* get_address_of_U3ClastActiveU3Ek__BackingField_6() { return &___U3ClastActiveU3Ek__BackingField_6; }
	inline void set_U3ClastActiveU3Ek__BackingField_6(bool value)
	{
		___U3ClastActiveU3Ek__BackingField_6 = value;
	}

	inline static int32_t get_offset_of_U3CtimeLastExecutedU3Ek__BackingField_7() { return static_cast<int32_t>(offsetof(SteamVR_Action_Vibration_Source_tB30315A543AA13F11BB80C1D5C7DEDF37058C151, ___U3CtimeLastExecutedU3Ek__BackingField_7)); }
	inline float get_U3CtimeLastExecutedU3Ek__BackingField_7() const { return ___U3CtimeLastExecutedU3Ek__BackingField_7; }
	inline float* get_address_of_U3CtimeLastExecutedU3Ek__BackingField_7() { return &___U3CtimeLastExecutedU3Ek__BackingField_7; }
	inline void set_U3CtimeLastExecutedU3Ek__BackingField_7(float value)
	{
		___U3CtimeLastExecutedU3Ek__BackingField_7 = value;
	}

	inline static int32_t get_offset_of_vibrationAction_8() { return static_cast<int32_t>(offsetof(SteamVR_Action_Vibration_Source_tB30315A543AA13F11BB80C1D5C7DEDF37058C151, ___vibrationAction_8)); }
	inline SteamVR_Action_Vibration_t487523BCA03933B9812950511E8A4BCE00F03EAB * get_vibrationAction_8() const { return ___vibrationAction_8; }
	inline SteamVR_Action_Vibration_t487523BCA03933B9812950511E8A4BCE00F03EAB ** get_address_of_vibrationAction_8() { return &___vibrationAction_8; }
	inline void set_vibrationAction_8(SteamVR_Action_Vibration_t487523BCA03933B9812950511E8A4BCE00F03EAB * value)
	{
		___vibrationAction_8 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___vibrationAction_8), (void*)value);
	}
};


// Valve.VR.SteamVR_Action_Vibration_Source_Map
struct  SteamVR_Action_Vibration_Source_Map_t81B9741E979634A2E0A6D7AE2518F89F3481047A  : public SteamVR_Action_Source_Map_1_t4C60A6B852FEF89276918CCD2B6136E8FD572AA7
{
public:

public:
};


// Valve.VR.VREvent_t
struct  VREvent_t_t4F330058D4B87093309E1043D17F8A3DB1BA925C 
{
public:
	// System.UInt32 Valve.VR.VREvent_t::eventType
	uint32_t ___eventType_0;
	// System.UInt32 Valve.VR.VREvent_t::trackedDeviceIndex
	uint32_t ___trackedDeviceIndex_1;
	// System.Single Valve.VR.VREvent_t::eventAgeSeconds
	float ___eventAgeSeconds_2;
	// Valve.VR.VREvent_Data_t Valve.VR.VREvent_t::data
	VREvent_Data_t_t38985E196F3FFB84A2EC25F5F5300A1A465435F0  ___data_3;

public:
	inline static int32_t get_offset_of_eventType_0() { return static_cast<int32_t>(offsetof(VREvent_t_t4F330058D4B87093309E1043D17F8A3DB1BA925C, ___eventType_0)); }
	inline uint32_t get_eventType_0() const { return ___eventType_0; }
	inline uint32_t* get_address_of_eventType_0() { return &___eventType_0; }
	inline void set_eventType_0(uint32_t value)
	{
		___eventType_0 = value;
	}

	inline static int32_t get_offset_of_trackedDeviceIndex_1() { return static_cast<int32_t>(offsetof(VREvent_t_t4F330058D4B87093309E1043D17F8A3DB1BA925C, ___trackedDeviceIndex_1)); }
	inline uint32_t get_trackedDeviceIndex_1() const { return ___trackedDeviceIndex_1; }
	inline uint32_t* get_address_of_trackedDeviceIndex_1() { return &___trackedDeviceIndex_1; }
	inline void set_trackedDeviceIndex_1(uint32_t value)
	{
		___trackedDeviceIndex_1 = value;
	}

	inline static int32_t get_offset_of_eventAgeSeconds_2() { return static_cast<int32_t>(offsetof(VREvent_t_t4F330058D4B87093309E1043D17F8A3DB1BA925C, ___eventAgeSeconds_2)); }
	inline float get_eventAgeSeconds_2() const { return ___eventAgeSeconds_2; }
	inline float* get_address_of_eventAgeSeconds_2() { return &___eventAgeSeconds_2; }
	inline void set_eventAgeSeconds_2(float value)
	{
		___eventAgeSeconds_2 = value;
	}

	inline static int32_t get_offset_of_data_3() { return static_cast<int32_t>(offsetof(VREvent_t_t4F330058D4B87093309E1043D17F8A3DB1BA925C, ___data_3)); }
	inline VREvent_Data_t_t38985E196F3FFB84A2EC25F5F5300A1A465435F0  get_data_3() const { return ___data_3; }
	inline VREvent_Data_t_t38985E196F3FFB84A2EC25F5F5300A1A465435F0 * get_address_of_data_3() { return &___data_3; }
	inline void set_data_3(VREvent_Data_t_t38985E196F3FFB84A2EC25F5F5300A1A465435F0  value)
	{
		___data_3 = value;
	}
};


// UnityEngine.Events.UnityAction`1<Valve.VR.VREvent_t>
struct  UnityAction_1_tB43C1CF1D8DCDDE3590ED959587DB9809C1294BF  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.SteamVR_Action_Vector3_Source_Map
struct  SteamVR_Action_Vector3_Source_Map_t2469AF68483668A9E13B8CEC018862BF8D187C95  : public SteamVR_Action_In_Source_Map_1_t462A1CF8307E7E62DA57F8FA49B7405C51117253
{
public:

public:
};


// Valve.VR.SteamVR_ActivateActionSetOnLoad
struct  SteamVR_ActivateActionSetOnLoad_tFA2CB881F46FAEC2C6CAF162957F7FD1D0B12DB7  : public MonoBehaviour_t4A60845CF505405AF8BE8C61CC07F75CADEF6429
{
public:
	// Valve.VR.SteamVR_ActionSet Valve.VR.SteamVR_ActivateActionSetOnLoad::actionSet
	SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * ___actionSet_4;
	// Valve.VR.SteamVR_Input_Sources Valve.VR.SteamVR_ActivateActionSetOnLoad::forSources
	int32_t ___forSources_5;
	// System.Boolean Valve.VR.SteamVR_ActivateActionSetOnLoad::disableAllOtherActionSets
	bool ___disableAllOtherActionSets_6;
	// System.Boolean Valve.VR.SteamVR_ActivateActionSetOnLoad::activateOnStart
	bool ___activateOnStart_7;
	// System.Boolean Valve.VR.SteamVR_ActivateActionSetOnLoad::deactivateOnDestroy
	bool ___deactivateOnDestroy_8;

public:
	inline static int32_t get_offset_of_actionSet_4() { return static_cast<int32_t>(offsetof(SteamVR_ActivateActionSetOnLoad_tFA2CB881F46FAEC2C6CAF162957F7FD1D0B12DB7, ___actionSet_4)); }
	inline SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * get_actionSet_4() const { return ___actionSet_4; }
	inline SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 ** get_address_of_actionSet_4() { return &___actionSet_4; }
	inline void set_actionSet_4(SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * value)
	{
		___actionSet_4 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___actionSet_4), (void*)value);
	}

	inline static int32_t get_offset_of_forSources_5() { return static_cast<int32_t>(offsetof(SteamVR_ActivateActionSetOnLoad_tFA2CB881F46FAEC2C6CAF162957F7FD1D0B12DB7, ___forSources_5)); }
	inline int32_t get_forSources_5() const { return ___forSources_5; }
	inline int32_t* get_address_of_forSources_5() { return &___forSources_5; }
	inline void set_forSources_5(int32_t value)
	{
		___forSources_5 = value;
	}

	inline static int32_t get_offset_of_disableAllOtherActionSets_6() { return static_cast<int32_t>(offsetof(SteamVR_ActivateActionSetOnLoad_tFA2CB881F46FAEC2C6CAF162957F7FD1D0B12DB7, ___disableAllOtherActionSets_6)); }
	inline bool get_disableAllOtherActionSets_6() const { return ___disableAllOtherActionSets_6; }
	inline bool* get_address_of_disableAllOtherActionSets_6() { return &___disableAllOtherActionSets_6; }
	inline void set_disableAllOtherActionSets_6(bool value)
	{
		___disableAllOtherActionSets_6 = value;
	}

	inline static int32_t get_offset_of_activateOnStart_7() { return static_cast<int32_t>(offsetof(SteamVR_ActivateActionSetOnLoad_tFA2CB881F46FAEC2C6CAF162957F7FD1D0B12DB7, ___activateOnStart_7)); }
	inline bool get_activateOnStart_7() const { return ___activateOnStart_7; }
	inline bool* get_address_of_activateOnStart_7() { return &___activateOnStart_7; }
	inline void set_activateOnStart_7(bool value)
	{
		___activateOnStart_7 = value;
	}

	inline static int32_t get_offset_of_deactivateOnDestroy_8() { return static_cast<int32_t>(offsetof(SteamVR_ActivateActionSetOnLoad_tFA2CB881F46FAEC2C6CAF162957F7FD1D0B12DB7, ___deactivateOnDestroy_8)); }
	inline bool get_deactivateOnDestroy_8() const { return ___deactivateOnDestroy_8; }
	inline bool* get_address_of_deactivateOnDestroy_8() { return &___deactivateOnDestroy_8; }
	inline void set_deactivateOnDestroy_8(bool value)
	{
		___deactivateOnDestroy_8 = value;
	}
};


// Valve.VR.SteamVR_Behaviour
struct  SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586  : public MonoBehaviour_t4A60845CF505405AF8BE8C61CC07F75CADEF6429
{
public:
	// System.Boolean Valve.VR.SteamVR_Behaviour::initializeSteamVROnAwake
	bool ___initializeSteamVROnAwake_7;
	// System.Boolean Valve.VR.SteamVR_Behaviour::doNotDestroy
	bool ___doNotDestroy_8;
	// Valve.VR.SteamVR_Render Valve.VR.SteamVR_Behaviour::steamvr_render
	SteamVR_Render_tE8610D8397284113646BAAD2B6991C16D4C26665 * ___steamvr_render_9;
	// UnityEngine.Coroutine Valve.VR.SteamVR_Behaviour::initializeCoroutine
	Coroutine_tAE7DB2FC70A0AE6477F896F852057CB0754F06EC * ___initializeCoroutine_12;
	// System.Boolean Valve.VR.SteamVR_Behaviour::loadedOpenVRDeviceSuccess
	bool ___loadedOpenVRDeviceSuccess_13;

public:
	inline static int32_t get_offset_of_initializeSteamVROnAwake_7() { return static_cast<int32_t>(offsetof(SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586, ___initializeSteamVROnAwake_7)); }
	inline bool get_initializeSteamVROnAwake_7() const { return ___initializeSteamVROnAwake_7; }
	inline bool* get_address_of_initializeSteamVROnAwake_7() { return &___initializeSteamVROnAwake_7; }
	inline void set_initializeSteamVROnAwake_7(bool value)
	{
		___initializeSteamVROnAwake_7 = value;
	}

	inline static int32_t get_offset_of_doNotDestroy_8() { return static_cast<int32_t>(offsetof(SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586, ___doNotDestroy_8)); }
	inline bool get_doNotDestroy_8() const { return ___doNotDestroy_8; }
	inline bool* get_address_of_doNotDestroy_8() { return &___doNotDestroy_8; }
	inline void set_doNotDestroy_8(bool value)
	{
		___doNotDestroy_8 = value;
	}

	inline static int32_t get_offset_of_steamvr_render_9() { return static_cast<int32_t>(offsetof(SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586, ___steamvr_render_9)); }
	inline SteamVR_Render_tE8610D8397284113646BAAD2B6991C16D4C26665 * get_steamvr_render_9() const { return ___steamvr_render_9; }
	inline SteamVR_Render_tE8610D8397284113646BAAD2B6991C16D4C26665 ** get_address_of_steamvr_render_9() { return &___steamvr_render_9; }
	inline void set_steamvr_render_9(SteamVR_Render_tE8610D8397284113646BAAD2B6991C16D4C26665 * value)
	{
		___steamvr_render_9 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___steamvr_render_9), (void*)value);
	}

	inline static int32_t get_offset_of_initializeCoroutine_12() { return static_cast<int32_t>(offsetof(SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586, ___initializeCoroutine_12)); }
	inline Coroutine_tAE7DB2FC70A0AE6477F896F852057CB0754F06EC * get_initializeCoroutine_12() const { return ___initializeCoroutine_12; }
	inline Coroutine_tAE7DB2FC70A0AE6477F896F852057CB0754F06EC ** get_address_of_initializeCoroutine_12() { return &___initializeCoroutine_12; }
	inline void set_initializeCoroutine_12(Coroutine_tAE7DB2FC70A0AE6477F896F852057CB0754F06EC * value)
	{
		___initializeCoroutine_12 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___initializeCoroutine_12), (void*)value);
	}

	inline static int32_t get_offset_of_loadedOpenVRDeviceSuccess_13() { return static_cast<int32_t>(offsetof(SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586, ___loadedOpenVRDeviceSuccess_13)); }
	inline bool get_loadedOpenVRDeviceSuccess_13() const { return ___loadedOpenVRDeviceSuccess_13; }
	inline bool* get_address_of_loadedOpenVRDeviceSuccess_13() { return &___loadedOpenVRDeviceSuccess_13; }
	inline void set_loadedOpenVRDeviceSuccess_13(bool value)
	{
		___loadedOpenVRDeviceSuccess_13 = value;
	}
};

struct SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_StaticFields
{
public:
	// System.Boolean Valve.VR.SteamVR_Behaviour::forcingInitialization
	bool ___forcingInitialization_5;
	// Valve.VR.SteamVR_Behaviour Valve.VR.SteamVR_Behaviour::_instance
	SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586 * ____instance_6;
	// System.Boolean Valve.VR.SteamVR_Behaviour::isPlaying
	bool ___isPlaying_10;
	// System.Boolean Valve.VR.SteamVR_Behaviour::initializing
	bool ___initializing_11;
	// System.Int32 Valve.VR.SteamVR_Behaviour::lastFrameCount
	int32_t ___lastFrameCount_14;

public:
	inline static int32_t get_offset_of_forcingInitialization_5() { return static_cast<int32_t>(offsetof(SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_StaticFields, ___forcingInitialization_5)); }
	inline bool get_forcingInitialization_5() const { return ___forcingInitialization_5; }
	inline bool* get_address_of_forcingInitialization_5() { return &___forcingInitialization_5; }
	inline void set_forcingInitialization_5(bool value)
	{
		___forcingInitialization_5 = value;
	}

	inline static int32_t get_offset_of__instance_6() { return static_cast<int32_t>(offsetof(SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_StaticFields, ____instance_6)); }
	inline SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586 * get__instance_6() const { return ____instance_6; }
	inline SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586 ** get_address_of__instance_6() { return &____instance_6; }
	inline void set__instance_6(SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586 * value)
	{
		____instance_6 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____instance_6), (void*)value);
	}

	inline static int32_t get_offset_of_isPlaying_10() { return static_cast<int32_t>(offsetof(SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_StaticFields, ___isPlaying_10)); }
	inline bool get_isPlaying_10() const { return ___isPlaying_10; }
	inline bool* get_address_of_isPlaying_10() { return &___isPlaying_10; }
	inline void set_isPlaying_10(bool value)
	{
		___isPlaying_10 = value;
	}

	inline static int32_t get_offset_of_initializing_11() { return static_cast<int32_t>(offsetof(SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_StaticFields, ___initializing_11)); }
	inline bool get_initializing_11() const { return ___initializing_11; }
	inline bool* get_address_of_initializing_11() { return &___initializing_11; }
	inline void set_initializing_11(bool value)
	{
		___initializing_11 = value;
	}

	inline static int32_t get_offset_of_lastFrameCount_14() { return static_cast<int32_t>(offsetof(SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_StaticFields, ___lastFrameCount_14)); }
	inline int32_t get_lastFrameCount_14() const { return ___lastFrameCount_14; }
	inline int32_t* get_address_of_lastFrameCount_14() { return &___lastFrameCount_14; }
	inline void set_lastFrameCount_14(int32_t value)
	{
		___lastFrameCount_14 = value;
	}
};


// Valve.VR.SteamVR_Behaviour_Boolean
struct  SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00  : public MonoBehaviour_t4A60845CF505405AF8BE8C61CC07F75CADEF6429
{
public:
	// Valve.VR.SteamVR_Action_Boolean Valve.VR.SteamVR_Behaviour_Boolean::booleanAction
	SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 * ___booleanAction_4;
	// Valve.VR.SteamVR_Input_Sources Valve.VR.SteamVR_Behaviour_Boolean::inputSource
	int32_t ___inputSource_5;
	// Valve.VR.SteamVR_Behaviour_BooleanEvent Valve.VR.SteamVR_Behaviour_Boolean::onChange
	SteamVR_Behaviour_BooleanEvent_t96626CBD0A0BD84C51D1F9E03DE5BEBFF58A48E4 * ___onChange_6;
	// Valve.VR.SteamVR_Behaviour_Boolean_ChangeHandler Valve.VR.SteamVR_Behaviour_Boolean::onChangeEvent
	ChangeHandler_tADA56232D143B2D18BA3D6F2A9B5CE2AC637CBB6 * ___onChangeEvent_7;
	// Valve.VR.SteamVR_Behaviour_BooleanEvent Valve.VR.SteamVR_Behaviour_Boolean::onUpdate
	SteamVR_Behaviour_BooleanEvent_t96626CBD0A0BD84C51D1F9E03DE5BEBFF58A48E4 * ___onUpdate_8;
	// Valve.VR.SteamVR_Behaviour_Boolean_UpdateHandler Valve.VR.SteamVR_Behaviour_Boolean::onUpdateEvent
	UpdateHandler_t9FC31A405C9C47120C5307368335AD9F708511D1 * ___onUpdateEvent_9;
	// Valve.VR.SteamVR_Behaviour_BooleanEvent Valve.VR.SteamVR_Behaviour_Boolean::onPress
	SteamVR_Behaviour_BooleanEvent_t96626CBD0A0BD84C51D1F9E03DE5BEBFF58A48E4 * ___onPress_10;
	// Valve.VR.SteamVR_Behaviour_Boolean_StateHandler Valve.VR.SteamVR_Behaviour_Boolean::onPressEvent
	StateHandler_tC57B51755B81869515107A3BE4BC3865F974190D * ___onPressEvent_11;
	// Valve.VR.SteamVR_Behaviour_BooleanEvent Valve.VR.SteamVR_Behaviour_Boolean::onPressDown
	SteamVR_Behaviour_BooleanEvent_t96626CBD0A0BD84C51D1F9E03DE5BEBFF58A48E4 * ___onPressDown_12;
	// Valve.VR.SteamVR_Behaviour_Boolean_StateDownHandler Valve.VR.SteamVR_Behaviour_Boolean::onPressDownEvent
	StateDownHandler_tFF77368F427C4FE6164A97B238F944123AA8FE24 * ___onPressDownEvent_13;
	// Valve.VR.SteamVR_Behaviour_BooleanEvent Valve.VR.SteamVR_Behaviour_Boolean::onPressUp
	SteamVR_Behaviour_BooleanEvent_t96626CBD0A0BD84C51D1F9E03DE5BEBFF58A48E4 * ___onPressUp_14;
	// Valve.VR.SteamVR_Behaviour_Boolean_StateUpHandler Valve.VR.SteamVR_Behaviour_Boolean::onPressUpEvent
	StateUpHandler_tC09A0C33E80BBF97F8E88D36519482DFE36DBCC5 * ___onPressUpEvent_15;

public:
	inline static int32_t get_offset_of_booleanAction_4() { return static_cast<int32_t>(offsetof(SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00, ___booleanAction_4)); }
	inline SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 * get_booleanAction_4() const { return ___booleanAction_4; }
	inline SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 ** get_address_of_booleanAction_4() { return &___booleanAction_4; }
	inline void set_booleanAction_4(SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 * value)
	{
		___booleanAction_4 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___booleanAction_4), (void*)value);
	}

	inline static int32_t get_offset_of_inputSource_5() { return static_cast<int32_t>(offsetof(SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00, ___inputSource_5)); }
	inline int32_t get_inputSource_5() const { return ___inputSource_5; }
	inline int32_t* get_address_of_inputSource_5() { return &___inputSource_5; }
	inline void set_inputSource_5(int32_t value)
	{
		___inputSource_5 = value;
	}

	inline static int32_t get_offset_of_onChange_6() { return static_cast<int32_t>(offsetof(SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00, ___onChange_6)); }
	inline SteamVR_Behaviour_BooleanEvent_t96626CBD0A0BD84C51D1F9E03DE5BEBFF58A48E4 * get_onChange_6() const { return ___onChange_6; }
	inline SteamVR_Behaviour_BooleanEvent_t96626CBD0A0BD84C51D1F9E03DE5BEBFF58A48E4 ** get_address_of_onChange_6() { return &___onChange_6; }
	inline void set_onChange_6(SteamVR_Behaviour_BooleanEvent_t96626CBD0A0BD84C51D1F9E03DE5BEBFF58A48E4 * value)
	{
		___onChange_6 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onChange_6), (void*)value);
	}

	inline static int32_t get_offset_of_onChangeEvent_7() { return static_cast<int32_t>(offsetof(SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00, ___onChangeEvent_7)); }
	inline ChangeHandler_tADA56232D143B2D18BA3D6F2A9B5CE2AC637CBB6 * get_onChangeEvent_7() const { return ___onChangeEvent_7; }
	inline ChangeHandler_tADA56232D143B2D18BA3D6F2A9B5CE2AC637CBB6 ** get_address_of_onChangeEvent_7() { return &___onChangeEvent_7; }
	inline void set_onChangeEvent_7(ChangeHandler_tADA56232D143B2D18BA3D6F2A9B5CE2AC637CBB6 * value)
	{
		___onChangeEvent_7 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onChangeEvent_7), (void*)value);
	}

	inline static int32_t get_offset_of_onUpdate_8() { return static_cast<int32_t>(offsetof(SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00, ___onUpdate_8)); }
	inline SteamVR_Behaviour_BooleanEvent_t96626CBD0A0BD84C51D1F9E03DE5BEBFF58A48E4 * get_onUpdate_8() const { return ___onUpdate_8; }
	inline SteamVR_Behaviour_BooleanEvent_t96626CBD0A0BD84C51D1F9E03DE5BEBFF58A48E4 ** get_address_of_onUpdate_8() { return &___onUpdate_8; }
	inline void set_onUpdate_8(SteamVR_Behaviour_BooleanEvent_t96626CBD0A0BD84C51D1F9E03DE5BEBFF58A48E4 * value)
	{
		___onUpdate_8 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onUpdate_8), (void*)value);
	}

	inline static int32_t get_offset_of_onUpdateEvent_9() { return static_cast<int32_t>(offsetof(SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00, ___onUpdateEvent_9)); }
	inline UpdateHandler_t9FC31A405C9C47120C5307368335AD9F708511D1 * get_onUpdateEvent_9() const { return ___onUpdateEvent_9; }
	inline UpdateHandler_t9FC31A405C9C47120C5307368335AD9F708511D1 ** get_address_of_onUpdateEvent_9() { return &___onUpdateEvent_9; }
	inline void set_onUpdateEvent_9(UpdateHandler_t9FC31A405C9C47120C5307368335AD9F708511D1 * value)
	{
		___onUpdateEvent_9 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onUpdateEvent_9), (void*)value);
	}

	inline static int32_t get_offset_of_onPress_10() { return static_cast<int32_t>(offsetof(SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00, ___onPress_10)); }
	inline SteamVR_Behaviour_BooleanEvent_t96626CBD0A0BD84C51D1F9E03DE5BEBFF58A48E4 * get_onPress_10() const { return ___onPress_10; }
	inline SteamVR_Behaviour_BooleanEvent_t96626CBD0A0BD84C51D1F9E03DE5BEBFF58A48E4 ** get_address_of_onPress_10() { return &___onPress_10; }
	inline void set_onPress_10(SteamVR_Behaviour_BooleanEvent_t96626CBD0A0BD84C51D1F9E03DE5BEBFF58A48E4 * value)
	{
		___onPress_10 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onPress_10), (void*)value);
	}

	inline static int32_t get_offset_of_onPressEvent_11() { return static_cast<int32_t>(offsetof(SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00, ___onPressEvent_11)); }
	inline StateHandler_tC57B51755B81869515107A3BE4BC3865F974190D * get_onPressEvent_11() const { return ___onPressEvent_11; }
	inline StateHandler_tC57B51755B81869515107A3BE4BC3865F974190D ** get_address_of_onPressEvent_11() { return &___onPressEvent_11; }
	inline void set_onPressEvent_11(StateHandler_tC57B51755B81869515107A3BE4BC3865F974190D * value)
	{
		___onPressEvent_11 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onPressEvent_11), (void*)value);
	}

	inline static int32_t get_offset_of_onPressDown_12() { return static_cast<int32_t>(offsetof(SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00, ___onPressDown_12)); }
	inline SteamVR_Behaviour_BooleanEvent_t96626CBD0A0BD84C51D1F9E03DE5BEBFF58A48E4 * get_onPressDown_12() const { return ___onPressDown_12; }
	inline SteamVR_Behaviour_BooleanEvent_t96626CBD0A0BD84C51D1F9E03DE5BEBFF58A48E4 ** get_address_of_onPressDown_12() { return &___onPressDown_12; }
	inline void set_onPressDown_12(SteamVR_Behaviour_BooleanEvent_t96626CBD0A0BD84C51D1F9E03DE5BEBFF58A48E4 * value)
	{
		___onPressDown_12 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onPressDown_12), (void*)value);
	}

	inline static int32_t get_offset_of_onPressDownEvent_13() { return static_cast<int32_t>(offsetof(SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00, ___onPressDownEvent_13)); }
	inline StateDownHandler_tFF77368F427C4FE6164A97B238F944123AA8FE24 * get_onPressDownEvent_13() const { return ___onPressDownEvent_13; }
	inline StateDownHandler_tFF77368F427C4FE6164A97B238F944123AA8FE24 ** get_address_of_onPressDownEvent_13() { return &___onPressDownEvent_13; }
	inline void set_onPressDownEvent_13(StateDownHandler_tFF77368F427C4FE6164A97B238F944123AA8FE24 * value)
	{
		___onPressDownEvent_13 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onPressDownEvent_13), (void*)value);
	}

	inline static int32_t get_offset_of_onPressUp_14() { return static_cast<int32_t>(offsetof(SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00, ___onPressUp_14)); }
	inline SteamVR_Behaviour_BooleanEvent_t96626CBD0A0BD84C51D1F9E03DE5BEBFF58A48E4 * get_onPressUp_14() const { return ___onPressUp_14; }
	inline SteamVR_Behaviour_BooleanEvent_t96626CBD0A0BD84C51D1F9E03DE5BEBFF58A48E4 ** get_address_of_onPressUp_14() { return &___onPressUp_14; }
	inline void set_onPressUp_14(SteamVR_Behaviour_BooleanEvent_t96626CBD0A0BD84C51D1F9E03DE5BEBFF58A48E4 * value)
	{
		___onPressUp_14 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onPressUp_14), (void*)value);
	}

	inline static int32_t get_offset_of_onPressUpEvent_15() { return static_cast<int32_t>(offsetof(SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00, ___onPressUpEvent_15)); }
	inline StateUpHandler_tC09A0C33E80BBF97F8E88D36519482DFE36DBCC5 * get_onPressUpEvent_15() const { return ___onPressUpEvent_15; }
	inline StateUpHandler_tC09A0C33E80BBF97F8E88D36519482DFE36DBCC5 ** get_address_of_onPressUpEvent_15() { return &___onPressUpEvent_15; }
	inline void set_onPressUpEvent_15(StateUpHandler_tC09A0C33E80BBF97F8E88D36519482DFE36DBCC5 * value)
	{
		___onPressUpEvent_15 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onPressUpEvent_15), (void*)value);
	}
};


// Valve.VR.SteamVR_Behaviour_Pose
struct  SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787  : public MonoBehaviour_t4A60845CF505405AF8BE8C61CC07F75CADEF6429
{
public:
	// Valve.VR.SteamVR_Action_Pose Valve.VR.SteamVR_Behaviour_Pose::poseAction
	SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * ___poseAction_4;
	// Valve.VR.SteamVR_Input_Sources Valve.VR.SteamVR_Behaviour_Pose::inputSource
	int32_t ___inputSource_5;
	// UnityEngine.Transform Valve.VR.SteamVR_Behaviour_Pose::origin
	Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * ___origin_6;
	// Valve.VR.SteamVR_Behaviour_PoseEvent Valve.VR.SteamVR_Behaviour_Pose::onTransformUpdated
	SteamVR_Behaviour_PoseEvent_t110293A57CED63A5C2FFEF4849FC452DE99B2F87 * ___onTransformUpdated_7;
	// Valve.VR.SteamVR_Behaviour_PoseEvent Valve.VR.SteamVR_Behaviour_Pose::onTransformChanged
	SteamVR_Behaviour_PoseEvent_t110293A57CED63A5C2FFEF4849FC452DE99B2F87 * ___onTransformChanged_8;
	// Valve.VR.SteamVR_Behaviour_Pose_ConnectedChangedEvent Valve.VR.SteamVR_Behaviour_Pose::onConnectedChanged
	SteamVR_Behaviour_Pose_ConnectedChangedEvent_t79FB8A09A29315BCF3A67CC1FA2D124C01D3EAE9 * ___onConnectedChanged_9;
	// Valve.VR.SteamVR_Behaviour_Pose_TrackingChangedEvent Valve.VR.SteamVR_Behaviour_Pose::onTrackingChanged
	SteamVR_Behaviour_Pose_TrackingChangedEvent_tC76D95F0E8D943109311BCE1B35E1D8CDC3C2E6E * ___onTrackingChanged_10;
	// Valve.VR.SteamVR_Behaviour_Pose_DeviceIndexChangedEvent Valve.VR.SteamVR_Behaviour_Pose::onDeviceIndexChanged
	SteamVR_Behaviour_Pose_DeviceIndexChangedEvent_tB4204CD58F5763D655B3B020CAEA0CD8A45D13E9 * ___onDeviceIndexChanged_11;
	// Valve.VR.SteamVR_Behaviour_Pose_UpdateHandler Valve.VR.SteamVR_Behaviour_Pose::onTransformUpdatedEvent
	UpdateHandler_t7F4B3FFE3096B37EB5424E580DA100C61857DC4D * ___onTransformUpdatedEvent_12;
	// Valve.VR.SteamVR_Behaviour_Pose_ChangeHandler Valve.VR.SteamVR_Behaviour_Pose::onTransformChangedEvent
	ChangeHandler_t62B565E3F59005232530941762BA9C99466E7190 * ___onTransformChangedEvent_13;
	// Valve.VR.SteamVR_Behaviour_Pose_DeviceConnectedChangeHandler Valve.VR.SteamVR_Behaviour_Pose::onConnectedChangedEvent
	DeviceConnectedChangeHandler_tAC0D58B9BE0BEF1758FC23FC5A09211DAFC695AB * ___onConnectedChangedEvent_14;
	// Valve.VR.SteamVR_Behaviour_Pose_TrackingChangeHandler Valve.VR.SteamVR_Behaviour_Pose::onTrackingChangedEvent
	TrackingChangeHandler_tE2D5245E21857392ED2CCBEAD0D65408B5DC5443 * ___onTrackingChangedEvent_15;
	// Valve.VR.SteamVR_Behaviour_Pose_DeviceIndexChangedHandler Valve.VR.SteamVR_Behaviour_Pose::onDeviceIndexChangedEvent
	DeviceIndexChangedHandler_t5AD6CF16FBFD1AFBCAABCE86FF9A5F9958E5E988 * ___onDeviceIndexChangedEvent_16;
	// System.Boolean Valve.VR.SteamVR_Behaviour_Pose::broadcastDeviceChanges
	bool ___broadcastDeviceChanges_17;
	// System.Int32 Valve.VR.SteamVR_Behaviour_Pose::deviceIndex
	int32_t ___deviceIndex_18;
	// Valve.VR.SteamVR_HistoryBuffer Valve.VR.SteamVR_Behaviour_Pose::historyBuffer
	SteamVR_HistoryBuffer_tB82B2932C03165695AE1BE7BE8EDCADC6AE4A6E8 * ___historyBuffer_19;
	// System.Int32 Valve.VR.SteamVR_Behaviour_Pose::lastFrameUpdated
	int32_t ___lastFrameUpdated_20;

public:
	inline static int32_t get_offset_of_poseAction_4() { return static_cast<int32_t>(offsetof(SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787, ___poseAction_4)); }
	inline SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * get_poseAction_4() const { return ___poseAction_4; }
	inline SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C ** get_address_of_poseAction_4() { return &___poseAction_4; }
	inline void set_poseAction_4(SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * value)
	{
		___poseAction_4 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___poseAction_4), (void*)value);
	}

	inline static int32_t get_offset_of_inputSource_5() { return static_cast<int32_t>(offsetof(SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787, ___inputSource_5)); }
	inline int32_t get_inputSource_5() const { return ___inputSource_5; }
	inline int32_t* get_address_of_inputSource_5() { return &___inputSource_5; }
	inline void set_inputSource_5(int32_t value)
	{
		___inputSource_5 = value;
	}

	inline static int32_t get_offset_of_origin_6() { return static_cast<int32_t>(offsetof(SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787, ___origin_6)); }
	inline Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * get_origin_6() const { return ___origin_6; }
	inline Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA ** get_address_of_origin_6() { return &___origin_6; }
	inline void set_origin_6(Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * value)
	{
		___origin_6 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___origin_6), (void*)value);
	}

	inline static int32_t get_offset_of_onTransformUpdated_7() { return static_cast<int32_t>(offsetof(SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787, ___onTransformUpdated_7)); }
	inline SteamVR_Behaviour_PoseEvent_t110293A57CED63A5C2FFEF4849FC452DE99B2F87 * get_onTransformUpdated_7() const { return ___onTransformUpdated_7; }
	inline SteamVR_Behaviour_PoseEvent_t110293A57CED63A5C2FFEF4849FC452DE99B2F87 ** get_address_of_onTransformUpdated_7() { return &___onTransformUpdated_7; }
	inline void set_onTransformUpdated_7(SteamVR_Behaviour_PoseEvent_t110293A57CED63A5C2FFEF4849FC452DE99B2F87 * value)
	{
		___onTransformUpdated_7 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onTransformUpdated_7), (void*)value);
	}

	inline static int32_t get_offset_of_onTransformChanged_8() { return static_cast<int32_t>(offsetof(SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787, ___onTransformChanged_8)); }
	inline SteamVR_Behaviour_PoseEvent_t110293A57CED63A5C2FFEF4849FC452DE99B2F87 * get_onTransformChanged_8() const { return ___onTransformChanged_8; }
	inline SteamVR_Behaviour_PoseEvent_t110293A57CED63A5C2FFEF4849FC452DE99B2F87 ** get_address_of_onTransformChanged_8() { return &___onTransformChanged_8; }
	inline void set_onTransformChanged_8(SteamVR_Behaviour_PoseEvent_t110293A57CED63A5C2FFEF4849FC452DE99B2F87 * value)
	{
		___onTransformChanged_8 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onTransformChanged_8), (void*)value);
	}

	inline static int32_t get_offset_of_onConnectedChanged_9() { return static_cast<int32_t>(offsetof(SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787, ___onConnectedChanged_9)); }
	inline SteamVR_Behaviour_Pose_ConnectedChangedEvent_t79FB8A09A29315BCF3A67CC1FA2D124C01D3EAE9 * get_onConnectedChanged_9() const { return ___onConnectedChanged_9; }
	inline SteamVR_Behaviour_Pose_ConnectedChangedEvent_t79FB8A09A29315BCF3A67CC1FA2D124C01D3EAE9 ** get_address_of_onConnectedChanged_9() { return &___onConnectedChanged_9; }
	inline void set_onConnectedChanged_9(SteamVR_Behaviour_Pose_ConnectedChangedEvent_t79FB8A09A29315BCF3A67CC1FA2D124C01D3EAE9 * value)
	{
		___onConnectedChanged_9 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onConnectedChanged_9), (void*)value);
	}

	inline static int32_t get_offset_of_onTrackingChanged_10() { return static_cast<int32_t>(offsetof(SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787, ___onTrackingChanged_10)); }
	inline SteamVR_Behaviour_Pose_TrackingChangedEvent_tC76D95F0E8D943109311BCE1B35E1D8CDC3C2E6E * get_onTrackingChanged_10() const { return ___onTrackingChanged_10; }
	inline SteamVR_Behaviour_Pose_TrackingChangedEvent_tC76D95F0E8D943109311BCE1B35E1D8CDC3C2E6E ** get_address_of_onTrackingChanged_10() { return &___onTrackingChanged_10; }
	inline void set_onTrackingChanged_10(SteamVR_Behaviour_Pose_TrackingChangedEvent_tC76D95F0E8D943109311BCE1B35E1D8CDC3C2E6E * value)
	{
		___onTrackingChanged_10 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onTrackingChanged_10), (void*)value);
	}

	inline static int32_t get_offset_of_onDeviceIndexChanged_11() { return static_cast<int32_t>(offsetof(SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787, ___onDeviceIndexChanged_11)); }
	inline SteamVR_Behaviour_Pose_DeviceIndexChangedEvent_tB4204CD58F5763D655B3B020CAEA0CD8A45D13E9 * get_onDeviceIndexChanged_11() const { return ___onDeviceIndexChanged_11; }
	inline SteamVR_Behaviour_Pose_DeviceIndexChangedEvent_tB4204CD58F5763D655B3B020CAEA0CD8A45D13E9 ** get_address_of_onDeviceIndexChanged_11() { return &___onDeviceIndexChanged_11; }
	inline void set_onDeviceIndexChanged_11(SteamVR_Behaviour_Pose_DeviceIndexChangedEvent_tB4204CD58F5763D655B3B020CAEA0CD8A45D13E9 * value)
	{
		___onDeviceIndexChanged_11 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onDeviceIndexChanged_11), (void*)value);
	}

	inline static int32_t get_offset_of_onTransformUpdatedEvent_12() { return static_cast<int32_t>(offsetof(SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787, ___onTransformUpdatedEvent_12)); }
	inline UpdateHandler_t7F4B3FFE3096B37EB5424E580DA100C61857DC4D * get_onTransformUpdatedEvent_12() const { return ___onTransformUpdatedEvent_12; }
	inline UpdateHandler_t7F4B3FFE3096B37EB5424E580DA100C61857DC4D ** get_address_of_onTransformUpdatedEvent_12() { return &___onTransformUpdatedEvent_12; }
	inline void set_onTransformUpdatedEvent_12(UpdateHandler_t7F4B3FFE3096B37EB5424E580DA100C61857DC4D * value)
	{
		___onTransformUpdatedEvent_12 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onTransformUpdatedEvent_12), (void*)value);
	}

	inline static int32_t get_offset_of_onTransformChangedEvent_13() { return static_cast<int32_t>(offsetof(SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787, ___onTransformChangedEvent_13)); }
	inline ChangeHandler_t62B565E3F59005232530941762BA9C99466E7190 * get_onTransformChangedEvent_13() const { return ___onTransformChangedEvent_13; }
	inline ChangeHandler_t62B565E3F59005232530941762BA9C99466E7190 ** get_address_of_onTransformChangedEvent_13() { return &___onTransformChangedEvent_13; }
	inline void set_onTransformChangedEvent_13(ChangeHandler_t62B565E3F59005232530941762BA9C99466E7190 * value)
	{
		___onTransformChangedEvent_13 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onTransformChangedEvent_13), (void*)value);
	}

	inline static int32_t get_offset_of_onConnectedChangedEvent_14() { return static_cast<int32_t>(offsetof(SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787, ___onConnectedChangedEvent_14)); }
	inline DeviceConnectedChangeHandler_tAC0D58B9BE0BEF1758FC23FC5A09211DAFC695AB * get_onConnectedChangedEvent_14() const { return ___onConnectedChangedEvent_14; }
	inline DeviceConnectedChangeHandler_tAC0D58B9BE0BEF1758FC23FC5A09211DAFC695AB ** get_address_of_onConnectedChangedEvent_14() { return &___onConnectedChangedEvent_14; }
	inline void set_onConnectedChangedEvent_14(DeviceConnectedChangeHandler_tAC0D58B9BE0BEF1758FC23FC5A09211DAFC695AB * value)
	{
		___onConnectedChangedEvent_14 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onConnectedChangedEvent_14), (void*)value);
	}

	inline static int32_t get_offset_of_onTrackingChangedEvent_15() { return static_cast<int32_t>(offsetof(SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787, ___onTrackingChangedEvent_15)); }
	inline TrackingChangeHandler_tE2D5245E21857392ED2CCBEAD0D65408B5DC5443 * get_onTrackingChangedEvent_15() const { return ___onTrackingChangedEvent_15; }
	inline TrackingChangeHandler_tE2D5245E21857392ED2CCBEAD0D65408B5DC5443 ** get_address_of_onTrackingChangedEvent_15() { return &___onTrackingChangedEvent_15; }
	inline void set_onTrackingChangedEvent_15(TrackingChangeHandler_tE2D5245E21857392ED2CCBEAD0D65408B5DC5443 * value)
	{
		___onTrackingChangedEvent_15 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onTrackingChangedEvent_15), (void*)value);
	}

	inline static int32_t get_offset_of_onDeviceIndexChangedEvent_16() { return static_cast<int32_t>(offsetof(SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787, ___onDeviceIndexChangedEvent_16)); }
	inline DeviceIndexChangedHandler_t5AD6CF16FBFD1AFBCAABCE86FF9A5F9958E5E988 * get_onDeviceIndexChangedEvent_16() const { return ___onDeviceIndexChangedEvent_16; }
	inline DeviceIndexChangedHandler_t5AD6CF16FBFD1AFBCAABCE86FF9A5F9958E5E988 ** get_address_of_onDeviceIndexChangedEvent_16() { return &___onDeviceIndexChangedEvent_16; }
	inline void set_onDeviceIndexChangedEvent_16(DeviceIndexChangedHandler_t5AD6CF16FBFD1AFBCAABCE86FF9A5F9958E5E988 * value)
	{
		___onDeviceIndexChangedEvent_16 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onDeviceIndexChangedEvent_16), (void*)value);
	}

	inline static int32_t get_offset_of_broadcastDeviceChanges_17() { return static_cast<int32_t>(offsetof(SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787, ___broadcastDeviceChanges_17)); }
	inline bool get_broadcastDeviceChanges_17() const { return ___broadcastDeviceChanges_17; }
	inline bool* get_address_of_broadcastDeviceChanges_17() { return &___broadcastDeviceChanges_17; }
	inline void set_broadcastDeviceChanges_17(bool value)
	{
		___broadcastDeviceChanges_17 = value;
	}

	inline static int32_t get_offset_of_deviceIndex_18() { return static_cast<int32_t>(offsetof(SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787, ___deviceIndex_18)); }
	inline int32_t get_deviceIndex_18() const { return ___deviceIndex_18; }
	inline int32_t* get_address_of_deviceIndex_18() { return &___deviceIndex_18; }
	inline void set_deviceIndex_18(int32_t value)
	{
		___deviceIndex_18 = value;
	}

	inline static int32_t get_offset_of_historyBuffer_19() { return static_cast<int32_t>(offsetof(SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787, ___historyBuffer_19)); }
	inline SteamVR_HistoryBuffer_tB82B2932C03165695AE1BE7BE8EDCADC6AE4A6E8 * get_historyBuffer_19() const { return ___historyBuffer_19; }
	inline SteamVR_HistoryBuffer_tB82B2932C03165695AE1BE7BE8EDCADC6AE4A6E8 ** get_address_of_historyBuffer_19() { return &___historyBuffer_19; }
	inline void set_historyBuffer_19(SteamVR_HistoryBuffer_tB82B2932C03165695AE1BE7BE8EDCADC6AE4A6E8 * value)
	{
		___historyBuffer_19 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___historyBuffer_19), (void*)value);
	}

	inline static int32_t get_offset_of_lastFrameUpdated_20() { return static_cast<int32_t>(offsetof(SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787, ___lastFrameUpdated_20)); }
	inline int32_t get_lastFrameUpdated_20() const { return ___lastFrameUpdated_20; }
	inline int32_t* get_address_of_lastFrameUpdated_20() { return &___lastFrameUpdated_20; }
	inline void set_lastFrameUpdated_20(int32_t value)
	{
		___lastFrameUpdated_20 = value;
	}
};


// Valve.VR.SteamVR_Behaviour_Single
struct  SteamVR_Behaviour_Single_t0224221A2437628A3FAFF02B7B02D88952021562  : public MonoBehaviour_t4A60845CF505405AF8BE8C61CC07F75CADEF6429
{
public:
	// Valve.VR.SteamVR_Action_Single Valve.VR.SteamVR_Behaviour_Single::singleAction
	SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 * ___singleAction_4;
	// Valve.VR.SteamVR_Input_Sources Valve.VR.SteamVR_Behaviour_Single::inputSource
	int32_t ___inputSource_5;
	// Valve.VR.SteamVR_Behaviour_SingleEvent Valve.VR.SteamVR_Behaviour_Single::onChange
	SteamVR_Behaviour_SingleEvent_tB6C52A82965E98E5B7A851CB572E9B6FD88FE4F4 * ___onChange_6;
	// Valve.VR.SteamVR_Behaviour_SingleEvent Valve.VR.SteamVR_Behaviour_Single::onUpdate
	SteamVR_Behaviour_SingleEvent_tB6C52A82965E98E5B7A851CB572E9B6FD88FE4F4 * ___onUpdate_7;
	// Valve.VR.SteamVR_Behaviour_SingleEvent Valve.VR.SteamVR_Behaviour_Single::onAxis
	SteamVR_Behaviour_SingleEvent_tB6C52A82965E98E5B7A851CB572E9B6FD88FE4F4 * ___onAxis_8;
	// Valve.VR.SteamVR_Behaviour_Single_ChangeHandler Valve.VR.SteamVR_Behaviour_Single::onChangeEvent
	ChangeHandler_t5D78A5C2B8BE043F0EF515BB84766EC330B52DF7 * ___onChangeEvent_9;
	// Valve.VR.SteamVR_Behaviour_Single_UpdateHandler Valve.VR.SteamVR_Behaviour_Single::onUpdateEvent
	UpdateHandler_t35B29D0C538D0A17C13EFD36765FF0278EE256D4 * ___onUpdateEvent_10;
	// Valve.VR.SteamVR_Behaviour_Single_AxisHandler Valve.VR.SteamVR_Behaviour_Single::onAxisEvent
	AxisHandler_t6CD6525481A3708C4FFC01A49F13C96EBD464F6C * ___onAxisEvent_11;

public:
	inline static int32_t get_offset_of_singleAction_4() { return static_cast<int32_t>(offsetof(SteamVR_Behaviour_Single_t0224221A2437628A3FAFF02B7B02D88952021562, ___singleAction_4)); }
	inline SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 * get_singleAction_4() const { return ___singleAction_4; }
	inline SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 ** get_address_of_singleAction_4() { return &___singleAction_4; }
	inline void set_singleAction_4(SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 * value)
	{
		___singleAction_4 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___singleAction_4), (void*)value);
	}

	inline static int32_t get_offset_of_inputSource_5() { return static_cast<int32_t>(offsetof(SteamVR_Behaviour_Single_t0224221A2437628A3FAFF02B7B02D88952021562, ___inputSource_5)); }
	inline int32_t get_inputSource_5() const { return ___inputSource_5; }
	inline int32_t* get_address_of_inputSource_5() { return &___inputSource_5; }
	inline void set_inputSource_5(int32_t value)
	{
		___inputSource_5 = value;
	}

	inline static int32_t get_offset_of_onChange_6() { return static_cast<int32_t>(offsetof(SteamVR_Behaviour_Single_t0224221A2437628A3FAFF02B7B02D88952021562, ___onChange_6)); }
	inline SteamVR_Behaviour_SingleEvent_tB6C52A82965E98E5B7A851CB572E9B6FD88FE4F4 * get_onChange_6() const { return ___onChange_6; }
	inline SteamVR_Behaviour_SingleEvent_tB6C52A82965E98E5B7A851CB572E9B6FD88FE4F4 ** get_address_of_onChange_6() { return &___onChange_6; }
	inline void set_onChange_6(SteamVR_Behaviour_SingleEvent_tB6C52A82965E98E5B7A851CB572E9B6FD88FE4F4 * value)
	{
		___onChange_6 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onChange_6), (void*)value);
	}

	inline static int32_t get_offset_of_onUpdate_7() { return static_cast<int32_t>(offsetof(SteamVR_Behaviour_Single_t0224221A2437628A3FAFF02B7B02D88952021562, ___onUpdate_7)); }
	inline SteamVR_Behaviour_SingleEvent_tB6C52A82965E98E5B7A851CB572E9B6FD88FE4F4 * get_onUpdate_7() const { return ___onUpdate_7; }
	inline SteamVR_Behaviour_SingleEvent_tB6C52A82965E98E5B7A851CB572E9B6FD88FE4F4 ** get_address_of_onUpdate_7() { return &___onUpdate_7; }
	inline void set_onUpdate_7(SteamVR_Behaviour_SingleEvent_tB6C52A82965E98E5B7A851CB572E9B6FD88FE4F4 * value)
	{
		___onUpdate_7 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onUpdate_7), (void*)value);
	}

	inline static int32_t get_offset_of_onAxis_8() { return static_cast<int32_t>(offsetof(SteamVR_Behaviour_Single_t0224221A2437628A3FAFF02B7B02D88952021562, ___onAxis_8)); }
	inline SteamVR_Behaviour_SingleEvent_tB6C52A82965E98E5B7A851CB572E9B6FD88FE4F4 * get_onAxis_8() const { return ___onAxis_8; }
	inline SteamVR_Behaviour_SingleEvent_tB6C52A82965E98E5B7A851CB572E9B6FD88FE4F4 ** get_address_of_onAxis_8() { return &___onAxis_8; }
	inline void set_onAxis_8(SteamVR_Behaviour_SingleEvent_tB6C52A82965E98E5B7A851CB572E9B6FD88FE4F4 * value)
	{
		___onAxis_8 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onAxis_8), (void*)value);
	}

	inline static int32_t get_offset_of_onChangeEvent_9() { return static_cast<int32_t>(offsetof(SteamVR_Behaviour_Single_t0224221A2437628A3FAFF02B7B02D88952021562, ___onChangeEvent_9)); }
	inline ChangeHandler_t5D78A5C2B8BE043F0EF515BB84766EC330B52DF7 * get_onChangeEvent_9() const { return ___onChangeEvent_9; }
	inline ChangeHandler_t5D78A5C2B8BE043F0EF515BB84766EC330B52DF7 ** get_address_of_onChangeEvent_9() { return &___onChangeEvent_9; }
	inline void set_onChangeEvent_9(ChangeHandler_t5D78A5C2B8BE043F0EF515BB84766EC330B52DF7 * value)
	{
		___onChangeEvent_9 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onChangeEvent_9), (void*)value);
	}

	inline static int32_t get_offset_of_onUpdateEvent_10() { return static_cast<int32_t>(offsetof(SteamVR_Behaviour_Single_t0224221A2437628A3FAFF02B7B02D88952021562, ___onUpdateEvent_10)); }
	inline UpdateHandler_t35B29D0C538D0A17C13EFD36765FF0278EE256D4 * get_onUpdateEvent_10() const { return ___onUpdateEvent_10; }
	inline UpdateHandler_t35B29D0C538D0A17C13EFD36765FF0278EE256D4 ** get_address_of_onUpdateEvent_10() { return &___onUpdateEvent_10; }
	inline void set_onUpdateEvent_10(UpdateHandler_t35B29D0C538D0A17C13EFD36765FF0278EE256D4 * value)
	{
		___onUpdateEvent_10 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onUpdateEvent_10), (void*)value);
	}

	inline static int32_t get_offset_of_onAxisEvent_11() { return static_cast<int32_t>(offsetof(SteamVR_Behaviour_Single_t0224221A2437628A3FAFF02B7B02D88952021562, ___onAxisEvent_11)); }
	inline AxisHandler_t6CD6525481A3708C4FFC01A49F13C96EBD464F6C * get_onAxisEvent_11() const { return ___onAxisEvent_11; }
	inline AxisHandler_t6CD6525481A3708C4FFC01A49F13C96EBD464F6C ** get_address_of_onAxisEvent_11() { return &___onAxisEvent_11; }
	inline void set_onAxisEvent_11(AxisHandler_t6CD6525481A3708C4FFC01A49F13C96EBD464F6C * value)
	{
		___onAxisEvent_11 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onAxisEvent_11), (void*)value);
	}
};


// Valve.VR.SteamVR_Behaviour_Skeleton
struct  SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A  : public MonoBehaviour_t4A60845CF505405AF8BE8C61CC07F75CADEF6429
{
public:
	// Valve.VR.SteamVR_Action_Skeleton Valve.VR.SteamVR_Behaviour_Skeleton::skeletonAction
	SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * ___skeletonAction_4;
	// Valve.VR.SteamVR_Input_Sources Valve.VR.SteamVR_Behaviour_Skeleton::inputSource
	int32_t ___inputSource_5;
	// Valve.VR.EVRSkeletalMotionRange Valve.VR.SteamVR_Behaviour_Skeleton::rangeOfMotion
	int32_t ___rangeOfMotion_6;
	// UnityEngine.Transform Valve.VR.SteamVR_Behaviour_Skeleton::skeletonRoot
	Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * ___skeletonRoot_7;
	// UnityEngine.Transform Valve.VR.SteamVR_Behaviour_Skeleton::origin
	Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * ___origin_8;
	// System.Boolean Valve.VR.SteamVR_Behaviour_Skeleton::updatePose
	bool ___updatePose_9;
	// System.Boolean Valve.VR.SteamVR_Behaviour_Skeleton::onlySetRotations
	bool ___onlySetRotations_10;
	// System.Single Valve.VR.SteamVR_Behaviour_Skeleton::skeletonBlend
	float ___skeletonBlend_11;
	// Valve.VR.SteamVR_Behaviour_SkeletonEvent Valve.VR.SteamVR_Behaviour_Skeleton::onBoneTransformsUpdated
	SteamVR_Behaviour_SkeletonEvent_t2A4AAE28B8BB6F5E52B7A7FAF6ADF1F3DE537627 * ___onBoneTransformsUpdated_12;
	// Valve.VR.SteamVR_Behaviour_SkeletonEvent Valve.VR.SteamVR_Behaviour_Skeleton::onTransformUpdated
	SteamVR_Behaviour_SkeletonEvent_t2A4AAE28B8BB6F5E52B7A7FAF6ADF1F3DE537627 * ___onTransformUpdated_13;
	// Valve.VR.SteamVR_Behaviour_SkeletonEvent Valve.VR.SteamVR_Behaviour_Skeleton::onTransformChanged
	SteamVR_Behaviour_SkeletonEvent_t2A4AAE28B8BB6F5E52B7A7FAF6ADF1F3DE537627 * ___onTransformChanged_14;
	// Valve.VR.SteamVR_Behaviour_Skeleton_ConnectedChangedEvent Valve.VR.SteamVR_Behaviour_Skeleton::onConnectedChanged
	SteamVR_Behaviour_Skeleton_ConnectedChangedEvent_t448A3C929AA8F491BB03F8340DC791D40A546C85 * ___onConnectedChanged_15;
	// Valve.VR.SteamVR_Behaviour_Skeleton_TrackingChangedEvent Valve.VR.SteamVR_Behaviour_Skeleton::onTrackingChanged
	SteamVR_Behaviour_Skeleton_TrackingChangedEvent_tE5D388C0E5523A46227EEF4DC31BB575AE0E6E90 * ___onTrackingChanged_16;
	// Valve.VR.SteamVR_Behaviour_Skeleton_UpdateHandler Valve.VR.SteamVR_Behaviour_Skeleton::onBoneTransformsUpdatedEvent
	UpdateHandler_t529F28858847FB086B7F9A7A7E52860C7430976A * ___onBoneTransformsUpdatedEvent_17;
	// Valve.VR.SteamVR_Behaviour_Skeleton_UpdateHandler Valve.VR.SteamVR_Behaviour_Skeleton::onTransformUpdatedEvent
	UpdateHandler_t529F28858847FB086B7F9A7A7E52860C7430976A * ___onTransformUpdatedEvent_18;
	// Valve.VR.SteamVR_Behaviour_Skeleton_ChangeHandler Valve.VR.SteamVR_Behaviour_Skeleton::onTransformChangedEvent
	ChangeHandler_tB89A36613D65385655B73DBDA42D2F08868FD67F * ___onTransformChangedEvent_19;
	// Valve.VR.SteamVR_Behaviour_Skeleton_DeviceConnectedChangeHandler Valve.VR.SteamVR_Behaviour_Skeleton::onConnectedChangedEvent
	DeviceConnectedChangeHandler_t0F6018732B70A6C87D60D7C71A04183CE5B1E617 * ___onConnectedChangedEvent_20;
	// Valve.VR.SteamVR_Behaviour_Skeleton_TrackingChangeHandler Valve.VR.SteamVR_Behaviour_Skeleton::onTrackingChangedEvent
	TrackingChangeHandler_t0354ED148830BCEA31C451E8C314757B70B5D63F * ___onTrackingChangedEvent_21;
	// Valve.VR.SteamVR_Behaviour_Skeleton_MirrorType Valve.VR.SteamVR_Behaviour_Skeleton::mirroring
	int32_t ___mirroring_22;
	// Valve.VR.SteamVR_Skeleton_Poser Valve.VR.SteamVR_Behaviour_Skeleton::fallbackPoser
	SteamVR_Skeleton_Poser_t8BAF9FB80E002A7B21C380E9137C955DA4292CBA * ___fallbackPoser_23;
	// Valve.VR.SteamVR_Action_Single Valve.VR.SteamVR_Behaviour_Skeleton::fallbackCurlAction
	SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 * ___fallbackCurlAction_24;
	// Valve.VR.SteamVR_Skeleton_Poser Valve.VR.SteamVR_Behaviour_Skeleton::blendPoser
	SteamVR_Skeleton_Poser_t8BAF9FB80E002A7B21C380E9137C955DA4292CBA * ___blendPoser_25;
	// Valve.VR.SteamVR_Skeleton_PoseSnapshot Valve.VR.SteamVR_Behaviour_Skeleton::blendSnapshot
	SteamVR_Skeleton_PoseSnapshot_t0E1C4250EA9F357DFC204D8E5D9C2111593C3E18 * ___blendSnapshot_26;
	// UnityEngine.Transform[] Valve.VR.SteamVR_Behaviour_Skeleton::<proximals>k__BackingField
	TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804* ___U3CproximalsU3Ek__BackingField_27;
	// UnityEngine.Transform[] Valve.VR.SteamVR_Behaviour_Skeleton::<middles>k__BackingField
	TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804* ___U3CmiddlesU3Ek__BackingField_28;
	// UnityEngine.Transform[] Valve.VR.SteamVR_Behaviour_Skeleton::<distals>k__BackingField
	TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804* ___U3CdistalsU3Ek__BackingField_29;
	// UnityEngine.Transform[] Valve.VR.SteamVR_Behaviour_Skeleton::<tips>k__BackingField
	TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804* ___U3CtipsU3Ek__BackingField_30;
	// UnityEngine.Transform[] Valve.VR.SteamVR_Behaviour_Skeleton::<auxs>k__BackingField
	TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804* ___U3CauxsU3Ek__BackingField_31;
	// UnityEngine.Coroutine Valve.VR.SteamVR_Behaviour_Skeleton::blendRoutine
	Coroutine_tAE7DB2FC70A0AE6477F896F852057CB0754F06EC * ___blendRoutine_32;
	// UnityEngine.Coroutine Valve.VR.SteamVR_Behaviour_Skeleton::rangeOfMotionBlendRoutine
	Coroutine_tAE7DB2FC70A0AE6477F896F852057CB0754F06EC * ___rangeOfMotionBlendRoutine_33;
	// UnityEngine.Coroutine Valve.VR.SteamVR_Behaviour_Skeleton::attachRoutine
	Coroutine_tAE7DB2FC70A0AE6477F896F852057CB0754F06EC * ___attachRoutine_34;
	// UnityEngine.Transform[] Valve.VR.SteamVR_Behaviour_Skeleton::bones
	TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804* ___bones_35;
	// System.Nullable`1<Valve.VR.EVRSkeletalMotionRange> Valve.VR.SteamVR_Behaviour_Skeleton::temporaryRangeOfMotion
	Nullable_1_t1A7B9FD0D5A1C2016BC211A63A5BB64D3B4E70DD  ___temporaryRangeOfMotion_36;

public:
	inline static int32_t get_offset_of_skeletonAction_4() { return static_cast<int32_t>(offsetof(SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A, ___skeletonAction_4)); }
	inline SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * get_skeletonAction_4() const { return ___skeletonAction_4; }
	inline SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 ** get_address_of_skeletonAction_4() { return &___skeletonAction_4; }
	inline void set_skeletonAction_4(SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * value)
	{
		___skeletonAction_4 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___skeletonAction_4), (void*)value);
	}

	inline static int32_t get_offset_of_inputSource_5() { return static_cast<int32_t>(offsetof(SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A, ___inputSource_5)); }
	inline int32_t get_inputSource_5() const { return ___inputSource_5; }
	inline int32_t* get_address_of_inputSource_5() { return &___inputSource_5; }
	inline void set_inputSource_5(int32_t value)
	{
		___inputSource_5 = value;
	}

	inline static int32_t get_offset_of_rangeOfMotion_6() { return static_cast<int32_t>(offsetof(SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A, ___rangeOfMotion_6)); }
	inline int32_t get_rangeOfMotion_6() const { return ___rangeOfMotion_6; }
	inline int32_t* get_address_of_rangeOfMotion_6() { return &___rangeOfMotion_6; }
	inline void set_rangeOfMotion_6(int32_t value)
	{
		___rangeOfMotion_6 = value;
	}

	inline static int32_t get_offset_of_skeletonRoot_7() { return static_cast<int32_t>(offsetof(SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A, ___skeletonRoot_7)); }
	inline Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * get_skeletonRoot_7() const { return ___skeletonRoot_7; }
	inline Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA ** get_address_of_skeletonRoot_7() { return &___skeletonRoot_7; }
	inline void set_skeletonRoot_7(Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * value)
	{
		___skeletonRoot_7 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___skeletonRoot_7), (void*)value);
	}

	inline static int32_t get_offset_of_origin_8() { return static_cast<int32_t>(offsetof(SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A, ___origin_8)); }
	inline Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * get_origin_8() const { return ___origin_8; }
	inline Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA ** get_address_of_origin_8() { return &___origin_8; }
	inline void set_origin_8(Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * value)
	{
		___origin_8 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___origin_8), (void*)value);
	}

	inline static int32_t get_offset_of_updatePose_9() { return static_cast<int32_t>(offsetof(SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A, ___updatePose_9)); }
	inline bool get_updatePose_9() const { return ___updatePose_9; }
	inline bool* get_address_of_updatePose_9() { return &___updatePose_9; }
	inline void set_updatePose_9(bool value)
	{
		___updatePose_9 = value;
	}

	inline static int32_t get_offset_of_onlySetRotations_10() { return static_cast<int32_t>(offsetof(SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A, ___onlySetRotations_10)); }
	inline bool get_onlySetRotations_10() const { return ___onlySetRotations_10; }
	inline bool* get_address_of_onlySetRotations_10() { return &___onlySetRotations_10; }
	inline void set_onlySetRotations_10(bool value)
	{
		___onlySetRotations_10 = value;
	}

	inline static int32_t get_offset_of_skeletonBlend_11() { return static_cast<int32_t>(offsetof(SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A, ___skeletonBlend_11)); }
	inline float get_skeletonBlend_11() const { return ___skeletonBlend_11; }
	inline float* get_address_of_skeletonBlend_11() { return &___skeletonBlend_11; }
	inline void set_skeletonBlend_11(float value)
	{
		___skeletonBlend_11 = value;
	}

	inline static int32_t get_offset_of_onBoneTransformsUpdated_12() { return static_cast<int32_t>(offsetof(SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A, ___onBoneTransformsUpdated_12)); }
	inline SteamVR_Behaviour_SkeletonEvent_t2A4AAE28B8BB6F5E52B7A7FAF6ADF1F3DE537627 * get_onBoneTransformsUpdated_12() const { return ___onBoneTransformsUpdated_12; }
	inline SteamVR_Behaviour_SkeletonEvent_t2A4AAE28B8BB6F5E52B7A7FAF6ADF1F3DE537627 ** get_address_of_onBoneTransformsUpdated_12() { return &___onBoneTransformsUpdated_12; }
	inline void set_onBoneTransformsUpdated_12(SteamVR_Behaviour_SkeletonEvent_t2A4AAE28B8BB6F5E52B7A7FAF6ADF1F3DE537627 * value)
	{
		___onBoneTransformsUpdated_12 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onBoneTransformsUpdated_12), (void*)value);
	}

	inline static int32_t get_offset_of_onTransformUpdated_13() { return static_cast<int32_t>(offsetof(SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A, ___onTransformUpdated_13)); }
	inline SteamVR_Behaviour_SkeletonEvent_t2A4AAE28B8BB6F5E52B7A7FAF6ADF1F3DE537627 * get_onTransformUpdated_13() const { return ___onTransformUpdated_13; }
	inline SteamVR_Behaviour_SkeletonEvent_t2A4AAE28B8BB6F5E52B7A7FAF6ADF1F3DE537627 ** get_address_of_onTransformUpdated_13() { return &___onTransformUpdated_13; }
	inline void set_onTransformUpdated_13(SteamVR_Behaviour_SkeletonEvent_t2A4AAE28B8BB6F5E52B7A7FAF6ADF1F3DE537627 * value)
	{
		___onTransformUpdated_13 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onTransformUpdated_13), (void*)value);
	}

	inline static int32_t get_offset_of_onTransformChanged_14() { return static_cast<int32_t>(offsetof(SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A, ___onTransformChanged_14)); }
	inline SteamVR_Behaviour_SkeletonEvent_t2A4AAE28B8BB6F5E52B7A7FAF6ADF1F3DE537627 * get_onTransformChanged_14() const { return ___onTransformChanged_14; }
	inline SteamVR_Behaviour_SkeletonEvent_t2A4AAE28B8BB6F5E52B7A7FAF6ADF1F3DE537627 ** get_address_of_onTransformChanged_14() { return &___onTransformChanged_14; }
	inline void set_onTransformChanged_14(SteamVR_Behaviour_SkeletonEvent_t2A4AAE28B8BB6F5E52B7A7FAF6ADF1F3DE537627 * value)
	{
		___onTransformChanged_14 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onTransformChanged_14), (void*)value);
	}

	inline static int32_t get_offset_of_onConnectedChanged_15() { return static_cast<int32_t>(offsetof(SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A, ___onConnectedChanged_15)); }
	inline SteamVR_Behaviour_Skeleton_ConnectedChangedEvent_t448A3C929AA8F491BB03F8340DC791D40A546C85 * get_onConnectedChanged_15() const { return ___onConnectedChanged_15; }
	inline SteamVR_Behaviour_Skeleton_ConnectedChangedEvent_t448A3C929AA8F491BB03F8340DC791D40A546C85 ** get_address_of_onConnectedChanged_15() { return &___onConnectedChanged_15; }
	inline void set_onConnectedChanged_15(SteamVR_Behaviour_Skeleton_ConnectedChangedEvent_t448A3C929AA8F491BB03F8340DC791D40A546C85 * value)
	{
		___onConnectedChanged_15 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onConnectedChanged_15), (void*)value);
	}

	inline static int32_t get_offset_of_onTrackingChanged_16() { return static_cast<int32_t>(offsetof(SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A, ___onTrackingChanged_16)); }
	inline SteamVR_Behaviour_Skeleton_TrackingChangedEvent_tE5D388C0E5523A46227EEF4DC31BB575AE0E6E90 * get_onTrackingChanged_16() const { return ___onTrackingChanged_16; }
	inline SteamVR_Behaviour_Skeleton_TrackingChangedEvent_tE5D388C0E5523A46227EEF4DC31BB575AE0E6E90 ** get_address_of_onTrackingChanged_16() { return &___onTrackingChanged_16; }
	inline void set_onTrackingChanged_16(SteamVR_Behaviour_Skeleton_TrackingChangedEvent_tE5D388C0E5523A46227EEF4DC31BB575AE0E6E90 * value)
	{
		___onTrackingChanged_16 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onTrackingChanged_16), (void*)value);
	}

	inline static int32_t get_offset_of_onBoneTransformsUpdatedEvent_17() { return static_cast<int32_t>(offsetof(SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A, ___onBoneTransformsUpdatedEvent_17)); }
	inline UpdateHandler_t529F28858847FB086B7F9A7A7E52860C7430976A * get_onBoneTransformsUpdatedEvent_17() const { return ___onBoneTransformsUpdatedEvent_17; }
	inline UpdateHandler_t529F28858847FB086B7F9A7A7E52860C7430976A ** get_address_of_onBoneTransformsUpdatedEvent_17() { return &___onBoneTransformsUpdatedEvent_17; }
	inline void set_onBoneTransformsUpdatedEvent_17(UpdateHandler_t529F28858847FB086B7F9A7A7E52860C7430976A * value)
	{
		___onBoneTransformsUpdatedEvent_17 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onBoneTransformsUpdatedEvent_17), (void*)value);
	}

	inline static int32_t get_offset_of_onTransformUpdatedEvent_18() { return static_cast<int32_t>(offsetof(SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A, ___onTransformUpdatedEvent_18)); }
	inline UpdateHandler_t529F28858847FB086B7F9A7A7E52860C7430976A * get_onTransformUpdatedEvent_18() const { return ___onTransformUpdatedEvent_18; }
	inline UpdateHandler_t529F28858847FB086B7F9A7A7E52860C7430976A ** get_address_of_onTransformUpdatedEvent_18() { return &___onTransformUpdatedEvent_18; }
	inline void set_onTransformUpdatedEvent_18(UpdateHandler_t529F28858847FB086B7F9A7A7E52860C7430976A * value)
	{
		___onTransformUpdatedEvent_18 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onTransformUpdatedEvent_18), (void*)value);
	}

	inline static int32_t get_offset_of_onTransformChangedEvent_19() { return static_cast<int32_t>(offsetof(SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A, ___onTransformChangedEvent_19)); }
	inline ChangeHandler_tB89A36613D65385655B73DBDA42D2F08868FD67F * get_onTransformChangedEvent_19() const { return ___onTransformChangedEvent_19; }
	inline ChangeHandler_tB89A36613D65385655B73DBDA42D2F08868FD67F ** get_address_of_onTransformChangedEvent_19() { return &___onTransformChangedEvent_19; }
	inline void set_onTransformChangedEvent_19(ChangeHandler_tB89A36613D65385655B73DBDA42D2F08868FD67F * value)
	{
		___onTransformChangedEvent_19 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onTransformChangedEvent_19), (void*)value);
	}

	inline static int32_t get_offset_of_onConnectedChangedEvent_20() { return static_cast<int32_t>(offsetof(SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A, ___onConnectedChangedEvent_20)); }
	inline DeviceConnectedChangeHandler_t0F6018732B70A6C87D60D7C71A04183CE5B1E617 * get_onConnectedChangedEvent_20() const { return ___onConnectedChangedEvent_20; }
	inline DeviceConnectedChangeHandler_t0F6018732B70A6C87D60D7C71A04183CE5B1E617 ** get_address_of_onConnectedChangedEvent_20() { return &___onConnectedChangedEvent_20; }
	inline void set_onConnectedChangedEvent_20(DeviceConnectedChangeHandler_t0F6018732B70A6C87D60D7C71A04183CE5B1E617 * value)
	{
		___onConnectedChangedEvent_20 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onConnectedChangedEvent_20), (void*)value);
	}

	inline static int32_t get_offset_of_onTrackingChangedEvent_21() { return static_cast<int32_t>(offsetof(SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A, ___onTrackingChangedEvent_21)); }
	inline TrackingChangeHandler_t0354ED148830BCEA31C451E8C314757B70B5D63F * get_onTrackingChangedEvent_21() const { return ___onTrackingChangedEvent_21; }
	inline TrackingChangeHandler_t0354ED148830BCEA31C451E8C314757B70B5D63F ** get_address_of_onTrackingChangedEvent_21() { return &___onTrackingChangedEvent_21; }
	inline void set_onTrackingChangedEvent_21(TrackingChangeHandler_t0354ED148830BCEA31C451E8C314757B70B5D63F * value)
	{
		___onTrackingChangedEvent_21 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onTrackingChangedEvent_21), (void*)value);
	}

	inline static int32_t get_offset_of_mirroring_22() { return static_cast<int32_t>(offsetof(SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A, ___mirroring_22)); }
	inline int32_t get_mirroring_22() const { return ___mirroring_22; }
	inline int32_t* get_address_of_mirroring_22() { return &___mirroring_22; }
	inline void set_mirroring_22(int32_t value)
	{
		___mirroring_22 = value;
	}

	inline static int32_t get_offset_of_fallbackPoser_23() { return static_cast<int32_t>(offsetof(SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A, ___fallbackPoser_23)); }
	inline SteamVR_Skeleton_Poser_t8BAF9FB80E002A7B21C380E9137C955DA4292CBA * get_fallbackPoser_23() const { return ___fallbackPoser_23; }
	inline SteamVR_Skeleton_Poser_t8BAF9FB80E002A7B21C380E9137C955DA4292CBA ** get_address_of_fallbackPoser_23() { return &___fallbackPoser_23; }
	inline void set_fallbackPoser_23(SteamVR_Skeleton_Poser_t8BAF9FB80E002A7B21C380E9137C955DA4292CBA * value)
	{
		___fallbackPoser_23 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___fallbackPoser_23), (void*)value);
	}

	inline static int32_t get_offset_of_fallbackCurlAction_24() { return static_cast<int32_t>(offsetof(SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A, ___fallbackCurlAction_24)); }
	inline SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 * get_fallbackCurlAction_24() const { return ___fallbackCurlAction_24; }
	inline SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 ** get_address_of_fallbackCurlAction_24() { return &___fallbackCurlAction_24; }
	inline void set_fallbackCurlAction_24(SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 * value)
	{
		___fallbackCurlAction_24 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___fallbackCurlAction_24), (void*)value);
	}

	inline static int32_t get_offset_of_blendPoser_25() { return static_cast<int32_t>(offsetof(SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A, ___blendPoser_25)); }
	inline SteamVR_Skeleton_Poser_t8BAF9FB80E002A7B21C380E9137C955DA4292CBA * get_blendPoser_25() const { return ___blendPoser_25; }
	inline SteamVR_Skeleton_Poser_t8BAF9FB80E002A7B21C380E9137C955DA4292CBA ** get_address_of_blendPoser_25() { return &___blendPoser_25; }
	inline void set_blendPoser_25(SteamVR_Skeleton_Poser_t8BAF9FB80E002A7B21C380E9137C955DA4292CBA * value)
	{
		___blendPoser_25 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___blendPoser_25), (void*)value);
	}

	inline static int32_t get_offset_of_blendSnapshot_26() { return static_cast<int32_t>(offsetof(SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A, ___blendSnapshot_26)); }
	inline SteamVR_Skeleton_PoseSnapshot_t0E1C4250EA9F357DFC204D8E5D9C2111593C3E18 * get_blendSnapshot_26() const { return ___blendSnapshot_26; }
	inline SteamVR_Skeleton_PoseSnapshot_t0E1C4250EA9F357DFC204D8E5D9C2111593C3E18 ** get_address_of_blendSnapshot_26() { return &___blendSnapshot_26; }
	inline void set_blendSnapshot_26(SteamVR_Skeleton_PoseSnapshot_t0E1C4250EA9F357DFC204D8E5D9C2111593C3E18 * value)
	{
		___blendSnapshot_26 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___blendSnapshot_26), (void*)value);
	}

	inline static int32_t get_offset_of_U3CproximalsU3Ek__BackingField_27() { return static_cast<int32_t>(offsetof(SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A, ___U3CproximalsU3Ek__BackingField_27)); }
	inline TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804* get_U3CproximalsU3Ek__BackingField_27() const { return ___U3CproximalsU3Ek__BackingField_27; }
	inline TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804** get_address_of_U3CproximalsU3Ek__BackingField_27() { return &___U3CproximalsU3Ek__BackingField_27; }
	inline void set_U3CproximalsU3Ek__BackingField_27(TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804* value)
	{
		___U3CproximalsU3Ek__BackingField_27 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3CproximalsU3Ek__BackingField_27), (void*)value);
	}

	inline static int32_t get_offset_of_U3CmiddlesU3Ek__BackingField_28() { return static_cast<int32_t>(offsetof(SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A, ___U3CmiddlesU3Ek__BackingField_28)); }
	inline TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804* get_U3CmiddlesU3Ek__BackingField_28() const { return ___U3CmiddlesU3Ek__BackingField_28; }
	inline TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804** get_address_of_U3CmiddlesU3Ek__BackingField_28() { return &___U3CmiddlesU3Ek__BackingField_28; }
	inline void set_U3CmiddlesU3Ek__BackingField_28(TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804* value)
	{
		___U3CmiddlesU3Ek__BackingField_28 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3CmiddlesU3Ek__BackingField_28), (void*)value);
	}

	inline static int32_t get_offset_of_U3CdistalsU3Ek__BackingField_29() { return static_cast<int32_t>(offsetof(SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A, ___U3CdistalsU3Ek__BackingField_29)); }
	inline TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804* get_U3CdistalsU3Ek__BackingField_29() const { return ___U3CdistalsU3Ek__BackingField_29; }
	inline TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804** get_address_of_U3CdistalsU3Ek__BackingField_29() { return &___U3CdistalsU3Ek__BackingField_29; }
	inline void set_U3CdistalsU3Ek__BackingField_29(TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804* value)
	{
		___U3CdistalsU3Ek__BackingField_29 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3CdistalsU3Ek__BackingField_29), (void*)value);
	}

	inline static int32_t get_offset_of_U3CtipsU3Ek__BackingField_30() { return static_cast<int32_t>(offsetof(SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A, ___U3CtipsU3Ek__BackingField_30)); }
	inline TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804* get_U3CtipsU3Ek__BackingField_30() const { return ___U3CtipsU3Ek__BackingField_30; }
	inline TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804** get_address_of_U3CtipsU3Ek__BackingField_30() { return &___U3CtipsU3Ek__BackingField_30; }
	inline void set_U3CtipsU3Ek__BackingField_30(TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804* value)
	{
		___U3CtipsU3Ek__BackingField_30 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3CtipsU3Ek__BackingField_30), (void*)value);
	}

	inline static int32_t get_offset_of_U3CauxsU3Ek__BackingField_31() { return static_cast<int32_t>(offsetof(SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A, ___U3CauxsU3Ek__BackingField_31)); }
	inline TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804* get_U3CauxsU3Ek__BackingField_31() const { return ___U3CauxsU3Ek__BackingField_31; }
	inline TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804** get_address_of_U3CauxsU3Ek__BackingField_31() { return &___U3CauxsU3Ek__BackingField_31; }
	inline void set_U3CauxsU3Ek__BackingField_31(TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804* value)
	{
		___U3CauxsU3Ek__BackingField_31 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3CauxsU3Ek__BackingField_31), (void*)value);
	}

	inline static int32_t get_offset_of_blendRoutine_32() { return static_cast<int32_t>(offsetof(SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A, ___blendRoutine_32)); }
	inline Coroutine_tAE7DB2FC70A0AE6477F896F852057CB0754F06EC * get_blendRoutine_32() const { return ___blendRoutine_32; }
	inline Coroutine_tAE7DB2FC70A0AE6477F896F852057CB0754F06EC ** get_address_of_blendRoutine_32() { return &___blendRoutine_32; }
	inline void set_blendRoutine_32(Coroutine_tAE7DB2FC70A0AE6477F896F852057CB0754F06EC * value)
	{
		___blendRoutine_32 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___blendRoutine_32), (void*)value);
	}

	inline static int32_t get_offset_of_rangeOfMotionBlendRoutine_33() { return static_cast<int32_t>(offsetof(SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A, ___rangeOfMotionBlendRoutine_33)); }
	inline Coroutine_tAE7DB2FC70A0AE6477F896F852057CB0754F06EC * get_rangeOfMotionBlendRoutine_33() const { return ___rangeOfMotionBlendRoutine_33; }
	inline Coroutine_tAE7DB2FC70A0AE6477F896F852057CB0754F06EC ** get_address_of_rangeOfMotionBlendRoutine_33() { return &___rangeOfMotionBlendRoutine_33; }
	inline void set_rangeOfMotionBlendRoutine_33(Coroutine_tAE7DB2FC70A0AE6477F896F852057CB0754F06EC * value)
	{
		___rangeOfMotionBlendRoutine_33 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___rangeOfMotionBlendRoutine_33), (void*)value);
	}

	inline static int32_t get_offset_of_attachRoutine_34() { return static_cast<int32_t>(offsetof(SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A, ___attachRoutine_34)); }
	inline Coroutine_tAE7DB2FC70A0AE6477F896F852057CB0754F06EC * get_attachRoutine_34() const { return ___attachRoutine_34; }
	inline Coroutine_tAE7DB2FC70A0AE6477F896F852057CB0754F06EC ** get_address_of_attachRoutine_34() { return &___attachRoutine_34; }
	inline void set_attachRoutine_34(Coroutine_tAE7DB2FC70A0AE6477F896F852057CB0754F06EC * value)
	{
		___attachRoutine_34 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___attachRoutine_34), (void*)value);
	}

	inline static int32_t get_offset_of_bones_35() { return static_cast<int32_t>(offsetof(SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A, ___bones_35)); }
	inline TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804* get_bones_35() const { return ___bones_35; }
	inline TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804** get_address_of_bones_35() { return &___bones_35; }
	inline void set_bones_35(TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804* value)
	{
		___bones_35 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___bones_35), (void*)value);
	}

	inline static int32_t get_offset_of_temporaryRangeOfMotion_36() { return static_cast<int32_t>(offsetof(SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A, ___temporaryRangeOfMotion_36)); }
	inline Nullable_1_t1A7B9FD0D5A1C2016BC211A63A5BB64D3B4E70DD  get_temporaryRangeOfMotion_36() const { return ___temporaryRangeOfMotion_36; }
	inline Nullable_1_t1A7B9FD0D5A1C2016BC211A63A5BB64D3B4E70DD * get_address_of_temporaryRangeOfMotion_36() { return &___temporaryRangeOfMotion_36; }
	inline void set_temporaryRangeOfMotion_36(Nullable_1_t1A7B9FD0D5A1C2016BC211A63A5BB64D3B4E70DD  value)
	{
		___temporaryRangeOfMotion_36 = value;
	}
};

struct SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A_StaticFields
{
public:
	// UnityEngine.Quaternion Valve.VR.SteamVR_Behaviour_Skeleton::rightFlipAngle
	Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  ___rightFlipAngle_37;

public:
	inline static int32_t get_offset_of_rightFlipAngle_37() { return static_cast<int32_t>(offsetof(SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A_StaticFields, ___rightFlipAngle_37)); }
	inline Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  get_rightFlipAngle_37() const { return ___rightFlipAngle_37; }
	inline Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357 * get_address_of_rightFlipAngle_37() { return &___rightFlipAngle_37; }
	inline void set_rightFlipAngle_37(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  value)
	{
		___rightFlipAngle_37 = value;
	}
};


// Valve.VR.SteamVR_Behaviour_Vector2
struct  SteamVR_Behaviour_Vector2_t4F9DB23C7DF068052EAAECC07B5D28C1A6971C46  : public MonoBehaviour_t4A60845CF505405AF8BE8C61CC07F75CADEF6429
{
public:
	// Valve.VR.SteamVR_Action_Vector2 Valve.VR.SteamVR_Behaviour_Vector2::vector2Action
	SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 * ___vector2Action_4;
	// Valve.VR.SteamVR_Input_Sources Valve.VR.SteamVR_Behaviour_Vector2::inputSource
	int32_t ___inputSource_5;
	// Valve.VR.SteamVR_Behaviour_Vector2Event Valve.VR.SteamVR_Behaviour_Vector2::onChange
	SteamVR_Behaviour_Vector2Event_tE9ABC41564061B6A2699778A901EC2A11DD2FBA5 * ___onChange_6;
	// Valve.VR.SteamVR_Behaviour_Vector2Event Valve.VR.SteamVR_Behaviour_Vector2::onUpdate
	SteamVR_Behaviour_Vector2Event_tE9ABC41564061B6A2699778A901EC2A11DD2FBA5 * ___onUpdate_7;
	// Valve.VR.SteamVR_Behaviour_Vector2Event Valve.VR.SteamVR_Behaviour_Vector2::onAxis
	SteamVR_Behaviour_Vector2Event_tE9ABC41564061B6A2699778A901EC2A11DD2FBA5 * ___onAxis_8;
	// Valve.VR.SteamVR_Behaviour_Vector2_ChangeHandler Valve.VR.SteamVR_Behaviour_Vector2::onChangeEvent
	ChangeHandler_t37E638BA62CC9B06D1DD916B56CFB6E3A61C31DE * ___onChangeEvent_9;
	// Valve.VR.SteamVR_Behaviour_Vector2_UpdateHandler Valve.VR.SteamVR_Behaviour_Vector2::onUpdateEvent
	UpdateHandler_tD71CF662F9B99D2E790533F02BA2B95FF3C1C1DF * ___onUpdateEvent_10;
	// Valve.VR.SteamVR_Behaviour_Vector2_AxisHandler Valve.VR.SteamVR_Behaviour_Vector2::onAxisEvent
	AxisHandler_tBA72843A01CF3BF4DFCBECF1BC75EB817AE2D064 * ___onAxisEvent_11;

public:
	inline static int32_t get_offset_of_vector2Action_4() { return static_cast<int32_t>(offsetof(SteamVR_Behaviour_Vector2_t4F9DB23C7DF068052EAAECC07B5D28C1A6971C46, ___vector2Action_4)); }
	inline SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 * get_vector2Action_4() const { return ___vector2Action_4; }
	inline SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 ** get_address_of_vector2Action_4() { return &___vector2Action_4; }
	inline void set_vector2Action_4(SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 * value)
	{
		___vector2Action_4 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___vector2Action_4), (void*)value);
	}

	inline static int32_t get_offset_of_inputSource_5() { return static_cast<int32_t>(offsetof(SteamVR_Behaviour_Vector2_t4F9DB23C7DF068052EAAECC07B5D28C1A6971C46, ___inputSource_5)); }
	inline int32_t get_inputSource_5() const { return ___inputSource_5; }
	inline int32_t* get_address_of_inputSource_5() { return &___inputSource_5; }
	inline void set_inputSource_5(int32_t value)
	{
		___inputSource_5 = value;
	}

	inline static int32_t get_offset_of_onChange_6() { return static_cast<int32_t>(offsetof(SteamVR_Behaviour_Vector2_t4F9DB23C7DF068052EAAECC07B5D28C1A6971C46, ___onChange_6)); }
	inline SteamVR_Behaviour_Vector2Event_tE9ABC41564061B6A2699778A901EC2A11DD2FBA5 * get_onChange_6() const { return ___onChange_6; }
	inline SteamVR_Behaviour_Vector2Event_tE9ABC41564061B6A2699778A901EC2A11DD2FBA5 ** get_address_of_onChange_6() { return &___onChange_6; }
	inline void set_onChange_6(SteamVR_Behaviour_Vector2Event_tE9ABC41564061B6A2699778A901EC2A11DD2FBA5 * value)
	{
		___onChange_6 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onChange_6), (void*)value);
	}

	inline static int32_t get_offset_of_onUpdate_7() { return static_cast<int32_t>(offsetof(SteamVR_Behaviour_Vector2_t4F9DB23C7DF068052EAAECC07B5D28C1A6971C46, ___onUpdate_7)); }
	inline SteamVR_Behaviour_Vector2Event_tE9ABC41564061B6A2699778A901EC2A11DD2FBA5 * get_onUpdate_7() const { return ___onUpdate_7; }
	inline SteamVR_Behaviour_Vector2Event_tE9ABC41564061B6A2699778A901EC2A11DD2FBA5 ** get_address_of_onUpdate_7() { return &___onUpdate_7; }
	inline void set_onUpdate_7(SteamVR_Behaviour_Vector2Event_tE9ABC41564061B6A2699778A901EC2A11DD2FBA5 * value)
	{
		___onUpdate_7 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onUpdate_7), (void*)value);
	}

	inline static int32_t get_offset_of_onAxis_8() { return static_cast<int32_t>(offsetof(SteamVR_Behaviour_Vector2_t4F9DB23C7DF068052EAAECC07B5D28C1A6971C46, ___onAxis_8)); }
	inline SteamVR_Behaviour_Vector2Event_tE9ABC41564061B6A2699778A901EC2A11DD2FBA5 * get_onAxis_8() const { return ___onAxis_8; }
	inline SteamVR_Behaviour_Vector2Event_tE9ABC41564061B6A2699778A901EC2A11DD2FBA5 ** get_address_of_onAxis_8() { return &___onAxis_8; }
	inline void set_onAxis_8(SteamVR_Behaviour_Vector2Event_tE9ABC41564061B6A2699778A901EC2A11DD2FBA5 * value)
	{
		___onAxis_8 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onAxis_8), (void*)value);
	}

	inline static int32_t get_offset_of_onChangeEvent_9() { return static_cast<int32_t>(offsetof(SteamVR_Behaviour_Vector2_t4F9DB23C7DF068052EAAECC07B5D28C1A6971C46, ___onChangeEvent_9)); }
	inline ChangeHandler_t37E638BA62CC9B06D1DD916B56CFB6E3A61C31DE * get_onChangeEvent_9() const { return ___onChangeEvent_9; }
	inline ChangeHandler_t37E638BA62CC9B06D1DD916B56CFB6E3A61C31DE ** get_address_of_onChangeEvent_9() { return &___onChangeEvent_9; }
	inline void set_onChangeEvent_9(ChangeHandler_t37E638BA62CC9B06D1DD916B56CFB6E3A61C31DE * value)
	{
		___onChangeEvent_9 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onChangeEvent_9), (void*)value);
	}

	inline static int32_t get_offset_of_onUpdateEvent_10() { return static_cast<int32_t>(offsetof(SteamVR_Behaviour_Vector2_t4F9DB23C7DF068052EAAECC07B5D28C1A6971C46, ___onUpdateEvent_10)); }
	inline UpdateHandler_tD71CF662F9B99D2E790533F02BA2B95FF3C1C1DF * get_onUpdateEvent_10() const { return ___onUpdateEvent_10; }
	inline UpdateHandler_tD71CF662F9B99D2E790533F02BA2B95FF3C1C1DF ** get_address_of_onUpdateEvent_10() { return &___onUpdateEvent_10; }
	inline void set_onUpdateEvent_10(UpdateHandler_tD71CF662F9B99D2E790533F02BA2B95FF3C1C1DF * value)
	{
		___onUpdateEvent_10 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onUpdateEvent_10), (void*)value);
	}

	inline static int32_t get_offset_of_onAxisEvent_11() { return static_cast<int32_t>(offsetof(SteamVR_Behaviour_Vector2_t4F9DB23C7DF068052EAAECC07B5D28C1A6971C46, ___onAxisEvent_11)); }
	inline AxisHandler_tBA72843A01CF3BF4DFCBECF1BC75EB817AE2D064 * get_onAxisEvent_11() const { return ___onAxisEvent_11; }
	inline AxisHandler_tBA72843A01CF3BF4DFCBECF1BC75EB817AE2D064 ** get_address_of_onAxisEvent_11() { return &___onAxisEvent_11; }
	inline void set_onAxisEvent_11(AxisHandler_tBA72843A01CF3BF4DFCBECF1BC75EB817AE2D064 * value)
	{
		___onAxisEvent_11 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onAxisEvent_11), (void*)value);
	}
};


// Valve.VR.SteamVR_Render
struct  SteamVR_Render_tE8610D8397284113646BAAD2B6991C16D4C26665  : public MonoBehaviour_t4A60845CF505405AF8BE8C61CC07F75CADEF6429
{
public:
	// Valve.VR.SteamVR_ExternalCamera Valve.VR.SteamVR_Render::externalCamera
	SteamVR_ExternalCamera_t249B349C10D9088DD9D5D9E76A6CC9A32449C53D * ___externalCamera_4;
	// System.String Valve.VR.SteamVR_Render::externalCameraConfigPath
	String_t* ___externalCameraConfigPath_5;
	// Valve.VR.SteamVR_Camera[] Valve.VR.SteamVR_Render::cameras
	SteamVR_CameraU5BU5D_tBBE78FA1F1681E27DDA1D64FF5A36D81E5927DA3* ___cameras_8;
	// Valve.VR.TrackedDevicePose_t[] Valve.VR.SteamVR_Render::poses
	TrackedDevicePose_tU5BU5D_tF02F8D07A99963B656F6262B11E24ECF9747D196* ___poses_9;
	// Valve.VR.TrackedDevicePose_t[] Valve.VR.SteamVR_Render::gamePoses
	TrackedDevicePose_tU5BU5D_tF02F8D07A99963B656F6262B11E24ECF9747D196* ___gamePoses_10;
	// UnityEngine.WaitForEndOfFrame Valve.VR.SteamVR_Render::waitForEndOfFrame
	WaitForEndOfFrame_t75980FB3F246D6AD36A85CA2BFDF8474E5EEBCCA * ___waitForEndOfFrame_12;
	// System.Nullable`1<System.Boolean> Valve.VR.SteamVR_Render::doesPathExist
	Nullable_1_t9E6A67BECE376F0623B5C857F5674A0311C41793  ___doesPathExist_13;
	// System.Single Valve.VR.SteamVR_Render::sceneResolutionScale
	float ___sceneResolutionScale_14;
	// System.Single Valve.VR.SteamVR_Render::timeScale
	float ___timeScale_15;
	// Valve.VR.EVRScreenshotType[] Valve.VR.SteamVR_Render::screenshotTypes
	EVRScreenshotTypeU5BU5D_tD8F931B82D9D29E97B71BB630996E1E3F713D74E* ___screenshotTypes_16;

public:
	inline static int32_t get_offset_of_externalCamera_4() { return static_cast<int32_t>(offsetof(SteamVR_Render_tE8610D8397284113646BAAD2B6991C16D4C26665, ___externalCamera_4)); }
	inline SteamVR_ExternalCamera_t249B349C10D9088DD9D5D9E76A6CC9A32449C53D * get_externalCamera_4() const { return ___externalCamera_4; }
	inline SteamVR_ExternalCamera_t249B349C10D9088DD9D5D9E76A6CC9A32449C53D ** get_address_of_externalCamera_4() { return &___externalCamera_4; }
	inline void set_externalCamera_4(SteamVR_ExternalCamera_t249B349C10D9088DD9D5D9E76A6CC9A32449C53D * value)
	{
		___externalCamera_4 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___externalCamera_4), (void*)value);
	}

	inline static int32_t get_offset_of_externalCameraConfigPath_5() { return static_cast<int32_t>(offsetof(SteamVR_Render_tE8610D8397284113646BAAD2B6991C16D4C26665, ___externalCameraConfigPath_5)); }
	inline String_t* get_externalCameraConfigPath_5() const { return ___externalCameraConfigPath_5; }
	inline String_t** get_address_of_externalCameraConfigPath_5() { return &___externalCameraConfigPath_5; }
	inline void set_externalCameraConfigPath_5(String_t* value)
	{
		___externalCameraConfigPath_5 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___externalCameraConfigPath_5), (void*)value);
	}

	inline static int32_t get_offset_of_cameras_8() { return static_cast<int32_t>(offsetof(SteamVR_Render_tE8610D8397284113646BAAD2B6991C16D4C26665, ___cameras_8)); }
	inline SteamVR_CameraU5BU5D_tBBE78FA1F1681E27DDA1D64FF5A36D81E5927DA3* get_cameras_8() const { return ___cameras_8; }
	inline SteamVR_CameraU5BU5D_tBBE78FA1F1681E27DDA1D64FF5A36D81E5927DA3** get_address_of_cameras_8() { return &___cameras_8; }
	inline void set_cameras_8(SteamVR_CameraU5BU5D_tBBE78FA1F1681E27DDA1D64FF5A36D81E5927DA3* value)
	{
		___cameras_8 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___cameras_8), (void*)value);
	}

	inline static int32_t get_offset_of_poses_9() { return static_cast<int32_t>(offsetof(SteamVR_Render_tE8610D8397284113646BAAD2B6991C16D4C26665, ___poses_9)); }
	inline TrackedDevicePose_tU5BU5D_tF02F8D07A99963B656F6262B11E24ECF9747D196* get_poses_9() const { return ___poses_9; }
	inline TrackedDevicePose_tU5BU5D_tF02F8D07A99963B656F6262B11E24ECF9747D196** get_address_of_poses_9() { return &___poses_9; }
	inline void set_poses_9(TrackedDevicePose_tU5BU5D_tF02F8D07A99963B656F6262B11E24ECF9747D196* value)
	{
		___poses_9 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___poses_9), (void*)value);
	}

	inline static int32_t get_offset_of_gamePoses_10() { return static_cast<int32_t>(offsetof(SteamVR_Render_tE8610D8397284113646BAAD2B6991C16D4C26665, ___gamePoses_10)); }
	inline TrackedDevicePose_tU5BU5D_tF02F8D07A99963B656F6262B11E24ECF9747D196* get_gamePoses_10() const { return ___gamePoses_10; }
	inline TrackedDevicePose_tU5BU5D_tF02F8D07A99963B656F6262B11E24ECF9747D196** get_address_of_gamePoses_10() { return &___gamePoses_10; }
	inline void set_gamePoses_10(TrackedDevicePose_tU5BU5D_tF02F8D07A99963B656F6262B11E24ECF9747D196* value)
	{
		___gamePoses_10 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___gamePoses_10), (void*)value);
	}

	inline static int32_t get_offset_of_waitForEndOfFrame_12() { return static_cast<int32_t>(offsetof(SteamVR_Render_tE8610D8397284113646BAAD2B6991C16D4C26665, ___waitForEndOfFrame_12)); }
	inline WaitForEndOfFrame_t75980FB3F246D6AD36A85CA2BFDF8474E5EEBCCA * get_waitForEndOfFrame_12() const { return ___waitForEndOfFrame_12; }
	inline WaitForEndOfFrame_t75980FB3F246D6AD36A85CA2BFDF8474E5EEBCCA ** get_address_of_waitForEndOfFrame_12() { return &___waitForEndOfFrame_12; }
	inline void set_waitForEndOfFrame_12(WaitForEndOfFrame_t75980FB3F246D6AD36A85CA2BFDF8474E5EEBCCA * value)
	{
		___waitForEndOfFrame_12 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___waitForEndOfFrame_12), (void*)value);
	}

	inline static int32_t get_offset_of_doesPathExist_13() { return static_cast<int32_t>(offsetof(SteamVR_Render_tE8610D8397284113646BAAD2B6991C16D4C26665, ___doesPathExist_13)); }
	inline Nullable_1_t9E6A67BECE376F0623B5C857F5674A0311C41793  get_doesPathExist_13() const { return ___doesPathExist_13; }
	inline Nullable_1_t9E6A67BECE376F0623B5C857F5674A0311C41793 * get_address_of_doesPathExist_13() { return &___doesPathExist_13; }
	inline void set_doesPathExist_13(Nullable_1_t9E6A67BECE376F0623B5C857F5674A0311C41793  value)
	{
		___doesPathExist_13 = value;
	}

	inline static int32_t get_offset_of_sceneResolutionScale_14() { return static_cast<int32_t>(offsetof(SteamVR_Render_tE8610D8397284113646BAAD2B6991C16D4C26665, ___sceneResolutionScale_14)); }
	inline float get_sceneResolutionScale_14() const { return ___sceneResolutionScale_14; }
	inline float* get_address_of_sceneResolutionScale_14() { return &___sceneResolutionScale_14; }
	inline void set_sceneResolutionScale_14(float value)
	{
		___sceneResolutionScale_14 = value;
	}

	inline static int32_t get_offset_of_timeScale_15() { return static_cast<int32_t>(offsetof(SteamVR_Render_tE8610D8397284113646BAAD2B6991C16D4C26665, ___timeScale_15)); }
	inline float get_timeScale_15() const { return ___timeScale_15; }
	inline float* get_address_of_timeScale_15() { return &___timeScale_15; }
	inline void set_timeScale_15(float value)
	{
		___timeScale_15 = value;
	}

	inline static int32_t get_offset_of_screenshotTypes_16() { return static_cast<int32_t>(offsetof(SteamVR_Render_tE8610D8397284113646BAAD2B6991C16D4C26665, ___screenshotTypes_16)); }
	inline EVRScreenshotTypeU5BU5D_tD8F931B82D9D29E97B71BB630996E1E3F713D74E* get_screenshotTypes_16() const { return ___screenshotTypes_16; }
	inline EVRScreenshotTypeU5BU5D_tD8F931B82D9D29E97B71BB630996E1E3F713D74E** get_address_of_screenshotTypes_16() { return &___screenshotTypes_16; }
	inline void set_screenshotTypes_16(EVRScreenshotTypeU5BU5D_tD8F931B82D9D29E97B71BB630996E1E3F713D74E* value)
	{
		___screenshotTypes_16 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___screenshotTypes_16), (void*)value);
	}
};

struct SteamVR_Render_tE8610D8397284113646BAAD2B6991C16D4C26665_StaticFields
{
public:
	// Valve.VR.EVREye Valve.VR.SteamVR_Render::<eye>k__BackingField
	int32_t ___U3CeyeU3Ek__BackingField_6;
	// System.Boolean Valve.VR.SteamVR_Render::isQuitting
	bool ___isQuitting_7;
	// System.Boolean Valve.VR.SteamVR_Render::_pauseRendering
	bool ____pauseRendering_11;

public:
	inline static int32_t get_offset_of_U3CeyeU3Ek__BackingField_6() { return static_cast<int32_t>(offsetof(SteamVR_Render_tE8610D8397284113646BAAD2B6991C16D4C26665_StaticFields, ___U3CeyeU3Ek__BackingField_6)); }
	inline int32_t get_U3CeyeU3Ek__BackingField_6() const { return ___U3CeyeU3Ek__BackingField_6; }
	inline int32_t* get_address_of_U3CeyeU3Ek__BackingField_6() { return &___U3CeyeU3Ek__BackingField_6; }
	inline void set_U3CeyeU3Ek__BackingField_6(int32_t value)
	{
		___U3CeyeU3Ek__BackingField_6 = value;
	}

	inline static int32_t get_offset_of_isQuitting_7() { return static_cast<int32_t>(offsetof(SteamVR_Render_tE8610D8397284113646BAAD2B6991C16D4C26665_StaticFields, ___isQuitting_7)); }
	inline bool get_isQuitting_7() const { return ___isQuitting_7; }
	inline bool* get_address_of_isQuitting_7() { return &___isQuitting_7; }
	inline void set_isQuitting_7(bool value)
	{
		___isQuitting_7 = value;
	}

	inline static int32_t get_offset_of__pauseRendering_11() { return static_cast<int32_t>(offsetof(SteamVR_Render_tE8610D8397284113646BAAD2B6991C16D4C26665_StaticFields, ____pauseRendering_11)); }
	inline bool get__pauseRendering_11() const { return ____pauseRendering_11; }
	inline bool* get_address_of__pauseRendering_11() { return &____pauseRendering_11; }
	inline void set__pauseRendering_11(bool value)
	{
		____pauseRendering_11 = value;
	}
};


// Valve.VR.SteamVR_Skeleton_Poser
struct  SteamVR_Skeleton_Poser_t8BAF9FB80E002A7B21C380E9137C955DA4292CBA  : public MonoBehaviour_t4A60845CF505405AF8BE8C61CC07F75CADEF6429
{
public:
	// System.Boolean Valve.VR.SteamVR_Skeleton_Poser::poseEditorExpanded
	bool ___poseEditorExpanded_4;
	// System.Boolean Valve.VR.SteamVR_Skeleton_Poser::blendEditorExpanded
	bool ___blendEditorExpanded_5;
	// System.String[] Valve.VR.SteamVR_Skeleton_Poser::poseNames
	StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* ___poseNames_6;
	// UnityEngine.GameObject Valve.VR.SteamVR_Skeleton_Poser::overridePreviewLeftHandPrefab
	GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * ___overridePreviewLeftHandPrefab_7;
	// UnityEngine.GameObject Valve.VR.SteamVR_Skeleton_Poser::overridePreviewRightHandPrefab
	GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * ___overridePreviewRightHandPrefab_8;
	// Valve.VR.SteamVR_Skeleton_Pose Valve.VR.SteamVR_Skeleton_Poser::skeletonMainPose
	SteamVR_Skeleton_Pose_tE0875BE0979F259871814680A295FF216A3FE593 * ___skeletonMainPose_9;
	// System.Collections.Generic.List`1<Valve.VR.SteamVR_Skeleton_Pose> Valve.VR.SteamVR_Skeleton_Poser::skeletonAdditionalPoses
	List_1_tEC9949C3AED865A8508B828F7285A69E9B978B64 * ___skeletonAdditionalPoses_10;
	// System.Boolean Valve.VR.SteamVR_Skeleton_Poser::showLeftPreview
	bool ___showLeftPreview_11;
	// System.Boolean Valve.VR.SteamVR_Skeleton_Poser::showRightPreview
	bool ___showRightPreview_12;
	// UnityEngine.GameObject Valve.VR.SteamVR_Skeleton_Poser::previewLeftInstance
	GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * ___previewLeftInstance_13;
	// UnityEngine.GameObject Valve.VR.SteamVR_Skeleton_Poser::previewRightInstance
	GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * ___previewRightInstance_14;
	// System.Int32 Valve.VR.SteamVR_Skeleton_Poser::previewPoseSelection
	int32_t ___previewPoseSelection_15;
	// System.Collections.Generic.List`1<Valve.VR.SteamVR_Skeleton_Poser_PoseBlendingBehaviour> Valve.VR.SteamVR_Skeleton_Poser::blendingBehaviours
	List_1_tA37A95A513EA43988C85E8625FFEA127707FFAF7 * ___blendingBehaviours_16;
	// Valve.VR.SteamVR_Skeleton_PoseSnapshot Valve.VR.SteamVR_Skeleton_Poser::blendedSnapshotL
	SteamVR_Skeleton_PoseSnapshot_t0E1C4250EA9F357DFC204D8E5D9C2111593C3E18 * ___blendedSnapshotL_17;
	// Valve.VR.SteamVR_Skeleton_PoseSnapshot Valve.VR.SteamVR_Skeleton_Poser::blendedSnapshotR
	SteamVR_Skeleton_PoseSnapshot_t0E1C4250EA9F357DFC204D8E5D9C2111593C3E18 * ___blendedSnapshotR_18;
	// Valve.VR.SteamVR_Skeleton_Poser_SkeletonBlendablePose[] Valve.VR.SteamVR_Skeleton_Poser::blendPoses
	SkeletonBlendablePoseU5BU5D_t1F42997ACA8283764F25AD642DD4B2868449BAC2* ___blendPoses_19;
	// System.Int32 Valve.VR.SteamVR_Skeleton_Poser::boneCount
	int32_t ___boneCount_20;
	// System.Boolean Valve.VR.SteamVR_Skeleton_Poser::poseUpdatedThisFrame
	bool ___poseUpdatedThisFrame_21;
	// System.Single Valve.VR.SteamVR_Skeleton_Poser::scale
	float ___scale_22;

public:
	inline static int32_t get_offset_of_poseEditorExpanded_4() { return static_cast<int32_t>(offsetof(SteamVR_Skeleton_Poser_t8BAF9FB80E002A7B21C380E9137C955DA4292CBA, ___poseEditorExpanded_4)); }
	inline bool get_poseEditorExpanded_4() const { return ___poseEditorExpanded_4; }
	inline bool* get_address_of_poseEditorExpanded_4() { return &___poseEditorExpanded_4; }
	inline void set_poseEditorExpanded_4(bool value)
	{
		___poseEditorExpanded_4 = value;
	}

	inline static int32_t get_offset_of_blendEditorExpanded_5() { return static_cast<int32_t>(offsetof(SteamVR_Skeleton_Poser_t8BAF9FB80E002A7B21C380E9137C955DA4292CBA, ___blendEditorExpanded_5)); }
	inline bool get_blendEditorExpanded_5() const { return ___blendEditorExpanded_5; }
	inline bool* get_address_of_blendEditorExpanded_5() { return &___blendEditorExpanded_5; }
	inline void set_blendEditorExpanded_5(bool value)
	{
		___blendEditorExpanded_5 = value;
	}

	inline static int32_t get_offset_of_poseNames_6() { return static_cast<int32_t>(offsetof(SteamVR_Skeleton_Poser_t8BAF9FB80E002A7B21C380E9137C955DA4292CBA, ___poseNames_6)); }
	inline StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* get_poseNames_6() const { return ___poseNames_6; }
	inline StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E** get_address_of_poseNames_6() { return &___poseNames_6; }
	inline void set_poseNames_6(StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* value)
	{
		___poseNames_6 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___poseNames_6), (void*)value);
	}

	inline static int32_t get_offset_of_overridePreviewLeftHandPrefab_7() { return static_cast<int32_t>(offsetof(SteamVR_Skeleton_Poser_t8BAF9FB80E002A7B21C380E9137C955DA4292CBA, ___overridePreviewLeftHandPrefab_7)); }
	inline GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * get_overridePreviewLeftHandPrefab_7() const { return ___overridePreviewLeftHandPrefab_7; }
	inline GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F ** get_address_of_overridePreviewLeftHandPrefab_7() { return &___overridePreviewLeftHandPrefab_7; }
	inline void set_overridePreviewLeftHandPrefab_7(GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * value)
	{
		___overridePreviewLeftHandPrefab_7 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___overridePreviewLeftHandPrefab_7), (void*)value);
	}

	inline static int32_t get_offset_of_overridePreviewRightHandPrefab_8() { return static_cast<int32_t>(offsetof(SteamVR_Skeleton_Poser_t8BAF9FB80E002A7B21C380E9137C955DA4292CBA, ___overridePreviewRightHandPrefab_8)); }
	inline GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * get_overridePreviewRightHandPrefab_8() const { return ___overridePreviewRightHandPrefab_8; }
	inline GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F ** get_address_of_overridePreviewRightHandPrefab_8() { return &___overridePreviewRightHandPrefab_8; }
	inline void set_overridePreviewRightHandPrefab_8(GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * value)
	{
		___overridePreviewRightHandPrefab_8 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___overridePreviewRightHandPrefab_8), (void*)value);
	}

	inline static int32_t get_offset_of_skeletonMainPose_9() { return static_cast<int32_t>(offsetof(SteamVR_Skeleton_Poser_t8BAF9FB80E002A7B21C380E9137C955DA4292CBA, ___skeletonMainPose_9)); }
	inline SteamVR_Skeleton_Pose_tE0875BE0979F259871814680A295FF216A3FE593 * get_skeletonMainPose_9() const { return ___skeletonMainPose_9; }
	inline SteamVR_Skeleton_Pose_tE0875BE0979F259871814680A295FF216A3FE593 ** get_address_of_skeletonMainPose_9() { return &___skeletonMainPose_9; }
	inline void set_skeletonMainPose_9(SteamVR_Skeleton_Pose_tE0875BE0979F259871814680A295FF216A3FE593 * value)
	{
		___skeletonMainPose_9 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___skeletonMainPose_9), (void*)value);
	}

	inline static int32_t get_offset_of_skeletonAdditionalPoses_10() { return static_cast<int32_t>(offsetof(SteamVR_Skeleton_Poser_t8BAF9FB80E002A7B21C380E9137C955DA4292CBA, ___skeletonAdditionalPoses_10)); }
	inline List_1_tEC9949C3AED865A8508B828F7285A69E9B978B64 * get_skeletonAdditionalPoses_10() const { return ___skeletonAdditionalPoses_10; }
	inline List_1_tEC9949C3AED865A8508B828F7285A69E9B978B64 ** get_address_of_skeletonAdditionalPoses_10() { return &___skeletonAdditionalPoses_10; }
	inline void set_skeletonAdditionalPoses_10(List_1_tEC9949C3AED865A8508B828F7285A69E9B978B64 * value)
	{
		___skeletonAdditionalPoses_10 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___skeletonAdditionalPoses_10), (void*)value);
	}

	inline static int32_t get_offset_of_showLeftPreview_11() { return static_cast<int32_t>(offsetof(SteamVR_Skeleton_Poser_t8BAF9FB80E002A7B21C380E9137C955DA4292CBA, ___showLeftPreview_11)); }
	inline bool get_showLeftPreview_11() const { return ___showLeftPreview_11; }
	inline bool* get_address_of_showLeftPreview_11() { return &___showLeftPreview_11; }
	inline void set_showLeftPreview_11(bool value)
	{
		___showLeftPreview_11 = value;
	}

	inline static int32_t get_offset_of_showRightPreview_12() { return static_cast<int32_t>(offsetof(SteamVR_Skeleton_Poser_t8BAF9FB80E002A7B21C380E9137C955DA4292CBA, ___showRightPreview_12)); }
	inline bool get_showRightPreview_12() const { return ___showRightPreview_12; }
	inline bool* get_address_of_showRightPreview_12() { return &___showRightPreview_12; }
	inline void set_showRightPreview_12(bool value)
	{
		___showRightPreview_12 = value;
	}

	inline static int32_t get_offset_of_previewLeftInstance_13() { return static_cast<int32_t>(offsetof(SteamVR_Skeleton_Poser_t8BAF9FB80E002A7B21C380E9137C955DA4292CBA, ___previewLeftInstance_13)); }
	inline GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * get_previewLeftInstance_13() const { return ___previewLeftInstance_13; }
	inline GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F ** get_address_of_previewLeftInstance_13() { return &___previewLeftInstance_13; }
	inline void set_previewLeftInstance_13(GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * value)
	{
		___previewLeftInstance_13 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___previewLeftInstance_13), (void*)value);
	}

	inline static int32_t get_offset_of_previewRightInstance_14() { return static_cast<int32_t>(offsetof(SteamVR_Skeleton_Poser_t8BAF9FB80E002A7B21C380E9137C955DA4292CBA, ___previewRightInstance_14)); }
	inline GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * get_previewRightInstance_14() const { return ___previewRightInstance_14; }
	inline GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F ** get_address_of_previewRightInstance_14() { return &___previewRightInstance_14; }
	inline void set_previewRightInstance_14(GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * value)
	{
		___previewRightInstance_14 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___previewRightInstance_14), (void*)value);
	}

	inline static int32_t get_offset_of_previewPoseSelection_15() { return static_cast<int32_t>(offsetof(SteamVR_Skeleton_Poser_t8BAF9FB80E002A7B21C380E9137C955DA4292CBA, ___previewPoseSelection_15)); }
	inline int32_t get_previewPoseSelection_15() const { return ___previewPoseSelection_15; }
	inline int32_t* get_address_of_previewPoseSelection_15() { return &___previewPoseSelection_15; }
	inline void set_previewPoseSelection_15(int32_t value)
	{
		___previewPoseSelection_15 = value;
	}

	inline static int32_t get_offset_of_blendingBehaviours_16() { return static_cast<int32_t>(offsetof(SteamVR_Skeleton_Poser_t8BAF9FB80E002A7B21C380E9137C955DA4292CBA, ___blendingBehaviours_16)); }
	inline List_1_tA37A95A513EA43988C85E8625FFEA127707FFAF7 * get_blendingBehaviours_16() const { return ___blendingBehaviours_16; }
	inline List_1_tA37A95A513EA43988C85E8625FFEA127707FFAF7 ** get_address_of_blendingBehaviours_16() { return &___blendingBehaviours_16; }
	inline void set_blendingBehaviours_16(List_1_tA37A95A513EA43988C85E8625FFEA127707FFAF7 * value)
	{
		___blendingBehaviours_16 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___blendingBehaviours_16), (void*)value);
	}

	inline static int32_t get_offset_of_blendedSnapshotL_17() { return static_cast<int32_t>(offsetof(SteamVR_Skeleton_Poser_t8BAF9FB80E002A7B21C380E9137C955DA4292CBA, ___blendedSnapshotL_17)); }
	inline SteamVR_Skeleton_PoseSnapshot_t0E1C4250EA9F357DFC204D8E5D9C2111593C3E18 * get_blendedSnapshotL_17() const { return ___blendedSnapshotL_17; }
	inline SteamVR_Skeleton_PoseSnapshot_t0E1C4250EA9F357DFC204D8E5D9C2111593C3E18 ** get_address_of_blendedSnapshotL_17() { return &___blendedSnapshotL_17; }
	inline void set_blendedSnapshotL_17(SteamVR_Skeleton_PoseSnapshot_t0E1C4250EA9F357DFC204D8E5D9C2111593C3E18 * value)
	{
		___blendedSnapshotL_17 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___blendedSnapshotL_17), (void*)value);
	}

	inline static int32_t get_offset_of_blendedSnapshotR_18() { return static_cast<int32_t>(offsetof(SteamVR_Skeleton_Poser_t8BAF9FB80E002A7B21C380E9137C955DA4292CBA, ___blendedSnapshotR_18)); }
	inline SteamVR_Skeleton_PoseSnapshot_t0E1C4250EA9F357DFC204D8E5D9C2111593C3E18 * get_blendedSnapshotR_18() const { return ___blendedSnapshotR_18; }
	inline SteamVR_Skeleton_PoseSnapshot_t0E1C4250EA9F357DFC204D8E5D9C2111593C3E18 ** get_address_of_blendedSnapshotR_18() { return &___blendedSnapshotR_18; }
	inline void set_blendedSnapshotR_18(SteamVR_Skeleton_PoseSnapshot_t0E1C4250EA9F357DFC204D8E5D9C2111593C3E18 * value)
	{
		___blendedSnapshotR_18 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___blendedSnapshotR_18), (void*)value);
	}

	inline static int32_t get_offset_of_blendPoses_19() { return static_cast<int32_t>(offsetof(SteamVR_Skeleton_Poser_t8BAF9FB80E002A7B21C380E9137C955DA4292CBA, ___blendPoses_19)); }
	inline SkeletonBlendablePoseU5BU5D_t1F42997ACA8283764F25AD642DD4B2868449BAC2* get_blendPoses_19() const { return ___blendPoses_19; }
	inline SkeletonBlendablePoseU5BU5D_t1F42997ACA8283764F25AD642DD4B2868449BAC2** get_address_of_blendPoses_19() { return &___blendPoses_19; }
	inline void set_blendPoses_19(SkeletonBlendablePoseU5BU5D_t1F42997ACA8283764F25AD642DD4B2868449BAC2* value)
	{
		___blendPoses_19 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___blendPoses_19), (void*)value);
	}

	inline static int32_t get_offset_of_boneCount_20() { return static_cast<int32_t>(offsetof(SteamVR_Skeleton_Poser_t8BAF9FB80E002A7B21C380E9137C955DA4292CBA, ___boneCount_20)); }
	inline int32_t get_boneCount_20() const { return ___boneCount_20; }
	inline int32_t* get_address_of_boneCount_20() { return &___boneCount_20; }
	inline void set_boneCount_20(int32_t value)
	{
		___boneCount_20 = value;
	}

	inline static int32_t get_offset_of_poseUpdatedThisFrame_21() { return static_cast<int32_t>(offsetof(SteamVR_Skeleton_Poser_t8BAF9FB80E002A7B21C380E9137C955DA4292CBA, ___poseUpdatedThisFrame_21)); }
	inline bool get_poseUpdatedThisFrame_21() const { return ___poseUpdatedThisFrame_21; }
	inline bool* get_address_of_poseUpdatedThisFrame_21() { return &___poseUpdatedThisFrame_21; }
	inline void set_poseUpdatedThisFrame_21(bool value)
	{
		___poseUpdatedThisFrame_21 = value;
	}

	inline static int32_t get_offset_of_scale_22() { return static_cast<int32_t>(offsetof(SteamVR_Skeleton_Poser_t8BAF9FB80E002A7B21C380E9137C955DA4292CBA, ___scale_22)); }
	inline float get_scale_22() const { return ___scale_22; }
	inline float* get_address_of_scale_22() { return &___scale_22; }
	inline void set_scale_22(float value)
	{
		___scale_22 = value;
	}
};


// Valve.VR.SteamVR_Behaviour_SkeletonCustom
struct  SteamVR_Behaviour_SkeletonCustom_t9C282A2B1009A9AEBA27B48F403138E32EC623E7  : public SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A
{
public:
	// UnityEngine.Transform Valve.VR.SteamVR_Behaviour_SkeletonCustom::_wrist
	Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * ____wrist_38;
	// UnityEngine.Transform Valve.VR.SteamVR_Behaviour_SkeletonCustom::_thumbMetacarpal
	Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * ____thumbMetacarpal_39;
	// UnityEngine.Transform Valve.VR.SteamVR_Behaviour_SkeletonCustom::_thumbProximal
	Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * ____thumbProximal_40;
	// UnityEngine.Transform Valve.VR.SteamVR_Behaviour_SkeletonCustom::_thumbMiddle
	Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * ____thumbMiddle_41;
	// UnityEngine.Transform Valve.VR.SteamVR_Behaviour_SkeletonCustom::_thumbDistal
	Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * ____thumbDistal_42;
	// UnityEngine.Transform Valve.VR.SteamVR_Behaviour_SkeletonCustom::_thumbTip
	Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * ____thumbTip_43;
	// UnityEngine.Transform Valve.VR.SteamVR_Behaviour_SkeletonCustom::_thumbAux
	Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * ____thumbAux_44;
	// UnityEngine.Transform Valve.VR.SteamVR_Behaviour_SkeletonCustom::_indexMetacarpal
	Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * ____indexMetacarpal_45;
	// UnityEngine.Transform Valve.VR.SteamVR_Behaviour_SkeletonCustom::_indexProximal
	Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * ____indexProximal_46;
	// UnityEngine.Transform Valve.VR.SteamVR_Behaviour_SkeletonCustom::_indexMiddle
	Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * ____indexMiddle_47;
	// UnityEngine.Transform Valve.VR.SteamVR_Behaviour_SkeletonCustom::_indexDistal
	Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * ____indexDistal_48;
	// UnityEngine.Transform Valve.VR.SteamVR_Behaviour_SkeletonCustom::_indexTip
	Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * ____indexTip_49;
	// UnityEngine.Transform Valve.VR.SteamVR_Behaviour_SkeletonCustom::_indexAux
	Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * ____indexAux_50;
	// UnityEngine.Transform Valve.VR.SteamVR_Behaviour_SkeletonCustom::_middleMetacarpal
	Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * ____middleMetacarpal_51;
	// UnityEngine.Transform Valve.VR.SteamVR_Behaviour_SkeletonCustom::_middleProximal
	Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * ____middleProximal_52;
	// UnityEngine.Transform Valve.VR.SteamVR_Behaviour_SkeletonCustom::_middleMiddle
	Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * ____middleMiddle_53;
	// UnityEngine.Transform Valve.VR.SteamVR_Behaviour_SkeletonCustom::_middleDistal
	Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * ____middleDistal_54;
	// UnityEngine.Transform Valve.VR.SteamVR_Behaviour_SkeletonCustom::_middleTip
	Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * ____middleTip_55;
	// UnityEngine.Transform Valve.VR.SteamVR_Behaviour_SkeletonCustom::_middleAux
	Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * ____middleAux_56;
	// UnityEngine.Transform Valve.VR.SteamVR_Behaviour_SkeletonCustom::_ringMetacarpal
	Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * ____ringMetacarpal_57;
	// UnityEngine.Transform Valve.VR.SteamVR_Behaviour_SkeletonCustom::_ringProximal
	Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * ____ringProximal_58;
	// UnityEngine.Transform Valve.VR.SteamVR_Behaviour_SkeletonCustom::_ringMiddle
	Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * ____ringMiddle_59;
	// UnityEngine.Transform Valve.VR.SteamVR_Behaviour_SkeletonCustom::_ringDistal
	Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * ____ringDistal_60;
	// UnityEngine.Transform Valve.VR.SteamVR_Behaviour_SkeletonCustom::_ringTip
	Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * ____ringTip_61;
	// UnityEngine.Transform Valve.VR.SteamVR_Behaviour_SkeletonCustom::_ringAux
	Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * ____ringAux_62;
	// UnityEngine.Transform Valve.VR.SteamVR_Behaviour_SkeletonCustom::_pinkyMetacarpal
	Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * ____pinkyMetacarpal_63;
	// UnityEngine.Transform Valve.VR.SteamVR_Behaviour_SkeletonCustom::_pinkyProximal
	Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * ____pinkyProximal_64;
	// UnityEngine.Transform Valve.VR.SteamVR_Behaviour_SkeletonCustom::_pinkyMiddle
	Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * ____pinkyMiddle_65;
	// UnityEngine.Transform Valve.VR.SteamVR_Behaviour_SkeletonCustom::_pinkyDistal
	Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * ____pinkyDistal_66;
	// UnityEngine.Transform Valve.VR.SteamVR_Behaviour_SkeletonCustom::_pinkyTip
	Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * ____pinkyTip_67;
	// UnityEngine.Transform Valve.VR.SteamVR_Behaviour_SkeletonCustom::_pinkyAux
	Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * ____pinkyAux_68;

public:
	inline static int32_t get_offset_of__wrist_38() { return static_cast<int32_t>(offsetof(SteamVR_Behaviour_SkeletonCustom_t9C282A2B1009A9AEBA27B48F403138E32EC623E7, ____wrist_38)); }
	inline Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * get__wrist_38() const { return ____wrist_38; }
	inline Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA ** get_address_of__wrist_38() { return &____wrist_38; }
	inline void set__wrist_38(Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * value)
	{
		____wrist_38 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____wrist_38), (void*)value);
	}

	inline static int32_t get_offset_of__thumbMetacarpal_39() { return static_cast<int32_t>(offsetof(SteamVR_Behaviour_SkeletonCustom_t9C282A2B1009A9AEBA27B48F403138E32EC623E7, ____thumbMetacarpal_39)); }
	inline Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * get__thumbMetacarpal_39() const { return ____thumbMetacarpal_39; }
	inline Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA ** get_address_of__thumbMetacarpal_39() { return &____thumbMetacarpal_39; }
	inline void set__thumbMetacarpal_39(Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * value)
	{
		____thumbMetacarpal_39 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____thumbMetacarpal_39), (void*)value);
	}

	inline static int32_t get_offset_of__thumbProximal_40() { return static_cast<int32_t>(offsetof(SteamVR_Behaviour_SkeletonCustom_t9C282A2B1009A9AEBA27B48F403138E32EC623E7, ____thumbProximal_40)); }
	inline Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * get__thumbProximal_40() const { return ____thumbProximal_40; }
	inline Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA ** get_address_of__thumbProximal_40() { return &____thumbProximal_40; }
	inline void set__thumbProximal_40(Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * value)
	{
		____thumbProximal_40 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____thumbProximal_40), (void*)value);
	}

	inline static int32_t get_offset_of__thumbMiddle_41() { return static_cast<int32_t>(offsetof(SteamVR_Behaviour_SkeletonCustom_t9C282A2B1009A9AEBA27B48F403138E32EC623E7, ____thumbMiddle_41)); }
	inline Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * get__thumbMiddle_41() const { return ____thumbMiddle_41; }
	inline Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA ** get_address_of__thumbMiddle_41() { return &____thumbMiddle_41; }
	inline void set__thumbMiddle_41(Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * value)
	{
		____thumbMiddle_41 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____thumbMiddle_41), (void*)value);
	}

	inline static int32_t get_offset_of__thumbDistal_42() { return static_cast<int32_t>(offsetof(SteamVR_Behaviour_SkeletonCustom_t9C282A2B1009A9AEBA27B48F403138E32EC623E7, ____thumbDistal_42)); }
	inline Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * get__thumbDistal_42() const { return ____thumbDistal_42; }
	inline Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA ** get_address_of__thumbDistal_42() { return &____thumbDistal_42; }
	inline void set__thumbDistal_42(Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * value)
	{
		____thumbDistal_42 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____thumbDistal_42), (void*)value);
	}

	inline static int32_t get_offset_of__thumbTip_43() { return static_cast<int32_t>(offsetof(SteamVR_Behaviour_SkeletonCustom_t9C282A2B1009A9AEBA27B48F403138E32EC623E7, ____thumbTip_43)); }
	inline Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * get__thumbTip_43() const { return ____thumbTip_43; }
	inline Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA ** get_address_of__thumbTip_43() { return &____thumbTip_43; }
	inline void set__thumbTip_43(Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * value)
	{
		____thumbTip_43 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____thumbTip_43), (void*)value);
	}

	inline static int32_t get_offset_of__thumbAux_44() { return static_cast<int32_t>(offsetof(SteamVR_Behaviour_SkeletonCustom_t9C282A2B1009A9AEBA27B48F403138E32EC623E7, ____thumbAux_44)); }
	inline Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * get__thumbAux_44() const { return ____thumbAux_44; }
	inline Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA ** get_address_of__thumbAux_44() { return &____thumbAux_44; }
	inline void set__thumbAux_44(Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * value)
	{
		____thumbAux_44 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____thumbAux_44), (void*)value);
	}

	inline static int32_t get_offset_of__indexMetacarpal_45() { return static_cast<int32_t>(offsetof(SteamVR_Behaviour_SkeletonCustom_t9C282A2B1009A9AEBA27B48F403138E32EC623E7, ____indexMetacarpal_45)); }
	inline Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * get__indexMetacarpal_45() const { return ____indexMetacarpal_45; }
	inline Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA ** get_address_of__indexMetacarpal_45() { return &____indexMetacarpal_45; }
	inline void set__indexMetacarpal_45(Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * value)
	{
		____indexMetacarpal_45 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____indexMetacarpal_45), (void*)value);
	}

	inline static int32_t get_offset_of__indexProximal_46() { return static_cast<int32_t>(offsetof(SteamVR_Behaviour_SkeletonCustom_t9C282A2B1009A9AEBA27B48F403138E32EC623E7, ____indexProximal_46)); }
	inline Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * get__indexProximal_46() const { return ____indexProximal_46; }
	inline Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA ** get_address_of__indexProximal_46() { return &____indexProximal_46; }
	inline void set__indexProximal_46(Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * value)
	{
		____indexProximal_46 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____indexProximal_46), (void*)value);
	}

	inline static int32_t get_offset_of__indexMiddle_47() { return static_cast<int32_t>(offsetof(SteamVR_Behaviour_SkeletonCustom_t9C282A2B1009A9AEBA27B48F403138E32EC623E7, ____indexMiddle_47)); }
	inline Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * get__indexMiddle_47() const { return ____indexMiddle_47; }
	inline Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA ** get_address_of__indexMiddle_47() { return &____indexMiddle_47; }
	inline void set__indexMiddle_47(Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * value)
	{
		____indexMiddle_47 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____indexMiddle_47), (void*)value);
	}

	inline static int32_t get_offset_of__indexDistal_48() { return static_cast<int32_t>(offsetof(SteamVR_Behaviour_SkeletonCustom_t9C282A2B1009A9AEBA27B48F403138E32EC623E7, ____indexDistal_48)); }
	inline Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * get__indexDistal_48() const { return ____indexDistal_48; }
	inline Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA ** get_address_of__indexDistal_48() { return &____indexDistal_48; }
	inline void set__indexDistal_48(Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * value)
	{
		____indexDistal_48 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____indexDistal_48), (void*)value);
	}

	inline static int32_t get_offset_of__indexTip_49() { return static_cast<int32_t>(offsetof(SteamVR_Behaviour_SkeletonCustom_t9C282A2B1009A9AEBA27B48F403138E32EC623E7, ____indexTip_49)); }
	inline Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * get__indexTip_49() const { return ____indexTip_49; }
	inline Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA ** get_address_of__indexTip_49() { return &____indexTip_49; }
	inline void set__indexTip_49(Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * value)
	{
		____indexTip_49 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____indexTip_49), (void*)value);
	}

	inline static int32_t get_offset_of__indexAux_50() { return static_cast<int32_t>(offsetof(SteamVR_Behaviour_SkeletonCustom_t9C282A2B1009A9AEBA27B48F403138E32EC623E7, ____indexAux_50)); }
	inline Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * get__indexAux_50() const { return ____indexAux_50; }
	inline Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA ** get_address_of__indexAux_50() { return &____indexAux_50; }
	inline void set__indexAux_50(Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * value)
	{
		____indexAux_50 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____indexAux_50), (void*)value);
	}

	inline static int32_t get_offset_of__middleMetacarpal_51() { return static_cast<int32_t>(offsetof(SteamVR_Behaviour_SkeletonCustom_t9C282A2B1009A9AEBA27B48F403138E32EC623E7, ____middleMetacarpal_51)); }
	inline Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * get__middleMetacarpal_51() const { return ____middleMetacarpal_51; }
	inline Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA ** get_address_of__middleMetacarpal_51() { return &____middleMetacarpal_51; }
	inline void set__middleMetacarpal_51(Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * value)
	{
		____middleMetacarpal_51 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____middleMetacarpal_51), (void*)value);
	}

	inline static int32_t get_offset_of__middleProximal_52() { return static_cast<int32_t>(offsetof(SteamVR_Behaviour_SkeletonCustom_t9C282A2B1009A9AEBA27B48F403138E32EC623E7, ____middleProximal_52)); }
	inline Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * get__middleProximal_52() const { return ____middleProximal_52; }
	inline Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA ** get_address_of__middleProximal_52() { return &____middleProximal_52; }
	inline void set__middleProximal_52(Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * value)
	{
		____middleProximal_52 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____middleProximal_52), (void*)value);
	}

	inline static int32_t get_offset_of__middleMiddle_53() { return static_cast<int32_t>(offsetof(SteamVR_Behaviour_SkeletonCustom_t9C282A2B1009A9AEBA27B48F403138E32EC623E7, ____middleMiddle_53)); }
	inline Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * get__middleMiddle_53() const { return ____middleMiddle_53; }
	inline Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA ** get_address_of__middleMiddle_53() { return &____middleMiddle_53; }
	inline void set__middleMiddle_53(Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * value)
	{
		____middleMiddle_53 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____middleMiddle_53), (void*)value);
	}

	inline static int32_t get_offset_of__middleDistal_54() { return static_cast<int32_t>(offsetof(SteamVR_Behaviour_SkeletonCustom_t9C282A2B1009A9AEBA27B48F403138E32EC623E7, ____middleDistal_54)); }
	inline Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * get__middleDistal_54() const { return ____middleDistal_54; }
	inline Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA ** get_address_of__middleDistal_54() { return &____middleDistal_54; }
	inline void set__middleDistal_54(Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * value)
	{
		____middleDistal_54 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____middleDistal_54), (void*)value);
	}

	inline static int32_t get_offset_of__middleTip_55() { return static_cast<int32_t>(offsetof(SteamVR_Behaviour_SkeletonCustom_t9C282A2B1009A9AEBA27B48F403138E32EC623E7, ____middleTip_55)); }
	inline Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * get__middleTip_55() const { return ____middleTip_55; }
	inline Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA ** get_address_of__middleTip_55() { return &____middleTip_55; }
	inline void set__middleTip_55(Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * value)
	{
		____middleTip_55 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____middleTip_55), (void*)value);
	}

	inline static int32_t get_offset_of__middleAux_56() { return static_cast<int32_t>(offsetof(SteamVR_Behaviour_SkeletonCustom_t9C282A2B1009A9AEBA27B48F403138E32EC623E7, ____middleAux_56)); }
	inline Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * get__middleAux_56() const { return ____middleAux_56; }
	inline Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA ** get_address_of__middleAux_56() { return &____middleAux_56; }
	inline void set__middleAux_56(Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * value)
	{
		____middleAux_56 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____middleAux_56), (void*)value);
	}

	inline static int32_t get_offset_of__ringMetacarpal_57() { return static_cast<int32_t>(offsetof(SteamVR_Behaviour_SkeletonCustom_t9C282A2B1009A9AEBA27B48F403138E32EC623E7, ____ringMetacarpal_57)); }
	inline Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * get__ringMetacarpal_57() const { return ____ringMetacarpal_57; }
	inline Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA ** get_address_of__ringMetacarpal_57() { return &____ringMetacarpal_57; }
	inline void set__ringMetacarpal_57(Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * value)
	{
		____ringMetacarpal_57 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____ringMetacarpal_57), (void*)value);
	}

	inline static int32_t get_offset_of__ringProximal_58() { return static_cast<int32_t>(offsetof(SteamVR_Behaviour_SkeletonCustom_t9C282A2B1009A9AEBA27B48F403138E32EC623E7, ____ringProximal_58)); }
	inline Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * get__ringProximal_58() const { return ____ringProximal_58; }
	inline Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA ** get_address_of__ringProximal_58() { return &____ringProximal_58; }
	inline void set__ringProximal_58(Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * value)
	{
		____ringProximal_58 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____ringProximal_58), (void*)value);
	}

	inline static int32_t get_offset_of__ringMiddle_59() { return static_cast<int32_t>(offsetof(SteamVR_Behaviour_SkeletonCustom_t9C282A2B1009A9AEBA27B48F403138E32EC623E7, ____ringMiddle_59)); }
	inline Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * get__ringMiddle_59() const { return ____ringMiddle_59; }
	inline Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA ** get_address_of__ringMiddle_59() { return &____ringMiddle_59; }
	inline void set__ringMiddle_59(Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * value)
	{
		____ringMiddle_59 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____ringMiddle_59), (void*)value);
	}

	inline static int32_t get_offset_of__ringDistal_60() { return static_cast<int32_t>(offsetof(SteamVR_Behaviour_SkeletonCustom_t9C282A2B1009A9AEBA27B48F403138E32EC623E7, ____ringDistal_60)); }
	inline Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * get__ringDistal_60() const { return ____ringDistal_60; }
	inline Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA ** get_address_of__ringDistal_60() { return &____ringDistal_60; }
	inline void set__ringDistal_60(Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * value)
	{
		____ringDistal_60 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____ringDistal_60), (void*)value);
	}

	inline static int32_t get_offset_of__ringTip_61() { return static_cast<int32_t>(offsetof(SteamVR_Behaviour_SkeletonCustom_t9C282A2B1009A9AEBA27B48F403138E32EC623E7, ____ringTip_61)); }
	inline Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * get__ringTip_61() const { return ____ringTip_61; }
	inline Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA ** get_address_of__ringTip_61() { return &____ringTip_61; }
	inline void set__ringTip_61(Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * value)
	{
		____ringTip_61 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____ringTip_61), (void*)value);
	}

	inline static int32_t get_offset_of__ringAux_62() { return static_cast<int32_t>(offsetof(SteamVR_Behaviour_SkeletonCustom_t9C282A2B1009A9AEBA27B48F403138E32EC623E7, ____ringAux_62)); }
	inline Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * get__ringAux_62() const { return ____ringAux_62; }
	inline Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA ** get_address_of__ringAux_62() { return &____ringAux_62; }
	inline void set__ringAux_62(Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * value)
	{
		____ringAux_62 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____ringAux_62), (void*)value);
	}

	inline static int32_t get_offset_of__pinkyMetacarpal_63() { return static_cast<int32_t>(offsetof(SteamVR_Behaviour_SkeletonCustom_t9C282A2B1009A9AEBA27B48F403138E32EC623E7, ____pinkyMetacarpal_63)); }
	inline Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * get__pinkyMetacarpal_63() const { return ____pinkyMetacarpal_63; }
	inline Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA ** get_address_of__pinkyMetacarpal_63() { return &____pinkyMetacarpal_63; }
	inline void set__pinkyMetacarpal_63(Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * value)
	{
		____pinkyMetacarpal_63 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____pinkyMetacarpal_63), (void*)value);
	}

	inline static int32_t get_offset_of__pinkyProximal_64() { return static_cast<int32_t>(offsetof(SteamVR_Behaviour_SkeletonCustom_t9C282A2B1009A9AEBA27B48F403138E32EC623E7, ____pinkyProximal_64)); }
	inline Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * get__pinkyProximal_64() const { return ____pinkyProximal_64; }
	inline Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA ** get_address_of__pinkyProximal_64() { return &____pinkyProximal_64; }
	inline void set__pinkyProximal_64(Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * value)
	{
		____pinkyProximal_64 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____pinkyProximal_64), (void*)value);
	}

	inline static int32_t get_offset_of__pinkyMiddle_65() { return static_cast<int32_t>(offsetof(SteamVR_Behaviour_SkeletonCustom_t9C282A2B1009A9AEBA27B48F403138E32EC623E7, ____pinkyMiddle_65)); }
	inline Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * get__pinkyMiddle_65() const { return ____pinkyMiddle_65; }
	inline Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA ** get_address_of__pinkyMiddle_65() { return &____pinkyMiddle_65; }
	inline void set__pinkyMiddle_65(Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * value)
	{
		____pinkyMiddle_65 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____pinkyMiddle_65), (void*)value);
	}

	inline static int32_t get_offset_of__pinkyDistal_66() { return static_cast<int32_t>(offsetof(SteamVR_Behaviour_SkeletonCustom_t9C282A2B1009A9AEBA27B48F403138E32EC623E7, ____pinkyDistal_66)); }
	inline Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * get__pinkyDistal_66() const { return ____pinkyDistal_66; }
	inline Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA ** get_address_of__pinkyDistal_66() { return &____pinkyDistal_66; }
	inline void set__pinkyDistal_66(Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * value)
	{
		____pinkyDistal_66 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____pinkyDistal_66), (void*)value);
	}

	inline static int32_t get_offset_of__pinkyTip_67() { return static_cast<int32_t>(offsetof(SteamVR_Behaviour_SkeletonCustom_t9C282A2B1009A9AEBA27B48F403138E32EC623E7, ____pinkyTip_67)); }
	inline Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * get__pinkyTip_67() const { return ____pinkyTip_67; }
	inline Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA ** get_address_of__pinkyTip_67() { return &____pinkyTip_67; }
	inline void set__pinkyTip_67(Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * value)
	{
		____pinkyTip_67 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____pinkyTip_67), (void*)value);
	}

	inline static int32_t get_offset_of__pinkyAux_68() { return static_cast<int32_t>(offsetof(SteamVR_Behaviour_SkeletonCustom_t9C282A2B1009A9AEBA27B48F403138E32EC623E7, ____pinkyAux_68)); }
	inline Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * get__pinkyAux_68() const { return ____pinkyAux_68; }
	inline Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA ** get_address_of__pinkyAux_68() { return &____pinkyAux_68; }
	inline void set__pinkyAux_68(Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * value)
	{
		____pinkyAux_68 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____pinkyAux_68), (void*)value);
	}
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
// System.Delegate[]
struct DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86  : public RuntimeArray
{
public:
	ALIGN_FIELD (8) Delegate_t * m_Items[1];

public:
	inline Delegate_t * GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline Delegate_t ** GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, Delegate_t * value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
		Il2CppCodeGenWriteBarrier((void**)m_Items + index, (void*)value);
	}
	inline Delegate_t * GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline Delegate_t ** GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, Delegate_t * value)
	{
		m_Items[index] = value;
		Il2CppCodeGenWriteBarrier((void**)m_Items + index, (void*)value);
	}
};
// System.String[]
struct StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E  : public RuntimeArray
{
public:
	ALIGN_FIELD (8) String_t* m_Items[1];

public:
	inline String_t* GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline String_t** GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, String_t* value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
		Il2CppCodeGenWriteBarrier((void**)m_Items + index, (void*)value);
	}
	inline String_t* GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline String_t** GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, String_t* value)
	{
		m_Items[index] = value;
		Il2CppCodeGenWriteBarrier((void**)m_Items + index, (void*)value);
	}
};
// Valve.VR.SteamVR_Action_Vibration_Source[]
struct SteamVR_Action_Vibration_SourceU5BU5D_tB39B74339680889980518AF68E5B5AB014912A04  : public RuntimeArray
{
public:
	ALIGN_FIELD (8) SteamVR_Action_Vibration_Source_tB30315A543AA13F11BB80C1D5C7DEDF37058C151 * m_Items[1];

public:
	inline SteamVR_Action_Vibration_Source_tB30315A543AA13F11BB80C1D5C7DEDF37058C151 * GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline SteamVR_Action_Vibration_Source_tB30315A543AA13F11BB80C1D5C7DEDF37058C151 ** GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, SteamVR_Action_Vibration_Source_tB30315A543AA13F11BB80C1D5C7DEDF37058C151 * value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
		Il2CppCodeGenWriteBarrier((void**)m_Items + index, (void*)value);
	}
	inline SteamVR_Action_Vibration_Source_tB30315A543AA13F11BB80C1D5C7DEDF37058C151 * GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline SteamVR_Action_Vibration_Source_tB30315A543AA13F11BB80C1D5C7DEDF37058C151 ** GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, SteamVR_Action_Vibration_Source_tB30315A543AA13F11BB80C1D5C7DEDF37058C151 * value)
	{
		m_Items[index] = value;
		Il2CppCodeGenWriteBarrier((void**)m_Items + index, (void*)value);
	}
};
// Valve.VR.EVRInputStringBits[]
struct EVRInputStringBitsU5BU5D_t9F9E9B47CD745CAAB4F8EDC305D84DDF9E5BE511  : public RuntimeArray
{
public:
	ALIGN_FIELD (8) int32_t m_Items[1];

public:
	inline int32_t GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline int32_t* GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, int32_t value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
	}
	inline int32_t GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline int32_t* GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, int32_t value)
	{
		m_Items[index] = value;
	}
};
// System.Single[]
struct SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5  : public RuntimeArray
{
public:
	ALIGN_FIELD (8) float m_Items[1];

public:
	inline float GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline float* GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, float value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
	}
	inline float GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline float* GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, float value)
	{
		m_Items[index] = value;
	}
};
// UnityEngine.Transform[]
struct TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804  : public RuntimeArray
{
public:
	ALIGN_FIELD (8) Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * m_Items[1];

public:
	inline Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA ** GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
		Il2CppCodeGenWriteBarrier((void**)m_Items + index, (void*)value);
	}
	inline Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA ** GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * value)
	{
		m_Items[index] = value;
		Il2CppCodeGenWriteBarrier((void**)m_Items + index, (void*)value);
	}
};
// UnityEngine.Quaternion[]
struct QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3  : public RuntimeArray
{
public:
	ALIGN_FIELD (8) Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  m_Items[1];

public:
	inline Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357 * GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
	}
	inline Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357 * GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  value)
	{
		m_Items[index] = value;
	}
};
// UnityEngine.Vector3[]
struct Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28  : public RuntimeArray
{
public:
	ALIGN_FIELD (8) Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  m_Items[1];

public:
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
	}
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		m_Items[index] = value;
	}
};
// SteamVR_Utils_RigidTransform[]
struct RigidTransformU5BU5D_tC98EB3576009E5D825D0D43671A65D32A2449ECC  : public RuntimeArray
{
public:
	ALIGN_FIELD (8) RigidTransform_t0E8A00F7013270B6B2254F29B4FFEAA6783CD905  m_Items[1];

public:
	inline RigidTransform_t0E8A00F7013270B6B2254F29B4FFEAA6783CD905  GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline RigidTransform_t0E8A00F7013270B6B2254F29B4FFEAA6783CD905 * GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, RigidTransform_t0E8A00F7013270B6B2254F29B4FFEAA6783CD905  value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
	}
	inline RigidTransform_t0E8A00F7013270B6B2254F29B4FFEAA6783CD905  GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline RigidTransform_t0E8A00F7013270B6B2254F29B4FFEAA6783CD905 * GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, RigidTransform_t0E8A00F7013270B6B2254F29B4FFEAA6783CD905  value)
	{
		m_Items[index] = value;
	}
};


// System.Void Valve.VR.SteamVR_Action_In_Source_Map`1<System.Object>::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_In_Source_Map_1__ctor_mABEF0F1512ABB73914B960E4A67930AC81E767F1_gshared (SteamVR_Action_In_Source_Map_1_t7F4F1E354FE5A814AEA83C884D31215ED36A1A8D * __this, const RuntimeMethod* method);
// SourceElement Valve.VR.SteamVR_Action_Source_Map`1<System.Object>::get_Item(Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject * SteamVR_Action_Source_Map_1_get_Item_mE7E2BE18AECB1CDFEADB1E81CEC1C729BBACAB4D_gshared (SteamVR_Action_Source_Map_1_tCAA2C8FE17BA000619F1ADE00A17D8037F5B4B14 * __this, int32_t ___inputSource0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Out`2<System.Object,System.Object>::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Out_2__ctor_m57D7973945ED4670545ED47E0BB47329C1939FFF_gshared (SteamVR_Action_Out_2_tBFC90712829F4A53DB24EF908459C469ADC749B7 * __this, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action`2<System.Object,System.Object>::InitAfterDeserialize()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_2_InitAfterDeserialize_mCC6445068DDB02EA2F504749308CE3382698F4BE_gshared (SteamVR_Action_2_t17CE6363B177E4D037F3097259B68D6F8842CC5B * __this, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Source_Map`1<System.Object>::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Source_Map_1__ctor_mE8EB35AF2F507C1EA04DB21FFAE722DFE57C6B25_gshared (SteamVR_Action_Source_Map_1_tCAA2C8FE17BA000619F1ADE00A17D8037F5B4B14 * __this, const RuntimeMethod* method);
// !!0 UnityEngine.Object::FindObjectOfType<System.Object>()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject * Object_FindObjectOfType_TisRuntimeObject_m251F203B12669585A5E663F529F6DF09F931B5DA_gshared (const RuntimeMethod* method);
// !!0 UnityEngine.GameObject::AddComponent<System.Object>()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject * GameObject_AddComponent_TisRuntimeObject_mE053F7A95F30AFF07D69F0DED3DA13AE2EC25E03_gshared (GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * __this, const RuntimeMethod* method);
// !!0 UnityEngine.GameObject::GetComponent<System.Object>()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject * GameObject_GetComponent_TisRuntimeObject_mE03C66715289D7957CA068A675826B7EE0887BE3_gshared (GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * __this, const RuntimeMethod* method);
// System.Void UnityEngine.Events.UnityAction`1<Valve.VR.VREvent_t>::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UnityAction_1__ctor_m95AA3CDDC630B39635645E005E7D9BFCD3518199_gshared (UnityAction_1_tB43C1CF1D8DCDDE3590ED959587DB9809C1294BF * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Events/Event`1<Valve.VR.VREvent_t>::Listen(UnityEngine.Events.UnityAction`1<T>)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Event_1_Listen_m38BA8AB8A10A0202B52B3F5CA7DB8056FDC0FBE0_gshared (Event_1_t5DB0CDA7FD2616DA8770700B1A982E1A0F052262 * __this, UnityAction_1_tB43C1CF1D8DCDDE3590ED959587DB9809C1294BF * ___action0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Events/Event`1<Valve.VR.VREvent_t>::Remove(UnityEngine.Events.UnityAction`1<T>)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Event_1_Remove_mF12BABD97A66E13257D4ECEDA7C4264DF073D93A_gshared (Event_1_t5DB0CDA7FD2616DA8770700B1A982E1A0F052262 * __this, UnityAction_1_tB43C1CF1D8DCDDE3590ED959587DB9809C1294BF * ___action0, const RuntimeMethod* method);
// System.Void System.Action`1<System.Object>::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Action_1__ctor_mAFC7442D9D3CEC6701C3C5599F8CF12476095510_gshared (Action_1_t551A279CEADCF6EEAE8FA2B1E1E757D0D15290D0 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method);
// System.Void UnityEngine.Events.UnityEvent`3<System.Object,System.Int32Enum,System.Boolean>::Invoke(!0,!1,!2)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UnityEvent_3_Invoke_mCCCB26A54DDDE4C45AB75841D6EC25543250237E_gshared (UnityEvent_3_t4DB54CE335910AFA0DAA4CDC4D3526D8245C94D5 * __this, RuntimeObject * ___arg00, int32_t ___arg11, bool ___arg22, const RuntimeMethod* method);
// System.String Valve.VR.SteamVR_Action_In`2<System.Object,System.Object>::GetLocalizedOriginPart(Valve.VR.SteamVR_Input_Sources,Valve.VR.EVRInputStringBits[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR String_t* SteamVR_Action_In_2_GetLocalizedOriginPart_mEA178543F658F3C193F0ADAECE592F66F35D6A83_gshared (SteamVR_Action_In_2_t69D3F3E304EB8FE2A070ACD581E61CDFF8732243 * __this, int32_t ___inputSource0, EVRInputStringBitsU5BU5D_t9F9E9B47CD745CAAB4F8EDC305D84DDF9E5BE511* ___localizedParts1, const RuntimeMethod* method);
// System.Void UnityEngine.Events.UnityEvent`3<System.Object,System.Int32Enum,System.Boolean>::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UnityEvent_3__ctor_mFE485CA18703786ADB69D0B88DE90791DCACE4C0_gshared (UnityEvent_3_t4DB54CE335910AFA0DAA4CDC4D3526D8245C94D5 * __this, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_RingBuffer`1<System.Object>::Clear()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_RingBuffer_1_Clear_m97C5D575D1DA014FC1A4ED823619C2067088E96D_gshared (SteamVR_RingBuffer_1_tB6FE64DC340FF76D0FDC901B5FB739DA8458EE74 * __this, const RuntimeMethod* method);
// System.Void UnityEngine.Events.UnityEvent`2<System.Object,System.Int32Enum>::Invoke(!0,!1)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UnityEvent_2_Invoke_m8E0E3910F551485BB28258D9379D14BFAA534A22_gshared (UnityEvent_2_t805AE90FB19A3B2E903161B79BBB4F2DE5ADF91F * __this, RuntimeObject * ___arg00, int32_t ___arg11, const RuntimeMethod* method);
// System.Void UnityEngine.Events.UnityEvent`3<System.Object,System.Int32Enum,System.Int32Enum>::Invoke(!0,!1,!2)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UnityEvent_3_Invoke_m5C68F6A3763AEBC706B429DECC9B41FCD30511CB_gshared (UnityEvent_3_tC1C064339F75149418E4C62873257F468D82018A * __this, RuntimeObject * ___arg00, int32_t ___arg11, int32_t ___arg22, const RuntimeMethod* method);
// System.Void UnityEngine.Events.UnityEvent`3<System.Object,System.Int32Enum,System.Int32>::Invoke(!0,!1,!2)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UnityEvent_3_Invoke_mDEFB782BBAAE531C8690EF7387FD1828C15F47F0_gshared (UnityEvent_3_t703D19104F53A60C2167DF1AEA02C21EB9511988 * __this, RuntimeObject * ___arg00, int32_t ___arg11, int32_t ___arg22, const RuntimeMethod* method);
// T Valve.VR.SteamVR_Input::GetAction<System.Object>(System.String,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject * SteamVR_Input_GetAction_TisRuntimeObject_mE125D174FCDC6B1CAA20F418BC98C485C0B184A1_gshared (String_t* ___actionName0, bool ___caseSensitive1, const RuntimeMethod* method);
// System.Void UnityEngine.Events.UnityEvent`2<System.Object,System.Int32Enum>::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UnityEvent_2__ctor_m90C3B8ED5DA3821DD3264EEAD585A64D22D376E8_gshared (UnityEvent_2_t805AE90FB19A3B2E903161B79BBB4F2DE5ADF91F * __this, const RuntimeMethod* method);
// System.Void UnityEngine.Events.UnityEvent`3<System.Object,System.Int32Enum,System.Int32>::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UnityEvent_3__ctor_m3F5C9C71D01617BD938DF6FCCF22F407E2F34F27_gshared (UnityEvent_3_t703D19104F53A60C2167DF1AEA02C21EB9511988 * __this, const RuntimeMethod* method);
// System.Void UnityEngine.Events.UnityEvent`3<System.Object,System.Int32Enum,System.Int32Enum>::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UnityEvent_3__ctor_m37296D71FE47604FC0A25A42D39C15545FAC2598_gshared (UnityEvent_3_tC1C064339F75149418E4C62873257F468D82018A * __this, const RuntimeMethod* method);
// System.Void UnityEngine.Events.UnityEvent`4<System.Object,System.Int32Enum,System.Single,System.Single>::Invoke(!0,!1,!2,!3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UnityEvent_4_Invoke_m52DEE454F4AD386078577AAFFFC0E09851A5AF3D_gshared (UnityEvent_4_t1F826F09136C51BFD9170BD030317255794011D6 * __this, RuntimeObject * ___arg00, int32_t ___arg11, float ___arg22, float ___arg33, const RuntimeMethod* method);
// System.Void UnityEngine.Events.UnityEvent`4<System.Object,System.Int32Enum,System.Single,System.Single>::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UnityEvent_4__ctor_mEFADC1A8448B4263178BA1D66837104ECA8943FD_gshared (UnityEvent_4_t1F826F09136C51BFD9170BD030317255794011D6 * __this, const RuntimeMethod* method);
// !!0[] UnityEngine.Component::GetComponentsInChildren<System.Object>()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A* Component_GetComponentsInChildren_TisRuntimeObject_m96A4AA0545C19F58121E6C5142474CB26EAB9717_gshared (Component_t05064EF382ABCAF4B8C94F8A350EA85184C26621 * __this, const RuntimeMethod* method);
// System.Boolean System.Nullable`1<System.Int32Enum>::get_HasValue()
IL2CPP_EXTERN_C inline IL2CPP_METHOD_ATTR bool Nullable_1_get_HasValue_mB0A6989529561627BBB65E6E4342DAA6549DD5A9_gshared_inline (Nullable_1_tBCA4780CE8E9555A53CF0BA48AF742DA998C0833 * __this, const RuntimeMethod* method);
// !0 System.Nullable`1<System.Int32Enum>::get_Value()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Nullable_1_get_Value_mDF2D4DC386BD762B8AF37F6F93B2F24EC5A49ABF_gshared (Nullable_1_tBCA4780CE8E9555A53CF0BA48AF742DA998C0833 * __this, const RuntimeMethod* method);
// !0 System.Nullable`1<System.Int32Enum>::GetValueOrDefault()
IL2CPP_EXTERN_C inline IL2CPP_METHOD_ATTR int32_t Nullable_1_GetValueOrDefault_m256BDDFFC9F6CE76EBBC5A9A6ED0A6FFB9F0455F_gshared_inline (Nullable_1_tBCA4780CE8E9555A53CF0BA48AF742DA998C0833 * __this, const RuntimeMethod* method);
// System.Void System.Nullable`1<System.Int32Enum>::.ctor(!0)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Nullable_1__ctor_m5C28B34DE8C6D3A1E136828428C71543A08B32D3_gshared (Nullable_1_tBCA4780CE8E9555A53CF0BA48AF742DA998C0833 * __this, int32_t ___value0, const RuntimeMethod* method);
// System.Void UnityEngine.Events.UnityEvent`4<System.Object,System.Int32Enum,UnityEngine.Vector2,UnityEngine.Vector2>::Invoke(!0,!1,!2,!3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UnityEvent_4_Invoke_m52B8CBFF1DEE21A06A273FF9545FE23EE9DEB4AB_gshared (UnityEvent_4_t35A44AE1B2ED081A8B8F671116B82164C6E80B8D * __this, RuntimeObject * ___arg00, int32_t ___arg11, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___arg22, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___arg33, const RuntimeMethod* method);

// System.Void Valve.VR.SteamVR_Action_In_Source_Map`1<Valve.VR.SteamVR_Action_Vector3_Source>::.ctor()
inline void SteamVR_Action_In_Source_Map_1__ctor_m6CA9EBD65879C9C800B369FA8D8E522A9D17B0DB (SteamVR_Action_In_Source_Map_1_t462A1CF8307E7E62DA57F8FA49B7405C51117253 * __this, const RuntimeMethod* method)
{
	((  void (*) (SteamVR_Action_In_Source_Map_1_t462A1CF8307E7E62DA57F8FA49B7405C51117253 *, const RuntimeMethod*))SteamVR_Action_In_Source_Map_1__ctor_mABEF0F1512ABB73914B960E4A67930AC81E767F1_gshared)(__this, method);
}
// SourceElement Valve.VR.SteamVR_Action_Source_Map`1<Valve.VR.SteamVR_Action_Vibration_Source>::get_Item(Valve.VR.SteamVR_Input_Sources)
inline SteamVR_Action_Vibration_Source_tB30315A543AA13F11BB80C1D5C7DEDF37058C151 * SteamVR_Action_Source_Map_1_get_Item_mF968D2C3D5A487C1901E7350B275B57F80B57F82 (SteamVR_Action_Source_Map_1_t4C60A6B852FEF89276918CCD2B6136E8FD572AA7 * __this, int32_t ___inputSource0, const RuntimeMethod* method)
{
	return ((  SteamVR_Action_Vibration_Source_tB30315A543AA13F11BB80C1D5C7DEDF37058C151 * (*) (SteamVR_Action_Source_Map_1_t4C60A6B852FEF89276918CCD2B6136E8FD572AA7 *, int32_t, const RuntimeMethod*))SteamVR_Action_Source_Map_1_get_Item_mE7E2BE18AECB1CDFEADB1E81CEC1C729BBACAB4D_gshared)(__this, ___inputSource0, method);
}
// System.Void Valve.VR.SteamVR_Action_Vibration_Source::add_onActiveChange(Valve.VR.SteamVR_Action_Vibration/ActiveChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vibration_Source_add_onActiveChange_m8A508C8A65E1ED100E5BA28DE7766AC0655E5D6B (SteamVR_Action_Vibration_Source_tB30315A543AA13F11BB80C1D5C7DEDF37058C151 * __this, ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Vibration_Source::remove_onActiveChange(Valve.VR.SteamVR_Action_Vibration/ActiveChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vibration_Source_remove_onActiveChange_mA2D20EAC64D00053BD9E82610D958E31EEB6F571 (SteamVR_Action_Vibration_Source_tB30315A543AA13F11BB80C1D5C7DEDF37058C151 * __this, ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Vibration_Source::add_onActiveBindingChange(Valve.VR.SteamVR_Action_Vibration/ActiveChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vibration_Source_add_onActiveBindingChange_m6A6695BE7B1D62E59D5E0B4E369411AD409CF956 (SteamVR_Action_Vibration_Source_tB30315A543AA13F11BB80C1D5C7DEDF37058C151 * __this, ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Vibration_Source::remove_onActiveBindingChange(Valve.VR.SteamVR_Action_Vibration/ActiveChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vibration_Source_remove_onActiveBindingChange_m22B0D76B3551A12B4050D889570C0977FDC736CC (SteamVR_Action_Vibration_Source_tB30315A543AA13F11BB80C1D5C7DEDF37058C151 * __this, ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Vibration_Source::add_onExecute(Valve.VR.SteamVR_Action_Vibration/ExecuteHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vibration_Source_add_onExecute_m59A0F69E9BE6A9221F99FD66C4DA7122FE3E7F4E (SteamVR_Action_Vibration_Source_tB30315A543AA13F11BB80C1D5C7DEDF37058C151 * __this, ExecuteHandler_t8B67500B15AC184E56E293FC390AB5683D50D865 * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Vibration_Source::remove_onExecute(Valve.VR.SteamVR_Action_Vibration/ExecuteHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vibration_Source_remove_onExecute_m0253F5609D3DE59ADDB805659B334D8A1FDD904E (SteamVR_Action_Vibration_Source_tB30315A543AA13F11BB80C1D5C7DEDF37058C151 * __this, ExecuteHandler_t8B67500B15AC184E56E293FC390AB5683D50D865 * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Out`2<Valve.VR.SteamVR_Action_Vibration_Source_Map,Valve.VR.SteamVR_Action_Vibration_Source>::.ctor()
inline void SteamVR_Action_Out_2__ctor_m73545DF08749932DD490F491CA01DA3630982496 (SteamVR_Action_Out_2_tA45864F69B273963D043D8A2A878B60DC5995BD0 * __this, const RuntimeMethod* method)
{
	((  void (*) (SteamVR_Action_Out_2_tA45864F69B273963D043D8A2A878B60DC5995BD0 *, const RuntimeMethod*))SteamVR_Action_Out_2__ctor_m57D7973945ED4670545ED47E0BB47329C1939FFF_gshared)(__this, method);
}
// System.Void Valve.VR.SteamVR_Action_Vibration_Source::Execute(System.Single,System.Single,System.Single,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vibration_Source_Execute_mFD6A3E9A8B119898CAA19AB046D11586BE3D568F (SteamVR_Action_Vibration_Source_tB30315A543AA13F11BB80C1D5C7DEDF37058C151 * __this, float ___secondsFromNow0, float ___durationSeconds1, float ___frequency2, float ___amplitude3, const RuntimeMethod* method);
// System.Single Valve.VR.SteamVR_Action_Vibration_Source::get_timeLastExecuted()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR float SteamVR_Action_Vibration_Source_get_timeLastExecuted_m43631CC69AD4730B6DAD747F8917FF1968E1782C_inline (SteamVR_Action_Vibration_Source_tB30315A543AA13F11BB80C1D5C7DEDF37058C151 * __this, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action`2<Valve.VR.SteamVR_Action_Vibration_Source_Map,Valve.VR.SteamVR_Action_Vibration_Source>::InitAfterDeserialize()
inline void SteamVR_Action_2_InitAfterDeserialize_m8D574ED27E33D3CA724920BE7E2E32C67FF5F700 (SteamVR_Action_2_t2615F9F41BCBF5EA1EE3A8AF266CE58FAFF6521D * __this, const RuntimeMethod* method)
{
	((  void (*) (SteamVR_Action_2_t2615F9F41BCBF5EA1EE3A8AF266CE58FAFF6521D *, const RuntimeMethod*))SteamVR_Action_2_InitAfterDeserialize_mCC6445068DDB02EA2F504749308CE3382698F4BE_gshared)(__this, method);
}
// System.Boolean Valve.VR.SteamVR_Action_Vibration_Source_Map::IsUpdating(Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_Vibration_Source_Map_IsUpdating_m70351F6C802FC2324E42AEC421C2D5BEE3B29F1B (SteamVR_Action_Vibration_Source_Map_t81B9741E979634A2E0A6D7AE2518F89F3481047A * __this, int32_t ___inputSource0, const RuntimeMethod* method);
// System.Delegate System.Delegate::Combine(System.Delegate,System.Delegate)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Delegate_t * Delegate_Combine_mC25D2F7DECAFBA6D9A2F9EBA8A77063F0658ECF1 (Delegate_t * ___a0, Delegate_t * ___b1, const RuntimeMethod* method);
// System.Delegate System.Delegate::Remove(System.Delegate,System.Delegate)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Delegate_t * Delegate_Remove_m0B0DB7D1B3AF96B71AFAA72BA0EFE32FBBC2932D (Delegate_t * ___source0, Delegate_t * ___value1, const RuntimeMethod* method);
// System.Boolean Valve.VR.SteamVR_Action_Source::get_setActive()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_Source_get_setActive_m4E3E3DD854D4B7384E415E8BD0F66E880BB97A3E (SteamVR_Action_Source_t9D7428CDE39924074518EE6233D9A4FAB0C33CB0 * __this, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Source::Initialize()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Source_Initialize_m712F1B6FEBD8059CBB80EC50CC0F16F528023E64 (SteamVR_Action_Source_t9D7428CDE39924074518EE6233D9A4FAB0C33CB0 * __this, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Source::Preinitialize(Valve.VR.SteamVR_Action,Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Source_Preinitialize_mD54CBA24E4881B8742430B3EDF16283316305913 (SteamVR_Action_Source_t9D7428CDE39924074518EE6233D9A4FAB0C33CB0 * __this, SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 * ___wrappingAction0, int32_t ___forInputSource1, const RuntimeMethod* method);
// System.Boolean Valve.VR.SteamVR_Input::get_isStartupFrame()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Input_get_isStartupFrame_mD1CC14482229680D1CF35F90798A2374A3B8CFE6 (const RuntimeMethod* method);
// System.Single UnityEngine.Time::get_realtimeSinceStartup()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float Time_get_realtimeSinceStartup_mCA1086EC9DFCF135F77BC46D3B7127711EA3DE03 (const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Vibration_Source::set_timeLastExecuted(System.Single)
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Action_Vibration_Source_set_timeLastExecuted_m4CC891E603F4C83A336138B5DB8628B429BA45D5_inline (SteamVR_Action_Vibration_Source_tB30315A543AA13F11BB80C1D5C7DEDF37058C151 * __this, float ___value0, const RuntimeMethod* method);
// Valve.VR.CVRInput Valve.VR.OpenVR::get_Input()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR CVRInput_t2BE4417A3C1EA0C6CF647B0706BF37F886CE599B * OpenVR_get_Input_m904FD790D785E944EE58513F589E862530386414 (const RuntimeMethod* method);
// System.UInt64 Valve.VR.SteamVR_Action_Source::get_handle()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR uint64_t SteamVR_Action_Source_get_handle_mE4C63F9ADB5ACA5E72265B62C0908ACF8EF73A01 (SteamVR_Action_Source_t9D7428CDE39924074518EE6233D9A4FAB0C33CB0 * __this, const RuntimeMethod* method);
// Valve.VR.EVRInputError Valve.VR.CVRInput::TriggerHapticVibrationAction(System.UInt64,System.Single,System.Single,System.Single,System.Single,System.UInt64)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t CVRInput_TriggerHapticVibrationAction_m8F3D63EF48CE25235CE48A5460B1BB40BB28CB22 (CVRInput_t2BE4417A3C1EA0C6CF647B0706BF37F886CE599B * __this, uint64_t ___action0, float ___fStartSecondsFromNow1, float ___fDurationSeconds2, float ___fFrequency3, float ___fAmplitude4, uint64_t ___ulRestrictToDevice5, const RuntimeMethod* method);
// System.String Valve.VR.SteamVR_Action_Source::get_fullPath()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR String_t* SteamVR_Action_Source_get_fullPath_mB0C33E6C1B4F91E908236055FFAE027ECB3ED996 (SteamVR_Action_Source_t9D7428CDE39924074518EE6233D9A4FAB0C33CB0 * __this, const RuntimeMethod* method);
// System.String System.UInt64::ToString()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR String_t* UInt64_ToString_mF0E40B7459C207B89A1C8C04CE7F183AC0E6D672 (uint64_t* __this, const RuntimeMethod* method);
// System.String System.String::Concat(System.String[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR String_t* String_Concat_m232E857CA5107EA6AC52E7DD7018716C021F237B (StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* ___values0, const RuntimeMethod* method);
// System.Void UnityEngine.Debug::LogError(System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Debug_LogError_m3BCF9B78263152261565DCA9DB7D55F0C391ED29 (RuntimeObject * ___message0, const RuntimeMethod* method);
// Valve.VR.SteamVR_Input_Sources Valve.VR.SteamVR_Action_Source::get_inputSource()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR int32_t SteamVR_Action_Source_get_inputSource_mAA1928183BB06E5C8CF950F65BA80635C25535D4_inline (SteamVR_Action_Source_t9D7428CDE39924074518EE6233D9A4FAB0C33CB0 * __this, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Vibration/ExecuteHandler::Invoke(Valve.VR.SteamVR_Action_Vibration,Valve.VR.SteamVR_Input_Sources,System.Single,System.Single,System.Single,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ExecuteHandler_Invoke_m2A5F7EA39417810D1BCDE63E03189D04EDD127FC (ExecuteHandler_t8B67500B15AC184E56E293FC390AB5683D50D865 * __this, SteamVR_Action_Vibration_t487523BCA03933B9812950511E8A4BCE00F03EAB * ___fromAction0, int32_t ___fromSource1, float ___secondsFromNow2, float ___durationSeconds3, float ___frequency4, float ___amplitude5, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Out_Source::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Out_Source__ctor_m94E0A4CA13520D0D8AA70594089391D9F64E5218 (SteamVR_Action_Out_Source_t6BAB7CAA13DB2A871A892C09BFF55378A6D327D6 * __this, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Source_Map`1<Valve.VR.SteamVR_Action_Vibration_Source>::.ctor()
inline void SteamVR_Action_Source_Map_1__ctor_m1D1C02D2A4FAC7A1673B7459262F588C80689CA3 (SteamVR_Action_Source_Map_1_t4C60A6B852FEF89276918CCD2B6136E8FD572AA7 * __this, const RuntimeMethod* method)
{
	((  void (*) (SteamVR_Action_Source_Map_1_t4C60A6B852FEF89276918CCD2B6136E8FD572AA7 *, const RuntimeMethod*))SteamVR_Action_Source_Map_1__ctor_mE8EB35AF2F507C1EA04DB21FFAE722DFE57C6B25_gshared)(__this, method);
}
// System.Boolean Valve.VR.SteamVR_ActionSet::op_Inequality(Valve.VR.SteamVR_ActionSet,Valve.VR.SteamVR_ActionSet)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_ActionSet_op_Inequality_m3FAE077B46B4BF80F47322FC6DFB771C2EC48EB5 (SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * ___set10, SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * ___set21, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_ActionSet::Activate(Valve.VR.SteamVR_Input_Sources,System.Int32,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_ActionSet_Activate_m675A0B29BB6BBB783FEB8F1F1086037F16420509 (SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * __this, int32_t ___activateForSource0, int32_t ___priority1, bool ___disableAllOtherActionSets2, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_ActionSet::Deactivate(Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_ActionSet_Deactivate_mC05C9A9355C257755030C58042CB9EFC7104F021 (SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * __this, int32_t ___forSource0, const RuntimeMethod* method);
// Valve.VR.SteamVR_ActionSet Valve.VR.SteamVR_Input::GetActionSet(System.String,System.Boolean,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * SteamVR_Input_GetActionSet_m53C53A57B6E0BEAA81C90D18B541694392B9BB23 (String_t* ___actionSetName0, bool ___caseSensitive1, bool ___returnsNulls2, const RuntimeMethod* method);
// System.Void UnityEngine.MonoBehaviour::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MonoBehaviour__ctor_mEAEC84B222C60319D593E456D769B3311DFCEF97 (MonoBehaviour_t4A60845CF505405AF8BE8C61CC07F75CADEF6429 * __this, const RuntimeMethod* method);
// System.Boolean UnityEngine.Object::op_Equality(UnityEngine.Object,UnityEngine.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool Object_op_Equality_mBC2401774F3BE33E8CF6F0A8148E66C95D6CFF1C (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 * ___x0, Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 * ___y1, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Behaviour::Initialize(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_Initialize_mA34568CBC7E0F232551F456C378EA998B0AA66FB (bool ___forceUnityVRToOpenVR0, const RuntimeMethod* method);
// !!0 UnityEngine.Object::FindObjectOfType<Valve.VR.SteamVR_Render>()
inline SteamVR_Render_tE8610D8397284113646BAAD2B6991C16D4C26665 * Object_FindObjectOfType_TisSteamVR_Render_tE8610D8397284113646BAAD2B6991C16D4C26665_m375DF65ED62003A8D0F1EEFAB02B0BFD8FC0DEF1 (const RuntimeMethod* method)
{
	return ((  SteamVR_Render_tE8610D8397284113646BAAD2B6991C16D4C26665 * (*) (const RuntimeMethod*))Object_FindObjectOfType_TisRuntimeObject_m251F203B12669585A5E663F529F6DF09F931B5DA_gshared)(method);
}
// System.Boolean UnityEngine.Object::op_Inequality(UnityEngine.Object,UnityEngine.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1 (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 * ___x0, Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 * ___y1, const RuntimeMethod* method);
// UnityEngine.GameObject UnityEngine.Component::get_gameObject()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * Component_get_gameObject_m0B0570BA8DDD3CD78A9DB568EA18D7317686603C (Component_t05064EF382ABCAF4B8C94F8A350EA85184C26621 * __this, const RuntimeMethod* method);
// !!0 UnityEngine.Object::FindObjectOfType<Valve.VR.SteamVR_Behaviour>()
inline SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586 * Object_FindObjectOfType_TisSteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_mF4D4C690A8FB950CCD99B55888CF147043E7E034 (const RuntimeMethod* method)
{
	return ((  SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586 * (*) (const RuntimeMethod*))Object_FindObjectOfType_TisRuntimeObject_m251F203B12669585A5E663F529F6DF09F931B5DA_gshared)(method);
}
// System.Void UnityEngine.GameObject::.ctor(System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void GameObject__ctor_mBB454E679AD9CF0B84D3609A01E6A9753ACF4686 (GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * __this, String_t* ___name0, const RuntimeMethod* method);
// !!0 UnityEngine.GameObject::AddComponent<Valve.VR.SteamVR_Behaviour>()
inline SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586 * GameObject_AddComponent_TisSteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_m1C09710380A9C189D0FFC165FB260DE3D56089B4 (GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * __this, const RuntimeMethod* method)
{
	return ((  SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586 * (*) (GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F *, const RuntimeMethod*))GameObject_AddComponent_TisRuntimeObject_mE053F7A95F30AFF07D69F0DED3DA13AE2EC25E03_gshared)(__this, method);
}
// !!0 UnityEngine.GameObject::AddComponent<Valve.VR.SteamVR_Render>()
inline SteamVR_Render_tE8610D8397284113646BAAD2B6991C16D4C26665 * GameObject_AddComponent_TisSteamVR_Render_tE8610D8397284113646BAAD2B6991C16D4C26665_m990762749AAEADE99FB0F725B95E7EC57F088801 (GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * __this, const RuntimeMethod* method)
{
	return ((  SteamVR_Render_tE8610D8397284113646BAAD2B6991C16D4C26665 * (*) (GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F *, const RuntimeMethod*))GameObject_AddComponent_TisRuntimeObject_mE053F7A95F30AFF07D69F0DED3DA13AE2EC25E03_gshared)(__this, method);
}
// !!0 UnityEngine.GameObject::GetComponent<Valve.VR.SteamVR_Behaviour>()
inline SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586 * GameObject_GetComponent_TisSteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_mB9F300C022DC646383A3C3810C88E9D8D22D1943 (GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * __this, const RuntimeMethod* method)
{
	return ((  SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586 * (*) (GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F *, const RuntimeMethod*))GameObject_GetComponent_TisRuntimeObject_mE03C66715289D7957CA068A675826B7EE0887BE3_gshared)(__this, method);
}
// !!0 UnityEngine.GameObject::GetComponent<Valve.VR.SteamVR_Render>()
inline SteamVR_Render_tE8610D8397284113646BAAD2B6991C16D4C26665 * GameObject_GetComponent_TisSteamVR_Render_tE8610D8397284113646BAAD2B6991C16D4C26665_m506DA10EA4DA33BF1F43031780392E43E877129D (GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * __this, const RuntimeMethod* method)
{
	return ((  SteamVR_Render_tE8610D8397284113646BAAD2B6991C16D4C26665 * (*) (GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F *, const RuntimeMethod*))GameObject_GetComponent_TisRuntimeObject_mE03C66715289D7957CA068A675826B7EE0887BE3_gshared)(__this, method);
}
// UnityEngine.Transform UnityEngine.Component::get_transform()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * Component_get_transform_m00F05BD782F920C301A7EBA480F3B7A904C07EC9 (Component_t05064EF382ABCAF4B8C94F8A350EA85184C26621 * __this, const RuntimeMethod* method);
// UnityEngine.Transform UnityEngine.Transform::get_root()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * Transform_get_root_m101A8B5C2CC6D868B6B66EEDBD5336FC1EB5DDD6 (Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * __this, const RuntimeMethod* method);
// System.Void UnityEngine.Object::DontDestroyOnLoad(UnityEngine.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Object_DontDestroyOnLoad_m4DC90770AD6084E4B1B8489C6B41205DC020C207 (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 * ___target0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Behaviour::InitializeSteamVR(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_InitializeSteamVR_m33AC5057AB7443A7224E945883C156A9FC0FFB0D (SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586 * __this, bool ___forceUnityVRToOpenVR0, const RuntimeMethod* method);
// System.Void UnityEngine.MonoBehaviour::StopCoroutine(UnityEngine.Coroutine)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MonoBehaviour_StopCoroutine_mC465FFA3C386BA22384F7AFA5495FF2286510562 (MonoBehaviour_t4A60845CF505405AF8BE8C61CC07F75CADEF6429 * __this, Coroutine_tAE7DB2FC70A0AE6477F896F852057CB0754F06EC * ___routine0, const RuntimeMethod* method);
// System.String UnityEngine.XR.XRSettings::get_loadedDeviceName()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR String_t* XRSettings_get_loadedDeviceName_m952D46346306FD9477B13992E5797A85CCD3C98C (const RuntimeMethod* method);
// System.Boolean System.String::op_Equality(System.String,System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool String_op_Equality_m139F0E4195AE2F856019E63B241F36F016997FCE (String_t* ___a0, String_t* ___b1, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Behaviour::EnableOpenVR()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_EnableOpenVR_mF75014123CBFDC324A16EE948F1BE79ECB0B8658 (SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586 * __this, const RuntimeMethod* method);
// System.Collections.IEnumerator Valve.VR.SteamVR_Behaviour::DoInitializeSteamVR(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* SteamVR_Behaviour_DoInitializeSteamVR_m1E9D177FB8C0C2BEB6D386DE8237CB89462E7E0C (SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586 * __this, bool ___forceUnityVRToOpenVR0, const RuntimeMethod* method);
// UnityEngine.Coroutine UnityEngine.MonoBehaviour::StartCoroutine(System.Collections.IEnumerator)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Coroutine_tAE7DB2FC70A0AE6477F896F852057CB0754F06EC * MonoBehaviour_StartCoroutine_mBF8044CE06A35D76A69669ADD8977D05956616B7 (MonoBehaviour_t4A60845CF505405AF8BE8C61CC07F75CADEF6429 * __this, RuntimeObject* ___routine0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR::Initialize(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Initialize_m4290EF084BDC61199798490C498AA0DF8791260C (bool ___forceUnityVRMode0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Behaviour/<DoInitializeSteamVR>d__15::.ctor(System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void U3CDoInitializeSteamVRU3Ed__15__ctor_m4AB754B2C599508761896C3F3B939E8C4F5BA537 (U3CDoInitializeSteamVRU3Ed__15_tF2B5867E813D537B7B4B232138211FE3C01A21F7 * __this, int32_t ___U3CU3E1__state0, const RuntimeMethod* method);
// System.String System.String::Concat(System.String,System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR String_t* String_Concat_mB78D0094592718DA6D5DB6C712A9C225631666BE (String_t* ___str00, String_t* ___str11, const RuntimeMethod* method);
// System.Void UnityEngine.Debug::LogError(System.Object,UnityEngine.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Debug_LogError_m97139CB2EE76D5CD8308C1AD0499A5F163FC7F51 (RuntimeObject * ___message0, Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 * ___context1, const RuntimeMethod* method);
// System.Void UnityEngine.XR.XRSettings::set_enabled(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void XRSettings_set_enabled_m9180DFDC2B9EF502DEB9503C98A0D53B4B9F8E1B (bool ___value0, const RuntimeMethod* method);
// System.Void UnityEngine.Events.UnityAction::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UnityAction__ctor_mEFC4B92529CE83DF72501F92E07EC5598C54BDAC (UnityAction_tD19B26F1B2C048E38FD5801A33573BE01064CAF4 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method);
// System.Void UnityEngine.Application::add_onBeforeRender(UnityEngine.Events.UnityAction)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Application_add_onBeforeRender_mC00950B8FC35DB9048121D43BE8F69D55BCB4723 (UnityAction_tD19B26F1B2C048E38FD5801A33573BE01064CAF4 * ___value0, const RuntimeMethod* method);
// Valve.VR.SteamVR_Events/Event`1<Valve.VR.VREvent_t> Valve.VR.SteamVR_Events::System(Valve.VR.EVREventType)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Event_1_t5DB0CDA7FD2616DA8770700B1A982E1A0F052262 * SteamVR_Events_System_mA00E549D3CEB4BB6C027399D29DBEC0DF774891B (int32_t ___eventType0, const RuntimeMethod* method);
// System.Void UnityEngine.Events.UnityAction`1<Valve.VR.VREvent_t>::.ctor(System.Object,System.IntPtr)
inline void UnityAction_1__ctor_m95AA3CDDC630B39635645E005E7D9BFCD3518199 (UnityAction_1_tB43C1CF1D8DCDDE3590ED959587DB9809C1294BF * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	((  void (*) (UnityAction_1_tB43C1CF1D8DCDDE3590ED959587DB9809C1294BF *, RuntimeObject *, intptr_t, const RuntimeMethod*))UnityAction_1__ctor_m95AA3CDDC630B39635645E005E7D9BFCD3518199_gshared)(__this, ___object0, ___method1, method);
}
// System.Void Valve.VR.SteamVR_Events/Event`1<Valve.VR.VREvent_t>::Listen(UnityEngine.Events.UnityAction`1<T>)
inline void Event_1_Listen_m38BA8AB8A10A0202B52B3F5CA7DB8056FDC0FBE0 (Event_1_t5DB0CDA7FD2616DA8770700B1A982E1A0F052262 * __this, UnityAction_1_tB43C1CF1D8DCDDE3590ED959587DB9809C1294BF * ___action0, const RuntimeMethod* method)
{
	((  void (*) (Event_1_t5DB0CDA7FD2616DA8770700B1A982E1A0F052262 *, UnityAction_1_tB43C1CF1D8DCDDE3590ED959587DB9809C1294BF *, const RuntimeMethod*))Event_1_Listen_m38BA8AB8A10A0202B52B3F5CA7DB8056FDC0FBE0_gshared)(__this, ___action0, method);
}
// System.Void UnityEngine.Application::remove_onBeforeRender(UnityEngine.Events.UnityAction)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Application_remove_onBeforeRender_m4601D9804BC86F64FB071348EC1CF448C55CBA3B (UnityAction_tD19B26F1B2C048E38FD5801A33573BE01064CAF4 * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Events/Event`1<Valve.VR.VREvent_t>::Remove(UnityEngine.Events.UnityAction`1<T>)
inline void Event_1_Remove_mF12BABD97A66E13257D4ECEDA7C4264DF073D93A (Event_1_t5DB0CDA7FD2616DA8770700B1A982E1A0F052262 * __this, UnityAction_1_tB43C1CF1D8DCDDE3590ED959587DB9809C1294BF * ___action0, const RuntimeMethod* method)
{
	((  void (*) (Event_1_t5DB0CDA7FD2616DA8770700B1A982E1A0F052262 *, UnityAction_1_tB43C1CF1D8DCDDE3590ED959587DB9809C1294BF *, const RuntimeMethod*))Event_1_Remove_mF12BABD97A66E13257D4ECEDA7C4264DF073D93A_gshared)(__this, ___action0, method);
}
// System.Void Valve.VR.SteamVR_Behaviour::PreCull()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_PreCull_mB10CED0C11CDE15D1E68B3AAC37CFDC56C7834C7 (SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586 * __this, const RuntimeMethod* method);
// System.Int32 UnityEngine.Time::get_frameCount()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Time_get_frameCount_m97573E267B487B8FD4BF37615AFC19BED7B4E436 (const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Input::OnPreCull()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Input_OnPreCull_m8257BD45734433B2FEFAAE3EEA450AA206B1A6E2 (const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Input::FixedUpdate()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Input_FixedUpdate_m148E3DD8EB5A5A307C2B787F8D17F81CA2985A92 (const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Input::LateUpdate()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Input_LateUpdate_mF5DB9D90A59D0E2CEEC149CEC2B809524B739B6D (const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Input::Update()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Input_Update_m3E5F1FD8644044C051FFDAB30E6F43099D9AA3DD (const RuntimeMethod* method);
// System.Void UnityEngine.Application::Quit()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Application_Quit_mA005EB22CB989AC3794334754F15E1C0D2FF1C95 (const RuntimeMethod* method);
// System.Void System.Object::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Object__ctor_m925ECA5E85CA100E3FB86A4F9E15C120E9A184C0 (RuntimeObject * __this, const RuntimeMethod* method);
// System.Void System.Action`1<System.String>::.ctor(System.Object,System.IntPtr)
inline void Action_1__ctor_m4F1B6EE6AB328B8B63B3B2CD8FB89A119C3143F3 (Action_1_t32A9EECF5D4397CC1B9A7C7079870875411B06D0 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	((  void (*) (Action_1_t32A9EECF5D4397CC1B9A7C7079870875411B06D0 *, RuntimeObject *, intptr_t, const RuntimeMethod*))Action_1__ctor_mAFC7442D9D3CEC6701C3C5599F8CF12476095510_gshared)(__this, ___object0, ___method1, method);
}
// System.Void UnityEngine.XR.XRDevice::add_deviceLoaded(System.Action`1<System.String>)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void XRDevice_add_deviceLoaded_m26813F2791F89E1058B14D5932BD00C2A009A74C (Action_1_t32A9EECF5D4397CC1B9A7C7079870875411B06D0 * ___value0, const RuntimeMethod* method);
// System.Void UnityEngine.XR.XRSettings::LoadDeviceByName(System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void XRSettings_LoadDeviceByName_m39BADCB8CB3C59E2DB929CEF7DFBF6CFA1209095 (String_t* ___deviceName0, const RuntimeMethod* method);
// System.Void UnityEngine.XR.XRDevice::remove_deviceLoaded(System.Action`1<System.String>)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void XRDevice_remove_deviceLoaded_mC3D6CF39606865E78F1F19CA21613A8DD1B8EDDF (Action_1_t32A9EECF5D4397CC1B9A7C7079870875411B06D0 * ___value0, const RuntimeMethod* method);
// System.Void System.NotSupportedException::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NotSupportedException__ctor_mA121DE1CAC8F25277DEB489DC7771209D91CAE33 (NotSupportedException_tE75B318D6590A02A5D9B29FD97409B1750FA0010 * __this, const RuntimeMethod* method);
// System.Boolean Valve.VR.SteamVR_Action::op_Inequality(Valve.VR.SteamVR_Action,Valve.VR.SteamVR_Action)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_op_Inequality_m7114B6E3669F8C55CD3B5E4EC3A897648CBD0F8A (SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 * ___action10, SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 * ___action21, const RuntimeMethod* method);
// System.Boolean Valve.VR.SteamVR_Action::op_Equality(Valve.VR.SteamVR_Action,Valve.VR.SteamVR_Action)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_op_Equality_m16F1109154021CF7DC424B937A8AA5FC34463EE2 (SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 * ___action10, SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 * ___action21, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Behaviour_Boolean::AddHandlers()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_Boolean_AddHandlers_m177D600059EE1F3A255ABE94B86940647FB8A61A (SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 * __this, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Behaviour_Boolean::RemoveHandlers()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_Boolean_RemoveHandlers_m8E4317760BDED9334828696FBA2D1557BF69C5DD (SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 * __this, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Boolean/UpdateHandler::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UpdateHandler__ctor_m68B2F5666A6F84AB256BDC9A1A0909290717ADB9 (UpdateHandler_tC5DA62D5AA34319AAE9E044A4D98A942E9F7738B * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Boolean_Source::add_onUpdate(Valve.VR.SteamVR_Action_Boolean/UpdateHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Boolean_Source_add_onUpdate_mF15B2B618C21D657E51369504C1D1D69246E168C (SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB * __this, UpdateHandler_tC5DA62D5AA34319AAE9E044A4D98A942E9F7738B * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Boolean/ChangeHandler::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ChangeHandler__ctor_mBD6FBA8BF779984B89C666C8C1210BA3C61F6B3B (ChangeHandler_tBE955A4C204CE64CDAD63911BA738EC2873DF7B0 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Boolean_Source::add_onChange(Valve.VR.SteamVR_Action_Boolean/ChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Boolean_Source_add_onChange_m68CCE8BD8761AD8F33C83F871B2B75B5E908755D (SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB * __this, ChangeHandler_tBE955A4C204CE64CDAD63911BA738EC2873DF7B0 * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Boolean/StateHandler::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void StateHandler__ctor_mD536193D0C88821B66B667A03E4710142A33E112 (StateHandler_tBBEC523C11F1EC99BF356128B427327EF349EAFA * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Boolean_Source::add_onState(Valve.VR.SteamVR_Action_Boolean/StateHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Boolean_Source_add_onState_mCA5E2D446D6F926BE045288CA0237D76F0080B68 (SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB * __this, StateHandler_tBBEC523C11F1EC99BF356128B427327EF349EAFA * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Boolean/StateDownHandler::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void StateDownHandler__ctor_m54362BB217B5251C8EB76A5FEED10FF3DF9BFBA3 (StateDownHandler_t7D29100BA5CD0DFB8B7AE4388E1AB7AF114F4464 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Boolean_Source::add_onStateDown(Valve.VR.SteamVR_Action_Boolean/StateDownHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Boolean_Source_add_onStateDown_mA4DDBD321D3341520E4328691634D28662EC1A6C (SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB * __this, StateDownHandler_t7D29100BA5CD0DFB8B7AE4388E1AB7AF114F4464 * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Boolean/StateUpHandler::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void StateUpHandler__ctor_m9EF02EC85AA50B176C35BD412710624F3E2AE285 (StateUpHandler_t74A1CE14E1749B62B14281BCFA09CB750D7A5ED8 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Boolean_Source::add_onStateUp(Valve.VR.SteamVR_Action_Boolean/StateUpHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Boolean_Source_add_onStateUp_m6E3701968DB62C8658FE77B47301FCC539F0A846 (SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB * __this, StateUpHandler_t74A1CE14E1749B62B14281BCFA09CB750D7A5ED8 * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Boolean_Source::remove_onUpdate(Valve.VR.SteamVR_Action_Boolean/UpdateHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Boolean_Source_remove_onUpdate_m4840B62E8474743295BA681B3BD382C8CC02D541 (SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB * __this, UpdateHandler_tC5DA62D5AA34319AAE9E044A4D98A942E9F7738B * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Boolean_Source::remove_onChange(Valve.VR.SteamVR_Action_Boolean/ChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Boolean_Source_remove_onChange_m4AE6619441A7345BB0F2478D3CC7BB3A2989ACDD (SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB * __this, ChangeHandler_tBE955A4C204CE64CDAD63911BA738EC2873DF7B0 * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Boolean_Source::remove_onState(Valve.VR.SteamVR_Action_Boolean/StateHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Boolean_Source_remove_onState_m4B9CF1F2637CD3DAF1AAB3896E32D22808C0544D (SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB * __this, StateHandler_tBBEC523C11F1EC99BF356128B427327EF349EAFA * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Boolean_Source::remove_onStateDown(Valve.VR.SteamVR_Action_Boolean/StateDownHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Boolean_Source_remove_onStateDown_m1D3AB0790D7CAC19944B8C1D28D9C84946BD32F4 (SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB * __this, StateDownHandler_t7D29100BA5CD0DFB8B7AE4388E1AB7AF114F4464 * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Boolean_Source::remove_onStateUp(Valve.VR.SteamVR_Action_Boolean/StateUpHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Boolean_Source_remove_onStateUp_mDA98D1C74F95507A5519AC2A3C95F3CA6BD7F229 (SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB * __this, StateUpHandler_t74A1CE14E1749B62B14281BCFA09CB750D7A5ED8 * ___value0, const RuntimeMethod* method);
// System.Void UnityEngine.Events.UnityEvent`3<Valve.VR.SteamVR_Behaviour_Boolean,Valve.VR.SteamVR_Input_Sources,System.Boolean>::Invoke(!0,!1,!2)
inline void UnityEvent_3_Invoke_m2432FA3F355A924507DF754FDAC9C9FC49D2B993 (UnityEvent_3_t6AB15570399D42C6377741DA4B8F5FD3CEED0539 * __this, SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 * ___arg00, int32_t ___arg11, bool ___arg22, const RuntimeMethod* method)
{
	((  void (*) (UnityEvent_3_t6AB15570399D42C6377741DA4B8F5FD3CEED0539 *, SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 *, int32_t, bool, const RuntimeMethod*))UnityEvent_3_Invoke_mCCCB26A54DDDE4C45AB75841D6EC25543250237E_gshared)(__this, ___arg00, ___arg11, ___arg22, method);
}
// System.Void Valve.VR.SteamVR_Behaviour_Boolean/StateUpHandler::Invoke(Valve.VR.SteamVR_Behaviour_Boolean,Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void StateUpHandler_Invoke_m4390170909DAFE643E31003AB1A7ADAC79D37446 (StateUpHandler_tC09A0C33E80BBF97F8E88D36519482DFE36DBCC5 * __this, SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 * ___fromAction0, int32_t ___fromSource1, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Behaviour_Boolean/StateDownHandler::Invoke(Valve.VR.SteamVR_Behaviour_Boolean,Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void StateDownHandler_Invoke_mCE0917DC4FC52D1A54846EAC994540AD19B9D893 (StateDownHandler_tFF77368F427C4FE6164A97B238F944123AA8FE24 * __this, SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 * ___fromAction0, int32_t ___fromSource1, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Behaviour_Boolean/StateHandler::Invoke(Valve.VR.SteamVR_Behaviour_Boolean,Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void StateHandler_Invoke_m77C883A72A64422A49098DAA5999A064E91E45CE (StateHandler_tC57B51755B81869515107A3BE4BC3865F974190D * __this, SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 * ___fromAction0, int32_t ___fromSource1, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Behaviour_Boolean/UpdateHandler::Invoke(Valve.VR.SteamVR_Behaviour_Boolean,Valve.VR.SteamVR_Input_Sources,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UpdateHandler_Invoke_m423C3C8C6E4BBCE15708583137DF06DC92508FEB (UpdateHandler_t9FC31A405C9C47120C5307368335AD9F708511D1 * __this, SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 * ___fromAction0, int32_t ___fromSource1, bool ___newState2, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Behaviour_Boolean/ChangeHandler::Invoke(Valve.VR.SteamVR_Behaviour_Boolean,Valve.VR.SteamVR_Input_Sources,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ChangeHandler_Invoke_mF3CFD18B23248FD7BED819808EAE34E44E54755B (ChangeHandler_tADA56232D143B2D18BA3D6F2A9B5CE2AC637CBB6 * __this, SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 * ___fromAction0, int32_t ___fromSource1, bool ___newState2, const RuntimeMethod* method);
// System.String Valve.VR.SteamVR_Action_In`2<Valve.VR.SteamVR_Action_Boolean_Source_Map,Valve.VR.SteamVR_Action_Boolean_Source>::GetLocalizedOriginPart(Valve.VR.SteamVR_Input_Sources,Valve.VR.EVRInputStringBits[])
inline String_t* SteamVR_Action_In_2_GetLocalizedOriginPart_m54923EB664FBAAD29EFCB26E969517F74408FF6C (SteamVR_Action_In_2_t2F8E3210A305FC855ECD46AD48FA406BA177FAA9 * __this, int32_t ___inputSource0, EVRInputStringBitsU5BU5D_t9F9E9B47CD745CAAB4F8EDC305D84DDF9E5BE511* ___localizedParts1, const RuntimeMethod* method)
{
	return ((  String_t* (*) (SteamVR_Action_In_2_t2F8E3210A305FC855ECD46AD48FA406BA177FAA9 *, int32_t, EVRInputStringBitsU5BU5D_t9F9E9B47CD745CAAB4F8EDC305D84DDF9E5BE511*, const RuntimeMethod*))SteamVR_Action_In_2_GetLocalizedOriginPart_mEA178543F658F3C193F0ADAECE592F66F35D6A83_gshared)(__this, ___inputSource0, ___localizedParts1, method);
}
// System.Void UnityEngine.Events.UnityEvent`3<Valve.VR.SteamVR_Behaviour_Boolean,Valve.VR.SteamVR_Input_Sources,System.Boolean>::.ctor()
inline void UnityEvent_3__ctor_mC63650172D658E002E89CD9C8BC3E11ED2A0A0A2 (UnityEvent_3_t6AB15570399D42C6377741DA4B8F5FD3CEED0539 * __this, const RuntimeMethod* method)
{
	((  void (*) (UnityEvent_3_t6AB15570399D42C6377741DA4B8F5FD3CEED0539 *, const RuntimeMethod*))UnityEvent_3__ctor_mFE485CA18703786ADB69D0B88DE90791DCACE4C0_gshared)(__this, method);
}
// System.Boolean Valve.VR.SteamVR_Action_Pose_Source::get_poseIsValid()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_Pose_Source_get_poseIsValid_m45C4445DBD635BF4EDAA590D30874EA233DED74D (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, const RuntimeMethod* method);
// UnityEngine.Transform UnityEngine.Transform::get_parent()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * Transform_get_parent_m8FA24E38A1FA29D90CBF3CDC9F9F017C65BB3403 (Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * __this, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Pose/UpdateHandler::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UpdateHandler__ctor_mBD98A1E92C38030F3BFDCF1753EA9667131B5E08 (UpdateHandler_t4F6AB1825F5E5CE6A7BBCD6C84541B3DF13C2AA1 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Pose_Source::add_onUpdate(Valve.VR.SteamVR_Action_Pose/UpdateHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_Source_add_onUpdate_m3490F1849AF58B9C1C64A455D119B6619BF1F9F4 (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, UpdateHandler_t4F6AB1825F5E5CE6A7BBCD6C84541B3DF13C2AA1 * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Pose/DeviceConnectedChangeHandler::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void DeviceConnectedChangeHandler__ctor_mFC468AB8A126E335C06F73ABA9CFDEA5688098B7 (DeviceConnectedChangeHandler_t4AC124A9A94D668A0FB45EA8FC718729CEA3D0D9 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Pose_Source::add_onDeviceConnectedChanged(Valve.VR.SteamVR_Action_Pose/DeviceConnectedChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_Source_add_onDeviceConnectedChanged_m2844E90BAA3AA5AEF71BEDE218CAB7EFBDF01828 (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, DeviceConnectedChangeHandler_t4AC124A9A94D668A0FB45EA8FC718729CEA3D0D9 * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Pose/TrackingChangeHandler::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void TrackingChangeHandler__ctor_m265F21C900027C0C60671E5DB6C4D8239D85E616 (TrackingChangeHandler_t1CC1FD6A7111B86684B749C4E751B1F5237D2914 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Pose_Source::add_onTrackingChanged(Valve.VR.SteamVR_Action_Pose/TrackingChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_Source_add_onTrackingChanged_m2ECFC24CAD4E5BEEF240099853A3E36B7F0DFBE5 (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, TrackingChangeHandler_t1CC1FD6A7111B86684B749C4E751B1F5237D2914 * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Pose/ChangeHandler::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ChangeHandler__ctor_mBA6347D8C94B1E1768590E151F2BDB6FE02148F7 (ChangeHandler_tBB749BC376815901B6E13DF03202383F3302BFBE * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Pose_Source::add_onChange(Valve.VR.SteamVR_Action_Pose/ChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_Source_add_onChange_m350CA9E264ACB24C9AAF2A2C8B0DBEC7A9665D22 (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, ChangeHandler_tBB749BC376815901B6E13DF03202383F3302BFBE * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Pose_Source::remove_onUpdate(Valve.VR.SteamVR_Action_Pose/UpdateHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_Source_remove_onUpdate_mBAB407029136DCDDBF725ED16D604A3F4CA303A2 (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, UpdateHandler_t4F6AB1825F5E5CE6A7BBCD6C84541B3DF13C2AA1 * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Pose_Source::remove_onDeviceConnectedChanged(Valve.VR.SteamVR_Action_Pose/DeviceConnectedChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_Source_remove_onDeviceConnectedChanged_mCFD88686CD8FF8163D1A900691A7742AA2E8BB52 (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, DeviceConnectedChangeHandler_t4AC124A9A94D668A0FB45EA8FC718729CEA3D0D9 * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Pose_Source::remove_onTrackingChanged(Valve.VR.SteamVR_Action_Pose/TrackingChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_Source_remove_onTrackingChanged_mCF467E85C173ABE916896B29993C49829AB2149C (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, TrackingChangeHandler_t1CC1FD6A7111B86684B749C4E751B1F5237D2914 * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Pose_Source::remove_onChange(Valve.VR.SteamVR_Action_Pose/ChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_Source_remove_onChange_m5648F89F86FF49FF910AD08C79FB0A2B27618A29 (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, ChangeHandler_tBB749BC376815901B6E13DF03202383F3302BFBE * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_RingBuffer`1<Valve.VR.SteamVR_HistoryStep>::Clear()
inline void SteamVR_RingBuffer_1_Clear_mE5008382A9E53B1C4D0513C1F308724ED2EB2DB6 (SteamVR_RingBuffer_1_t57851A70FC812E73F42BD0FCB349E7612005C7A4 * __this, const RuntimeMethod* method)
{
	((  void (*) (SteamVR_RingBuffer_1_t57851A70FC812E73F42BD0FCB349E7612005C7A4 *, const RuntimeMethod*))SteamVR_RingBuffer_1_Clear_m97C5D575D1DA014FC1A4ED823619C2067088E96D_gshared)(__this, method);
}
// System.Void Valve.VR.SteamVR_Behaviour_Pose::UpdateHistoryBuffer()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_Pose_UpdateHistoryBuffer_mE526E02932EAB531F93E8AB336EBBE7BB880E120 (SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 * __this, const RuntimeMethod* method);
// System.Void UnityEngine.Events.UnityEvent`2<Valve.VR.SteamVR_Behaviour_Pose,Valve.VR.SteamVR_Input_Sources>::Invoke(!0,!1)
inline void UnityEvent_2_Invoke_mEA7AB15B5A48CDDF5EBB6ED1E70152910A221CC8 (UnityEvent_2_tA05085E47587B6E451DA7BFE1C3551696049307E * __this, SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 * ___arg00, int32_t ___arg11, const RuntimeMethod* method)
{
	((  void (*) (UnityEvent_2_tA05085E47587B6E451DA7BFE1C3551696049307E *, SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 *, int32_t, const RuntimeMethod*))UnityEvent_2_Invoke_m8E0E3910F551485BB28258D9379D14BFAA534A22_gshared)(__this, ___arg00, ___arg11, method);
}
// System.Void Valve.VR.SteamVR_Behaviour_Pose/UpdateHandler::Invoke(Valve.VR.SteamVR_Behaviour_Pose,Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UpdateHandler_Invoke_mD8E094DE1D96502467EB3BCE1F23E60B1DDC328B (UpdateHandler_t7F4B3FFE3096B37EB5424E580DA100C61857DC4D * __this, SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 * ___fromAction0, int32_t ___fromSource1, const RuntimeMethod* method);
// UnityEngine.Vector3 Valve.VR.SteamVR_Action_Pose_Source::get_localPosition()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  SteamVR_Action_Pose_Source_get_localPosition_mE065A826D8D1A8CF44D9E7F0D038F24D70985833_inline (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, const RuntimeMethod* method);
// UnityEngine.Vector3 UnityEngine.Transform::TransformPoint(UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  Transform_TransformPoint_mA96DC2A20EE7F4F915F7509863A18D99F5DD76CB (Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___position0, const RuntimeMethod* method);
// System.Void UnityEngine.Transform::set_position(UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Transform_set_position_mDA89E4893F14ECA5CBEEE7FB80A5BF7C1B8EA6DC (Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___value0, const RuntimeMethod* method);
// UnityEngine.Quaternion UnityEngine.Transform::get_rotation()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  Transform_get_rotation_m3AB90A67403249AECCA5E02BC70FCE8C90FE9FB9 (Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * __this, const RuntimeMethod* method);
// UnityEngine.Quaternion Valve.VR.SteamVR_Action_Pose_Source::get_localRotation()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  SteamVR_Action_Pose_Source_get_localRotation_m307D9DD92DFFFCC30446A71D9BD15674A797ED2A_inline (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, const RuntimeMethod* method);
// UnityEngine.Quaternion UnityEngine.Quaternion::op_Multiply(UnityEngine.Quaternion,UnityEngine.Quaternion)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  Quaternion_op_Multiply_mDB9F738AA8160E3D85549F4FEDA23BC658B5A790 (Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  ___lhs0, Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  ___rhs1, const RuntimeMethod* method);
// System.Void UnityEngine.Transform::set_rotation(UnityEngine.Quaternion)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Transform_set_rotation_m429694E264117C6DC682EC6AF45C7864E5155935 (Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * __this, Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  ___value0, const RuntimeMethod* method);
// System.Void UnityEngine.Transform::set_localPosition(UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Transform_set_localPosition_m275F5550DD939F83AFEB5E8D681131172E2E1728 (Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___value0, const RuntimeMethod* method);
// System.Void UnityEngine.Transform::set_localRotation(UnityEngine.Quaternion)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Transform_set_localRotation_mE2BECB0954FFC1D93FB631600D9A9BEFF41D9C8A (Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * __this, Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Behaviour_Pose/ChangeHandler::Invoke(Valve.VR.SteamVR_Behaviour_Pose,Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ChangeHandler_Invoke_m8CADF14E5C6D8F024A2391FA19D762981F26C7FE (ChangeHandler_t62B565E3F59005232530941762BA9C99466E7190 * __this, SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 * ___fromAction0, int32_t ___fromSource1, const RuntimeMethod* method);
// System.Void UnityEngine.Events.UnityEvent`3<Valve.VR.SteamVR_Behaviour_Pose,Valve.VR.SteamVR_Input_Sources,System.Boolean>::Invoke(!0,!1,!2)
inline void UnityEvent_3_Invoke_mA7A524CEB38FBD452FBFB7274DBC451D4B72A1A9 (UnityEvent_3_tBBC56B079516E009B4B82F815EA628510B08FB2B * __this, SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 * ___arg00, int32_t ___arg11, bool ___arg22, const RuntimeMethod* method)
{
	((  void (*) (UnityEvent_3_tBBC56B079516E009B4B82F815EA628510B08FB2B *, SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 *, int32_t, bool, const RuntimeMethod*))UnityEvent_3_Invoke_mCCCB26A54DDDE4C45AB75841D6EC25543250237E_gshared)(__this, ___arg00, ___arg11, ___arg22, method);
}
// System.Void Valve.VR.SteamVR_Behaviour_Pose/DeviceConnectedChangeHandler::Invoke(Valve.VR.SteamVR_Behaviour_Pose,Valve.VR.SteamVR_Input_Sources,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void DeviceConnectedChangeHandler_Invoke_m319B9700F2F7862457458047C29099AC3661913C (DeviceConnectedChangeHandler_tAC0D58B9BE0BEF1758FC23FC5A09211DAFC695AB * __this, SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 * ___fromAction0, int32_t ___fromSource1, bool ___deviceConnected2, const RuntimeMethod* method);
// System.Void UnityEngine.Events.UnityEvent`3<Valve.VR.SteamVR_Behaviour_Pose,Valve.VR.SteamVR_Input_Sources,Valve.VR.ETrackingResult>::Invoke(!0,!1,!2)
inline void UnityEvent_3_Invoke_mB847F82D2B4BB89E8D28F5B0DF0427181A45A4E4 (UnityEvent_3_t391F2DDF36FA264C778F53EB8FDCE5A95F5064BE * __this, SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 * ___arg00, int32_t ___arg11, int32_t ___arg22, const RuntimeMethod* method)
{
	((  void (*) (UnityEvent_3_t391F2DDF36FA264C778F53EB8FDCE5A95F5064BE *, SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 *, int32_t, int32_t, const RuntimeMethod*))UnityEvent_3_Invoke_m5C68F6A3763AEBC706B429DECC9B41FCD30511CB_gshared)(__this, ___arg00, ___arg11, ___arg22, method);
}
// System.Void Valve.VR.SteamVR_Behaviour_Pose/TrackingChangeHandler::Invoke(Valve.VR.SteamVR_Behaviour_Pose,Valve.VR.SteamVR_Input_Sources,Valve.VR.ETrackingResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void TrackingChangeHandler_Invoke_m766CD6D6E218E3D4AE18FD7E581B080E81661AE2 (TrackingChangeHandler_tE2D5245E21857392ED2CCBEAD0D65408B5DC5443 * __this, SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 * ___fromAction0, int32_t ___fromSource1, int32_t ___trackingState2, const RuntimeMethod* method);
// System.Boolean Valve.VR.SteamVR_Action_Pose_Source::get_deviceIsConnected()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_Pose_Source_get_deviceIsConnected_mF1AE6114E98F19B5783F49FDB71381DF6D7CC963 (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, const RuntimeMethod* method);
// System.UInt32 Valve.VR.SteamVR_Action_In_Source::get_trackedDeviceIndex()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR uint32_t SteamVR_Action_In_Source_get_trackedDeviceIndex_m59E74A19E16DBA17CB6C467C0DB2B2F78FBCB9EE (SteamVR_Action_In_Source_t6C3FA81DC7F53D302E49E09F5791E612AC7832AB * __this, const RuntimeMethod* method);
// System.Void UnityEngine.GameObject::BroadcastMessage(System.String,System.Object,UnityEngine.SendMessageOptions)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void GameObject_BroadcastMessage_mDF70A40A7E27DF70B4338EBB840500A54060E33D (GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * __this, String_t* ___methodName0, RuntimeObject * ___parameter1, int32_t ___options2, const RuntimeMethod* method);
// System.Void UnityEngine.Events.UnityEvent`3<Valve.VR.SteamVR_Behaviour_Pose,Valve.VR.SteamVR_Input_Sources,System.Int32>::Invoke(!0,!1,!2)
inline void UnityEvent_3_Invoke_mF184EA69621E2B6057B98E93802B15C7DED15615 (UnityEvent_3_t9F7FBE764B10ACE18D72DD1C3A0FD02372F2FDE4 * __this, SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 * ___arg00, int32_t ___arg11, int32_t ___arg22, const RuntimeMethod* method)
{
	((  void (*) (UnityEvent_3_t9F7FBE764B10ACE18D72DD1C3A0FD02372F2FDE4 *, SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 *, int32_t, int32_t, const RuntimeMethod*))UnityEvent_3_Invoke_mDEFB782BBAAE531C8690EF7387FD1828C15F47F0_gshared)(__this, ___arg00, ___arg11, ___arg22, method);
}
// System.Void Valve.VR.SteamVR_Behaviour_Pose/DeviceIndexChangedHandler::Invoke(Valve.VR.SteamVR_Behaviour_Pose,Valve.VR.SteamVR_Input_Sources,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void DeviceIndexChangedHandler_Invoke_mAFC2F1AF706E9F9AF63EEAF83C0F2C9ED3F854C5 (DeviceIndexChangedHandler_t5AD6CF16FBFD1AFBCAABCE86FF9A5F9958E5E988 * __this, SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 * ___fromAction0, int32_t ___fromSource1, int32_t ___newDeviceIndex2, const RuntimeMethod* method);
// UnityEngine.Vector3 Valve.VR.SteamVR_Action_Pose_Source::get_velocity()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  SteamVR_Action_Pose_Source_get_velocity_m2B71BB7981006080D113442CB374529602A310BF_inline (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, const RuntimeMethod* method);
// UnityEngine.Vector3 Valve.VR.SteamVR_Action_Pose_Source::get_angularVelocity()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  SteamVR_Action_Pose_Source_get_angularVelocity_mACAA45CB05DB94C9292ED147F3156109DAFA0209_inline (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, const RuntimeMethod* method);
// System.Boolean Valve.VR.SteamVR_Action_Pose_Source::GetVelocitiesAtTimeOffset(System.Single,UnityEngine.Vector3&,UnityEngine.Vector3&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_Pose_Source_GetVelocitiesAtTimeOffset_m68F72C5D84CF5620C5FF8978BCCC52B3F79C7935 (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, float ___secondsFromNow0, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * ___velocityAtTime1, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * ___angularVelocityAtTime2, const RuntimeMethod* method);
// System.Int32 Valve.VR.SteamVR_HistoryBuffer::GetTopVelocity(System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t SteamVR_HistoryBuffer_GetTopVelocity_m5535E2C2A7901787B4389A2A4DEF684242BED659 (SteamVR_HistoryBuffer_tB82B2932C03165695AE1BE7BE8EDCADC6AE4A6E8 * __this, int32_t ___forFrames0, int32_t ___addFrames1, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_HistoryBuffer::GetAverageVelocities(UnityEngine.Vector3&,UnityEngine.Vector3&,System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_HistoryBuffer_GetAverageVelocities_mE13684826F9D7B93A242BFB733653CAB1EB5B2AE (SteamVR_HistoryBuffer_tB82B2932C03165695AE1BE7BE8EDCADC6AE4A6E8 * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * ___velocity0, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * ___angularVelocity1, int32_t ___forFrames2, int32_t ___startFrame3, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_HistoryBuffer::Update(UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Vector3,UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_HistoryBuffer_Update_mB5AE66DC0E520253A10D559BB42199E8A6F4DE7B (SteamVR_HistoryBuffer_tB82B2932C03165695AE1BE7BE8EDCADC6AE4A6E8 * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___position0, Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  ___rotation1, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___velocity2, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___angularVelocity3, const RuntimeMethod* method);
// System.String Valve.VR.SteamVR_Action_In`2<Valve.VR.SteamVR_Action_Pose_Source_Map`1<Valve.VR.SteamVR_Action_Pose_Source>,Valve.VR.SteamVR_Action_Pose_Source>::GetLocalizedOriginPart(Valve.VR.SteamVR_Input_Sources,Valve.VR.EVRInputStringBits[])
inline String_t* SteamVR_Action_In_2_GetLocalizedOriginPart_m06290187FCD54E2017BE7941CE0276DB4CFC24C4 (SteamVR_Action_In_2_t2C5C166B83FDF97166A2B5B007C2A5742BBE2199 * __this, int32_t ___inputSource0, EVRInputStringBitsU5BU5D_t9F9E9B47CD745CAAB4F8EDC305D84DDF9E5BE511* ___localizedParts1, const RuntimeMethod* method)
{
	return ((  String_t* (*) (SteamVR_Action_In_2_t2C5C166B83FDF97166A2B5B007C2A5742BBE2199 *, int32_t, EVRInputStringBitsU5BU5D_t9F9E9B47CD745CAAB4F8EDC305D84DDF9E5BE511*, const RuntimeMethod*))SteamVR_Action_In_2_GetLocalizedOriginPart_mEA178543F658F3C193F0ADAECE592F66F35D6A83_gshared)(__this, ___inputSource0, ___localizedParts1, method);
}
// T Valve.VR.SteamVR_Input::GetAction<Valve.VR.SteamVR_Action_Pose>(System.String,System.Boolean)
inline SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * SteamVR_Input_GetAction_TisSteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C_m6017595F00FF03D62CBFF0C3009BCD3A0C1BAB40 (String_t* ___actionName0, bool ___caseSensitive1, const RuntimeMethod* method)
{
	return ((  SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * (*) (String_t*, bool, const RuntimeMethod*))SteamVR_Input_GetAction_TisRuntimeObject_mE125D174FCDC6B1CAA20F418BC98C485C0B184A1_gshared)(___actionName0, ___caseSensitive1, method);
}
// System.Void Valve.VR.SteamVR_HistoryBuffer::.ctor(System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_HistoryBuffer__ctor_mF1CDA69BC169476E9636EC6159D2C8FBA8634CDF (SteamVR_HistoryBuffer_tB82B2932C03165695AE1BE7BE8EDCADC6AE4A6E8 * __this, int32_t ___size0, const RuntimeMethod* method);
// System.Void UnityEngine.Events.UnityEvent`2<Valve.VR.SteamVR_Behaviour_Pose,Valve.VR.SteamVR_Input_Sources>::.ctor()
inline void UnityEvent_2__ctor_mE94EED3D5D02FAC67378FC2787984A49F9DFD1B2 (UnityEvent_2_tA05085E47587B6E451DA7BFE1C3551696049307E * __this, const RuntimeMethod* method)
{
	((  void (*) (UnityEvent_2_tA05085E47587B6E451DA7BFE1C3551696049307E *, const RuntimeMethod*))UnityEvent_2__ctor_m90C3B8ED5DA3821DD3264EEAD585A64D22D376E8_gshared)(__this, method);
}
// System.Void UnityEngine.Events.UnityEvent`3<Valve.VR.SteamVR_Behaviour_Pose,Valve.VR.SteamVR_Input_Sources,System.Boolean>::.ctor()
inline void UnityEvent_3__ctor_m574C424C59CC8F794C9F69BE3F30128F36D8D8BD (UnityEvent_3_tBBC56B079516E009B4B82F815EA628510B08FB2B * __this, const RuntimeMethod* method)
{
	((  void (*) (UnityEvent_3_tBBC56B079516E009B4B82F815EA628510B08FB2B *, const RuntimeMethod*))UnityEvent_3__ctor_mFE485CA18703786ADB69D0B88DE90791DCACE4C0_gshared)(__this, method);
}
// System.Void UnityEngine.Events.UnityEvent`3<Valve.VR.SteamVR_Behaviour_Pose,Valve.VR.SteamVR_Input_Sources,System.Int32>::.ctor()
inline void UnityEvent_3__ctor_m85EE828A60546309161F8608EF17D54E107B763D (UnityEvent_3_t9F7FBE764B10ACE18D72DD1C3A0FD02372F2FDE4 * __this, const RuntimeMethod* method)
{
	((  void (*) (UnityEvent_3_t9F7FBE764B10ACE18D72DD1C3A0FD02372F2FDE4 *, const RuntimeMethod*))UnityEvent_3__ctor_m3F5C9C71D01617BD938DF6FCCF22F407E2F34F27_gshared)(__this, method);
}
// System.Void UnityEngine.Events.UnityEvent`3<Valve.VR.SteamVR_Behaviour_Pose,Valve.VR.SteamVR_Input_Sources,Valve.VR.ETrackingResult>::.ctor()
inline void UnityEvent_3__ctor_m44E339EBF173CA025EB43F196FFB59EDB3D2D9C8 (UnityEvent_3_t391F2DDF36FA264C778F53EB8FDCE5A95F5064BE * __this, const RuntimeMethod* method)
{
	((  void (*) (UnityEvent_3_t391F2DDF36FA264C778F53EB8FDCE5A95F5064BE *, const RuntimeMethod*))UnityEvent_3__ctor_m37296D71FE47604FC0A25A42D39C15545FAC2598_gshared)(__this, method);
}
// System.Void Valve.VR.SteamVR_Behaviour_Single::AddHandlers()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_Single_AddHandlers_mA8B361755E3502B3485F63048BBB7936A97DBD78 (SteamVR_Behaviour_Single_t0224221A2437628A3FAFF02B7B02D88952021562 * __this, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Behaviour_Single::RemoveHandlers()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_Single_RemoveHandlers_m1836740684C0B04FB0D8E952785E7A0CBE269B00 (SteamVR_Behaviour_Single_t0224221A2437628A3FAFF02B7B02D88952021562 * __this, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Single/UpdateHandler::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UpdateHandler__ctor_m615A71B3C759B72EB938C012035EC7AA50040402 (UpdateHandler_t4011C6F65732B2D2AD73A21EBF2ADD943897886D * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Single_Source::add_onUpdate(Valve.VR.SteamVR_Action_Single/UpdateHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Single_Source_add_onUpdate_m4A350FBCC760CA187A1709360F237F3BD715FF77 (SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F * __this, UpdateHandler_t4011C6F65732B2D2AD73A21EBF2ADD943897886D * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Single/ChangeHandler::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ChangeHandler__ctor_m8C3023A91594EB9AD495FDAF6B6D9A7CAB842FB4 (ChangeHandler_tF837F67A16B6ED5F9B2C676AC0AF9C611397DFED * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Single_Source::add_onChange(Valve.VR.SteamVR_Action_Single/ChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Single_Source_add_onChange_m069AAC383CD4F163B72BB46667E98FABB5C512C1 (SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F * __this, ChangeHandler_tF837F67A16B6ED5F9B2C676AC0AF9C611397DFED * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Single/AxisHandler::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void AxisHandler__ctor_m77FDAF7B8C55A5EDDFAE09A7A2FBDE6F71613111 (AxisHandler_tB065AC6B40691A33562DB817EBD29E5721A64843 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Single_Source::add_onAxis(Valve.VR.SteamVR_Action_Single/AxisHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Single_Source_add_onAxis_mD6207DBD9D01A9637D16677C7EE3239DEC4B3C3D (SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F * __this, AxisHandler_tB065AC6B40691A33562DB817EBD29E5721A64843 * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Single_Source::remove_onUpdate(Valve.VR.SteamVR_Action_Single/UpdateHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Single_Source_remove_onUpdate_mCD24B03F0DDBFB275AD1A829C9C9647C4BCA5E7F (SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F * __this, UpdateHandler_t4011C6F65732B2D2AD73A21EBF2ADD943897886D * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Single_Source::remove_onChange(Valve.VR.SteamVR_Action_Single/ChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Single_Source_remove_onChange_mA6A9C82FD5071E689ADAAF2B4600F040F9F766D5 (SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F * __this, ChangeHandler_tF837F67A16B6ED5F9B2C676AC0AF9C611397DFED * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Single_Source::remove_onAxis(Valve.VR.SteamVR_Action_Single/AxisHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Single_Source_remove_onAxis_m7AC665F411374B61F073D43948D50EDDE66B7AF2 (SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F * __this, AxisHandler_tB065AC6B40691A33562DB817EBD29E5721A64843 * ___value0, const RuntimeMethod* method);
// System.Void UnityEngine.Events.UnityEvent`4<Valve.VR.SteamVR_Behaviour_Single,Valve.VR.SteamVR_Input_Sources,System.Single,System.Single>::Invoke(!0,!1,!2,!3)
inline void UnityEvent_4_Invoke_m7C62CEBE22AEFFBA3F1FE11C5E7B46019F8E6B85 (UnityEvent_4_t3A547C01CD6A63A594A6C4E837E12268349BF0C7 * __this, SteamVR_Behaviour_Single_t0224221A2437628A3FAFF02B7B02D88952021562 * ___arg00, int32_t ___arg11, float ___arg22, float ___arg33, const RuntimeMethod* method)
{
	((  void (*) (UnityEvent_4_t3A547C01CD6A63A594A6C4E837E12268349BF0C7 *, SteamVR_Behaviour_Single_t0224221A2437628A3FAFF02B7B02D88952021562 *, int32_t, float, float, const RuntimeMethod*))UnityEvent_4_Invoke_m52DEE454F4AD386078577AAFFFC0E09851A5AF3D_gshared)(__this, ___arg00, ___arg11, ___arg22, ___arg33, method);
}
// System.Void Valve.VR.SteamVR_Behaviour_Single/UpdateHandler::Invoke(Valve.VR.SteamVR_Behaviour_Single,Valve.VR.SteamVR_Input_Sources,System.Single,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UpdateHandler_Invoke_m84942E8C81D99B00E49FC64BFD74F6A0B123A2DD (UpdateHandler_t35B29D0C538D0A17C13EFD36765FF0278EE256D4 * __this, SteamVR_Behaviour_Single_t0224221A2437628A3FAFF02B7B02D88952021562 * ___fromAction0, int32_t ___fromSource1, float ___newAxis2, float ___newDelta3, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Behaviour_Single/ChangeHandler::Invoke(Valve.VR.SteamVR_Behaviour_Single,Valve.VR.SteamVR_Input_Sources,System.Single,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ChangeHandler_Invoke_m13F669E97E3EA368C92C64F0172CD01CBC42B931 (ChangeHandler_t5D78A5C2B8BE043F0EF515BB84766EC330B52DF7 * __this, SteamVR_Behaviour_Single_t0224221A2437628A3FAFF02B7B02D88952021562 * ___fromAction0, int32_t ___fromSource1, float ___newAxis2, float ___newDelta3, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Behaviour_Single/AxisHandler::Invoke(Valve.VR.SteamVR_Behaviour_Single,Valve.VR.SteamVR_Input_Sources,System.Single,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void AxisHandler_Invoke_m8E9BFB173CCA66F9303D7EE7B256B8C16D7033BA (AxisHandler_t6CD6525481A3708C4FFC01A49F13C96EBD464F6C * __this, SteamVR_Behaviour_Single_t0224221A2437628A3FAFF02B7B02D88952021562 * ___fromAction0, int32_t ___fromSource1, float ___newAxis2, float ___newDelta3, const RuntimeMethod* method);
// System.String Valve.VR.SteamVR_Action_In`2<Valve.VR.SteamVR_Action_Single_Source_Map,Valve.VR.SteamVR_Action_Single_Source>::GetLocalizedOriginPart(Valve.VR.SteamVR_Input_Sources,Valve.VR.EVRInputStringBits[])
inline String_t* SteamVR_Action_In_2_GetLocalizedOriginPart_m68B2DF7EE84BFF3AD79B5306A4D26E96F68E5B57 (SteamVR_Action_In_2_t518EEA73CD833B39D557DDB94804313377E0FE02 * __this, int32_t ___inputSource0, EVRInputStringBitsU5BU5D_t9F9E9B47CD745CAAB4F8EDC305D84DDF9E5BE511* ___localizedParts1, const RuntimeMethod* method)
{
	return ((  String_t* (*) (SteamVR_Action_In_2_t518EEA73CD833B39D557DDB94804313377E0FE02 *, int32_t, EVRInputStringBitsU5BU5D_t9F9E9B47CD745CAAB4F8EDC305D84DDF9E5BE511*, const RuntimeMethod*))SteamVR_Action_In_2_GetLocalizedOriginPart_mEA178543F658F3C193F0ADAECE592F66F35D6A83_gshared)(__this, ___inputSource0, ___localizedParts1, method);
}
// System.Void UnityEngine.Events.UnityEvent`4<Valve.VR.SteamVR_Behaviour_Single,Valve.VR.SteamVR_Input_Sources,System.Single,System.Single>::.ctor()
inline void UnityEvent_4__ctor_m4979081DD527042CB93C3F1971860DDC9587C584 (UnityEvent_4_t3A547C01CD6A63A594A6C4E837E12268349BF0C7 * __this, const RuntimeMethod* method)
{
	((  void (*) (UnityEvent_4_t3A547C01CD6A63A594A6C4E837E12268349BF0C7 *, const RuntimeMethod*))UnityEvent_4__ctor_mEFADC1A8448B4263178BA1D66837104ECA8943FD_gshared)(__this, method);
}
// System.Boolean Valve.VR.SteamVR_Action_Skeleton::GetActive()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_Skeleton_GetActive_m6E06AD31889D5E0E0431CA1766F874759FE3216F (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, const RuntimeMethod* method);
// System.Boolean Valve.VR.SteamVR_Behaviour_Skeleton::get_skeletonAvailable()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Behaviour_Skeleton_get_skeletonAvailable_m29DBA8C30D07CAF0C3F1423F7886AB2F3D8422E2 (SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A * __this, const RuntimeMethod* method);
// System.Single[] Valve.VR.SteamVR_Action_Skeleton::GetFingerCurls(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* SteamVR_Action_Skeleton_GetFingerCurls_mB05B99839838D84A19A639120BC6DD7FB2395A29 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, bool ___copy0, const RuntimeMethod* method);
// System.Single Valve.VR.SteamVR_Action_Single::GetAxis(Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Single_GetAxis_m3847D567B96AA8D8186F641ED603D3C28C77F04B (SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 * __this, int32_t ___inputSource0, const RuntimeMethod* method);
// System.Single Valve.VR.SteamVR_Action_Skeleton::GetFingerCurl(Valve.VR.SteamVR_Skeleton_FingerIndexEnum)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Skeleton_GetFingerCurl_m74152BBAF9EE89F9A8F186E462FFD0DDE1C9D420 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, int32_t ___finger0, const RuntimeMethod* method);
// Valve.VR.EVRSkeletalTrackingLevel Valve.VR.SteamVR_Action_Skeleton::get_skeletalTrackingLevel()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t SteamVR_Action_Skeleton_get_skeletalTrackingLevel_m42CDC3C3C98C91065325A4C71510B9B8B6FBAA14 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, const RuntimeMethod* method);
// UnityEngine.Transform Valve.VR.SteamVR_Behaviour_Skeleton::get_thumbProximal()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * SteamVR_Behaviour_Skeleton_get_thumbProximal_m0CB4247ED100768398A3C9E9908E0C3ED240534A (SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A * __this, const RuntimeMethod* method);
// UnityEngine.Transform Valve.VR.SteamVR_Behaviour_Skeleton::get_indexProximal()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * SteamVR_Behaviour_Skeleton_get_indexProximal_m12B2B068243D619BE16744095599DA88E55F14E9 (SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A * __this, const RuntimeMethod* method);
// UnityEngine.Transform Valve.VR.SteamVR_Behaviour_Skeleton::get_middleProximal()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * SteamVR_Behaviour_Skeleton_get_middleProximal_m2160F1117BA71E7BF52BF518FCB2BA156A4C9939 (SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A * __this, const RuntimeMethod* method);
// UnityEngine.Transform Valve.VR.SteamVR_Behaviour_Skeleton::get_ringProximal()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * SteamVR_Behaviour_Skeleton_get_ringProximal_m4F4648D23E440C842E806ADFA2EEEEB166C6380F (SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A * __this, const RuntimeMethod* method);
// UnityEngine.Transform Valve.VR.SteamVR_Behaviour_Skeleton::get_pinkyProximal()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * SteamVR_Behaviour_Skeleton_get_pinkyProximal_m248721E4423A15A1C7A681B6698658CFD75F4727 (SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A * __this, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Behaviour_Skeleton::set_proximals(UnityEngine.Transform[])
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Behaviour_Skeleton_set_proximals_mDDA03D4409588EB318C40F83363ABB3C4D463069_inline (SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A * __this, TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804* ___value0, const RuntimeMethod* method);
// UnityEngine.Transform Valve.VR.SteamVR_Behaviour_Skeleton::get_thumbMiddle()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * SteamVR_Behaviour_Skeleton_get_thumbMiddle_m027A0D17549E8F231A9469445958DC7B14D016E8 (SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A * __this, const RuntimeMethod* method);
// UnityEngine.Transform Valve.VR.SteamVR_Behaviour_Skeleton::get_indexMiddle()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * SteamVR_Behaviour_Skeleton_get_indexMiddle_mBC700387F3C19B996B52211EDB152C037F2BC445 (SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A * __this, const RuntimeMethod* method);
// UnityEngine.Transform Valve.VR.SteamVR_Behaviour_Skeleton::get_middleMiddle()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * SteamVR_Behaviour_Skeleton_get_middleMiddle_m49B293EF0D60AFA7CAE933F392D317DC971BC8A7 (SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A * __this, const RuntimeMethod* method);
// UnityEngine.Transform Valve.VR.SteamVR_Behaviour_Skeleton::get_ringMiddle()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * SteamVR_Behaviour_Skeleton_get_ringMiddle_m95882BB0A66F1DBFCC2954B4368D51DC9C6B87A4 (SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A * __this, const RuntimeMethod* method);
// UnityEngine.Transform Valve.VR.SteamVR_Behaviour_Skeleton::get_pinkyMiddle()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * SteamVR_Behaviour_Skeleton_get_pinkyMiddle_m902A0ED89D0CB4F02183B58844BDFA102FA49215 (SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A * __this, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Behaviour_Skeleton::set_middles(UnityEngine.Transform[])
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Behaviour_Skeleton_set_middles_mB85213CC9E37A3B86AEEA3A14EA16DB460136773_inline (SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A * __this, TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804* ___value0, const RuntimeMethod* method);
// UnityEngine.Transform Valve.VR.SteamVR_Behaviour_Skeleton::get_thumbDistal()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * SteamVR_Behaviour_Skeleton_get_thumbDistal_m1AAE37DA4600B5E65E440ECE9AF86A811F467F0E (SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A * __this, const RuntimeMethod* method);
// UnityEngine.Transform Valve.VR.SteamVR_Behaviour_Skeleton::get_indexDistal()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * SteamVR_Behaviour_Skeleton_get_indexDistal_m5C68558EE577F1A6D3CFB7CC616823E8DC19DB07 (SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A * __this, const RuntimeMethod* method);
// UnityEngine.Transform Valve.VR.SteamVR_Behaviour_Skeleton::get_middleDistal()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * SteamVR_Behaviour_Skeleton_get_middleDistal_m349C9ACA71BB75EF3789240F820F3C7C1F83106D (SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A * __this, const RuntimeMethod* method);
// UnityEngine.Transform Valve.VR.SteamVR_Behaviour_Skeleton::get_ringDistal()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * SteamVR_Behaviour_Skeleton_get_ringDistal_mC8282D64379F0281AD5BFCEF468F59AF7BD36D86 (SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A * __this, const RuntimeMethod* method);
// UnityEngine.Transform Valve.VR.SteamVR_Behaviour_Skeleton::get_pinkyDistal()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * SteamVR_Behaviour_Skeleton_get_pinkyDistal_m293037BC745BE67ADAA05821663D2120DEA39C2B (SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A * __this, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Behaviour_Skeleton::set_distals(UnityEngine.Transform[])
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Behaviour_Skeleton_set_distals_m7D276F9D28125233D7AD24EA8A2F0F9F0A0B4541_inline (SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A * __this, TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804* ___value0, const RuntimeMethod* method);
// UnityEngine.Transform Valve.VR.SteamVR_Behaviour_Skeleton::get_thumbTip()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * SteamVR_Behaviour_Skeleton_get_thumbTip_m760E6291B5983333C3A2B6D69B21E6CAC2C0C2F3 (SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A * __this, const RuntimeMethod* method);
// UnityEngine.Transform Valve.VR.SteamVR_Behaviour_Skeleton::get_indexTip()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * SteamVR_Behaviour_Skeleton_get_indexTip_m7BEF68906E2D53FE258E21179322DEB564D5BF5D (SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A * __this, const RuntimeMethod* method);
// UnityEngine.Transform Valve.VR.SteamVR_Behaviour_Skeleton::get_middleTip()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * SteamVR_Behaviour_Skeleton_get_middleTip_m92D8F32D6D39694B20C40E552AF7FE4A80B4426B (SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A * __this, const RuntimeMethod* method);
// UnityEngine.Transform Valve.VR.SteamVR_Behaviour_Skeleton::get_ringTip()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * SteamVR_Behaviour_Skeleton_get_ringTip_m08A038D2A81F1DCC692B7F8C52180B1CAAC07E7D (SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A * __this, const RuntimeMethod* method);
// UnityEngine.Transform Valve.VR.SteamVR_Behaviour_Skeleton::get_pinkyTip()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * SteamVR_Behaviour_Skeleton_get_pinkyTip_mB6410DCFB16FAD7E8BF984835E45C00B5BDA257A (SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A * __this, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Behaviour_Skeleton::set_tips(UnityEngine.Transform[])
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Behaviour_Skeleton_set_tips_m7ED7EAB9823F9DC1C4E8E888D6C1FBE636C07331_inline (SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A * __this, TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804* ___value0, const RuntimeMethod* method);
// UnityEngine.Transform Valve.VR.SteamVR_Behaviour_Skeleton::get_thumbAux()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * SteamVR_Behaviour_Skeleton_get_thumbAux_m201F1B59F4234329F05A42DB1147CA5273D74A4C (SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A * __this, const RuntimeMethod* method);
// UnityEngine.Transform Valve.VR.SteamVR_Behaviour_Skeleton::get_indexAux()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * SteamVR_Behaviour_Skeleton_get_indexAux_m94BBF354535FE699655BC855C045AB31676A8055 (SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A * __this, const RuntimeMethod* method);
// UnityEngine.Transform Valve.VR.SteamVR_Behaviour_Skeleton::get_middleAux()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * SteamVR_Behaviour_Skeleton_get_middleAux_m488FFCDE7292ADF3EE6366E785D5E5A62A6C5B4D (SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A * __this, const RuntimeMethod* method);
// UnityEngine.Transform Valve.VR.SteamVR_Behaviour_Skeleton::get_ringAux()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * SteamVR_Behaviour_Skeleton_get_ringAux_mC29BFE8AD2E1307BB9DC6E253D3C1CC577E7444C (SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A * __this, const RuntimeMethod* method);
// UnityEngine.Transform Valve.VR.SteamVR_Behaviour_Skeleton::get_pinkyAux()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * SteamVR_Behaviour_Skeleton_get_pinkyAux_m08C510C97BC16F5911DD9FD0219CB1F610B99B39 (SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A * __this, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Behaviour_Skeleton::set_auxs(UnityEngine.Transform[])
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Behaviour_Skeleton_set_auxs_m825F3D35FF398084D053A9968403269EA25E2A8A_inline (SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A * __this, TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804* ___value0, const RuntimeMethod* method);
// T Valve.VR.SteamVR_Input::GetAction<Valve.VR.SteamVR_Action_Skeleton>(System.String,System.Boolean)
inline SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * SteamVR_Input_GetAction_TisSteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504_m0EC1DD77FC160AEEF0E26CB478B21769AD6BA3D5 (String_t* ___actionName0, bool ___caseSensitive1, const RuntimeMethod* method)
{
	return ((  SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * (*) (String_t*, bool, const RuntimeMethod*))SteamVR_Input_GetAction_TisRuntimeObject_mE125D174FCDC6B1CAA20F418BC98C485C0B184A1_gshared)(___actionName0, ___caseSensitive1, method);
}
// !!0[] UnityEngine.Component::GetComponentsInChildren<UnityEngine.Transform>()
inline TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804* Component_GetComponentsInChildren_TisTransform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA_m335E18CE04D2AD7313D89DBEA3A88EDB76255113 (Component_t05064EF382ABCAF4B8C94F8A350EA85184C26621 * __this, const RuntimeMethod* method)
{
	return ((  TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804* (*) (Component_t05064EF382ABCAF4B8C94F8A350EA85184C26621 *, const RuntimeMethod*))Component_GetComponentsInChildren_TisRuntimeObject_m96A4AA0545C19F58121E6C5142474CB26EAB9717_gshared)(__this, method);
}
// System.Void Valve.VR.SteamVR_Input/SkeletonsUpdatedHandler::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SkeletonsUpdatedHandler__ctor_m00B36814D5070D5715A0187CFF466DC31EEF53F5 (SkeletonsUpdatedHandler_t87EC02E2FFD91D305E5C4E8B64110AA2981F3DD6 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Input::add_onSkeletonsUpdated(Valve.VR.SteamVR_Input/SkeletonsUpdatedHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Input_add_onSkeletonsUpdated_mABDC58C0D49B43F4C1161A46BFB03AD7791574CC (SkeletonsUpdatedHandler_t87EC02E2FFD91D305E5C4E8B64110AA2981F3DD6 * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Skeleton/DeviceConnectedChangeHandler::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void DeviceConnectedChangeHandler__ctor_m8F5774FBC2C0DEA2AE17138C7D67D6FAD3385D8C (DeviceConnectedChangeHandler_tA531478A75E2F7B0C49D41DADBB9FD7BD46C4592 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Skeleton::add_onDeviceConnectedChanged(Valve.VR.SteamVR_Action_Skeleton/DeviceConnectedChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_add_onDeviceConnectedChanged_m92354268E04EC26BEA381884B6642CFBB1E08CC1 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, DeviceConnectedChangeHandler_tA531478A75E2F7B0C49D41DADBB9FD7BD46C4592 * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Skeleton/TrackingChangeHandler::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void TrackingChangeHandler__ctor_m6669C85631291CBFDD37E8F72F923C1BB4EFBDA5 (TrackingChangeHandler_t8AD34E45FED47F362BB0D3E5B6B950708A0EC6B4 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Skeleton::add_onTrackingChanged(Valve.VR.SteamVR_Action_Skeleton/TrackingChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_add_onTrackingChanged_m27D7D512A8B28F439D5462462C58725039CB823B (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, TrackingChangeHandler_t8AD34E45FED47F362BB0D3E5B6B950708A0EC6B4 * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Input::remove_onSkeletonsUpdated(Valve.VR.SteamVR_Input/SkeletonsUpdatedHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Input_remove_onSkeletonsUpdated_m5E2E6D9B3ED52BAB24CFF5BB7CB1785A290A82D2 (SkeletonsUpdatedHandler_t87EC02E2FFD91D305E5C4E8B64110AA2981F3DD6 * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Skeleton::remove_onDeviceConnectedChanged(Valve.VR.SteamVR_Action_Skeleton/DeviceConnectedChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_remove_onDeviceConnectedChanged_mCC1CD5EF82563E7FE898D2BAE0DEDC59C9AFA8C9 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, DeviceConnectedChangeHandler_tA531478A75E2F7B0C49D41DADBB9FD7BD46C4592 * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Skeleton::remove_onTrackingChanged(Valve.VR.SteamVR_Action_Skeleton/TrackingChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_remove_onTrackingChanged_mE5229135F65372F6DDA222F462565A6D0E66DA6D (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, TrackingChangeHandler_t8AD34E45FED47F362BB0D3E5B6B950708A0EC6B4 * ___value0, const RuntimeMethod* method);
// System.Void UnityEngine.Events.UnityEvent`3<Valve.VR.SteamVR_Behaviour_Skeleton,Valve.VR.SteamVR_Input_Sources,System.Boolean>::Invoke(!0,!1,!2)
inline void UnityEvent_3_Invoke_m0DB14EAF35361C179F364C7BF3681380E75E0089 (UnityEvent_3_tC8A397CA8890011F49B784FC92F66521499D69BA * __this, SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A * ___arg00, int32_t ___arg11, bool ___arg22, const RuntimeMethod* method)
{
	((  void (*) (UnityEvent_3_tC8A397CA8890011F49B784FC92F66521499D69BA *, SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A *, int32_t, bool, const RuntimeMethod*))UnityEvent_3_Invoke_mCCCB26A54DDDE4C45AB75841D6EC25543250237E_gshared)(__this, ___arg00, ___arg11, ___arg22, method);
}
// System.Void Valve.VR.SteamVR_Behaviour_Skeleton/DeviceConnectedChangeHandler::Invoke(Valve.VR.SteamVR_Behaviour_Skeleton,Valve.VR.SteamVR_Input_Sources,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void DeviceConnectedChangeHandler_Invoke_m0C99D561FBE9074CCA3C5304F7A3EBCF8D9CBEB2 (DeviceConnectedChangeHandler_t0F6018732B70A6C87D60D7C71A04183CE5B1E617 * __this, SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A * ___fromAction0, int32_t ___inputSource1, bool ___deviceConnected2, const RuntimeMethod* method);
// System.Void UnityEngine.Events.UnityEvent`3<Valve.VR.SteamVR_Behaviour_Skeleton,Valve.VR.SteamVR_Input_Sources,Valve.VR.ETrackingResult>::Invoke(!0,!1,!2)
inline void UnityEvent_3_Invoke_mA5EF9426BEE9D582B1CF18E40D0A27D0DC9AE099 (UnityEvent_3_t516983F871A6C39CE10EE0B4C19E30BE359971A0 * __this, SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A * ___arg00, int32_t ___arg11, int32_t ___arg22, const RuntimeMethod* method)
{
	((  void (*) (UnityEvent_3_t516983F871A6C39CE10EE0B4C19E30BE359971A0 *, SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A *, int32_t, int32_t, const RuntimeMethod*))UnityEvent_3_Invoke_m5C68F6A3763AEBC706B429DECC9B41FCD30511CB_gshared)(__this, ___arg00, ___arg11, ___arg22, method);
}
// System.Void Valve.VR.SteamVR_Behaviour_Skeleton/TrackingChangeHandler::Invoke(Valve.VR.SteamVR_Behaviour_Skeleton,Valve.VR.SteamVR_Input_Sources,Valve.VR.ETrackingResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void TrackingChangeHandler_Invoke_mB11B131DB495AA43338E55645109AB8BDEF630E6 (TrackingChangeHandler_t0354ED148830BCEA31C451E8C314757B70B5D63F * __this, SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A * ___fromAction0, int32_t ___inputSource1, int32_t ___trackingState2, const RuntimeMethod* method);
// Valve.VR.SteamVR_Skeleton_PoseSnapshot Valve.VR.SteamVR_Skeleton_Poser::GetBlendedPose(Valve.VR.SteamVR_Behaviour_Skeleton)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR SteamVR_Skeleton_PoseSnapshot_t0E1C4250EA9F357DFC204D8E5D9C2111593C3E18 * SteamVR_Skeleton_Poser_GetBlendedPose_m8D1B12610AE9E4C0EF760253126B7096BACB0F59 (SteamVR_Skeleton_Poser_t8BAF9FB80E002A7B21C380E9137C955DA4292CBA * __this, SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A * ___skeletonBehaviour0, const RuntimeMethod* method);
// System.Boolean System.Nullable`1<Valve.VR.EVRSkeletalMotionRange>::get_HasValue()
inline bool Nullable_1_get_HasValue_mDB6CB8F03CCDC2BB72988E311BC1B841C8D4BD35_inline (Nullable_1_t1A7B9FD0D5A1C2016BC211A63A5BB64D3B4E70DD * __this, const RuntimeMethod* method)
{
	return ((  bool (*) (Nullable_1_t1A7B9FD0D5A1C2016BC211A63A5BB64D3B4E70DD *, const RuntimeMethod*))Nullable_1_get_HasValue_mB0A6989529561627BBB65E6E4342DAA6549DD5A9_gshared_inline)(__this, method);
}
// !0 System.Nullable`1<Valve.VR.EVRSkeletalMotionRange>::get_Value()
inline int32_t Nullable_1_get_Value_m76F1CC0EF9E5DB41AF44CAC048AE6C5CC55E583D (Nullable_1_t1A7B9FD0D5A1C2016BC211A63A5BB64D3B4E70DD * __this, const RuntimeMethod* method)
{
	return ((  int32_t (*) (Nullable_1_t1A7B9FD0D5A1C2016BC211A63A5BB64D3B4E70DD *, const RuntimeMethod*))Nullable_1_get_Value_mDF2D4DC386BD762B8AF37F6F93B2F24EC5A49ABF_gshared)(__this, method);
}
// System.Void Valve.VR.SteamVR_Action_Skeleton::SetRangeOfMotion(Valve.VR.EVRSkeletalMotionRange)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_SetRangeOfMotion_mF9A18F8B97BE27E61EF44516E381801FA301FC11 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, int32_t ___range0, const RuntimeMethod* method);
// !0 System.Nullable`1<Valve.VR.EVRSkeletalMotionRange>::GetValueOrDefault()
inline int32_t Nullable_1_GetValueOrDefault_m2ED1EF0EC4DE8912C2A0BC877B2F66CBF5789506_inline (Nullable_1_t1A7B9FD0D5A1C2016BC211A63A5BB64D3B4E70DD * __this, const RuntimeMethod* method)
{
	return ((  int32_t (*) (Nullable_1_t1A7B9FD0D5A1C2016BC211A63A5BB64D3B4E70DD *, const RuntimeMethod*))Nullable_1_GetValueOrDefault_m256BDDFFC9F6CE76EBBC5A9A6ED0A6FFB9F0455F_gshared_inline)(__this, method);
}
// System.Void Valve.VR.SteamVR_Behaviour_Skeleton::TemporaryRangeOfMotionBlend(Valve.VR.EVRSkeletalMotionRange,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_Skeleton_TemporaryRangeOfMotionBlend_mECB584C8E1228F4834B1C3183C05EC9498C2DBBC (SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A * __this, int32_t ___newRangeOfMotion0, float ___blendOverSeconds1, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Behaviour_Skeleton::ResetTemporaryRangeOfMotionBlend(System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_Skeleton_ResetTemporaryRangeOfMotionBlend_m9DB5FE93F5496BA28DE90CB72D4B2E75590F6B7D (SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A * __this, float ___blendOverSeconds0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Behaviour_Skeleton::RangeOfMotionBlend(Valve.VR.EVRSkeletalMotionRange,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_Skeleton_RangeOfMotionBlend_m25BEC8CDC3F025656BCCF6CA62CF19A4E50BBEAD (SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A * __this, int32_t ___newRangeOfMotion0, float ___blendOverSeconds1, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Behaviour_Skeleton::BlendTo(System.Single,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_Skeleton_BlendTo_m9212F504D764F114CCBD48D3510E93336C7ED353 (SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A * __this, float ___blendToAmount0, float ___overTime1, const RuntimeMethod* method);
// System.Boolean UnityEngine.GameObject::get_activeInHierarchy()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool GameObject_get_activeInHierarchy_mDEE60F1B28281974BA9880EC448682F3DAABB1EF (GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * __this, const RuntimeMethod* method);
// System.Collections.IEnumerator Valve.VR.SteamVR_Behaviour_Skeleton::DoBlendRoutine(System.Single,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* SteamVR_Behaviour_Skeleton_DoBlendRoutine_m1D4DD994425C4B916480E31F58E3787F09185CDE (SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A * __this, float ___blendToAmount0, float ___overTime1, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Behaviour_Skeleton/<DoBlendRoutine>d__152::.ctor(System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void U3CDoBlendRoutineU3Ed__152__ctor_m3CFC1BF114C96CFC002A0C92C1B2794F788B107E (U3CDoBlendRoutineU3Ed__152_tFF832A9C1A3DA477A5CB7789B762723F29BB50D6 * __this, int32_t ___U3CU3E1__state0, const RuntimeMethod* method);
// System.Collections.IEnumerator Valve.VR.SteamVR_Behaviour_Skeleton::DoRangeOfMotionBlend(Valve.VR.EVRSkeletalMotionRange,Valve.VR.EVRSkeletalMotionRange,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* SteamVR_Behaviour_Skeleton_DoRangeOfMotionBlend_m95E3E709146E51D114E33DEE72CB991F2AE16AC7 (SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A * __this, int32_t ___oldRangeOfMotion0, int32_t ___newRangeOfMotion1, float ___overTime2, const RuntimeMethod* method);
// System.Void System.Nullable`1<Valve.VR.EVRSkeletalMotionRange>::.ctor(!0)
inline void Nullable_1__ctor_m6C36C3DE6765E158493B68F2697E0F4FB30A221A (Nullable_1_t1A7B9FD0D5A1C2016BC211A63A5BB64D3B4E70DD * __this, int32_t ___value0, const RuntimeMethod* method)
{
	((  void (*) (Nullable_1_t1A7B9FD0D5A1C2016BC211A63A5BB64D3B4E70DD *, int32_t, const RuntimeMethod*))Nullable_1__ctor_m5C28B34DE8C6D3A1E136828428C71543A08B32D3_gshared)(__this, ___value0, method);
}
// System.Void Valve.VR.SteamVR_Behaviour_Skeleton/<DoRangeOfMotionBlend>d__156::.ctor(System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void U3CDoRangeOfMotionBlendU3Ed__156__ctor_m844C5227B6A1E8DFC65302D6B11586B7DC5EE1B8 (U3CDoRangeOfMotionBlendU3Ed__156_tA971D0B47D544B2CDCFFBDE43070BD5D7572E0C9 * __this, int32_t ___U3CU3E1__state0, const RuntimeMethod* method);
// UnityEngine.Vector3[] Valve.VR.SteamVR_Behaviour_Skeleton::GetBonePositions()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* SteamVR_Behaviour_Skeleton_GetBonePositions_m75282A7A4582E34D6C613827729532F3C279238D (SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A * __this, const RuntimeMethod* method);
// UnityEngine.Quaternion[] Valve.VR.SteamVR_Behaviour_Skeleton::GetBoneRotations()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3* SteamVR_Behaviour_Skeleton_GetBoneRotations_mDB798AEB8FCA9F3E884563A4E4FBCA07EE3D464B (SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A * __this, const RuntimeMethod* method);
// Valve.VR.SteamVR_Skeleton_Pose_Hand Valve.VR.SteamVR_Skeleton_Pose::GetHand(Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR SteamVR_Skeleton_Pose_Hand_tB273028E85AA961B7A088E75DA7263BF6BAA395E * SteamVR_Skeleton_Pose_GetHand_m15DBAECA5942E5F9E019A064E4E92B9E61A7A898 (SteamVR_Skeleton_Pose_tE0875BE0979F259871814680A295FF216A3FE593 * __this, int32_t ___hand0, const RuntimeMethod* method);
// UnityEngine.Vector3 UnityEngine.Vector3::Lerp(UnityEngine.Vector3,UnityEngine.Vector3,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  Vector3_Lerp_m5BA75496B803820CC64079383956D73C6FD4A8A1 (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___a0, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___b1, float ___t2, const RuntimeMethod* method);
// UnityEngine.Quaternion UnityEngine.Quaternion::Lerp(UnityEngine.Quaternion,UnityEngine.Quaternion,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  Quaternion_Lerp_m749B3988EE2EF387CC9BFB76C81B7465A7534E27 (Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  ___a0, Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  ___b1, float ___t2, const RuntimeMethod* method);
// UnityEngine.Vector3 UnityEngine.Transform::get_localPosition()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  Transform_get_localPosition_m812D43318E05BDCB78310EB7308785A13D85EFD8 (Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * __this, const RuntimeMethod* method);
// UnityEngine.Quaternion UnityEngine.Transform::get_localRotation()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  Transform_get_localRotation_mEDA319E1B42EF12A19A95AC0824345B6574863FE (Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * __this, const RuntimeMethod* method);
// System.Void UnityEngine.Events.UnityEvent`2<Valve.VR.SteamVR_Behaviour_Skeleton,Valve.VR.SteamVR_Input_Sources>::Invoke(!0,!1)
inline void UnityEvent_2_Invoke_mA149632942D05C483CA654D6D8355DB4EA1ED032 (UnityEvent_2_t1039E05662791F0E922DA5769E4F1664E336547D * __this, SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A * ___arg00, int32_t ___arg11, const RuntimeMethod* method)
{
	((  void (*) (UnityEvent_2_t1039E05662791F0E922DA5769E4F1664E336547D *, SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A *, int32_t, const RuntimeMethod*))UnityEvent_2_Invoke_m8E0E3910F551485BB28258D9379D14BFAA534A22_gshared)(__this, ___arg00, ___arg11, method);
}
// System.Void Valve.VR.SteamVR_Behaviour_Skeleton/UpdateHandler::Invoke(Valve.VR.SteamVR_Behaviour_Skeleton,Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UpdateHandler_Invoke_m8827E292EA413A4EF794103BB153F8CC8A719E89 (UpdateHandler_t529F28858847FB086B7F9A7A7E52860C7430976A * __this, SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A * ___fromAction0, int32_t ___inputSource1, const RuntimeMethod* method);
// UnityEngine.Vector3 UnityEngine.Transform::get_position()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  Transform_get_position_mF54C3A064F7C8E24F1C56EE128728B2E4485E294 (Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * __this, const RuntimeMethod* method);
// UnityEngine.Vector3[] Valve.VR.SteamVR_Action_Skeleton::GetBonePositions(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* SteamVR_Action_Skeleton_GetBonePositions_mB8ED80319622D467201E3562AEDCE36C6601D531 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, bool ___copy0, const RuntimeMethod* method);
// UnityEngine.Vector3 Valve.VR.SteamVR_Behaviour_Skeleton::MirrorPosition(System.Int32,UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  SteamVR_Behaviour_Skeleton_MirrorPosition_mB9224FC4CCE63FEC7C3884B98E2D6109DE157016 (int32_t ___boneIndex0, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___rawPosition1, const RuntimeMethod* method);
// Valve.VR.SteamVR_Skeleton_PoseSnapshot Valve.VR.SteamVR_Skeleton_Poser::GetBlendedPose(Valve.VR.SteamVR_Action_Skeleton,Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR SteamVR_Skeleton_PoseSnapshot_t0E1C4250EA9F357DFC204D8E5D9C2111593C3E18 * SteamVR_Skeleton_Poser_GetBlendedPose_mE28BCF648FE33845102DB4CAF065D11F4EF43FE1 (SteamVR_Skeleton_Poser_t8BAF9FB80E002A7B21C380E9137C955DA4292CBA * __this, SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * ___skeletonAction0, int32_t ___handType1, const RuntimeMethod* method);
// UnityEngine.Quaternion[] Valve.VR.SteamVR_Action_Skeleton::GetBoneRotations(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3* SteamVR_Action_Skeleton_GetBoneRotations_m7239E024A6D2E783C25D633A0476CA9428D465C4 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, bool ___copy0, const RuntimeMethod* method);
// UnityEngine.Quaternion Valve.VR.SteamVR_Behaviour_Skeleton::MirrorRotation(System.Int32,UnityEngine.Quaternion)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  SteamVR_Behaviour_Skeleton_MirrorRotation_m942A7A6E456AD7426D166B074280E0B01E5799C8 (int32_t ___boneIndex0, Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  ___rawRotation1, const RuntimeMethod* method);
// System.Boolean Valve.VR.SteamVR_Behaviour_Skeleton::IsMetacarpal(System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Behaviour_Skeleton_IsMetacarpal_mCE1D2618F91173E18ACEAAC758D247607CEFE3F0 (int32_t ___boneIndex0, const RuntimeMethod* method);
// System.Void UnityEngine.Vector3::.ctor(System.Single,System.Single,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Vector3__ctor_m08F61F548AA5836D8789843ACB4A81E4963D2EE1 (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * __this, float ___x0, float ___y1, float ___z2, const RuntimeMethod* method);
// System.Void UnityEngine.Vector3::Scale(UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Vector3_Scale_mD40CDE2B62BCBABD49426FAE104814F29CF2AA0B (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___scale0, const RuntimeMethod* method);
// UnityEngine.Vector3 UnityEngine.Vector3::op_Multiply(UnityEngine.Vector3,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  Vector3_op_Multiply_m1C5F07723615156ACF035D88A1280A9E8F35A04E (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___a0, float ___d1, const RuntimeMethod* method);
// UnityEngine.Vector3 Valve.VR.SteamVR_Action_Skeleton::GetLocalPosition()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  SteamVR_Action_Skeleton_GetLocalPosition_mB9C362EEA9A30E590A62D20B986A94C98AA1FAD5 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, const RuntimeMethod* method);
// UnityEngine.Quaternion Valve.VR.SteamVR_Action_Skeleton::GetLocalRotation()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  SteamVR_Action_Skeleton_GetLocalRotation_m917F58C641A69D3E71DC1F48AF8B2EE2A8C143D2 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, const RuntimeMethod* method);
// System.Boolean Valve.VR.SteamVR_Action_Skeleton::get_poseChanged()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_Skeleton_get_poseChanged_m248D619571236D9D7833B76A03BA70B033516FFA (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Behaviour_Skeleton/ChangeHandler::Invoke(Valve.VR.SteamVR_Behaviour_Skeleton,Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ChangeHandler_Invoke_mBE36CDFEB7A200641B44807449FCECD8AF874176 (ChangeHandler_tB89A36613D65385655B73DBDA42D2F08868FD67F * __this, SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A * ___fromAction0, int32_t ___inputSource1, const RuntimeMethod* method);
// System.Boolean UnityEngine.Application::get_isEditor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool Application_get_isEditor_m347E6EE16E5109EF613C83ED98DB1EC6E3EF5E26 (const RuntimeMethod* method);
// System.Boolean UnityEngine.Application::get_isPlaying()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool Application_get_isPlaying_mF43B519662E7433DD90D883E5AE22EC3CFB65CA5 (const RuntimeMethod* method);
// System.Boolean Valve.VR.SteamVR::InitializeTemporarySession(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_InitializeTemporarySession_m818DDDB2FEA8F2196C51DF54AC83CACE0191FE30 (bool ___initInput0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_ActionSet_Manager::UpdateActionStates(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_ActionSet_Manager_UpdateActionStates_m6F0D76FF654C97F1700EBBB1D6E00A7FEBE426AF (bool ___force0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Skeleton::UpdateValueWithoutEvents()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_UpdateValueWithoutEvents_mDEFBA29DA9DD73B2577B692E21B71CAE9650735C (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, const RuntimeMethod* method);
// System.String System.String::Concat(System.String,System.String,System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR String_t* String_Concat_mF4626905368D6558695A823466A1AF65EADB9923 (String_t* ___str00, String_t* ___str11, String_t* ___str22, const RuntimeMethod* method);
// SteamVR_Utils/RigidTransform[] Valve.VR.SteamVR_Action_Skeleton::GetReferenceTransforms(Valve.VR.EVRSkeletalTransformSpace,Valve.VR.EVRSkeletalReferencePose)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RigidTransformU5BU5D_tC98EB3576009E5D825D0D43671A65D32A2449ECC* SteamVR_Action_Skeleton_GetReferenceTransforms_m003738CB3D282D68A3B67970CDF7F508117FD296 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, int32_t ___transformSpace0, int32_t ___referencePose1, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR::ExitTemporarySession()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_ExitTemporarySession_mE459ACE55EF1DA53089F0A28A653A1DD7770EBC1 (const RuntimeMethod* method);
// UnityEngine.Vector3 UnityEngine.Vector3::get_right()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  Vector3_get_right_m6DD9559CA0C75BBA42D9140021C4C2A9AAA9B3F5 (const RuntimeMethod* method);
// UnityEngine.Quaternion UnityEngine.Quaternion::AngleAxis(System.Single,UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  Quaternion_AngleAxis_m07DACF59F0403451DABB9BC991C53EE3301E88B0 (float ___angle0, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___axis1, const RuntimeMethod* method);
// System.Single UnityEngine.Time::get_time()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float Time_get_time_m7863349C8845BBA36629A2B3F8EF1C3BEA350FD8 (const RuntimeMethod* method);
// System.Single UnityEngine.Mathf::Lerp(System.Single,System.Single,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float Mathf_Lerp_m9A74C5A0C37D0CDF45EE66E7774D12A9B93B1364 (float ___a0, float ___b1, float ___t2, const RuntimeMethod* method);
// System.Object System.Array::Clone()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject * Array_Clone_mE8C710213E323617A6F46F2B36DCDDD4C7CF5176 (RuntimeArray * __this, const RuntimeMethod* method);
// System.Boolean SteamVR_Utils::IsValid(UnityEngine.Quaternion)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Utils_IsValid_m95AA389AAA38C1A4601031F97FBD8D2BB79914E5 (Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  ___rotation0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Behaviour_Skeleton::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_Skeleton__ctor_m17A8835FCCADE3C113890BE1BCA5C9F2B3EA9E85 (SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A * __this, const RuntimeMethod* method);
// System.Void UnityEngine.Events.UnityEvent`2<Valve.VR.SteamVR_Behaviour_Skeleton,Valve.VR.SteamVR_Input_Sources>::.ctor()
inline void UnityEvent_2__ctor_m3F350BFADEB9F4B824F64E47402AB7BAC7F62A9E (UnityEvent_2_t1039E05662791F0E922DA5769E4F1664E336547D * __this, const RuntimeMethod* method)
{
	((  void (*) (UnityEvent_2_t1039E05662791F0E922DA5769E4F1664E336547D *, const RuntimeMethod*))UnityEvent_2__ctor_m90C3B8ED5DA3821DD3264EEAD585A64D22D376E8_gshared)(__this, method);
}
// System.Void UnityEngine.Events.UnityEvent`3<Valve.VR.SteamVR_Behaviour_Skeleton,Valve.VR.SteamVR_Input_Sources,System.Boolean>::.ctor()
inline void UnityEvent_3__ctor_m572ABF176FBC7C0C230E5F33E58FB5BEF2FB59AE (UnityEvent_3_tC8A397CA8890011F49B784FC92F66521499D69BA * __this, const RuntimeMethod* method)
{
	((  void (*) (UnityEvent_3_tC8A397CA8890011F49B784FC92F66521499D69BA *, const RuntimeMethod*))UnityEvent_3__ctor_mFE485CA18703786ADB69D0B88DE90791DCACE4C0_gshared)(__this, method);
}
// System.Void UnityEngine.Events.UnityEvent`3<Valve.VR.SteamVR_Behaviour_Skeleton,Valve.VR.SteamVR_Input_Sources,Valve.VR.ETrackingResult>::.ctor()
inline void UnityEvent_3__ctor_m4B73B3F2ED1B60992244628A5E78170B8628C013 (UnityEvent_3_t516983F871A6C39CE10EE0B4C19E30BE359971A0 * __this, const RuntimeMethod* method)
{
	((  void (*) (UnityEvent_3_t516983F871A6C39CE10EE0B4C19E30BE359971A0 *, const RuntimeMethod*))UnityEvent_3__ctor_m37296D71FE47604FC0A25A42D39C15545FAC2598_gshared)(__this, method);
}
// System.Void Valve.VR.SteamVR_Behaviour_Vector2::AddHandlers()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_Vector2_AddHandlers_mC05D9F4C900DFCEEB7E92A1B33D6B02D2941228B (SteamVR_Behaviour_Vector2_t4F9DB23C7DF068052EAAECC07B5D28C1A6971C46 * __this, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Behaviour_Vector2::RemoveHandlers()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_Vector2_RemoveHandlers_mAA7C45E84F7DBCB10D7FA01AA967FC8650519514 (SteamVR_Behaviour_Vector2_t4F9DB23C7DF068052EAAECC07B5D28C1A6971C46 * __this, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Vector2/UpdateHandler::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UpdateHandler__ctor_mEFB9316D6DB2AE3E0C8C6495E4F31F5AF7B96EA7 (UpdateHandler_t5CC79EAAED92D106A0FBE46F2E73949A31CDA177 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Vector2_Source::add_onUpdate(Valve.VR.SteamVR_Action_Vector2/UpdateHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector2_Source_add_onUpdate_mF42BBDFA8EFE2D15571BE512017F7D2C8A016345 (SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * __this, UpdateHandler_t5CC79EAAED92D106A0FBE46F2E73949A31CDA177 * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Vector2/ChangeHandler::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ChangeHandler__ctor_mFF4992C9413970CEDCB6B9790954BA7C6C6C61B3 (ChangeHandler_t716932883EC2BC15936E355D02A9D68B8F9EA6B6 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Vector2_Source::add_onChange(Valve.VR.SteamVR_Action_Vector2/ChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector2_Source_add_onChange_m0E890E6CFC54755D7CA6271AACB94F0D16195BFC (SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * __this, ChangeHandler_t716932883EC2BC15936E355D02A9D68B8F9EA6B6 * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Vector2/AxisHandler::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void AxisHandler__ctor_m43DE295DBA352E97E0ADDF76C348978B40EA4116 (AxisHandler_t97FB692AF5465040A2929AB663941933E3567689 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Vector2_Source::add_onAxis(Valve.VR.SteamVR_Action_Vector2/AxisHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector2_Source_add_onAxis_m61879208AE0900224DF6DAC2B5F9AB437F3E3F65 (SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * __this, AxisHandler_t97FB692AF5465040A2929AB663941933E3567689 * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Vector2_Source::remove_onUpdate(Valve.VR.SteamVR_Action_Vector2/UpdateHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector2_Source_remove_onUpdate_m7FA21E9B212C4E869AFE43AAE5D3138799CA8320 (SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * __this, UpdateHandler_t5CC79EAAED92D106A0FBE46F2E73949A31CDA177 * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Vector2_Source::remove_onChange(Valve.VR.SteamVR_Action_Vector2/ChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector2_Source_remove_onChange_m6B9FFEDD2003E99E2C81E03B744E35528BCABEE1 (SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * __this, ChangeHandler_t716932883EC2BC15936E355D02A9D68B8F9EA6B6 * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Vector2_Source::remove_onAxis(Valve.VR.SteamVR_Action_Vector2/AxisHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector2_Source_remove_onAxis_mF3D7E276BA4A72809424D8F02B91BC600C706A45 (SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * __this, AxisHandler_t97FB692AF5465040A2929AB663941933E3567689 * ___value0, const RuntimeMethod* method);
// System.Void UnityEngine.Events.UnityEvent`4<Valve.VR.SteamVR_Behaviour_Vector2,Valve.VR.SteamVR_Input_Sources,UnityEngine.Vector2,UnityEngine.Vector2>::Invoke(!0,!1,!2,!3)
inline void UnityEvent_4_Invoke_m6CED405A95F61142712F4A0D69660CD9E94E65F6 (UnityEvent_4_t980357B09A0DFE7E7E39E176C64C88B144A074AB * __this, SteamVR_Behaviour_Vector2_t4F9DB23C7DF068052EAAECC07B5D28C1A6971C46 * ___arg00, int32_t ___arg11, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___arg22, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___arg33, const RuntimeMethod* method)
{
	((  void (*) (UnityEvent_4_t980357B09A0DFE7E7E39E176C64C88B144A074AB *, SteamVR_Behaviour_Vector2_t4F9DB23C7DF068052EAAECC07B5D28C1A6971C46 *, int32_t, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D , Vector2_tA85D2DD88578276CA8A8796756458277E72D073D , const RuntimeMethod*))UnityEvent_4_Invoke_m52B8CBFF1DEE21A06A273FF9545FE23EE9DEB4AB_gshared)(__this, ___arg00, ___arg11, ___arg22, ___arg33, method);
}
// System.Void Valve.VR.SteamVR_Behaviour_Vector2/UpdateHandler::Invoke(Valve.VR.SteamVR_Behaviour_Vector2,Valve.VR.SteamVR_Input_Sources,UnityEngine.Vector2,UnityEngine.Vector2)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UpdateHandler_Invoke_m436FA7CA597C931E6DF6A85337EECBF39F57D607 (UpdateHandler_tD71CF662F9B99D2E790533F02BA2B95FF3C1C1DF * __this, SteamVR_Behaviour_Vector2_t4F9DB23C7DF068052EAAECC07B5D28C1A6971C46 * ___fromAction0, int32_t ___fromSource1, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___newAxis2, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___newDelta3, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Behaviour_Vector2/ChangeHandler::Invoke(Valve.VR.SteamVR_Behaviour_Vector2,Valve.VR.SteamVR_Input_Sources,UnityEngine.Vector2,UnityEngine.Vector2)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ChangeHandler_Invoke_m62A161B16882357E45336EB0E4E4B35583C224C2 (ChangeHandler_t37E638BA62CC9B06D1DD916B56CFB6E3A61C31DE * __this, SteamVR_Behaviour_Vector2_t4F9DB23C7DF068052EAAECC07B5D28C1A6971C46 * ___fromAction0, int32_t ___fromSource1, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___newAxis2, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___newDelta3, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Behaviour_Vector2/AxisHandler::Invoke(Valve.VR.SteamVR_Behaviour_Vector2,Valve.VR.SteamVR_Input_Sources,UnityEngine.Vector2,UnityEngine.Vector2)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void AxisHandler_Invoke_m4CFE2495B68A51C1E9F7FE310F6D5714BD5D5754 (AxisHandler_tBA72843A01CF3BF4DFCBECF1BC75EB817AE2D064 * __this, SteamVR_Behaviour_Vector2_t4F9DB23C7DF068052EAAECC07B5D28C1A6971C46 * ___fromAction0, int32_t ___fromSource1, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___newAxis2, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___newDelta3, const RuntimeMethod* method);
// System.String Valve.VR.SteamVR_Action_In`2<Valve.VR.SteamVR_Action_Vector2_Source_Map,Valve.VR.SteamVR_Action_Vector2_Source>::GetLocalizedOriginPart(Valve.VR.SteamVR_Input_Sources,Valve.VR.EVRInputStringBits[])
inline String_t* SteamVR_Action_In_2_GetLocalizedOriginPart_m36E1DB926E7A1E477057A130BB2121200989C1D5 (SteamVR_Action_In_2_t4260173E99094920C69878272DE55CE93D5D5A9C * __this, int32_t ___inputSource0, EVRInputStringBitsU5BU5D_t9F9E9B47CD745CAAB4F8EDC305D84DDF9E5BE511* ___localizedParts1, const RuntimeMethod* method)
{
	return ((  String_t* (*) (SteamVR_Action_In_2_t4260173E99094920C69878272DE55CE93D5D5A9C *, int32_t, EVRInputStringBitsU5BU5D_t9F9E9B47CD745CAAB4F8EDC305D84DDF9E5BE511*, const RuntimeMethod*))SteamVR_Action_In_2_GetLocalizedOriginPart_mEA178543F658F3C193F0ADAECE592F66F35D6A83_gshared)(__this, ___inputSource0, ___localizedParts1, method);
}
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Valve.VR.SteamVR_Action_Vector3_Source_Map::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector3_Source_Map__ctor_mD04CFEF10AFE7AA478AE8C52F8F7190C86020EE6 (SteamVR_Action_Vector3_Source_Map_t2469AF68483668A9E13B8CEC018862BF8D187C95 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector3_Source_Map__ctor_mD04CFEF10AFE7AA478AE8C52F8F7190C86020EE6_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Vector3_Source_Map__ctor_mD04CFEF10AFE7AA478AE8C52F8F7190C86020EE6_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		SteamVR_Action_In_Source_Map_1__ctor_m6CA9EBD65879C9C800B369FA8D8E522A9D17B0DB(__this, /*hidden argument*/SteamVR_Action_In_Source_Map_1__ctor_m6CA9EBD65879C9C800B369FA8D8E522A9D17B0DB_RuntimeMethod_var);
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Valve.VR.SteamVR_Action_Vibration::add_onActiveChange(Valve.VR.SteamVR_Action_Vibration_ActiveChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vibration_add_onActiveChange_m94E35735F69E5757C14E4D478F3C55829B8C6E45 (SteamVR_Action_Vibration_t487523BCA03933B9812950511E8A4BCE00F03EAB * __this, ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vibration_add_onActiveChange_m94E35735F69E5757C14E4D478F3C55829B8C6E45_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Vibration_add_onActiveChange_m94E35735F69E5757C14E4D478F3C55829B8C6E45_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 8811));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 8812));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 8813));
		// { add { sourceMap[SteamVR_Input_Sources.Any].onActiveChange += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onActiveChange -= value; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 8814));
		SteamVR_Action_Vibration_Source_Map_t81B9741E979634A2E0A6D7AE2518F89F3481047A * L_0 = ((SteamVR_Action_2_t2615F9F41BCBF5EA1EE3A8AF266CE58FAFF6521D *)__this)->get_sourceMap_4();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 8816));
		NullCheck(L_0);
		SteamVR_Action_Vibration_Source_tB30315A543AA13F11BB80C1D5C7DEDF37058C151 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mF968D2C3D5A487C1901E7350B275B57F80B57F82(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mF968D2C3D5A487C1901E7350B275B57F80B57F82_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 8816));
		ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * L_2 = ___value0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 8817));
		NullCheck(L_1);
		SteamVR_Action_Vibration_Source_add_onActiveChange_m8A508C8A65E1ED100E5BA28DE7766AC0655E5D6B(L_1, L_2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 8817));
		// { add { sourceMap[SteamVR_Input_Sources.Any].onActiveChange += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onActiveChange -= value; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 8815));
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vibration::remove_onActiveChange(Valve.VR.SteamVR_Action_Vibration_ActiveChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vibration_remove_onActiveChange_m31BEBDCD5E548D3EF1FE88061551B1E32F39FA7A (SteamVR_Action_Vibration_t487523BCA03933B9812950511E8A4BCE00F03EAB * __this, ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vibration_remove_onActiveChange_m31BEBDCD5E548D3EF1FE88061551B1E32F39FA7A_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Vibration_remove_onActiveChange_m31BEBDCD5E548D3EF1FE88061551B1E32F39FA7A_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 8818));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 8819));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 8820));
		// { add { sourceMap[SteamVR_Input_Sources.Any].onActiveChange += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onActiveChange -= value; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 8821));
		SteamVR_Action_Vibration_Source_Map_t81B9741E979634A2E0A6D7AE2518F89F3481047A * L_0 = ((SteamVR_Action_2_t2615F9F41BCBF5EA1EE3A8AF266CE58FAFF6521D *)__this)->get_sourceMap_4();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 8823));
		NullCheck(L_0);
		SteamVR_Action_Vibration_Source_tB30315A543AA13F11BB80C1D5C7DEDF37058C151 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mF968D2C3D5A487C1901E7350B275B57F80B57F82(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mF968D2C3D5A487C1901E7350B275B57F80B57F82_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 8823));
		ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * L_2 = ___value0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 8824));
		NullCheck(L_1);
		SteamVR_Action_Vibration_Source_remove_onActiveChange_mA2D20EAC64D00053BD9E82610D958E31EEB6F571(L_1, L_2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 8824));
		// { add { sourceMap[SteamVR_Input_Sources.Any].onActiveChange += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onActiveChange -= value; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 8822));
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vibration::add_onActiveBindingChange(Valve.VR.SteamVR_Action_Vibration_ActiveChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vibration_add_onActiveBindingChange_m577DE8CACDACD63A6CB1690779536DD4E08F051B (SteamVR_Action_Vibration_t487523BCA03933B9812950511E8A4BCE00F03EAB * __this, ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vibration_add_onActiveBindingChange_m577DE8CACDACD63A6CB1690779536DD4E08F051B_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Vibration_add_onActiveBindingChange_m577DE8CACDACD63A6CB1690779536DD4E08F051B_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 8825));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 8826));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 8827));
		// { add { sourceMap[SteamVR_Input_Sources.Any].onActiveBindingChange += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onActiveBindingChange -= value; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 8828));
		SteamVR_Action_Vibration_Source_Map_t81B9741E979634A2E0A6D7AE2518F89F3481047A * L_0 = ((SteamVR_Action_2_t2615F9F41BCBF5EA1EE3A8AF266CE58FAFF6521D *)__this)->get_sourceMap_4();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 8830));
		NullCheck(L_0);
		SteamVR_Action_Vibration_Source_tB30315A543AA13F11BB80C1D5C7DEDF37058C151 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mF968D2C3D5A487C1901E7350B275B57F80B57F82(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mF968D2C3D5A487C1901E7350B275B57F80B57F82_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 8830));
		ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * L_2 = ___value0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 8831));
		NullCheck(L_1);
		SteamVR_Action_Vibration_Source_add_onActiveBindingChange_m6A6695BE7B1D62E59D5E0B4E369411AD409CF956(L_1, L_2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 8831));
		// { add { sourceMap[SteamVR_Input_Sources.Any].onActiveBindingChange += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onActiveBindingChange -= value; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 8829));
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vibration::remove_onActiveBindingChange(Valve.VR.SteamVR_Action_Vibration_ActiveChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vibration_remove_onActiveBindingChange_m6AEB3EFEFAB193F18682D02F3F22EBC2351B201D (SteamVR_Action_Vibration_t487523BCA03933B9812950511E8A4BCE00F03EAB * __this, ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vibration_remove_onActiveBindingChange_m6AEB3EFEFAB193F18682D02F3F22EBC2351B201D_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Vibration_remove_onActiveBindingChange_m6AEB3EFEFAB193F18682D02F3F22EBC2351B201D_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 8832));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 8833));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 8834));
		// { add { sourceMap[SteamVR_Input_Sources.Any].onActiveBindingChange += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onActiveBindingChange -= value; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 8835));
		SteamVR_Action_Vibration_Source_Map_t81B9741E979634A2E0A6D7AE2518F89F3481047A * L_0 = ((SteamVR_Action_2_t2615F9F41BCBF5EA1EE3A8AF266CE58FAFF6521D *)__this)->get_sourceMap_4();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 8837));
		NullCheck(L_0);
		SteamVR_Action_Vibration_Source_tB30315A543AA13F11BB80C1D5C7DEDF37058C151 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mF968D2C3D5A487C1901E7350B275B57F80B57F82(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mF968D2C3D5A487C1901E7350B275B57F80B57F82_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 8837));
		ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * L_2 = ___value0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 8838));
		NullCheck(L_1);
		SteamVR_Action_Vibration_Source_remove_onActiveBindingChange_m22B0D76B3551A12B4050D889570C0977FDC736CC(L_1, L_2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 8838));
		// { add { sourceMap[SteamVR_Input_Sources.Any].onActiveBindingChange += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onActiveBindingChange -= value; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 8836));
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vibration::add_onExecute(Valve.VR.SteamVR_Action_Vibration_ExecuteHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vibration_add_onExecute_m45EDA21147C684A39D6F54ED2E47E46A121EF99D (SteamVR_Action_Vibration_t487523BCA03933B9812950511E8A4BCE00F03EAB * __this, ExecuteHandler_t8B67500B15AC184E56E293FC390AB5683D50D865 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vibration_add_onExecute_m45EDA21147C684A39D6F54ED2E47E46A121EF99D_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Vibration_add_onExecute_m45EDA21147C684A39D6F54ED2E47E46A121EF99D_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 8839));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 8840));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 8841));
		// { add { sourceMap[SteamVR_Input_Sources.Any].onExecute += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onExecute -= value; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 8842));
		SteamVR_Action_Vibration_Source_Map_t81B9741E979634A2E0A6D7AE2518F89F3481047A * L_0 = ((SteamVR_Action_2_t2615F9F41BCBF5EA1EE3A8AF266CE58FAFF6521D *)__this)->get_sourceMap_4();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 8844));
		NullCheck(L_0);
		SteamVR_Action_Vibration_Source_tB30315A543AA13F11BB80C1D5C7DEDF37058C151 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mF968D2C3D5A487C1901E7350B275B57F80B57F82(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mF968D2C3D5A487C1901E7350B275B57F80B57F82_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 8844));
		ExecuteHandler_t8B67500B15AC184E56E293FC390AB5683D50D865 * L_2 = ___value0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 8845));
		NullCheck(L_1);
		SteamVR_Action_Vibration_Source_add_onExecute_m59A0F69E9BE6A9221F99FD66C4DA7122FE3E7F4E(L_1, L_2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 8845));
		// { add { sourceMap[SteamVR_Input_Sources.Any].onExecute += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onExecute -= value; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 8843));
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vibration::remove_onExecute(Valve.VR.SteamVR_Action_Vibration_ExecuteHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vibration_remove_onExecute_m040360261981DE9671A4FFBED062CF75256D8614 (SteamVR_Action_Vibration_t487523BCA03933B9812950511E8A4BCE00F03EAB * __this, ExecuteHandler_t8B67500B15AC184E56E293FC390AB5683D50D865 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vibration_remove_onExecute_m040360261981DE9671A4FFBED062CF75256D8614_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Vibration_remove_onExecute_m040360261981DE9671A4FFBED062CF75256D8614_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 8846));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 8847));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 8848));
		// { add { sourceMap[SteamVR_Input_Sources.Any].onExecute += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onExecute -= value; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 8849));
		SteamVR_Action_Vibration_Source_Map_t81B9741E979634A2E0A6D7AE2518F89F3481047A * L_0 = ((SteamVR_Action_2_t2615F9F41BCBF5EA1EE3A8AF266CE58FAFF6521D *)__this)->get_sourceMap_4();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 8851));
		NullCheck(L_0);
		SteamVR_Action_Vibration_Source_tB30315A543AA13F11BB80C1D5C7DEDF37058C151 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mF968D2C3D5A487C1901E7350B275B57F80B57F82(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mF968D2C3D5A487C1901E7350B275B57F80B57F82_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 8851));
		ExecuteHandler_t8B67500B15AC184E56E293FC390AB5683D50D865 * L_2 = ___value0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 8852));
		NullCheck(L_1);
		SteamVR_Action_Vibration_Source_remove_onExecute_m0253F5609D3DE59ADDB805659B334D8A1FDD904E(L_1, L_2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 8852));
		// { add { sourceMap[SteamVR_Input_Sources.Any].onExecute += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onExecute -= value; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 8850));
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vibration::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vibration__ctor_m97911420850F4A3DB4C72F4A2D70C34656501250 (SteamVR_Action_Vibration_t487523BCA03933B9812950511E8A4BCE00F03EAB * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vibration__ctor_m97911420850F4A3DB4C72F4A2D70C34656501250_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Vibration__ctor_m97911420850F4A3DB4C72F4A2D70C34656501250_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 8853));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 8854));
	{
		// public SteamVR_Action_Vibration() { }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 8855));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 8858));
		SteamVR_Action_Out_2__ctor_m73545DF08749932DD490F491CA01DA3630982496(__this, /*hidden argument*/SteamVR_Action_Out_2__ctor_m73545DF08749932DD490F491CA01DA3630982496_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 8858));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 8856));
		// public SteamVR_Action_Vibration() { }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 8857));
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vibration::Execute(System.Single,System.Single,System.Single,System.Single,Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vibration_Execute_m87C481A1FB3D88E1CBC5A7889F290B4EB062FD4F (SteamVR_Action_Vibration_t487523BCA03933B9812950511E8A4BCE00F03EAB * __this, float ___secondsFromNow0, float ___durationSeconds1, float ___frequency2, float ___amplitude3, int32_t ___inputSource4, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vibration_Execute_m87C481A1FB3D88E1CBC5A7889F290B4EB062FD4F_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___secondsFromNow0), (&___durationSeconds1), (&___frequency2), (&___amplitude3), (&___inputSource4));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Vibration_Execute_m87C481A1FB3D88E1CBC5A7889F290B4EB062FD4F_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 8859));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 8860));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 8861));
		// sourceMap[inputSource].Execute(secondsFromNow, durationSeconds, frequency, amplitude);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 8862));
		SteamVR_Action_Vibration_Source_Map_t81B9741E979634A2E0A6D7AE2518F89F3481047A * L_0 = ((SteamVR_Action_2_t2615F9F41BCBF5EA1EE3A8AF266CE58FAFF6521D *)__this)->get_sourceMap_4();
		int32_t L_1 = ___inputSource4;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 8864));
		NullCheck(L_0);
		SteamVR_Action_Vibration_Source_tB30315A543AA13F11BB80C1D5C7DEDF37058C151 * L_2 = SteamVR_Action_Source_Map_1_get_Item_mF968D2C3D5A487C1901E7350B275B57F80B57F82(L_0, L_1, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mF968D2C3D5A487C1901E7350B275B57F80B57F82_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 8864));
		float L_3 = ___secondsFromNow0;
		float L_4 = ___durationSeconds1;
		float L_5 = ___frequency2;
		float L_6 = ___amplitude3;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 8865));
		NullCheck(L_2);
		SteamVR_Action_Vibration_Source_Execute_mFD6A3E9A8B119898CAA19AB046D11586BE3D568F(L_2, L_3, L_4, L_5, L_6, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 8865));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 8863));
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vibration::AddOnActiveChangeListener(Valve.VR.SteamVR_Action_Vibration_ActiveChangeHandler,Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vibration_AddOnActiveChangeListener_m89205B01162586F5466688EFB4281069F5011FC0 (SteamVR_Action_Vibration_t487523BCA03933B9812950511E8A4BCE00F03EAB * __this, ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * ___functionToCall0, int32_t ___inputSource1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vibration_AddOnActiveChangeListener_m89205B01162586F5466688EFB4281069F5011FC0_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___functionToCall0), (&___inputSource1));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Vibration_AddOnActiveChangeListener_m89205B01162586F5466688EFB4281069F5011FC0_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 8866));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 8867));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 8868));
		// sourceMap[inputSource].onActiveChange += functionToCall;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 8869));
		SteamVR_Action_Vibration_Source_Map_t81B9741E979634A2E0A6D7AE2518F89F3481047A * L_0 = ((SteamVR_Action_2_t2615F9F41BCBF5EA1EE3A8AF266CE58FAFF6521D *)__this)->get_sourceMap_4();
		int32_t L_1 = ___inputSource1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 8871));
		NullCheck(L_0);
		SteamVR_Action_Vibration_Source_tB30315A543AA13F11BB80C1D5C7DEDF37058C151 * L_2 = SteamVR_Action_Source_Map_1_get_Item_mF968D2C3D5A487C1901E7350B275B57F80B57F82(L_0, L_1, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mF968D2C3D5A487C1901E7350B275B57F80B57F82_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 8871));
		ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * L_3 = ___functionToCall0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 8872));
		NullCheck(L_2);
		SteamVR_Action_Vibration_Source_add_onActiveChange_m8A508C8A65E1ED100E5BA28DE7766AC0655E5D6B(L_2, L_3, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 8872));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 8870));
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vibration::RemoveOnActiveChangeListener(Valve.VR.SteamVR_Action_Vibration_ActiveChangeHandler,Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vibration_RemoveOnActiveChangeListener_m6447D0CC14DA4A4D82EC2B9BCC953E3DCF58CE58 (SteamVR_Action_Vibration_t487523BCA03933B9812950511E8A4BCE00F03EAB * __this, ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * ___functionToStopCalling0, int32_t ___inputSource1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vibration_RemoveOnActiveChangeListener_m6447D0CC14DA4A4D82EC2B9BCC953E3DCF58CE58_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___functionToStopCalling0), (&___inputSource1));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Vibration_RemoveOnActiveChangeListener_m6447D0CC14DA4A4D82EC2B9BCC953E3DCF58CE58_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 8873));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 8874));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 8875));
		// sourceMap[inputSource].onActiveChange -= functionToStopCalling;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 8876));
		SteamVR_Action_Vibration_Source_Map_t81B9741E979634A2E0A6D7AE2518F89F3481047A * L_0 = ((SteamVR_Action_2_t2615F9F41BCBF5EA1EE3A8AF266CE58FAFF6521D *)__this)->get_sourceMap_4();
		int32_t L_1 = ___inputSource1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 8878));
		NullCheck(L_0);
		SteamVR_Action_Vibration_Source_tB30315A543AA13F11BB80C1D5C7DEDF37058C151 * L_2 = SteamVR_Action_Source_Map_1_get_Item_mF968D2C3D5A487C1901E7350B275B57F80B57F82(L_0, L_1, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mF968D2C3D5A487C1901E7350B275B57F80B57F82_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 8878));
		ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * L_3 = ___functionToStopCalling0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 8879));
		NullCheck(L_2);
		SteamVR_Action_Vibration_Source_remove_onActiveChange_mA2D20EAC64D00053BD9E82610D958E31EEB6F571(L_2, L_3, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 8879));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 8877));
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vibration::AddOnActiveBindingChangeListener(Valve.VR.SteamVR_Action_Vibration_ActiveChangeHandler,Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vibration_AddOnActiveBindingChangeListener_mF2413F58D7D9A1FFCDEC04FCA6F9BED450436F8E (SteamVR_Action_Vibration_t487523BCA03933B9812950511E8A4BCE00F03EAB * __this, ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * ___functionToCall0, int32_t ___inputSource1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vibration_AddOnActiveBindingChangeListener_mF2413F58D7D9A1FFCDEC04FCA6F9BED450436F8E_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___functionToCall0), (&___inputSource1));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Vibration_AddOnActiveBindingChangeListener_mF2413F58D7D9A1FFCDEC04FCA6F9BED450436F8E_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 8880));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 8881));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 8882));
		// sourceMap[inputSource].onActiveBindingChange += functionToCall;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 8883));
		SteamVR_Action_Vibration_Source_Map_t81B9741E979634A2E0A6D7AE2518F89F3481047A * L_0 = ((SteamVR_Action_2_t2615F9F41BCBF5EA1EE3A8AF266CE58FAFF6521D *)__this)->get_sourceMap_4();
		int32_t L_1 = ___inputSource1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 8885));
		NullCheck(L_0);
		SteamVR_Action_Vibration_Source_tB30315A543AA13F11BB80C1D5C7DEDF37058C151 * L_2 = SteamVR_Action_Source_Map_1_get_Item_mF968D2C3D5A487C1901E7350B275B57F80B57F82(L_0, L_1, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mF968D2C3D5A487C1901E7350B275B57F80B57F82_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 8885));
		ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * L_3 = ___functionToCall0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 8886));
		NullCheck(L_2);
		SteamVR_Action_Vibration_Source_add_onActiveBindingChange_m6A6695BE7B1D62E59D5E0B4E369411AD409CF956(L_2, L_3, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 8886));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 8884));
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vibration::RemoveOnActiveBindingChangeListener(Valve.VR.SteamVR_Action_Vibration_ActiveChangeHandler,Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vibration_RemoveOnActiveBindingChangeListener_m431858447DAD3C976B57607DDACC8DC853E8B71C (SteamVR_Action_Vibration_t487523BCA03933B9812950511E8A4BCE00F03EAB * __this, ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * ___functionToStopCalling0, int32_t ___inputSource1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vibration_RemoveOnActiveBindingChangeListener_m431858447DAD3C976B57607DDACC8DC853E8B71C_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___functionToStopCalling0), (&___inputSource1));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Vibration_RemoveOnActiveBindingChangeListener_m431858447DAD3C976B57607DDACC8DC853E8B71C_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 8887));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 8888));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 8889));
		// sourceMap[inputSource].onActiveBindingChange -= functionToStopCalling;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 8890));
		SteamVR_Action_Vibration_Source_Map_t81B9741E979634A2E0A6D7AE2518F89F3481047A * L_0 = ((SteamVR_Action_2_t2615F9F41BCBF5EA1EE3A8AF266CE58FAFF6521D *)__this)->get_sourceMap_4();
		int32_t L_1 = ___inputSource1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 8892));
		NullCheck(L_0);
		SteamVR_Action_Vibration_Source_tB30315A543AA13F11BB80C1D5C7DEDF37058C151 * L_2 = SteamVR_Action_Source_Map_1_get_Item_mF968D2C3D5A487C1901E7350B275B57F80B57F82(L_0, L_1, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mF968D2C3D5A487C1901E7350B275B57F80B57F82_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 8892));
		ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * L_3 = ___functionToStopCalling0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 8893));
		NullCheck(L_2);
		SteamVR_Action_Vibration_Source_remove_onActiveBindingChange_m22B0D76B3551A12B4050D889570C0977FDC736CC(L_2, L_3, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 8893));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 8891));
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vibration::AddOnExecuteListener(Valve.VR.SteamVR_Action_Vibration_ExecuteHandler,Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vibration_AddOnExecuteListener_m59B17CC78D6DB78C7D76D2FD15146B372A56EBD3 (SteamVR_Action_Vibration_t487523BCA03933B9812950511E8A4BCE00F03EAB * __this, ExecuteHandler_t8B67500B15AC184E56E293FC390AB5683D50D865 * ___functionToCall0, int32_t ___inputSource1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vibration_AddOnExecuteListener_m59B17CC78D6DB78C7D76D2FD15146B372A56EBD3_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___functionToCall0), (&___inputSource1));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Vibration_AddOnExecuteListener_m59B17CC78D6DB78C7D76D2FD15146B372A56EBD3_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 8894));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 8895));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 8896));
		// sourceMap[inputSource].onExecute += functionToCall;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 8897));
		SteamVR_Action_Vibration_Source_Map_t81B9741E979634A2E0A6D7AE2518F89F3481047A * L_0 = ((SteamVR_Action_2_t2615F9F41BCBF5EA1EE3A8AF266CE58FAFF6521D *)__this)->get_sourceMap_4();
		int32_t L_1 = ___inputSource1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 8899));
		NullCheck(L_0);
		SteamVR_Action_Vibration_Source_tB30315A543AA13F11BB80C1D5C7DEDF37058C151 * L_2 = SteamVR_Action_Source_Map_1_get_Item_mF968D2C3D5A487C1901E7350B275B57F80B57F82(L_0, L_1, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mF968D2C3D5A487C1901E7350B275B57F80B57F82_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 8899));
		ExecuteHandler_t8B67500B15AC184E56E293FC390AB5683D50D865 * L_3 = ___functionToCall0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 8900));
		NullCheck(L_2);
		SteamVR_Action_Vibration_Source_add_onExecute_m59A0F69E9BE6A9221F99FD66C4DA7122FE3E7F4E(L_2, L_3, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 8900));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 8898));
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vibration::RemoveOnExecuteListener(Valve.VR.SteamVR_Action_Vibration_ExecuteHandler,Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vibration_RemoveOnExecuteListener_m3A5A1573091854239F0E847D0C76EE32A81664E5 (SteamVR_Action_Vibration_t487523BCA03933B9812950511E8A4BCE00F03EAB * __this, ExecuteHandler_t8B67500B15AC184E56E293FC390AB5683D50D865 * ___functionToStopCalling0, int32_t ___inputSource1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vibration_RemoveOnExecuteListener_m3A5A1573091854239F0E847D0C76EE32A81664E5_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___functionToStopCalling0), (&___inputSource1));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Vibration_RemoveOnExecuteListener_m3A5A1573091854239F0E847D0C76EE32A81664E5_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 8901));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 8902));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 8903));
		// sourceMap[inputSource].onExecute -= functionToStopCalling;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 8904));
		SteamVR_Action_Vibration_Source_Map_t81B9741E979634A2E0A6D7AE2518F89F3481047A * L_0 = ((SteamVR_Action_2_t2615F9F41BCBF5EA1EE3A8AF266CE58FAFF6521D *)__this)->get_sourceMap_4();
		int32_t L_1 = ___inputSource1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 8906));
		NullCheck(L_0);
		SteamVR_Action_Vibration_Source_tB30315A543AA13F11BB80C1D5C7DEDF37058C151 * L_2 = SteamVR_Action_Source_Map_1_get_Item_mF968D2C3D5A487C1901E7350B275B57F80B57F82(L_0, L_1, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mF968D2C3D5A487C1901E7350B275B57F80B57F82_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 8906));
		ExecuteHandler_t8B67500B15AC184E56E293FC390AB5683D50D865 * L_3 = ___functionToStopCalling0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 8907));
		NullCheck(L_2);
		SteamVR_Action_Vibration_Source_remove_onExecute_m0253F5609D3DE59ADDB805659B334D8A1FDD904E(L_2, L_3, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 8907));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 8905));
		return;
	}
}
// System.Single Valve.VR.SteamVR_Action_Vibration::GetTimeLastChanged(Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Vibration_GetTimeLastChanged_m377CE96893DB85C64C1F1CAD33989BF531DA3658 (SteamVR_Action_Vibration_t487523BCA03933B9812950511E8A4BCE00F03EAB * __this, int32_t ___inputSource0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vibration_GetTimeLastChanged_m377CE96893DB85C64C1F1CAD33989BF531DA3658_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	float V_0 = 0.0f;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___inputSource0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Vibration_GetTimeLastChanged_m377CE96893DB85C64C1F1CAD33989BF531DA3658_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 8908));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 8909));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 8910));
		// return sourceMap[inputSource].timeLastExecuted;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 8911));
		SteamVR_Action_Vibration_Source_Map_t81B9741E979634A2E0A6D7AE2518F89F3481047A * L_0 = ((SteamVR_Action_2_t2615F9F41BCBF5EA1EE3A8AF266CE58FAFF6521D *)__this)->get_sourceMap_4();
		int32_t L_1 = ___inputSource0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 8913));
		NullCheck(L_0);
		SteamVR_Action_Vibration_Source_tB30315A543AA13F11BB80C1D5C7DEDF37058C151 * L_2 = SteamVR_Action_Source_Map_1_get_Item_mF968D2C3D5A487C1901E7350B275B57F80B57F82(L_0, L_1, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mF968D2C3D5A487C1901E7350B275B57F80B57F82_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 8913));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 8914));
		NullCheck(L_2);
		float L_3 = SteamVR_Action_Vibration_Source_get_timeLastExecuted_m43631CC69AD4730B6DAD747F8917FF1968E1782C_inline(L_2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 8914));
		V_0 = L_3;
		goto IL_0015;
	}

IL_0015:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 8912));
		float L_4 = V_0;
		return L_4;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vibration::UnityEngine.ISerializationCallbackReceiver.OnBeforeSerialize()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vibration_UnityEngine_ISerializationCallbackReceiver_OnBeforeSerialize_m3E61112E8798AC9FE3889ECB23CADA908F64643A (SteamVR_Action_Vibration_t487523BCA03933B9812950511E8A4BCE00F03EAB * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vibration_UnityEngine_ISerializationCallbackReceiver_OnBeforeSerialize_m3E61112E8798AC9FE3889ECB23CADA908F64643A_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Vibration_UnityEngine_ISerializationCallbackReceiver_OnBeforeSerialize_m3E61112E8798AC9FE3889ECB23CADA908F64643A_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 8915));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 8916));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 8917));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 8918));
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vibration::UnityEngine.ISerializationCallbackReceiver.OnAfterDeserialize()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vibration_UnityEngine_ISerializationCallbackReceiver_OnAfterDeserialize_mD9D73F49678DD52353032BD42EA3D5290F4D02BF (SteamVR_Action_Vibration_t487523BCA03933B9812950511E8A4BCE00F03EAB * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vibration_UnityEngine_ISerializationCallbackReceiver_OnAfterDeserialize_mD9D73F49678DD52353032BD42EA3D5290F4D02BF_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Vibration_UnityEngine_ISerializationCallbackReceiver_OnAfterDeserialize_mD9D73F49678DD52353032BD42EA3D5290F4D02BF_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 8919));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 8920));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 8921));
		// InitAfterDeserialize();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 8922));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 8924));
		SteamVR_Action_2_InitAfterDeserialize_m8D574ED27E33D3CA724920BE7E2E32C67FF5F700(__this, /*hidden argument*/SteamVR_Action_2_InitAfterDeserialize_m8D574ED27E33D3CA724920BE7E2E32C67FF5F700_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 8924));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 8923));
		return;
	}
}
// System.Boolean Valve.VR.SteamVR_Action_Vibration::IsUpdating(Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_Vibration_IsUpdating_m8A5AA657620597929ACE7E3330798C40AF3FB178 (SteamVR_Action_Vibration_t487523BCA03933B9812950511E8A4BCE00F03EAB * __this, int32_t ___inputSource0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vibration_IsUpdating_m8A5AA657620597929ACE7E3330798C40AF3FB178_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___inputSource0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Vibration_IsUpdating_m8A5AA657620597929ACE7E3330798C40AF3FB178_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 8925));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 8926));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 8927));
		// return sourceMap.IsUpdating(inputSource);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 8928));
		SteamVR_Action_Vibration_Source_Map_t81B9741E979634A2E0A6D7AE2518F89F3481047A * L_0 = ((SteamVR_Action_2_t2615F9F41BCBF5EA1EE3A8AF266CE58FAFF6521D *)__this)->get_sourceMap_4();
		int32_t L_1 = ___inputSource0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 8930));
		NullCheck(L_0);
		bool L_2 = SteamVR_Action_Vibration_Source_Map_IsUpdating_m70351F6C802FC2324E42AEC421C2D5BEE3B29F1B(L_0, L_1, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 8930));
		V_0 = L_2;
		goto IL_0010;
	}

IL_0010:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 8929));
		bool L_3 = V_0;
		return L_3;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Valve.VR.SteamVR_Action_Vibration_ActiveChangeHandler::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ActiveChangeHandler__ctor_m6E086B1C71F607A798BAFBFB48A26B1505A87C17 (ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Void Valve.VR.SteamVR_Action_Vibration_ActiveChangeHandler::Invoke(Valve.VR.SteamVR_Action_Vibration,Valve.VR.SteamVR_Input_Sources,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ActiveChangeHandler_Invoke_mF9F8B9B92B431F8D9B2373B84DE15FCD992FB0DA (ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * __this, SteamVR_Action_Vibration_t487523BCA03933B9812950511E8A4BCE00F03EAB * ___fromAction0, int32_t ___fromSource1, bool ___active2, const RuntimeMethod* method)
{
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 3)
			{
				// open
				typedef void (*FunctionPointerType) (SteamVR_Action_Vibration_t487523BCA03933B9812950511E8A4BCE00F03EAB *, int32_t, bool, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___active2, targetMethod);
			}
			else
			{
				// closed
				typedef void (*FunctionPointerType) (void*, SteamVR_Action_Vibration_t487523BCA03933B9812950511E8A4BCE00F03EAB *, int32_t, bool, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___fromSource1, ___active2, targetMethod);
			}
		}
		else if (___parameterCount != 3)
		{
			// open
			if (il2cpp_codegen_method_is_virtual(targetMethod) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker2< int32_t, bool >::Invoke(targetMethod, ___fromAction0, ___fromSource1, ___active2);
					else
						GenericVirtActionInvoker2< int32_t, bool >::Invoke(targetMethod, ___fromAction0, ___fromSource1, ___active2);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker2< int32_t, bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), ___fromAction0, ___fromSource1, ___active2);
					else
						VirtActionInvoker2< int32_t, bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), ___fromAction0, ___fromSource1, ___active2);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(&___fromSource1) - 1), ___active2, targetMethod);
				}
				typedef void (*FunctionPointerType) (SteamVR_Action_Vibration_t487523BCA03933B9812950511E8A4BCE00F03EAB *, int32_t, bool, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___active2, targetMethod);
			}
		}
		else
		{
			// closed
			if (targetThis != NULL && il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker3< SteamVR_Action_Vibration_t487523BCA03933B9812950511E8A4BCE00F03EAB *, int32_t, bool >::Invoke(targetMethod, targetThis, ___fromAction0, ___fromSource1, ___active2);
					else
						GenericVirtActionInvoker3< SteamVR_Action_Vibration_t487523BCA03933B9812950511E8A4BCE00F03EAB *, int32_t, bool >::Invoke(targetMethod, targetThis, ___fromAction0, ___fromSource1, ___active2);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker3< SteamVR_Action_Vibration_t487523BCA03933B9812950511E8A4BCE00F03EAB *, int32_t, bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___fromAction0, ___fromSource1, ___active2);
					else
						VirtActionInvoker3< SteamVR_Action_Vibration_t487523BCA03933B9812950511E8A4BCE00F03EAB *, int32_t, bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___fromAction0, ___fromSource1, ___active2);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, int32_t, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(___fromAction0) - 1), ___fromSource1, ___active2, targetMethod);
				}
				if (targetThis == NULL)
				{
					typedef void (*FunctionPointerType) (SteamVR_Action_Vibration_t487523BCA03933B9812950511E8A4BCE00F03EAB *, int32_t, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___active2, targetMethod);
				}
				else
				{
					typedef void (*FunctionPointerType) (void*, SteamVR_Action_Vibration_t487523BCA03933B9812950511E8A4BCE00F03EAB *, int32_t, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___fromSource1, ___active2, targetMethod);
				}
			}
		}
	}
}
// System.IAsyncResult Valve.VR.SteamVR_Action_Vibration_ActiveChangeHandler::BeginInvoke(Valve.VR.SteamVR_Action_Vibration,Valve.VR.SteamVR_Input_Sources,System.Boolean,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* ActiveChangeHandler_BeginInvoke_m9B072FF56F674388891CFDF3E2451C44EAFD4C18 (ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * __this, SteamVR_Action_Vibration_t487523BCA03933B9812950511E8A4BCE00F03EAB * ___fromAction0, int32_t ___fromSource1, bool ___active2, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback3, RuntimeObject * ___object4, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (ActiveChangeHandler_BeginInvoke_m9B072FF56F674388891CFDF3E2451C44EAFD4C18_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[4] = {0};
	__d_args[0] = ___fromAction0;
	__d_args[1] = Box(SteamVR_Input_Sources_tCE41AA589FB3B9516BDE0DFABDCB4AAEA29528F7_il2cpp_TypeInfo_var, &___fromSource1);
	__d_args[2] = Box(Boolean_tB53F6830F670160873277339AA58F15CAED4399C_il2cpp_TypeInfo_var, &___active2);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback3, (RuntimeObject*)___object4);
}
// System.Void Valve.VR.SteamVR_Action_Vibration_ActiveChangeHandler::EndInvoke(System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ActiveChangeHandler_EndInvoke_m1D410BBD8921B11DB5BD2F206BAAFF68D5D0B10A (ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Valve.VR.SteamVR_Action_Vibration_ExecuteHandler::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ExecuteHandler__ctor_m4BC199309910A57C0FF3B4FCC32DD7A83DCFD9A7 (ExecuteHandler_t8B67500B15AC184E56E293FC390AB5683D50D865 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Void Valve.VR.SteamVR_Action_Vibration_ExecuteHandler::Invoke(Valve.VR.SteamVR_Action_Vibration,Valve.VR.SteamVR_Input_Sources,System.Single,System.Single,System.Single,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ExecuteHandler_Invoke_m2A5F7EA39417810D1BCDE63E03189D04EDD127FC (ExecuteHandler_t8B67500B15AC184E56E293FC390AB5683D50D865 * __this, SteamVR_Action_Vibration_t487523BCA03933B9812950511E8A4BCE00F03EAB * ___fromAction0, int32_t ___fromSource1, float ___secondsFromNow2, float ___durationSeconds3, float ___frequency4, float ___amplitude5, const RuntimeMethod* method)
{
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 6)
			{
				// open
				typedef void (*FunctionPointerType) (SteamVR_Action_Vibration_t487523BCA03933B9812950511E8A4BCE00F03EAB *, int32_t, float, float, float, float, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___secondsFromNow2, ___durationSeconds3, ___frequency4, ___amplitude5, targetMethod);
			}
			else
			{
				// closed
				typedef void (*FunctionPointerType) (void*, SteamVR_Action_Vibration_t487523BCA03933B9812950511E8A4BCE00F03EAB *, int32_t, float, float, float, float, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___fromSource1, ___secondsFromNow2, ___durationSeconds3, ___frequency4, ___amplitude5, targetMethod);
			}
		}
		else if (___parameterCount != 6)
		{
			// open
			if (il2cpp_codegen_method_is_virtual(targetMethod) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker5< int32_t, float, float, float, float >::Invoke(targetMethod, ___fromAction0, ___fromSource1, ___secondsFromNow2, ___durationSeconds3, ___frequency4, ___amplitude5);
					else
						GenericVirtActionInvoker5< int32_t, float, float, float, float >::Invoke(targetMethod, ___fromAction0, ___fromSource1, ___secondsFromNow2, ___durationSeconds3, ___frequency4, ___amplitude5);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker5< int32_t, float, float, float, float >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), ___fromAction0, ___fromSource1, ___secondsFromNow2, ___durationSeconds3, ___frequency4, ___amplitude5);
					else
						VirtActionInvoker5< int32_t, float, float, float, float >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), ___fromAction0, ___fromSource1, ___secondsFromNow2, ___durationSeconds3, ___frequency4, ___amplitude5);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, float, float, float, float, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(&___fromSource1) - 1), ___secondsFromNow2, ___durationSeconds3, ___frequency4, ___amplitude5, targetMethod);
				}
				typedef void (*FunctionPointerType) (SteamVR_Action_Vibration_t487523BCA03933B9812950511E8A4BCE00F03EAB *, int32_t, float, float, float, float, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___secondsFromNow2, ___durationSeconds3, ___frequency4, ___amplitude5, targetMethod);
			}
		}
		else
		{
			// closed
			if (targetThis != NULL && il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker6< SteamVR_Action_Vibration_t487523BCA03933B9812950511E8A4BCE00F03EAB *, int32_t, float, float, float, float >::Invoke(targetMethod, targetThis, ___fromAction0, ___fromSource1, ___secondsFromNow2, ___durationSeconds3, ___frequency4, ___amplitude5);
					else
						GenericVirtActionInvoker6< SteamVR_Action_Vibration_t487523BCA03933B9812950511E8A4BCE00F03EAB *, int32_t, float, float, float, float >::Invoke(targetMethod, targetThis, ___fromAction0, ___fromSource1, ___secondsFromNow2, ___durationSeconds3, ___frequency4, ___amplitude5);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker6< SteamVR_Action_Vibration_t487523BCA03933B9812950511E8A4BCE00F03EAB *, int32_t, float, float, float, float >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___fromAction0, ___fromSource1, ___secondsFromNow2, ___durationSeconds3, ___frequency4, ___amplitude5);
					else
						VirtActionInvoker6< SteamVR_Action_Vibration_t487523BCA03933B9812950511E8A4BCE00F03EAB *, int32_t, float, float, float, float >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___fromAction0, ___fromSource1, ___secondsFromNow2, ___durationSeconds3, ___frequency4, ___amplitude5);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, int32_t, float, float, float, float, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(___fromAction0) - 1), ___fromSource1, ___secondsFromNow2, ___durationSeconds3, ___frequency4, ___amplitude5, targetMethod);
				}
				if (targetThis == NULL)
				{
					typedef void (*FunctionPointerType) (SteamVR_Action_Vibration_t487523BCA03933B9812950511E8A4BCE00F03EAB *, int32_t, float, float, float, float, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___secondsFromNow2, ___durationSeconds3, ___frequency4, ___amplitude5, targetMethod);
				}
				else
				{
					typedef void (*FunctionPointerType) (void*, SteamVR_Action_Vibration_t487523BCA03933B9812950511E8A4BCE00F03EAB *, int32_t, float, float, float, float, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___fromSource1, ___secondsFromNow2, ___durationSeconds3, ___frequency4, ___amplitude5, targetMethod);
				}
			}
		}
	}
}
// System.IAsyncResult Valve.VR.SteamVR_Action_Vibration_ExecuteHandler::BeginInvoke(Valve.VR.SteamVR_Action_Vibration,Valve.VR.SteamVR_Input_Sources,System.Single,System.Single,System.Single,System.Single,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* ExecuteHandler_BeginInvoke_mDFA401282597A868835E8D8FAECDAAF51492C6DE (ExecuteHandler_t8B67500B15AC184E56E293FC390AB5683D50D865 * __this, SteamVR_Action_Vibration_t487523BCA03933B9812950511E8A4BCE00F03EAB * ___fromAction0, int32_t ___fromSource1, float ___secondsFromNow2, float ___durationSeconds3, float ___frequency4, float ___amplitude5, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback6, RuntimeObject * ___object7, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (ExecuteHandler_BeginInvoke_mDFA401282597A868835E8D8FAECDAAF51492C6DE_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[7] = {0};
	__d_args[0] = ___fromAction0;
	__d_args[1] = Box(SteamVR_Input_Sources_tCE41AA589FB3B9516BDE0DFABDCB4AAEA29528F7_il2cpp_TypeInfo_var, &___fromSource1);
	__d_args[2] = Box(Single_tDDDA9169C4E4E308AC6D7A824F9B28DC82204AE1_il2cpp_TypeInfo_var, &___secondsFromNow2);
	__d_args[3] = Box(Single_tDDDA9169C4E4E308AC6D7A824F9B28DC82204AE1_il2cpp_TypeInfo_var, &___durationSeconds3);
	__d_args[4] = Box(Single_tDDDA9169C4E4E308AC6D7A824F9B28DC82204AE1_il2cpp_TypeInfo_var, &___frequency4);
	__d_args[5] = Box(Single_tDDDA9169C4E4E308AC6D7A824F9B28DC82204AE1_il2cpp_TypeInfo_var, &___amplitude5);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback6, (RuntimeObject*)___object7);
}
// System.Void Valve.VR.SteamVR_Action_Vibration_ExecuteHandler::EndInvoke(System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ExecuteHandler_EndInvoke_mD17C7DA4210417AF97237BB8FDF98E3257FB00D4 (ExecuteHandler_t8B67500B15AC184E56E293FC390AB5683D50D865 * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Valve.VR.SteamVR_Action_Vibration_Source::add_onActiveChange(Valve.VR.SteamVR_Action_Vibration_ActiveChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vibration_Source_add_onActiveChange_m8A508C8A65E1ED100E5BA28DE7766AC0655E5D6B (SteamVR_Action_Vibration_Source_tB30315A543AA13F11BB80C1D5C7DEDF37058C151 * __this, ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vibration_Source_add_onActiveChange_m8A508C8A65E1ED100E5BA28DE7766AC0655E5D6B_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * V_0 = NULL;
	ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * V_1 = NULL;
	ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * V_2 = NULL;
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Vibration_Source_add_onActiveChange_m8A508C8A65E1ED100E5BA28DE7766AC0655E5D6B_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * L_0 = __this->get_onActiveChange_3();
		V_0 = L_0;
	}

IL_0007:
	{
		CHECK_PAUSE_POINT;
		ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * L_1 = V_0;
		V_1 = L_1;
		ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * L_2 = V_1;
		ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Combine_mC25D2F7DECAFBA6D9A2F9EBA8A77063F0658ECF1(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA *)CastclassSealed((RuntimeObject*)L_4, ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA_il2cpp_TypeInfo_var));
		ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA ** L_5 = __this->get_address_of_onActiveChange_3();
		ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * L_6 = V_2;
		ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * L_7 = V_1;
		ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * L_8 = InterlockedCompareExchangeImpl<ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA *>((ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA **)L_5, L_6, L_7);
		V_0 = L_8;
		ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * L_9 = V_0;
		ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * L_10 = V_1;
		if ((!(((RuntimeObject*)(ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA *)L_9) == ((RuntimeObject*)(ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vibration_Source::remove_onActiveChange(Valve.VR.SteamVR_Action_Vibration_ActiveChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vibration_Source_remove_onActiveChange_mA2D20EAC64D00053BD9E82610D958E31EEB6F571 (SteamVR_Action_Vibration_Source_tB30315A543AA13F11BB80C1D5C7DEDF37058C151 * __this, ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vibration_Source_remove_onActiveChange_mA2D20EAC64D00053BD9E82610D958E31EEB6F571_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * V_0 = NULL;
	ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * V_1 = NULL;
	ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * V_2 = NULL;
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Vibration_Source_remove_onActiveChange_mA2D20EAC64D00053BD9E82610D958E31EEB6F571_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * L_0 = __this->get_onActiveChange_3();
		V_0 = L_0;
	}

IL_0007:
	{
		CHECK_PAUSE_POINT;
		ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * L_1 = V_0;
		V_1 = L_1;
		ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * L_2 = V_1;
		ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Remove_m0B0DB7D1B3AF96B71AFAA72BA0EFE32FBBC2932D(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA *)CastclassSealed((RuntimeObject*)L_4, ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA_il2cpp_TypeInfo_var));
		ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA ** L_5 = __this->get_address_of_onActiveChange_3();
		ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * L_6 = V_2;
		ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * L_7 = V_1;
		ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * L_8 = InterlockedCompareExchangeImpl<ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA *>((ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA **)L_5, L_6, L_7);
		V_0 = L_8;
		ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * L_9 = V_0;
		ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * L_10 = V_1;
		if ((!(((RuntimeObject*)(ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA *)L_9) == ((RuntimeObject*)(ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vibration_Source::add_onActiveBindingChange(Valve.VR.SteamVR_Action_Vibration_ActiveChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vibration_Source_add_onActiveBindingChange_m6A6695BE7B1D62E59D5E0B4E369411AD409CF956 (SteamVR_Action_Vibration_Source_tB30315A543AA13F11BB80C1D5C7DEDF37058C151 * __this, ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vibration_Source_add_onActiveBindingChange_m6A6695BE7B1D62E59D5E0B4E369411AD409CF956_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * V_0 = NULL;
	ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * V_1 = NULL;
	ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * V_2 = NULL;
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Vibration_Source_add_onActiveBindingChange_m6A6695BE7B1D62E59D5E0B4E369411AD409CF956_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * L_0 = __this->get_onActiveBindingChange_4();
		V_0 = L_0;
	}

IL_0007:
	{
		CHECK_PAUSE_POINT;
		ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * L_1 = V_0;
		V_1 = L_1;
		ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * L_2 = V_1;
		ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Combine_mC25D2F7DECAFBA6D9A2F9EBA8A77063F0658ECF1(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA *)CastclassSealed((RuntimeObject*)L_4, ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA_il2cpp_TypeInfo_var));
		ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA ** L_5 = __this->get_address_of_onActiveBindingChange_4();
		ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * L_6 = V_2;
		ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * L_7 = V_1;
		ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * L_8 = InterlockedCompareExchangeImpl<ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA *>((ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA **)L_5, L_6, L_7);
		V_0 = L_8;
		ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * L_9 = V_0;
		ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * L_10 = V_1;
		if ((!(((RuntimeObject*)(ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA *)L_9) == ((RuntimeObject*)(ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vibration_Source::remove_onActiveBindingChange(Valve.VR.SteamVR_Action_Vibration_ActiveChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vibration_Source_remove_onActiveBindingChange_m22B0D76B3551A12B4050D889570C0977FDC736CC (SteamVR_Action_Vibration_Source_tB30315A543AA13F11BB80C1D5C7DEDF37058C151 * __this, ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vibration_Source_remove_onActiveBindingChange_m22B0D76B3551A12B4050D889570C0977FDC736CC_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * V_0 = NULL;
	ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * V_1 = NULL;
	ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * V_2 = NULL;
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Vibration_Source_remove_onActiveBindingChange_m22B0D76B3551A12B4050D889570C0977FDC736CC_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * L_0 = __this->get_onActiveBindingChange_4();
		V_0 = L_0;
	}

IL_0007:
	{
		CHECK_PAUSE_POINT;
		ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * L_1 = V_0;
		V_1 = L_1;
		ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * L_2 = V_1;
		ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Remove_m0B0DB7D1B3AF96B71AFAA72BA0EFE32FBBC2932D(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA *)CastclassSealed((RuntimeObject*)L_4, ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA_il2cpp_TypeInfo_var));
		ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA ** L_5 = __this->get_address_of_onActiveBindingChange_4();
		ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * L_6 = V_2;
		ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * L_7 = V_1;
		ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * L_8 = InterlockedCompareExchangeImpl<ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA *>((ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA **)L_5, L_6, L_7);
		V_0 = L_8;
		ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * L_9 = V_0;
		ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * L_10 = V_1;
		if ((!(((RuntimeObject*)(ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA *)L_9) == ((RuntimeObject*)(ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vibration_Source::add_onExecute(Valve.VR.SteamVR_Action_Vibration_ExecuteHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vibration_Source_add_onExecute_m59A0F69E9BE6A9221F99FD66C4DA7122FE3E7F4E (SteamVR_Action_Vibration_Source_tB30315A543AA13F11BB80C1D5C7DEDF37058C151 * __this, ExecuteHandler_t8B67500B15AC184E56E293FC390AB5683D50D865 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vibration_Source_add_onExecute_m59A0F69E9BE6A9221F99FD66C4DA7122FE3E7F4E_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	ExecuteHandler_t8B67500B15AC184E56E293FC390AB5683D50D865 * V_0 = NULL;
	ExecuteHandler_t8B67500B15AC184E56E293FC390AB5683D50D865 * V_1 = NULL;
	ExecuteHandler_t8B67500B15AC184E56E293FC390AB5683D50D865 * V_2 = NULL;
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Vibration_Source_add_onExecute_m59A0F69E9BE6A9221F99FD66C4DA7122FE3E7F4E_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		ExecuteHandler_t8B67500B15AC184E56E293FC390AB5683D50D865 * L_0 = __this->get_onExecute_5();
		V_0 = L_0;
	}

IL_0007:
	{
		CHECK_PAUSE_POINT;
		ExecuteHandler_t8B67500B15AC184E56E293FC390AB5683D50D865 * L_1 = V_0;
		V_1 = L_1;
		ExecuteHandler_t8B67500B15AC184E56E293FC390AB5683D50D865 * L_2 = V_1;
		ExecuteHandler_t8B67500B15AC184E56E293FC390AB5683D50D865 * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Combine_mC25D2F7DECAFBA6D9A2F9EBA8A77063F0658ECF1(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((ExecuteHandler_t8B67500B15AC184E56E293FC390AB5683D50D865 *)CastclassSealed((RuntimeObject*)L_4, ExecuteHandler_t8B67500B15AC184E56E293FC390AB5683D50D865_il2cpp_TypeInfo_var));
		ExecuteHandler_t8B67500B15AC184E56E293FC390AB5683D50D865 ** L_5 = __this->get_address_of_onExecute_5();
		ExecuteHandler_t8B67500B15AC184E56E293FC390AB5683D50D865 * L_6 = V_2;
		ExecuteHandler_t8B67500B15AC184E56E293FC390AB5683D50D865 * L_7 = V_1;
		ExecuteHandler_t8B67500B15AC184E56E293FC390AB5683D50D865 * L_8 = InterlockedCompareExchangeImpl<ExecuteHandler_t8B67500B15AC184E56E293FC390AB5683D50D865 *>((ExecuteHandler_t8B67500B15AC184E56E293FC390AB5683D50D865 **)L_5, L_6, L_7);
		V_0 = L_8;
		ExecuteHandler_t8B67500B15AC184E56E293FC390AB5683D50D865 * L_9 = V_0;
		ExecuteHandler_t8B67500B15AC184E56E293FC390AB5683D50D865 * L_10 = V_1;
		if ((!(((RuntimeObject*)(ExecuteHandler_t8B67500B15AC184E56E293FC390AB5683D50D865 *)L_9) == ((RuntimeObject*)(ExecuteHandler_t8B67500B15AC184E56E293FC390AB5683D50D865 *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vibration_Source::remove_onExecute(Valve.VR.SteamVR_Action_Vibration_ExecuteHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vibration_Source_remove_onExecute_m0253F5609D3DE59ADDB805659B334D8A1FDD904E (SteamVR_Action_Vibration_Source_tB30315A543AA13F11BB80C1D5C7DEDF37058C151 * __this, ExecuteHandler_t8B67500B15AC184E56E293FC390AB5683D50D865 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vibration_Source_remove_onExecute_m0253F5609D3DE59ADDB805659B334D8A1FDD904E_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	ExecuteHandler_t8B67500B15AC184E56E293FC390AB5683D50D865 * V_0 = NULL;
	ExecuteHandler_t8B67500B15AC184E56E293FC390AB5683D50D865 * V_1 = NULL;
	ExecuteHandler_t8B67500B15AC184E56E293FC390AB5683D50D865 * V_2 = NULL;
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Vibration_Source_remove_onExecute_m0253F5609D3DE59ADDB805659B334D8A1FDD904E_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		ExecuteHandler_t8B67500B15AC184E56E293FC390AB5683D50D865 * L_0 = __this->get_onExecute_5();
		V_0 = L_0;
	}

IL_0007:
	{
		CHECK_PAUSE_POINT;
		ExecuteHandler_t8B67500B15AC184E56E293FC390AB5683D50D865 * L_1 = V_0;
		V_1 = L_1;
		ExecuteHandler_t8B67500B15AC184E56E293FC390AB5683D50D865 * L_2 = V_1;
		ExecuteHandler_t8B67500B15AC184E56E293FC390AB5683D50D865 * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Remove_m0B0DB7D1B3AF96B71AFAA72BA0EFE32FBBC2932D(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((ExecuteHandler_t8B67500B15AC184E56E293FC390AB5683D50D865 *)CastclassSealed((RuntimeObject*)L_4, ExecuteHandler_t8B67500B15AC184E56E293FC390AB5683D50D865_il2cpp_TypeInfo_var));
		ExecuteHandler_t8B67500B15AC184E56E293FC390AB5683D50D865 ** L_5 = __this->get_address_of_onExecute_5();
		ExecuteHandler_t8B67500B15AC184E56E293FC390AB5683D50D865 * L_6 = V_2;
		ExecuteHandler_t8B67500B15AC184E56E293FC390AB5683D50D865 * L_7 = V_1;
		ExecuteHandler_t8B67500B15AC184E56E293FC390AB5683D50D865 * L_8 = InterlockedCompareExchangeImpl<ExecuteHandler_t8B67500B15AC184E56E293FC390AB5683D50D865 *>((ExecuteHandler_t8B67500B15AC184E56E293FC390AB5683D50D865 **)L_5, L_6, L_7);
		V_0 = L_8;
		ExecuteHandler_t8B67500B15AC184E56E293FC390AB5683D50D865 * L_9 = V_0;
		ExecuteHandler_t8B67500B15AC184E56E293FC390AB5683D50D865 * L_10 = V_1;
		if ((!(((RuntimeObject*)(ExecuteHandler_t8B67500B15AC184E56E293FC390AB5683D50D865 *)L_9) == ((RuntimeObject*)(ExecuteHandler_t8B67500B15AC184E56E293FC390AB5683D50D865 *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// System.Boolean Valve.VR.SteamVR_Action_Vibration_Source::get_active()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_Vibration_Source_get_active_m74942EDB851B121FA4C3A5B06F86F091F06D96DA (SteamVR_Action_Vibration_Source_tB30315A543AA13F11BB80C1D5C7DEDF37058C151 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vibration_Source_get_active_m74942EDB851B121FA4C3A5B06F86F091F06D96DA_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Vibration_Source_get_active_m74942EDB851B121FA4C3A5B06F86F091F06D96DA_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 8938));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 8939));
	int32_t G_B3_0 = 0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 8940));
		// public override bool active { get { return activeBinding && setActive; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 8941));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 8943));
		bool L_0 = VirtFuncInvoker0< bool >::Invoke(13 /* System.Boolean Valve.VR.SteamVR_Action_Source::get_activeBinding() */, __this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 8943));
		if (!L_0)
		{
			goto IL_0011;
		}
	}
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 8944));
		bool L_1 = SteamVR_Action_Source_get_setActive_m4E3E3DD854D4B7384E415E8BD0F66E880BB97A3E(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 8944));
		G_B3_0 = ((int32_t)(L_1));
		goto IL_0012;
	}

IL_0011:
	{
		G_B3_0 = 0;
	}

IL_0012:
	{
		V_0 = (bool)G_B3_0;
		goto IL_0015;
	}

IL_0015:
	{
		// public override bool active { get { return activeBinding && setActive; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 8942));
		bool L_2 = V_0;
		return L_2;
	}
}
// System.Boolean Valve.VR.SteamVR_Action_Vibration_Source::get_activeBinding()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_Vibration_Source_get_activeBinding_m6B111814AA4C4B43517A21614E4283F4525DDA21 (SteamVR_Action_Vibration_Source_tB30315A543AA13F11BB80C1D5C7DEDF37058C151 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vibration_Source_get_activeBinding_m6B111814AA4C4B43517A21614E4283F4525DDA21_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Vibration_Source_get_activeBinding_m6B111814AA4C4B43517A21614E4283F4525DDA21_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 8945));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 8946));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 8947));
		// public override bool activeBinding { get { return true; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 8948));
		V_0 = (bool)1;
		goto IL_0005;
	}

IL_0005:
	{
		// public override bool activeBinding { get { return true; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 8949));
		bool L_0 = V_0;
		return L_0;
	}
}
// System.Boolean Valve.VR.SteamVR_Action_Vibration_Source::get_lastActive()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_Vibration_Source_get_lastActive_mD1EBF92AC60EF39AE0AA92A0B0453B891DE815F1 (SteamVR_Action_Vibration_Source_tB30315A543AA13F11BB80C1D5C7DEDF37058C151 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vibration_Source_get_lastActive_mD1EBF92AC60EF39AE0AA92A0B0453B891DE815F1_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Vibration_Source_get_lastActive_mD1EBF92AC60EF39AE0AA92A0B0453B891DE815F1_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 8950));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 8951));
	{
		// public override bool lastActive { get; protected set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 8952));
		bool L_0 = __this->get_U3ClastActiveU3Ek__BackingField_6();
		return L_0;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vibration_Source::set_lastActive(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vibration_Source_set_lastActive_m4BD24CD8315CBFD80AB0D4DA37E92BC343FDEF54 (SteamVR_Action_Vibration_Source_tB30315A543AA13F11BB80C1D5C7DEDF37058C151 * __this, bool ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vibration_Source_set_lastActive_m4BD24CD8315CBFD80AB0D4DA37E92BC343FDEF54_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Vibration_Source_set_lastActive_m4BD24CD8315CBFD80AB0D4DA37E92BC343FDEF54_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 8953));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 8954));
	{
		// public override bool lastActive { get; protected set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 8955));
		bool L_0 = ___value0;
		__this->set_U3ClastActiveU3Ek__BackingField_6(L_0);
		return;
	}
}
// System.Boolean Valve.VR.SteamVR_Action_Vibration_Source::get_lastActiveBinding()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_Vibration_Source_get_lastActiveBinding_mF9FCFD569DF70F631D98BD4196E60BB7C698E986 (SteamVR_Action_Vibration_Source_tB30315A543AA13F11BB80C1D5C7DEDF37058C151 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vibration_Source_get_lastActiveBinding_mF9FCFD569DF70F631D98BD4196E60BB7C698E986_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Vibration_Source_get_lastActiveBinding_mF9FCFD569DF70F631D98BD4196E60BB7C698E986_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 8956));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 8957));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 8958));
		// public override bool lastActiveBinding { get { return true; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 8959));
		V_0 = (bool)1;
		goto IL_0005;
	}

IL_0005:
	{
		// public override bool lastActiveBinding { get { return true; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 8960));
		bool L_0 = V_0;
		return L_0;
	}
}
// System.Single Valve.VR.SteamVR_Action_Vibration_Source::get_timeLastExecuted()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Vibration_Source_get_timeLastExecuted_m43631CC69AD4730B6DAD747F8917FF1968E1782C (SteamVR_Action_Vibration_Source_tB30315A543AA13F11BB80C1D5C7DEDF37058C151 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vibration_Source_get_timeLastExecuted_m43631CC69AD4730B6DAD747F8917FF1968E1782C_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Vibration_Source_get_timeLastExecuted_m43631CC69AD4730B6DAD747F8917FF1968E1782C_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 8961));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 8962));
	{
		// public float timeLastExecuted { get; protected set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 8963));
		float L_0 = __this->get_U3CtimeLastExecutedU3Ek__BackingField_7();
		return L_0;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vibration_Source::set_timeLastExecuted(System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vibration_Source_set_timeLastExecuted_m4CC891E603F4C83A336138B5DB8628B429BA45D5 (SteamVR_Action_Vibration_Source_tB30315A543AA13F11BB80C1D5C7DEDF37058C151 * __this, float ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vibration_Source_set_timeLastExecuted_m4CC891E603F4C83A336138B5DB8628B429BA45D5_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Vibration_Source_set_timeLastExecuted_m4CC891E603F4C83A336138B5DB8628B429BA45D5_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 8964));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 8965));
	{
		// public float timeLastExecuted { get; protected set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 8966));
		float L_0 = ___value0;
		__this->set_U3CtimeLastExecutedU3Ek__BackingField_7(L_0);
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vibration_Source::Initialize()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vibration_Source_Initialize_m009DBABE146A0DE5DCF9810F8230487AD2DE73C1 (SteamVR_Action_Vibration_Source_tB30315A543AA13F11BB80C1D5C7DEDF37058C151 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vibration_Source_Initialize_m009DBABE146A0DE5DCF9810F8230487AD2DE73C1_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Vibration_Source_Initialize_m009DBABE146A0DE5DCF9810F8230487AD2DE73C1_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 8967));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 8968));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 8969));
		// base.Initialize();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 8970));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 8973));
		SteamVR_Action_Source_Initialize_m712F1B6FEBD8059CBB80EC50CC0F16F528023E64(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 8973));
		// lastActive = true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 8971));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 8974));
		VirtActionInvoker1< bool >::Invoke(15 /* System.Void Valve.VR.SteamVR_Action_Source::set_lastActive(System.Boolean) */, __this, (bool)1);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 8974));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 8972));
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vibration_Source::Preinitialize(Valve.VR.SteamVR_Action,Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vibration_Source_Preinitialize_m190F867281CEFB16F31B42505053350ED5304CF8 (SteamVR_Action_Vibration_Source_tB30315A543AA13F11BB80C1D5C7DEDF37058C151 * __this, SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 * ___wrappingAction0, int32_t ___forInputSource1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vibration_Source_Preinitialize_m190F867281CEFB16F31B42505053350ED5304CF8_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___wrappingAction0), (&___forInputSource1));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Vibration_Source_Preinitialize_m190F867281CEFB16F31B42505053350ED5304CF8_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 8975));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 8976));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 8977));
		// base.Preinitialize(wrappingAction, forInputSource);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 8978));
		SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 * L_0 = ___wrappingAction0;
		int32_t L_1 = ___forInputSource1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 8981));
		SteamVR_Action_Source_Preinitialize_mD54CBA24E4881B8742430B3EDF16283316305913(__this, L_0, L_1, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 8981));
		// vibrationAction = (SteamVR_Action_Vibration)wrappingAction;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 8979));
		SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 * L_2 = ___wrappingAction0;
		__this->set_vibrationAction_8(((SteamVR_Action_Vibration_t487523BCA03933B9812950511E8A4BCE00F03EAB *)CastclassClass((RuntimeObject*)L_2, SteamVR_Action_Vibration_t487523BCA03933B9812950511E8A4BCE00F03EAB_il2cpp_TypeInfo_var)));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 8980));
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vibration_Source::Execute(System.Single,System.Single,System.Single,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vibration_Source_Execute_mFD6A3E9A8B119898CAA19AB046D11586BE3D568F (SteamVR_Action_Vibration_Source_tB30315A543AA13F11BB80C1D5C7DEDF37058C151 * __this, float ___secondsFromNow0, float ___durationSeconds1, float ___frequency2, float ___amplitude3, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vibration_Source_Execute_mFD6A3E9A8B119898CAA19AB046D11586BE3D568F_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	int32_t V_0 = 0;
	bool V_1 = false;
	bool V_2 = false;
	uint64_t V_3 = 0;
	bool V_4 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___secondsFromNow0), (&___durationSeconds1), (&___frequency2), (&___amplitude3));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Vibration_Source_Execute_mFD6A3E9A8B119898CAA19AB046D11586BE3D568F_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 8982));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 8983));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 8984));
		// if (SteamVR_Input.isStartupFrame)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 8985));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 8997));
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Input_tCE4A1EC6C51592CB9DCD7B860984CB2C4DD937BF_il2cpp_TypeInfo_var);
		bool L_0 = SteamVR_Input_get_isStartupFrame_mD1CC14482229680D1CF35F90798A2374A3B8CFE6(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 8997));
		V_1 = L_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 8986));
		bool L_1 = V_1;
		if (!L_1)
		{
			goto IL_000f;
		}
	}
	{
		// return;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 8987));
		goto IL_00be;
	}

IL_000f:
	{
		// timeLastExecuted = Time.realtimeSinceStartup;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 8988));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 8998));
		float L_2 = Time_get_realtimeSinceStartup_mCA1086EC9DFCF135F77BC46D3B7127711EA3DE03(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 8998));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 8999));
		SteamVR_Action_Vibration_Source_set_timeLastExecuted_m4CC891E603F4C83A336138B5DB8628B429BA45D5_inline(__this, L_2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 8999));
		// EVRInputError err = OpenVR.Input.TriggerHapticVibrationAction(handle, secondsFromNow, durationSeconds, frequency, amplitude, inputSourceHandle);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 8989));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9000));
		IL2CPP_RUNTIME_CLASS_INIT(OpenVR_tE75A98955EC4AA4B219CE822AA43E79E4CB99DB3_il2cpp_TypeInfo_var);
		CVRInput_t2BE4417A3C1EA0C6CF647B0706BF37F886CE599B * L_3 = OpenVR_get_Input_m904FD790D785E944EE58513F589E862530386414(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9000));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9001));
		uint64_t L_4 = SteamVR_Action_Source_get_handle_mE4C63F9ADB5ACA5E72265B62C0908ACF8EF73A01(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9001));
		float L_5 = ___secondsFromNow0;
		float L_6 = ___durationSeconds1;
		float L_7 = ___frequency2;
		float L_8 = ___amplitude3;
		uint64_t L_9 = ((SteamVR_Action_Source_t9D7428CDE39924074518EE6233D9A4FAB0C33CB0 *)__this)->get_inputSourceHandle_1();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9002));
		NullCheck(L_3);
		int32_t L_10 = CVRInput_TriggerHapticVibrationAction_m8F3D63EF48CE25235CE48A5460B1BB40BB28CB22(L_3, L_4, L_5, L_6, L_7, L_8, L_9, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9002));
		V_0 = L_10;
		// if (err != EVRInputError.None)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 8990));
		int32_t L_11 = V_0;
		V_2 = (bool)((!(((uint32_t)L_11) <= ((uint32_t)0)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 8991));
		bool L_12 = V_2;
		if (!L_12)
		{
			goto IL_0092;
		}
	}
	{
		// Debug.LogError("<b>[SteamVR]</b> TriggerHapticVibrationAction (" + fullPath + ") error: " + err.ToString() + " handle: " + handle.ToString());
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 8992));
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_13 = (StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E*)(StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E*)SZArrayNew(StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E_il2cpp_TypeInfo_var, (uint32_t)6);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_14 = L_13;
		NullCheck(L_14);
		ArrayElementTypeCheck (L_14, _stringLiteralFFB76599BB18A20E6DA029D1F971C11E0E56D630);
		(L_14)->SetAt(static_cast<il2cpp_array_size_t>(0), (String_t*)_stringLiteralFFB76599BB18A20E6DA029D1F971C11E0E56D630);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_15 = L_14;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9003));
		String_t* L_16 = SteamVR_Action_Source_get_fullPath_mB0C33E6C1B4F91E908236055FFAE027ECB3ED996(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9003));
		NullCheck(L_15);
		ArrayElementTypeCheck (L_15, L_16);
		(L_15)->SetAt(static_cast<il2cpp_array_size_t>(1), (String_t*)L_16);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_17 = L_15;
		NullCheck(L_17);
		ArrayElementTypeCheck (L_17, _stringLiteral82053ECBCAD6503F26FE33F5976A1604F67CDD45);
		(L_17)->SetAt(static_cast<il2cpp_array_size_t>(2), (String_t*)_stringLiteral82053ECBCAD6503F26FE33F5976A1604F67CDD45);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_18 = L_17;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9004));
		RuntimeObject * L_19 = Box(EVRInputError_tC8741BE3044407E8FA26F282526B259D93DBF22F_il2cpp_TypeInfo_var, (&V_0));
		NullCheck(L_19);
		String_t* L_20 = VirtFuncInvoker0< String_t* >::Invoke(3 /* System.String System.Object::ToString() */, L_19);
		V_0 = *(int32_t*)UnBox(L_19);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9004));
		NullCheck(L_18);
		ArrayElementTypeCheck (L_18, L_20);
		(L_18)->SetAt(static_cast<il2cpp_array_size_t>(3), (String_t*)L_20);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_21 = L_18;
		NullCheck(L_21);
		ArrayElementTypeCheck (L_21, _stringLiteral18B39452A606090B97AA8D84240CC83BE3E5D62B);
		(L_21)->SetAt(static_cast<il2cpp_array_size_t>(4), (String_t*)_stringLiteral18B39452A606090B97AA8D84240CC83BE3E5D62B);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_22 = L_21;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9005));
		uint64_t L_23 = SteamVR_Action_Source_get_handle_mE4C63F9ADB5ACA5E72265B62C0908ACF8EF73A01(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9005));
		V_3 = L_23;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9006));
		String_t* L_24 = UInt64_ToString_mF0E40B7459C207B89A1C8C04CE7F183AC0E6D672((uint64_t*)(&V_3), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9006));
		NullCheck(L_22);
		ArrayElementTypeCheck (L_22, L_24);
		(L_22)->SetAt(static_cast<il2cpp_array_size_t>(5), (String_t*)L_24);
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9007));
		String_t* L_25 = String_Concat_m232E857CA5107EA6AC52E7DD7018716C021F237B(L_22, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9007));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9008));
		IL2CPP_RUNTIME_CLASS_INIT(Debug_t7B5FCB117E2FD63B6838BC52821B252E2BFB61C4_il2cpp_TypeInfo_var);
		Debug_LogError_m3BCF9B78263152261565DCA9DB7D55F0C391ED29(L_25, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9008));
	}

IL_0092:
	{
		// if (onExecute != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 8993));
		ExecuteHandler_t8B67500B15AC184E56E293FC390AB5683D50D865 * L_26 = __this->get_onExecute_5();
		V_4 = (bool)((!(((RuntimeObject*)(ExecuteHandler_t8B67500B15AC184E56E293FC390AB5683D50D865 *)L_26) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 8994));
		bool L_27 = V_4;
		if (!L_27)
		{
			goto IL_00be;
		}
	}
	{
		// onExecute.Invoke(vibrationAction, inputSource, secondsFromNow, durationSeconds, frequency, amplitude);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 8995));
		ExecuteHandler_t8B67500B15AC184E56E293FC390AB5683D50D865 * L_28 = __this->get_onExecute_5();
		SteamVR_Action_Vibration_t487523BCA03933B9812950511E8A4BCE00F03EAB * L_29 = __this->get_vibrationAction_8();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9009));
		int32_t L_30 = SteamVR_Action_Source_get_inputSource_mAA1928183BB06E5C8CF950F65BA80635C25535D4_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9009));
		float L_31 = ___secondsFromNow0;
		float L_32 = ___durationSeconds1;
		float L_33 = ___frequency2;
		float L_34 = ___amplitude3;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9010));
		NullCheck(L_28);
		ExecuteHandler_Invoke_m2A5F7EA39417810D1BCDE63E03189D04EDD127FC(L_28, L_29, L_30, L_31, L_32, L_33, L_34, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9010));
	}

IL_00be:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 8996));
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vibration_Source::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vibration_Source__ctor_mF37C9A94C62FB5D92FCAA72D2EDF9E94747F5047 (SteamVR_Action_Vibration_Source_tB30315A543AA13F11BB80C1D5C7DEDF37058C151 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vibration_Source__ctor_mF37C9A94C62FB5D92FCAA72D2EDF9E94747F5047_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Vibration_Source__ctor_mF37C9A94C62FB5D92FCAA72D2EDF9E94747F5047_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		SteamVR_Action_Out_Source__ctor_m94E0A4CA13520D0D8AA70594089391D9F64E5218(__this, /*hidden argument*/NULL);
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Boolean Valve.VR.SteamVR_Action_Vibration_Source_Map::IsUpdating(Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_Vibration_Source_Map_IsUpdating_m70351F6C802FC2324E42AEC421C2D5BEE3B29F1B (SteamVR_Action_Vibration_Source_Map_t81B9741E979634A2E0A6D7AE2518F89F3481047A * __this, int32_t ___inputSource0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vibration_Source_Map_IsUpdating_m70351F6C802FC2324E42AEC421C2D5BEE3B29F1B_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	int32_t V_0 = 0;
	bool V_1 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___inputSource0));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Vibration_Source_Map_IsUpdating_m70351F6C802FC2324E42AEC421C2D5BEE3B29F1B_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 8931));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 8932));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 8933));
		// int sourceIndex = (int)inputSource;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 8934));
		int32_t L_0 = ___inputSource0;
		V_0 = L_0;
		// return sources[sourceIndex].timeLastExecuted != 0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 8935));
		SteamVR_Action_Vibration_SourceU5BU5D_tB39B74339680889980518AF68E5B5AB014912A04* L_1 = ((SteamVR_Action_Source_Map_1_t4C60A6B852FEF89276918CCD2B6136E8FD572AA7 *)__this)->get_sources_7();
		int32_t L_2 = V_0;
		NullCheck(L_1);
		int32_t L_3 = L_2;
		SteamVR_Action_Vibration_Source_tB30315A543AA13F11BB80C1D5C7DEDF37058C151 * L_4 = (L_1)->GetAt(static_cast<il2cpp_array_size_t>(L_3));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 8937));
		NullCheck(L_4);
		float L_5 = SteamVR_Action_Vibration_Source_get_timeLastExecuted_m43631CC69AD4730B6DAD747F8917FF1968E1782C_inline(L_4, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 8937));
		V_1 = (bool)((((int32_t)((((float)L_5) == ((float)(0.0f)))? 1 : 0)) == ((int32_t)0))? 1 : 0);
		goto IL_001d;
	}

IL_001d:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 8936));
		bool L_6 = V_1;
		return L_6;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vibration_Source_Map::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vibration_Source_Map__ctor_m0777815D081C7CBB05DCC8D5E2D3A35B300D9E7F (SteamVR_Action_Vibration_Source_Map_t81B9741E979634A2E0A6D7AE2518F89F3481047A * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vibration_Source_Map__ctor_m0777815D081C7CBB05DCC8D5E2D3A35B300D9E7F_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Vibration_Source_Map__ctor_m0777815D081C7CBB05DCC8D5E2D3A35B300D9E7F_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		SteamVR_Action_Source_Map_1__ctor_m1D1C02D2A4FAC7A1673B7459262F588C80689CA3(__this, /*hidden argument*/SteamVR_Action_Source_Map_1__ctor_m1D1C02D2A4FAC7A1673B7459262F588C80689CA3_RuntimeMethod_var);
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Valve.VR.SteamVR_ActivateActionSetOnLoad::Start()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_ActivateActionSetOnLoad_Start_mEA4BD06B5A3ED45F4D80FEE2D44AD63582BBA57A (SteamVR_ActivateActionSetOnLoad_tFA2CB881F46FAEC2C6CAF162957F7FD1D0B12DB7 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_ActivateActionSetOnLoad_Start_mEA4BD06B5A3ED45F4D80FEE2D44AD63582BBA57A_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_ActivateActionSetOnLoad_Start_mEA4BD06B5A3ED45F4D80FEE2D44AD63582BBA57A_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9011));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 9012));
	int32_t G_B3_0 = 0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9013));
		// if (actionSet != null && activateOnStart)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9014));
		SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * L_0 = __this->get_actionSet_4();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9020));
		bool L_1 = SteamVR_ActionSet_op_Inequality_m3FAE077B46B4BF80F47322FC6DFB771C2EC48EB5(L_0, (SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9020));
		if (!L_1)
		{
			goto IL_0017;
		}
	}
	{
		bool L_2 = __this->get_activateOnStart_7();
		G_B3_0 = ((int32_t)(L_2));
		goto IL_0018;
	}

IL_0017:
	{
		G_B3_0 = 0;
	}

IL_0018:
	{
		V_0 = (bool)G_B3_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9015));
		bool L_3 = V_0;
		if (!L_3)
		{
			goto IL_0037;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9016));
		// actionSet.Activate(forSources, 0, disableAllOtherActionSets);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9017));
		SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * L_4 = __this->get_actionSet_4();
		int32_t L_5 = __this->get_forSources_5();
		bool L_6 = __this->get_disableAllOtherActionSets_6();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9021));
		NullCheck(L_4);
		SteamVR_ActionSet_Activate_m675A0B29BB6BBB783FEB8F1F1086037F16420509(L_4, L_5, 0, L_6, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9021));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9018));
	}

IL_0037:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9019));
		return;
	}
}
// System.Void Valve.VR.SteamVR_ActivateActionSetOnLoad::OnDestroy()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_ActivateActionSetOnLoad_OnDestroy_mB9E6C33A3AF1501A1D6DBCB9B5912E98DA24F952 (SteamVR_ActivateActionSetOnLoad_tFA2CB881F46FAEC2C6CAF162957F7FD1D0B12DB7 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_ActivateActionSetOnLoad_OnDestroy_mB9E6C33A3AF1501A1D6DBCB9B5912E98DA24F952_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_ActivateActionSetOnLoad_OnDestroy_mB9E6C33A3AF1501A1D6DBCB9B5912E98DA24F952_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9022));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 9023));
	int32_t G_B3_0 = 0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9024));
		// if (actionSet != null && deactivateOnDestroy)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9025));
		SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * L_0 = __this->get_actionSet_4();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9031));
		bool L_1 = SteamVR_ActionSet_op_Inequality_m3FAE077B46B4BF80F47322FC6DFB771C2EC48EB5(L_0, (SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9031));
		if (!L_1)
		{
			goto IL_0017;
		}
	}
	{
		bool L_2 = __this->get_deactivateOnDestroy_8();
		G_B3_0 = ((int32_t)(L_2));
		goto IL_0018;
	}

IL_0017:
	{
		G_B3_0 = 0;
	}

IL_0018:
	{
		V_0 = (bool)G_B3_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9026));
		bool L_3 = V_0;
		if (!L_3)
		{
			goto IL_0030;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9027));
		// actionSet.Deactivate(forSources);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9028));
		SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * L_4 = __this->get_actionSet_4();
		int32_t L_5 = __this->get_forSources_5();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9032));
		NullCheck(L_4);
		SteamVR_ActionSet_Deactivate_mC05C9A9355C257755030C58042CB9EFC7104F021(L_4, L_5, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9032));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9029));
	}

IL_0030:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9030));
		return;
	}
}
// System.Void Valve.VR.SteamVR_ActivateActionSetOnLoad::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_ActivateActionSetOnLoad__ctor_m0AAEE31F209F055E3C46B61AC879EE09E7CD338A (SteamVR_ActivateActionSetOnLoad_tFA2CB881F46FAEC2C6CAF162957F7FD1D0B12DB7 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_ActivateActionSetOnLoad__ctor_m0AAEE31F209F055E3C46B61AC879EE09E7CD338A_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_ActivateActionSetOnLoad__ctor_m0AAEE31F209F055E3C46B61AC879EE09E7CD338A_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9033));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 9034));
	{
		// public SteamVR_ActionSet actionSet = SteamVR_Input.GetActionSet("default");
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9035));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9040));
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Input_tCE4A1EC6C51592CB9DCD7B860984CB2C4DD937BF_il2cpp_TypeInfo_var);
		SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * L_0 = SteamVR_Input_GetActionSet_m53C53A57B6E0BEAA81C90D18B541694392B9BB23(_stringLiteral7505D64A54E061B7ACD54CCD58B49DC43500B635, (bool)0, (bool)0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9040));
		__this->set_actionSet_4(L_0);
		// public SteamVR_Input_Sources forSources = SteamVR_Input_Sources.Any;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9036));
		__this->set_forSources_5(0);
		// public bool disableAllOtherActionSets = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9037));
		__this->set_disableAllOtherActionSets_6((bool)0);
		// public bool activateOnStart = true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9038));
		__this->set_activateOnStart_7((bool)1);
		// public bool deactivateOnDestroy = true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9039));
		__this->set_deactivateOnDestroy_8((bool)1);
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9041));
		MonoBehaviour__ctor_mEAEC84B222C60319D593E456D769B3311DFCEF97(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9041));
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// Valve.VR.SteamVR_Behaviour Valve.VR.SteamVR_Behaviour::get_instance()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586 * SteamVR_Behaviour_get_instance_mF736E7604C239882F0BC7ADF2611A3AE53DF0189 (const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_get_instance_mF736E7604C239882F0BC7ADF2611A3AE53DF0189_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586 * V_1 = NULL;
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Behaviour_get_instance_mF736E7604C239882F0BC7ADF2611A3AE53DF0189_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19447));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 19448));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19449));
		// if (_instance == null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19450));
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_il2cpp_TypeInfo_var);
		SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586 * L_0 = ((SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_StaticFields*)il2cpp_codegen_static_fields_for(SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_il2cpp_TypeInfo_var))->get__instance_6();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19457));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_1 = Object_op_Equality_mBC2401774F3BE33E8CF6F0A8148E66C95D6CFF1C(L_0, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19457));
		V_0 = L_1;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19451));
		bool L_2 = V_0;
		if (!L_2)
		{
			goto IL_0019;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19452));
		// Initialize(false);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19453));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19458));
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_il2cpp_TypeInfo_var);
		SteamVR_Behaviour_Initialize_mA34568CBC7E0F232551F456C378EA998B0AA66FB((bool)0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19458));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19454));
	}

IL_0019:
	{
		// return _instance;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19455));
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_il2cpp_TypeInfo_var);
		SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586 * L_3 = ((SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_StaticFields*)il2cpp_codegen_static_fields_for(SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_il2cpp_TypeInfo_var))->get__instance_6();
		V_1 = L_3;
		goto IL_0021;
	}

IL_0021:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19456));
		SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586 * L_4 = V_1;
		return L_4;
	}
}
// System.Void Valve.VR.SteamVR_Behaviour::Initialize(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_Initialize_mA34568CBC7E0F232551F456C378EA998B0AA66FB (bool ___forceUnityVRToOpenVR0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Initialize_mA34568CBC7E0F232551F456C378EA998B0AA66FB_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * V_1 = NULL;
	SteamVR_Render_tE8610D8397284113646BAAD2B6991C16D4C26665 * V_2 = NULL;
	SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586 * V_3 = NULL;
	bool V_4 = false;
	bool V_5 = false;
	bool V_6 = false;
	bool V_7 = false;
	GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * V_8 = NULL;
	bool V_9 = false;
	bool V_10 = false;
	bool V_11 = false;
	bool V_12 = false;
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___forceUnityVRToOpenVR0));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_1), (&V_2), (&V_3), (&V_8));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Behaviour_Initialize_mA34568CBC7E0F232551F456C378EA998B0AA66FB_RuntimeMethod_var, NULL, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19459));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 19460));
	int32_t G_B3_0 = 0;
	int32_t G_B23_0 = 0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19461));
		// if (_instance == null && initializing == false)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19462));
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_il2cpp_TypeInfo_var);
		SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586 * L_0 = ((SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_StaticFields*)il2cpp_codegen_static_fields_for(SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_il2cpp_TypeInfo_var))->get__instance_6();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19507));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_1 = Object_op_Equality_mBC2401774F3BE33E8CF6F0A8148E66C95D6CFF1C(L_0, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19507));
		if (!L_1)
		{
			goto IL_0018;
		}
	}
	{
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_il2cpp_TypeInfo_var);
		bool L_2 = ((SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_StaticFields*)il2cpp_codegen_static_fields_for(SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_il2cpp_TypeInfo_var))->get_initializing_11();
		G_B3_0 = ((((int32_t)L_2) == ((int32_t)0))? 1 : 0);
		goto IL_0019;
	}

IL_0018:
	{
		G_B3_0 = 0;
	}

IL_0019:
	{
		V_0 = (bool)G_B3_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19463));
		bool L_3 = V_0;
		if (!L_3)
		{
			goto IL_014a;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19464));
		// initializing = true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19465));
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_il2cpp_TypeInfo_var);
		((SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_StaticFields*)il2cpp_codegen_static_fields_for(SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_il2cpp_TypeInfo_var))->set_initializing_11((bool)1);
		// GameObject steamVRObject = null;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19466));
		V_1 = (GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F *)NULL;
		// if (forceUnityVRToOpenVR)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19467));
		bool L_4 = ___forceUnityVRToOpenVR0;
		V_4 = L_4;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19468));
		bool L_5 = V_4;
		if (!L_5)
		{
			goto IL_0036;
		}
	}
	{
		// forcingInitialization = true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19469));
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_il2cpp_TypeInfo_var);
		((SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_StaticFields*)il2cpp_codegen_static_fields_for(SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_il2cpp_TypeInfo_var))->set_forcingInitialization_5((bool)1);
	}

IL_0036:
	{
		// SteamVR_Render renderInstance = GameObject.FindObjectOfType<SteamVR_Render>();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19470));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19508));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		SteamVR_Render_tE8610D8397284113646BAAD2B6991C16D4C26665 * L_6 = Object_FindObjectOfType_TisSteamVR_Render_tE8610D8397284113646BAAD2B6991C16D4C26665_m375DF65ED62003A8D0F1EEFAB02B0BFD8FC0DEF1(/*hidden argument*/Object_FindObjectOfType_TisSteamVR_Render_tE8610D8397284113646BAAD2B6991C16D4C26665_m375DF65ED62003A8D0F1EEFAB02B0BFD8FC0DEF1_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19508));
		V_2 = L_6;
		// if (renderInstance != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19471));
		SteamVR_Render_tE8610D8397284113646BAAD2B6991C16D4C26665 * L_7 = V_2;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19509));
		bool L_8 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_7, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19509));
		V_5 = L_8;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19472));
		bool L_9 = V_5;
		if (!L_9)
		{
			goto IL_0050;
		}
	}
	{
		// steamVRObject = renderInstance.gameObject;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19473));
		SteamVR_Render_tE8610D8397284113646BAAD2B6991C16D4C26665 * L_10 = V_2;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19510));
		NullCheck(L_10);
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_11 = Component_get_gameObject_m0B0570BA8DDD3CD78A9DB568EA18D7317686603C(L_10, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19510));
		V_1 = L_11;
	}

IL_0050:
	{
		// SteamVR_Behaviour behaviourInstance = GameObject.FindObjectOfType<SteamVR_Behaviour>();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19474));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19511));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586 * L_12 = Object_FindObjectOfType_TisSteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_mF4D4C690A8FB950CCD99B55888CF147043E7E034(/*hidden argument*/Object_FindObjectOfType_TisSteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_mF4D4C690A8FB950CCD99B55888CF147043E7E034_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19511));
		V_3 = L_12;
		// if (behaviourInstance != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19475));
		SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586 * L_13 = V_3;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19512));
		bool L_14 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_13, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19512));
		V_6 = L_14;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19476));
		bool L_15 = V_6;
		if (!L_15)
		{
			goto IL_006a;
		}
	}
	{
		// steamVRObject = behaviourInstance.gameObject;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19477));
		SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586 * L_16 = V_3;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19513));
		NullCheck(L_16);
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_17 = Component_get_gameObject_m0B0570BA8DDD3CD78A9DB568EA18D7317686603C(L_16, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19513));
		V_1 = L_17;
	}

IL_006a:
	{
		// if (steamVRObject == null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19478));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_18 = V_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19514));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_19 = Object_op_Equality_mBC2401774F3BE33E8CF6F0A8148E66C95D6CFF1C(L_18, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19514));
		V_7 = L_19;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19479));
		bool L_20 = V_7;
		if (!L_20)
		{
			goto IL_00a4;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19480));
		// GameObject objectInstance = new GameObject("[SteamVR]");
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19481));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19515));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_21 = (GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F *)il2cpp_codegen_object_new(GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F_il2cpp_TypeInfo_var);
		GameObject__ctor_mBB454E679AD9CF0B84D3609A01E6A9753ACF4686(L_21, _stringLiteral007325E7D8DEDACC6ED34288122B4689CB38DC84, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19515));
		V_8 = L_21;
		// _instance = objectInstance.AddComponent<SteamVR_Behaviour>();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19482));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_22 = V_8;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19516));
		NullCheck(L_22);
		SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586 * L_23 = GameObject_AddComponent_TisSteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_m1C09710380A9C189D0FFC165FB260DE3D56089B4(L_22, /*hidden argument*/GameObject_AddComponent_TisSteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_m1C09710380A9C189D0FFC165FB260DE3D56089B4_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19516));
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_il2cpp_TypeInfo_var);
		((SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_StaticFields*)il2cpp_codegen_static_fields_for(SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_il2cpp_TypeInfo_var))->set__instance_6(L_23);
		// _instance.steamvr_render = objectInstance.AddComponent<SteamVR_Render>();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19483));
		SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586 * L_24 = ((SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_StaticFields*)il2cpp_codegen_static_fields_for(SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_il2cpp_TypeInfo_var))->get__instance_6();
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_25 = V_8;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19517));
		NullCheck(L_25);
		SteamVR_Render_tE8610D8397284113646BAAD2B6991C16D4C26665 * L_26 = GameObject_AddComponent_TisSteamVR_Render_tE8610D8397284113646BAAD2B6991C16D4C26665_m990762749AAEADE99FB0F725B95E7EC57F088801(L_25, /*hidden argument*/GameObject_AddComponent_TisSteamVR_Render_tE8610D8397284113646BAAD2B6991C16D4C26665_m990762749AAEADE99FB0F725B95E7EC57F088801_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19517));
		NullCheck(L_24);
		L_24->set_steamvr_render_9(L_26);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19484));
		goto IL_0109;
	}

IL_00a4:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19485));
		// behaviourInstance = steamVRObject.GetComponent<SteamVR_Behaviour>();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19486));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_27 = V_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19518));
		NullCheck(L_27);
		SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586 * L_28 = GameObject_GetComponent_TisSteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_mB9F300C022DC646383A3C3810C88E9D8D22D1943(L_27, /*hidden argument*/GameObject_GetComponent_TisSteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_mB9F300C022DC646383A3C3810C88E9D8D22D1943_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19518));
		V_3 = L_28;
		// if (behaviourInstance == null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19487));
		SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586 * L_29 = V_3;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19519));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_30 = Object_op_Equality_mBC2401774F3BE33E8CF6F0A8148E66C95D6CFF1C(L_29, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19519));
		V_9 = L_30;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19488));
		bool L_31 = V_9;
		if (!L_31)
		{
			goto IL_00c0;
		}
	}
	{
		// behaviourInstance = steamVRObject.AddComponent<SteamVR_Behaviour>();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19489));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_32 = V_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19520));
		NullCheck(L_32);
		SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586 * L_33 = GameObject_AddComponent_TisSteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_m1C09710380A9C189D0FFC165FB260DE3D56089B4(L_32, /*hidden argument*/GameObject_AddComponent_TisSteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_m1C09710380A9C189D0FFC165FB260DE3D56089B4_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19520));
		V_3 = L_33;
	}

IL_00c0:
	{
		// if (renderInstance != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19490));
		SteamVR_Render_tE8610D8397284113646BAAD2B6991C16D4C26665 * L_34 = V_2;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19521));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_35 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_34, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19521));
		V_10 = L_35;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19491));
		bool L_36 = V_10;
		if (!L_36)
		{
			goto IL_00d6;
		}
	}
	{
		// behaviourInstance.steamvr_render = renderInstance;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19492));
		SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586 * L_37 = V_3;
		SteamVR_Render_tE8610D8397284113646BAAD2B6991C16D4C26665 * L_38 = V_2;
		NullCheck(L_37);
		L_37->set_steamvr_render_9(L_38);
		goto IL_0102;
	}

IL_00d6:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19493));
		// behaviourInstance.steamvr_render = steamVRObject.GetComponent<SteamVR_Render>();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19494));
		SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586 * L_39 = V_3;
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_40 = V_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19522));
		NullCheck(L_40);
		SteamVR_Render_tE8610D8397284113646BAAD2B6991C16D4C26665 * L_41 = GameObject_GetComponent_TisSteamVR_Render_tE8610D8397284113646BAAD2B6991C16D4C26665_m506DA10EA4DA33BF1F43031780392E43E877129D(L_40, /*hidden argument*/GameObject_GetComponent_TisSteamVR_Render_tE8610D8397284113646BAAD2B6991C16D4C26665_m506DA10EA4DA33BF1F43031780392E43E877129D_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19522));
		NullCheck(L_39);
		L_39->set_steamvr_render_9(L_41);
		// if (behaviourInstance.steamvr_render == null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19495));
		SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586 * L_42 = V_3;
		NullCheck(L_42);
		SteamVR_Render_tE8610D8397284113646BAAD2B6991C16D4C26665 * L_43 = L_42->get_steamvr_render_9();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19523));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_44 = Object_op_Equality_mBC2401774F3BE33E8CF6F0A8148E66C95D6CFF1C(L_43, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19523));
		V_11 = L_44;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19496));
		bool L_45 = V_11;
		if (!L_45)
		{
			goto IL_0101;
		}
	}
	{
		// behaviourInstance.steamvr_render = steamVRObject.AddComponent<SteamVR_Render>();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19497));
		SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586 * L_46 = V_3;
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_47 = V_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19524));
		NullCheck(L_47);
		SteamVR_Render_tE8610D8397284113646BAAD2B6991C16D4C26665 * L_48 = GameObject_AddComponent_TisSteamVR_Render_tE8610D8397284113646BAAD2B6991C16D4C26665_m990762749AAEADE99FB0F725B95E7EC57F088801(L_47, /*hidden argument*/GameObject_AddComponent_TisSteamVR_Render_tE8610D8397284113646BAAD2B6991C16D4C26665_m990762749AAEADE99FB0F725B95E7EC57F088801_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19524));
		NullCheck(L_46);
		L_46->set_steamvr_render_9(L_48);
	}

IL_0101:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19498));
	}

IL_0102:
	{
		// _instance = behaviourInstance;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19499));
		SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586 * L_49 = V_3;
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_il2cpp_TypeInfo_var);
		((SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_StaticFields*)il2cpp_codegen_static_fields_for(SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_il2cpp_TypeInfo_var))->set__instance_6(L_49);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19500));
	}

IL_0109:
	{
		// if (_instance != null && _instance.doNotDestroy)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19501));
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_il2cpp_TypeInfo_var);
		SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586 * L_50 = ((SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_StaticFields*)il2cpp_codegen_static_fields_for(SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_il2cpp_TypeInfo_var))->get__instance_6();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19525));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_51 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_50, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19525));
		if (!L_51)
		{
			goto IL_0122;
		}
	}
	{
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_il2cpp_TypeInfo_var);
		SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586 * L_52 = ((SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_StaticFields*)il2cpp_codegen_static_fields_for(SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_il2cpp_TypeInfo_var))->get__instance_6();
		NullCheck(L_52);
		bool L_53 = L_52->get_doNotDestroy_8();
		G_B23_0 = ((int32_t)(L_53));
		goto IL_0123;
	}

IL_0122:
	{
		G_B23_0 = 0;
	}

IL_0123:
	{
		V_12 = (bool)G_B23_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19502));
		bool L_54 = V_12;
		if (!L_54)
		{
			goto IL_0143;
		}
	}
	{
		// GameObject.DontDestroyOnLoad(_instance.transform.root.gameObject);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19503));
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_il2cpp_TypeInfo_var);
		SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586 * L_55 = ((SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_StaticFields*)il2cpp_codegen_static_fields_for(SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_il2cpp_TypeInfo_var))->get__instance_6();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19526));
		NullCheck(L_55);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_56 = Component_get_transform_m00F05BD782F920C301A7EBA480F3B7A904C07EC9(L_55, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19526));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19527));
		NullCheck(L_56);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_57 = Transform_get_root_m101A8B5C2CC6D868B6B66EEDBD5336FC1EB5DDD6(L_56, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19527));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19528));
		NullCheck(L_57);
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_58 = Component_get_gameObject_m0B0570BA8DDD3CD78A9DB568EA18D7317686603C(L_57, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19528));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19529));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		Object_DontDestroyOnLoad_m4DC90770AD6084E4B1B8489C6B41205DC020C207(L_58, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19529));
	}

IL_0143:
	{
		// initializing = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19504));
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_il2cpp_TypeInfo_var);
		((SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_StaticFields*)il2cpp_codegen_static_fields_for(SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_il2cpp_TypeInfo_var))->set_initializing_11((bool)0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19505));
	}

IL_014a:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19506));
		return;
	}
}
// System.Void Valve.VR.SteamVR_Behaviour::Awake()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_Awake_mAC490E2E91237CF64BCEE8FC535A9F0CAE6F3059 (SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Awake_mAC490E2E91237CF64BCEE8FC535A9F0CAE6F3059_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Behaviour_Awake_mAC490E2E91237CF64BCEE8FC535A9F0CAE6F3059_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19530));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 19531));
	int32_t G_B3_0 = 0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19532));
		// isPlaying = true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19533));
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_il2cpp_TypeInfo_var);
		((SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_StaticFields*)il2cpp_codegen_static_fields_for(SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_il2cpp_TypeInfo_var))->set_isPlaying_10((bool)1);
		// if (initializeSteamVROnAwake && forcingInitialization == false)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19534));
		bool L_0 = __this->get_initializeSteamVROnAwake_7();
		if (!L_0)
		{
			goto IL_0019;
		}
	}
	{
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_il2cpp_TypeInfo_var);
		bool L_1 = ((SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_StaticFields*)il2cpp_codegen_static_fields_for(SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_il2cpp_TypeInfo_var))->get_forcingInitialization_5();
		G_B3_0 = ((((int32_t)L_1) == ((int32_t)0))? 1 : 0);
		goto IL_001a;
	}

IL_0019:
	{
		G_B3_0 = 0;
	}

IL_001a:
	{
		V_0 = (bool)G_B3_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19535));
		bool L_2 = V_0;
		if (!L_2)
		{
			goto IL_0026;
		}
	}
	{
		// InitializeSteamVR();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19536));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19538));
		SteamVR_Behaviour_InitializeSteamVR_m33AC5057AB7443A7224E945883C156A9FC0FFB0D(__this, (bool)0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19538));
	}

IL_0026:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19537));
		return;
	}
}
// System.Void Valve.VR.SteamVR_Behaviour::InitializeSteamVR(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_InitializeSteamVR_m33AC5057AB7443A7224E945883C156A9FC0FFB0D (SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586 * __this, bool ___forceUnityVRToOpenVR0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_InitializeSteamVR_m33AC5057AB7443A7224E945883C156A9FC0FFB0D_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	bool V_1 = false;
	bool V_2 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___forceUnityVRToOpenVR0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Behaviour_InitializeSteamVR_m33AC5057AB7443A7224E945883C156A9FC0FFB0D_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19539));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 19540));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19541));
		// if (forceUnityVRToOpenVR)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19542));
		bool L_0 = ___forceUnityVRToOpenVR0;
		V_0 = L_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19543));
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_0059;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19544));
		// forcingInitialization = true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19545));
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_il2cpp_TypeInfo_var);
		((SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_StaticFields*)il2cpp_codegen_static_fields_for(SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_il2cpp_TypeInfo_var))->set_forcingInitialization_5((bool)1);
		// if (initializeCoroutine != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19546));
		Coroutine_tAE7DB2FC70A0AE6477F896F852057CB0754F06EC * L_2 = __this->get_initializeCoroutine_12();
		V_1 = (bool)((!(((RuntimeObject*)(Coroutine_tAE7DB2FC70A0AE6477F896F852057CB0754F06EC *)L_2) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19547));
		bool L_3 = V_1;
		if (!L_3)
		{
			goto IL_0027;
		}
	}
	{
		// StopCoroutine(initializeCoroutine);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19548));
		Coroutine_tAE7DB2FC70A0AE6477F896F852057CB0754F06EC * L_4 = __this->get_initializeCoroutine_12();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19558));
		MonoBehaviour_StopCoroutine_mC465FFA3C386BA22384F7AFA5495FF2286510562(__this, L_4, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19558));
	}

IL_0027:
	{
		// if (XRSettings.loadedDeviceName == openVRDeviceName)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19549));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19559));
		String_t* L_5 = XRSettings_get_loadedDeviceName_m952D46346306FD9477B13992E5797A85CCD3C98C(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19559));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19560));
		bool L_6 = String_op_Equality_m139F0E4195AE2F856019E63B241F36F016997FCE(L_5, _stringLiteralCB44AC67B21B251EB99E9B05420FCCE568E2BBC2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19560));
		V_2 = L_6;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19550));
		bool L_7 = V_2;
		if (!L_7)
		{
			goto IL_0043;
		}
	}
	{
		// EnableOpenVR();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19551));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19561));
		SteamVR_Behaviour_EnableOpenVR_mF75014123CBFDC324A16EE948F1BE79ECB0B8658(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19561));
		goto IL_0056;
	}

IL_0043:
	{
		// initializeCoroutine = StartCoroutine(DoInitializeSteamVR(forceUnityVRToOpenVR));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19552));
		bool L_8 = ___forceUnityVRToOpenVR0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19562));
		RuntimeObject* L_9 = SteamVR_Behaviour_DoInitializeSteamVR_m1E9D177FB8C0C2BEB6D386DE8237CB89462E7E0C(__this, L_8, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19562));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19563));
		Coroutine_tAE7DB2FC70A0AE6477F896F852057CB0754F06EC * L_10 = MonoBehaviour_StartCoroutine_mBF8044CE06A35D76A69669ADD8977D05956616B7(__this, L_9, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19563));
		__this->set_initializeCoroutine_12(L_10);
	}

IL_0056:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19553));
		goto IL_0062;
	}

IL_0059:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19554));
		// SteamVR.Initialize(false);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19555));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19564));
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_tE14648C0E73A16927B96F72915B425561B0D057F_il2cpp_TypeInfo_var);
		SteamVR_Initialize_m4290EF084BDC61199798490C498AA0DF8791260C((bool)0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19564));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19556));
	}

IL_0062:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19557));
		return;
	}
}
// System.Collections.IEnumerator Valve.VR.SteamVR_Behaviour::DoInitializeSteamVR(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* SteamVR_Behaviour_DoInitializeSteamVR_m1E9D177FB8C0C2BEB6D386DE8237CB89462E7E0C (SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586 * __this, bool ___forceUnityVRToOpenVR0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_DoInitializeSteamVR_m1E9D177FB8C0C2BEB6D386DE8237CB89462E7E0C_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Behaviour_DoInitializeSteamVR_m1E9D177FB8C0C2BEB6D386DE8237CB89462E7E0C_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		U3CDoInitializeSteamVRU3Ed__15_tF2B5867E813D537B7B4B232138211FE3C01A21F7 * L_0 = (U3CDoInitializeSteamVRU3Ed__15_tF2B5867E813D537B7B4B232138211FE3C01A21F7 *)il2cpp_codegen_object_new(U3CDoInitializeSteamVRU3Ed__15_tF2B5867E813D537B7B4B232138211FE3C01A21F7_il2cpp_TypeInfo_var);
		U3CDoInitializeSteamVRU3Ed__15__ctor_m4AB754B2C599508761896C3F3B939E8C4F5BA537(L_0, 0, /*hidden argument*/NULL);
		U3CDoInitializeSteamVRU3Ed__15_tF2B5867E813D537B7B4B232138211FE3C01A21F7 * L_1 = L_0;
		NullCheck(L_1);
		L_1->set_U3CU3E4__this_3(__this);
		U3CDoInitializeSteamVRU3Ed__15_tF2B5867E813D537B7B4B232138211FE3C01A21F7 * L_2 = L_1;
		bool L_3 = ___forceUnityVRToOpenVR0;
		NullCheck(L_2);
		L_2->set_forceUnityVRToOpenVR_2(L_3);
		return L_2;
	}
}
// System.Void Valve.VR.SteamVR_Behaviour::XRDevice_deviceLoaded(System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_XRDevice_deviceLoaded_m9E35422E42CDBF4CEB2AC386C1A37C26A4AEE918 (SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586 * __this, String_t* ___deviceName0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_XRDevice_deviceLoaded_m9E35422E42CDBF4CEB2AC386C1A37C26A4AEE918_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___deviceName0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Behaviour_XRDevice_deviceLoaded_m9E35422E42CDBF4CEB2AC386C1A37C26A4AEE918_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19565));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 19566));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19567));
		// if (deviceName == openVRDeviceName)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19568));
		String_t* L_0 = ___deviceName0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19578));
		bool L_1 = String_op_Equality_m139F0E4195AE2F856019E63B241F36F016997FCE(L_0, _stringLiteralCB44AC67B21B251EB99E9B05420FCCE568E2BBC2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19578));
		V_0 = L_1;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19569));
		bool L_2 = V_0;
		if (!L_2)
		{
			goto IL_001b;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19570));
		// loadedOpenVRDeviceSuccess = true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19571));
		__this->set_loadedOpenVRDeviceSuccess_13((bool)1);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19572));
		goto IL_0036;
	}

IL_001b:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19573));
		// Debug.LogError("<b>[SteamVR]</b> Tried to async load: " + openVRDeviceName + ". Loaded: " + deviceName, this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19574));
		String_t* L_3 = ___deviceName0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19579));
		String_t* L_4 = String_Concat_mB78D0094592718DA6D5DB6C712A9C225631666BE(_stringLiteralC45DD4E1886367F0BF6631C4DA53924377B2E7A1, L_3, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19579));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19580));
		IL2CPP_RUNTIME_CLASS_INIT(Debug_t7B5FCB117E2FD63B6838BC52821B252E2BFB61C4_il2cpp_TypeInfo_var);
		Debug_LogError_m97139CB2EE76D5CD8308C1AD0499A5F163FC7F51(L_4, __this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19580));
		// loadedOpenVRDeviceSuccess = true; //try anyway
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19575));
		__this->set_loadedOpenVRDeviceSuccess_13((bool)1);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19576));
	}

IL_0036:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19577));
		return;
	}
}
// System.Void Valve.VR.SteamVR_Behaviour::EnableOpenVR()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_EnableOpenVR_mF75014123CBFDC324A16EE948F1BE79ECB0B8658 (SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_EnableOpenVR_mF75014123CBFDC324A16EE948F1BE79ECB0B8658_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Behaviour_EnableOpenVR_mF75014123CBFDC324A16EE948F1BE79ECB0B8658_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19581));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 19582));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19583));
		// XRSettings.enabled = true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19584));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19589));
		XRSettings_set_enabled_m9180DFDC2B9EF502DEB9503C98A0D53B4B9F8E1B((bool)1, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19589));
		// SteamVR.Initialize(false);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19585));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19590));
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_tE14648C0E73A16927B96F72915B425561B0D057F_il2cpp_TypeInfo_var);
		SteamVR_Initialize_m4290EF084BDC61199798490C498AA0DF8791260C((bool)0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19590));
		// initializeCoroutine = null;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19586));
		__this->set_initializeCoroutine_12((Coroutine_tAE7DB2FC70A0AE6477F896F852057CB0754F06EC *)NULL);
		// forcingInitialization = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19587));
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_il2cpp_TypeInfo_var);
		((SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_StaticFields*)il2cpp_codegen_static_fields_for(SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_il2cpp_TypeInfo_var))->set_forcingInitialization_5((bool)0);
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19588));
		return;
	}
}
// System.Void Valve.VR.SteamVR_Behaviour::OnEnable()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_OnEnable_m713CCF5BB7424FD20E6C9350371C6815A1481A6A (SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_OnEnable_m713CCF5BB7424FD20E6C9350371C6815A1481A6A_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Behaviour_OnEnable_m713CCF5BB7424FD20E6C9350371C6815A1481A6A_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19591));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 19592));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19593));
		// Application.onBeforeRender += OnBeforeRender;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19594));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19597));
		UnityAction_tD19B26F1B2C048E38FD5801A33573BE01064CAF4 * L_0 = (UnityAction_tD19B26F1B2C048E38FD5801A33573BE01064CAF4 *)il2cpp_codegen_object_new(UnityAction_tD19B26F1B2C048E38FD5801A33573BE01064CAF4_il2cpp_TypeInfo_var);
		UnityAction__ctor_mEFC4B92529CE83DF72501F92E07EC5598C54BDAC(L_0, __this, (intptr_t)((intptr_t)SteamVR_Behaviour_OnBeforeRender_m26DF386EE8C7C11C8BEAF362E0AA58DD9DD53C84_RuntimeMethod_var), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19597));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19598));
		Application_add_onBeforeRender_mC00950B8FC35DB9048121D43BE8F69D55BCB4723(L_0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19598));
		// SteamVR_Events.System(EVREventType.VREvent_Quit).Listen(OnQuit);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19595));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19599));
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Events_tEF9EC471E187D3A163781044AA4F8F0C392EB2B8_il2cpp_TypeInfo_var);
		Event_1_t5DB0CDA7FD2616DA8770700B1A982E1A0F052262 * L_1 = SteamVR_Events_System_mA00E549D3CEB4BB6C027399D29DBEC0DF774891B(((int32_t)700), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19599));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19600));
		UnityAction_1_tB43C1CF1D8DCDDE3590ED959587DB9809C1294BF * L_2 = (UnityAction_1_tB43C1CF1D8DCDDE3590ED959587DB9809C1294BF *)il2cpp_codegen_object_new(UnityAction_1_tB43C1CF1D8DCDDE3590ED959587DB9809C1294BF_il2cpp_TypeInfo_var);
		UnityAction_1__ctor_m95AA3CDDC630B39635645E005E7D9BFCD3518199(L_2, __this, (intptr_t)((intptr_t)SteamVR_Behaviour_OnQuit_m01AF8BD113E677B77087A22ADF91B4266B99C0ED_RuntimeMethod_var), /*hidden argument*/UnityAction_1__ctor_m95AA3CDDC630B39635645E005E7D9BFCD3518199_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19600));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19601));
		NullCheck(L_1);
		Event_1_Listen_m38BA8AB8A10A0202B52B3F5CA7DB8056FDC0FBE0(L_1, L_2, /*hidden argument*/Event_1_Listen_m38BA8AB8A10A0202B52B3F5CA7DB8056FDC0FBE0_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19601));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19596));
		return;
	}
}
// System.Void Valve.VR.SteamVR_Behaviour::OnDisable()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_OnDisable_m0232C2D9ADEF60527D20E98FEBAFC60B468C7CEB (SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_OnDisable_m0232C2D9ADEF60527D20E98FEBAFC60B468C7CEB_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Behaviour_OnDisable_m0232C2D9ADEF60527D20E98FEBAFC60B468C7CEB_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19602));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 19603));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19604));
		// Application.onBeforeRender -= OnBeforeRender;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19605));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19608));
		UnityAction_tD19B26F1B2C048E38FD5801A33573BE01064CAF4 * L_0 = (UnityAction_tD19B26F1B2C048E38FD5801A33573BE01064CAF4 *)il2cpp_codegen_object_new(UnityAction_tD19B26F1B2C048E38FD5801A33573BE01064CAF4_il2cpp_TypeInfo_var);
		UnityAction__ctor_mEFC4B92529CE83DF72501F92E07EC5598C54BDAC(L_0, __this, (intptr_t)((intptr_t)SteamVR_Behaviour_OnBeforeRender_m26DF386EE8C7C11C8BEAF362E0AA58DD9DD53C84_RuntimeMethod_var), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19608));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19609));
		Application_remove_onBeforeRender_m4601D9804BC86F64FB071348EC1CF448C55CBA3B(L_0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19609));
		// SteamVR_Events.System(EVREventType.VREvent_Quit).Remove(OnQuit);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19606));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19610));
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Events_tEF9EC471E187D3A163781044AA4F8F0C392EB2B8_il2cpp_TypeInfo_var);
		Event_1_t5DB0CDA7FD2616DA8770700B1A982E1A0F052262 * L_1 = SteamVR_Events_System_mA00E549D3CEB4BB6C027399D29DBEC0DF774891B(((int32_t)700), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19610));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19611));
		UnityAction_1_tB43C1CF1D8DCDDE3590ED959587DB9809C1294BF * L_2 = (UnityAction_1_tB43C1CF1D8DCDDE3590ED959587DB9809C1294BF *)il2cpp_codegen_object_new(UnityAction_1_tB43C1CF1D8DCDDE3590ED959587DB9809C1294BF_il2cpp_TypeInfo_var);
		UnityAction_1__ctor_m95AA3CDDC630B39635645E005E7D9BFCD3518199(L_2, __this, (intptr_t)((intptr_t)SteamVR_Behaviour_OnQuit_m01AF8BD113E677B77087A22ADF91B4266B99C0ED_RuntimeMethod_var), /*hidden argument*/UnityAction_1__ctor_m95AA3CDDC630B39635645E005E7D9BFCD3518199_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19611));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19612));
		NullCheck(L_1);
		Event_1_Remove_mF12BABD97A66E13257D4ECEDA7C4264DF073D93A(L_1, L_2, /*hidden argument*/Event_1_Remove_mF12BABD97A66E13257D4ECEDA7C4264DF073D93A_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19612));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19607));
		return;
	}
}
// System.Void Valve.VR.SteamVR_Behaviour::OnBeforeRender()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_OnBeforeRender_m26DF386EE8C7C11C8BEAF362E0AA58DD9DD53C84 (SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_OnBeforeRender_m26DF386EE8C7C11C8BEAF362E0AA58DD9DD53C84_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Behaviour_OnBeforeRender_m26DF386EE8C7C11C8BEAF362E0AA58DD9DD53C84_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19613));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 19614));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19615));
		// PreCull();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19616));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19618));
		SteamVR_Behaviour_PreCull_mB10CED0C11CDE15D1E68B3AAC37CFDC56C7834C7(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19618));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19617));
		return;
	}
}
// System.Void Valve.VR.SteamVR_Behaviour::PreCull()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_PreCull_mB10CED0C11CDE15D1E68B3AAC37CFDC56C7834C7 (SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_PreCull_mB10CED0C11CDE15D1E68B3AAC37CFDC56C7834C7_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	bool V_1 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Behaviour_PreCull_mB10CED0C11CDE15D1E68B3AAC37CFDC56C7834C7_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19619));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 19620));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19621));
		// if (OpenVR.Input != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19622));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19633));
		IL2CPP_RUNTIME_CLASS_INIT(OpenVR_tE75A98955EC4AA4B219CE822AA43E79E4CB99DB3_il2cpp_TypeInfo_var);
		CVRInput_t2BE4417A3C1EA0C6CF647B0706BF37F886CE599B * L_0 = OpenVR_get_Input_m904FD790D785E944EE58513F589E862530386414(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19633));
		V_0 = (bool)((!(((RuntimeObject*)(CVRInput_t2BE4417A3C1EA0C6CF647B0706BF37F886CE599B *)L_0) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19623));
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_0034;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19624));
		// if (Time.frameCount != lastFrameCount)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19625));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19634));
		int32_t L_2 = Time_get_frameCount_m97573E267B487B8FD4BF37615AFC19BED7B4E436(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19634));
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_il2cpp_TypeInfo_var);
		int32_t L_3 = ((SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_StaticFields*)il2cpp_codegen_static_fields_for(SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_il2cpp_TypeInfo_var))->get_lastFrameCount_14();
		V_1 = (bool)((((int32_t)((((int32_t)L_2) == ((int32_t)L_3))? 1 : 0)) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19626));
		bool L_4 = V_1;
		if (!L_4)
		{
			goto IL_0033;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19627));
		// lastFrameCount = Time.frameCount;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19628));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19635));
		int32_t L_5 = Time_get_frameCount_m97573E267B487B8FD4BF37615AFC19BED7B4E436(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19635));
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_il2cpp_TypeInfo_var);
		((SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_StaticFields*)il2cpp_codegen_static_fields_for(SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_il2cpp_TypeInfo_var))->set_lastFrameCount_14(L_5);
		// SteamVR_Input.OnPreCull();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19629));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19636));
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Input_tCE4A1EC6C51592CB9DCD7B860984CB2C4DD937BF_il2cpp_TypeInfo_var);
		SteamVR_Input_OnPreCull_m8257BD45734433B2FEFAAE3EEA450AA206B1A6E2(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19636));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19630));
	}

IL_0033:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19631));
	}

IL_0034:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19632));
		return;
	}
}
// System.Void Valve.VR.SteamVR_Behaviour::FixedUpdate()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_FixedUpdate_mE5FFD141F25C4249125EA5C5EB9A353BFC689192 (SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_FixedUpdate_mE5FFD141F25C4249125EA5C5EB9A353BFC689192_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Behaviour_FixedUpdate_mE5FFD141F25C4249125EA5C5EB9A353BFC689192_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19637));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 19638));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19639));
		// if (OpenVR.Input != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19640));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19646));
		IL2CPP_RUNTIME_CLASS_INIT(OpenVR_tE75A98955EC4AA4B219CE822AA43E79E4CB99DB3_il2cpp_TypeInfo_var);
		CVRInput_t2BE4417A3C1EA0C6CF647B0706BF37F886CE599B * L_0 = OpenVR_get_Input_m904FD790D785E944EE58513F589E862530386414(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19646));
		V_0 = (bool)((!(((RuntimeObject*)(CVRInput_t2BE4417A3C1EA0C6CF647B0706BF37F886CE599B *)L_0) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19641));
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_0015;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19642));
		// SteamVR_Input.FixedUpdate();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19643));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19647));
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Input_tCE4A1EC6C51592CB9DCD7B860984CB2C4DD937BF_il2cpp_TypeInfo_var);
		SteamVR_Input_FixedUpdate_m148E3DD8EB5A5A307C2B787F8D17F81CA2985A92(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19647));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19644));
	}

IL_0015:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19645));
		return;
	}
}
// System.Void Valve.VR.SteamVR_Behaviour::LateUpdate()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_LateUpdate_m66EDB2A95E9E5AEF14A3C9ADA1AB97910B9088BE (SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_LateUpdate_m66EDB2A95E9E5AEF14A3C9ADA1AB97910B9088BE_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Behaviour_LateUpdate_m66EDB2A95E9E5AEF14A3C9ADA1AB97910B9088BE_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19648));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 19649));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19650));
		// if (OpenVR.Input != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19651));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19657));
		IL2CPP_RUNTIME_CLASS_INIT(OpenVR_tE75A98955EC4AA4B219CE822AA43E79E4CB99DB3_il2cpp_TypeInfo_var);
		CVRInput_t2BE4417A3C1EA0C6CF647B0706BF37F886CE599B * L_0 = OpenVR_get_Input_m904FD790D785E944EE58513F589E862530386414(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19657));
		V_0 = (bool)((!(((RuntimeObject*)(CVRInput_t2BE4417A3C1EA0C6CF647B0706BF37F886CE599B *)L_0) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19652));
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_0015;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19653));
		// SteamVR_Input.LateUpdate();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19654));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19658));
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Input_tCE4A1EC6C51592CB9DCD7B860984CB2C4DD937BF_il2cpp_TypeInfo_var);
		SteamVR_Input_LateUpdate_mF5DB9D90A59D0E2CEEC149CEC2B809524B739B6D(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19658));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19655));
	}

IL_0015:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19656));
		return;
	}
}
// System.Void Valve.VR.SteamVR_Behaviour::Update()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_Update_m58657E5A3CBF0A7C978ABD7345E9CB5994236C5B (SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Update_m58657E5A3CBF0A7C978ABD7345E9CB5994236C5B_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Behaviour_Update_m58657E5A3CBF0A7C978ABD7345E9CB5994236C5B_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19659));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 19660));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19661));
		// if (OpenVR.Input != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19662));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19668));
		IL2CPP_RUNTIME_CLASS_INIT(OpenVR_tE75A98955EC4AA4B219CE822AA43E79E4CB99DB3_il2cpp_TypeInfo_var);
		CVRInput_t2BE4417A3C1EA0C6CF647B0706BF37F886CE599B * L_0 = OpenVR_get_Input_m904FD790D785E944EE58513F589E862530386414(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19668));
		V_0 = (bool)((!(((RuntimeObject*)(CVRInput_t2BE4417A3C1EA0C6CF647B0706BF37F886CE599B *)L_0) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19663));
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_0015;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19664));
		// SteamVR_Input.Update();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19665));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19669));
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Input_tCE4A1EC6C51592CB9DCD7B860984CB2C4DD937BF_il2cpp_TypeInfo_var);
		SteamVR_Input_Update_m3E5F1FD8644044C051FFDAB30E6F43099D9AA3DD(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19669));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19666));
	}

IL_0015:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19667));
		return;
	}
}
// System.Void Valve.VR.SteamVR_Behaviour::OnQuit(Valve.VR.VREvent_t)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_OnQuit_m01AF8BD113E677B77087A22ADF91B4266B99C0ED (SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586 * __this, VREvent_t_t4F330058D4B87093309E1043D17F8A3DB1BA925C  ___vrEvent0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_OnQuit_m01AF8BD113E677B77087A22ADF91B4266B99C0ED_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___vrEvent0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Behaviour_OnQuit_m01AF8BD113E677B77087A22ADF91B4266B99C0ED_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19670));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 19671));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19672));
		// Application.Quit();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19673));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19675));
		Application_Quit_mA005EB22CB989AC3794334754F15E1C0D2FF1C95(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19675));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19674));
		return;
	}
}
// System.Void Valve.VR.SteamVR_Behaviour::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour__ctor_m9B12433E546C4B15C5C944924BF103ED7DDECE24 (SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour__ctor_m9B12433E546C4B15C5C944924BF103ED7DDECE24_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Behaviour__ctor_m9B12433E546C4B15C5C944924BF103ED7DDECE24_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19676));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 19677));
	{
		// public bool initializeSteamVROnAwake = true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19678));
		__this->set_initializeSteamVROnAwake_7((bool)1);
		// public bool doNotDestroy = true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19679));
		__this->set_doNotDestroy_8((bool)1);
		// private bool loadedOpenVRDeviceSuccess = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19680));
		__this->set_loadedOpenVRDeviceSuccess_13((bool)0);
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19681));
		MonoBehaviour__ctor_mEAEC84B222C60319D593E456D769B3311DFCEF97(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19681));
		return;
	}
}
// System.Void Valve.VR.SteamVR_Behaviour::.cctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour__cctor_mEA51C8EE69A144C35AE59F635863833F78530115 (const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour__cctor_mEA51C8EE69A144C35AE59F635863833F78530115_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Behaviour__cctor_mEA51C8EE69A144C35AE59F635863833F78530115_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19682));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 19683));
	{
		// public static bool forcingInitialization = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19684));
		((SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_StaticFields*)il2cpp_codegen_static_fields_for(SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_il2cpp_TypeInfo_var))->set_forcingInitialization_5((bool)0);
		// internal static bool isPlaying = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19685));
		((SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_StaticFields*)il2cpp_codegen_static_fields_for(SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_il2cpp_TypeInfo_var))->set_isPlaying_10((bool)0);
		// private static bool initializing = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19686));
		((SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_StaticFields*)il2cpp_codegen_static_fields_for(SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_il2cpp_TypeInfo_var))->set_initializing_11((bool)0);
		// protected static int lastFrameCount = -1;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19687));
		((SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_StaticFields*)il2cpp_codegen_static_fields_for(SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_il2cpp_TypeInfo_var))->set_lastFrameCount_14((-1));
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Valve.VR.SteamVR_Behaviour_<DoInitializeSteamVR>d__15::.ctor(System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void U3CDoInitializeSteamVRU3Ed__15__ctor_m4AB754B2C599508761896C3F3B939E8C4F5BA537 (U3CDoInitializeSteamVRU3Ed__15_tF2B5867E813D537B7B4B232138211FE3C01A21F7 * __this, int32_t ___U3CU3E1__state0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (U3CDoInitializeSteamVRU3Ed__15__ctor_m4AB754B2C599508761896C3F3B939E8C4F5BA537_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, U3CDoInitializeSteamVRU3Ed__15__ctor_m4AB754B2C599508761896C3F3B939E8C4F5BA537_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		Object__ctor_m925ECA5E85CA100E3FB86A4F9E15C120E9A184C0(__this, /*hidden argument*/NULL);
		int32_t L_0 = ___U3CU3E1__state0;
		__this->set_U3CU3E1__state_0(L_0);
		return;
	}
}
// System.Void Valve.VR.SteamVR_Behaviour_<DoInitializeSteamVR>d__15::System.IDisposable.Dispose()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void U3CDoInitializeSteamVRU3Ed__15_System_IDisposable_Dispose_m7D9C62EE8274A20E47E032D930D60A38B49EB460 (U3CDoInitializeSteamVRU3Ed__15_tF2B5867E813D537B7B4B232138211FE3C01A21F7 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (U3CDoInitializeSteamVRU3Ed__15_System_IDisposable_Dispose_m7D9C62EE8274A20E47E032D930D60A38B49EB460_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, U3CDoInitializeSteamVRU3Ed__15_System_IDisposable_Dispose_m7D9C62EE8274A20E47E032D930D60A38B49EB460_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		return;
	}
}
// System.Boolean Valve.VR.SteamVR_Behaviour_<DoInitializeSteamVR>d__15::MoveNext()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool U3CDoInitializeSteamVRU3Ed__15_MoveNext_mC3B8289618A67FD97953CD2687ADC70C8D4512FA (U3CDoInitializeSteamVRU3Ed__15_tF2B5867E813D537B7B4B232138211FE3C01A21F7 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (U3CDoInitializeSteamVRU3Ed__15_MoveNext_mC3B8289618A67FD97953CD2687ADC70C8D4512FA_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	int32_t V_0 = 0;
	bool V_1 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, U3CDoInitializeSteamVRU3Ed__15_MoveNext_mC3B8289618A67FD97953CD2687ADC70C8D4512FA_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19688));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 19689));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19690));
		int32_t L_0 = __this->get_U3CU3E1__state_0();
		V_0 = L_0;
		int32_t L_1 = V_0;
		if (!L_1)
		{
			goto IL_0012;
		}
	}
	{
		goto IL_000c;
	}

IL_000c:
	{
		int32_t L_2 = V_0;
		if ((((int32_t)L_2) == ((int32_t)1)))
		{
			goto IL_0014;
		}
	}
	{
		goto IL_0016;
	}

IL_0012:
	{
		goto IL_0018;
	}

IL_0014:
	{
		goto IL_0055;
	}

IL_0016:
	{
		return (bool)0;
	}

IL_0018:
	{
		__this->set_U3CU3E1__state_0((-1));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19691));
		// XRDevice.deviceLoaded += XRDevice_deviceLoaded;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19692));
		SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586 * L_3 = __this->get_U3CU3E4__this_3();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19704));
		Action_1_t32A9EECF5D4397CC1B9A7C7079870875411B06D0 * L_4 = (Action_1_t32A9EECF5D4397CC1B9A7C7079870875411B06D0 *)il2cpp_codegen_object_new(Action_1_t32A9EECF5D4397CC1B9A7C7079870875411B06D0_il2cpp_TypeInfo_var);
		Action_1__ctor_m4F1B6EE6AB328B8B63B3B2CD8FB89A119C3143F3(L_4, L_3, (intptr_t)((intptr_t)SteamVR_Behaviour_XRDevice_deviceLoaded_m9E35422E42CDBF4CEB2AC386C1A37C26A4AEE918_RuntimeMethod_var), /*hidden argument*/Action_1__ctor_m4F1B6EE6AB328B8B63B3B2CD8FB89A119C3143F3_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19704));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19705));
		IL2CPP_RUNTIME_CLASS_INIT(XRDevice_t392FCA3D1DCEB95FF500C8F374C88B034C31DF4A_il2cpp_TypeInfo_var);
		XRDevice_add_deviceLoaded_m26813F2791F89E1058B14D5932BD00C2A009A74C(L_4, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19705));
		// XRSettings.LoadDeviceByName(openVRDeviceName);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19693));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19706));
		XRSettings_LoadDeviceByName_m39BADCB8CB3C59E2DB929CEF7DFBF6CFA1209095(_stringLiteralCB44AC67B21B251EB99E9B05420FCCE568E2BBC2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19706));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19694));
		goto IL_005d;
	}

IL_0044:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19695));
		// yield return null;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19696));
		__this->set_U3CU3E2__current_1(NULL);
		__this->set_U3CU3E1__state_0(1);
		return (bool)1;
	}

IL_0055:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19697));
		__this->set_U3CU3E1__state_0((-1));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19698));
	}

IL_005d:
	{
		// while (loadedOpenVRDeviceSuccess == false)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19699));
		SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586 * L_5 = __this->get_U3CU3E4__this_3();
		NullCheck(L_5);
		bool L_6 = L_5->get_loadedOpenVRDeviceSuccess_13();
		V_1 = (bool)((((int32_t)L_6) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19700));
		bool L_7 = V_1;
		if (L_7)
		{
			goto IL_0044;
		}
	}
	{
		// XRDevice.deviceLoaded -= XRDevice_deviceLoaded;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19701));
		SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586 * L_8 = __this->get_U3CU3E4__this_3();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19707));
		Action_1_t32A9EECF5D4397CC1B9A7C7079870875411B06D0 * L_9 = (Action_1_t32A9EECF5D4397CC1B9A7C7079870875411B06D0 *)il2cpp_codegen_object_new(Action_1_t32A9EECF5D4397CC1B9A7C7079870875411B06D0_il2cpp_TypeInfo_var);
		Action_1__ctor_m4F1B6EE6AB328B8B63B3B2CD8FB89A119C3143F3(L_9, L_8, (intptr_t)((intptr_t)SteamVR_Behaviour_XRDevice_deviceLoaded_m9E35422E42CDBF4CEB2AC386C1A37C26A4AEE918_RuntimeMethod_var), /*hidden argument*/Action_1__ctor_m4F1B6EE6AB328B8B63B3B2CD8FB89A119C3143F3_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19707));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19708));
		IL2CPP_RUNTIME_CLASS_INIT(XRDevice_t392FCA3D1DCEB95FF500C8F374C88B034C31DF4A_il2cpp_TypeInfo_var);
		XRDevice_remove_deviceLoaded_mC3D6CF39606865E78F1F19CA21613A8DD1B8EDDF(L_9, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19708));
		// EnableOpenVR();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19702));
		SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586 * L_10 = __this->get_U3CU3E4__this_3();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19709));
		NullCheck(L_10);
		SteamVR_Behaviour_EnableOpenVR_mF75014123CBFDC324A16EE948F1BE79ECB0B8658(L_10, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19709));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 19703));
		return (bool)0;
	}
}
// System.Object Valve.VR.SteamVR_Behaviour_<DoInitializeSteamVR>d__15::System.Collections.Generic.IEnumerator<System.Object>.get_Current()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject * U3CDoInitializeSteamVRU3Ed__15_System_Collections_Generic_IEnumeratorU3CSystem_ObjectU3E_get_Current_mC35C65BB635D3E640FBBD7E642940E62D65E796C (U3CDoInitializeSteamVRU3Ed__15_tF2B5867E813D537B7B4B232138211FE3C01A21F7 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (U3CDoInitializeSteamVRU3Ed__15_System_Collections_Generic_IEnumeratorU3CSystem_ObjectU3E_get_Current_mC35C65BB635D3E640FBBD7E642940E62D65E796C_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, U3CDoInitializeSteamVRU3Ed__15_System_Collections_Generic_IEnumeratorU3CSystem_ObjectU3E_get_Current_mC35C65BB635D3E640FBBD7E642940E62D65E796C_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		RuntimeObject * L_0 = __this->get_U3CU3E2__current_1();
		return L_0;
	}
}
// System.Void Valve.VR.SteamVR_Behaviour_<DoInitializeSteamVR>d__15::System.Collections.IEnumerator.Reset()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void U3CDoInitializeSteamVRU3Ed__15_System_Collections_IEnumerator_Reset_m70B80D5374EEE17681EF415FC6DB3D5B7E1618AC (U3CDoInitializeSteamVRU3Ed__15_tF2B5867E813D537B7B4B232138211FE3C01A21F7 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (U3CDoInitializeSteamVRU3Ed__15_System_Collections_IEnumerator_Reset_m70B80D5374EEE17681EF415FC6DB3D5B7E1618AC_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, U3CDoInitializeSteamVRU3Ed__15_System_Collections_IEnumerator_Reset_m70B80D5374EEE17681EF415FC6DB3D5B7E1618AC_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		NotSupportedException_tE75B318D6590A02A5D9B29FD97409B1750FA0010 * L_0 = (NotSupportedException_tE75B318D6590A02A5D9B29FD97409B1750FA0010 *)il2cpp_codegen_object_new(NotSupportedException_tE75B318D6590A02A5D9B29FD97409B1750FA0010_il2cpp_TypeInfo_var);
		NotSupportedException__ctor_mA121DE1CAC8F25277DEB489DC7771209D91CAE33(L_0, /*hidden argument*/NULL);
		IL2CPP_RAISE_MANAGED_EXCEPTION(L_0, U3CDoInitializeSteamVRU3Ed__15_System_Collections_IEnumerator_Reset_m70B80D5374EEE17681EF415FC6DB3D5B7E1618AC_RuntimeMethod_var);
	}
}
// System.Object Valve.VR.SteamVR_Behaviour_<DoInitializeSteamVR>d__15::System.Collections.IEnumerator.get_Current()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject * U3CDoInitializeSteamVRU3Ed__15_System_Collections_IEnumerator_get_Current_mE7F12C72E76E30CED3BFC26BB30EA2748A565D48 (U3CDoInitializeSteamVRU3Ed__15_tF2B5867E813D537B7B4B232138211FE3C01A21F7 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (U3CDoInitializeSteamVRU3Ed__15_System_Collections_IEnumerator_get_Current_mE7F12C72E76E30CED3BFC26BB30EA2748A565D48_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, U3CDoInitializeSteamVRU3Ed__15_System_Collections_IEnumerator_get_Current_mE7F12C72E76E30CED3BFC26BB30EA2748A565D48_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		RuntimeObject * L_0 = __this->get_U3CU3E2__current_1();
		return L_0;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Valve.VR.SteamVR_Behaviour_Boolean::add_onChangeEvent(Valve.VR.SteamVR_Behaviour_Boolean_ChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_Boolean_add_onChangeEvent_m1578F8F87A9CAD8DE453F42B1BF2D26349A1B8E0 (SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 * __this, ChangeHandler_tADA56232D143B2D18BA3D6F2A9B5CE2AC637CBB6 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Boolean_add_onChangeEvent_m1578F8F87A9CAD8DE453F42B1BF2D26349A1B8E0_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	ChangeHandler_tADA56232D143B2D18BA3D6F2A9B5CE2AC637CBB6 * V_0 = NULL;
	ChangeHandler_tADA56232D143B2D18BA3D6F2A9B5CE2AC637CBB6 * V_1 = NULL;
	ChangeHandler_tADA56232D143B2D18BA3D6F2A9B5CE2AC637CBB6 * V_2 = NULL;
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Behaviour_Boolean_add_onChangeEvent_m1578F8F87A9CAD8DE453F42B1BF2D26349A1B8E0_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		ChangeHandler_tADA56232D143B2D18BA3D6F2A9B5CE2AC637CBB6 * L_0 = __this->get_onChangeEvent_7();
		V_0 = L_0;
	}

IL_0007:
	{
		CHECK_PAUSE_POINT;
		ChangeHandler_tADA56232D143B2D18BA3D6F2A9B5CE2AC637CBB6 * L_1 = V_0;
		V_1 = L_1;
		ChangeHandler_tADA56232D143B2D18BA3D6F2A9B5CE2AC637CBB6 * L_2 = V_1;
		ChangeHandler_tADA56232D143B2D18BA3D6F2A9B5CE2AC637CBB6 * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Combine_mC25D2F7DECAFBA6D9A2F9EBA8A77063F0658ECF1(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((ChangeHandler_tADA56232D143B2D18BA3D6F2A9B5CE2AC637CBB6 *)CastclassSealed((RuntimeObject*)L_4, ChangeHandler_tADA56232D143B2D18BA3D6F2A9B5CE2AC637CBB6_il2cpp_TypeInfo_var));
		ChangeHandler_tADA56232D143B2D18BA3D6F2A9B5CE2AC637CBB6 ** L_5 = __this->get_address_of_onChangeEvent_7();
		ChangeHandler_tADA56232D143B2D18BA3D6F2A9B5CE2AC637CBB6 * L_6 = V_2;
		ChangeHandler_tADA56232D143B2D18BA3D6F2A9B5CE2AC637CBB6 * L_7 = V_1;
		ChangeHandler_tADA56232D143B2D18BA3D6F2A9B5CE2AC637CBB6 * L_8 = InterlockedCompareExchangeImpl<ChangeHandler_tADA56232D143B2D18BA3D6F2A9B5CE2AC637CBB6 *>((ChangeHandler_tADA56232D143B2D18BA3D6F2A9B5CE2AC637CBB6 **)L_5, L_6, L_7);
		V_0 = L_8;
		ChangeHandler_tADA56232D143B2D18BA3D6F2A9B5CE2AC637CBB6 * L_9 = V_0;
		ChangeHandler_tADA56232D143B2D18BA3D6F2A9B5CE2AC637CBB6 * L_10 = V_1;
		if ((!(((RuntimeObject*)(ChangeHandler_tADA56232D143B2D18BA3D6F2A9B5CE2AC637CBB6 *)L_9) == ((RuntimeObject*)(ChangeHandler_tADA56232D143B2D18BA3D6F2A9B5CE2AC637CBB6 *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// System.Void Valve.VR.SteamVR_Behaviour_Boolean::remove_onChangeEvent(Valve.VR.SteamVR_Behaviour_Boolean_ChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_Boolean_remove_onChangeEvent_m07C30D65CF899B6EE31E455C160C2402AE396267 (SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 * __this, ChangeHandler_tADA56232D143B2D18BA3D6F2A9B5CE2AC637CBB6 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Boolean_remove_onChangeEvent_m07C30D65CF899B6EE31E455C160C2402AE396267_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	ChangeHandler_tADA56232D143B2D18BA3D6F2A9B5CE2AC637CBB6 * V_0 = NULL;
	ChangeHandler_tADA56232D143B2D18BA3D6F2A9B5CE2AC637CBB6 * V_1 = NULL;
	ChangeHandler_tADA56232D143B2D18BA3D6F2A9B5CE2AC637CBB6 * V_2 = NULL;
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Behaviour_Boolean_remove_onChangeEvent_m07C30D65CF899B6EE31E455C160C2402AE396267_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		ChangeHandler_tADA56232D143B2D18BA3D6F2A9B5CE2AC637CBB6 * L_0 = __this->get_onChangeEvent_7();
		V_0 = L_0;
	}

IL_0007:
	{
		CHECK_PAUSE_POINT;
		ChangeHandler_tADA56232D143B2D18BA3D6F2A9B5CE2AC637CBB6 * L_1 = V_0;
		V_1 = L_1;
		ChangeHandler_tADA56232D143B2D18BA3D6F2A9B5CE2AC637CBB6 * L_2 = V_1;
		ChangeHandler_tADA56232D143B2D18BA3D6F2A9B5CE2AC637CBB6 * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Remove_m0B0DB7D1B3AF96B71AFAA72BA0EFE32FBBC2932D(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((ChangeHandler_tADA56232D143B2D18BA3D6F2A9B5CE2AC637CBB6 *)CastclassSealed((RuntimeObject*)L_4, ChangeHandler_tADA56232D143B2D18BA3D6F2A9B5CE2AC637CBB6_il2cpp_TypeInfo_var));
		ChangeHandler_tADA56232D143B2D18BA3D6F2A9B5CE2AC637CBB6 ** L_5 = __this->get_address_of_onChangeEvent_7();
		ChangeHandler_tADA56232D143B2D18BA3D6F2A9B5CE2AC637CBB6 * L_6 = V_2;
		ChangeHandler_tADA56232D143B2D18BA3D6F2A9B5CE2AC637CBB6 * L_7 = V_1;
		ChangeHandler_tADA56232D143B2D18BA3D6F2A9B5CE2AC637CBB6 * L_8 = InterlockedCompareExchangeImpl<ChangeHandler_tADA56232D143B2D18BA3D6F2A9B5CE2AC637CBB6 *>((ChangeHandler_tADA56232D143B2D18BA3D6F2A9B5CE2AC637CBB6 **)L_5, L_6, L_7);
		V_0 = L_8;
		ChangeHandler_tADA56232D143B2D18BA3D6F2A9B5CE2AC637CBB6 * L_9 = V_0;
		ChangeHandler_tADA56232D143B2D18BA3D6F2A9B5CE2AC637CBB6 * L_10 = V_1;
		if ((!(((RuntimeObject*)(ChangeHandler_tADA56232D143B2D18BA3D6F2A9B5CE2AC637CBB6 *)L_9) == ((RuntimeObject*)(ChangeHandler_tADA56232D143B2D18BA3D6F2A9B5CE2AC637CBB6 *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// System.Void Valve.VR.SteamVR_Behaviour_Boolean::add_onUpdateEvent(Valve.VR.SteamVR_Behaviour_Boolean_UpdateHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_Boolean_add_onUpdateEvent_mCAE2327A051963F538C44016355233581F900E22 (SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 * __this, UpdateHandler_t9FC31A405C9C47120C5307368335AD9F708511D1 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Boolean_add_onUpdateEvent_mCAE2327A051963F538C44016355233581F900E22_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	UpdateHandler_t9FC31A405C9C47120C5307368335AD9F708511D1 * V_0 = NULL;
	UpdateHandler_t9FC31A405C9C47120C5307368335AD9F708511D1 * V_1 = NULL;
	UpdateHandler_t9FC31A405C9C47120C5307368335AD9F708511D1 * V_2 = NULL;
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Behaviour_Boolean_add_onUpdateEvent_mCAE2327A051963F538C44016355233581F900E22_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		UpdateHandler_t9FC31A405C9C47120C5307368335AD9F708511D1 * L_0 = __this->get_onUpdateEvent_9();
		V_0 = L_0;
	}

IL_0007:
	{
		CHECK_PAUSE_POINT;
		UpdateHandler_t9FC31A405C9C47120C5307368335AD9F708511D1 * L_1 = V_0;
		V_1 = L_1;
		UpdateHandler_t9FC31A405C9C47120C5307368335AD9F708511D1 * L_2 = V_1;
		UpdateHandler_t9FC31A405C9C47120C5307368335AD9F708511D1 * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Combine_mC25D2F7DECAFBA6D9A2F9EBA8A77063F0658ECF1(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((UpdateHandler_t9FC31A405C9C47120C5307368335AD9F708511D1 *)CastclassSealed((RuntimeObject*)L_4, UpdateHandler_t9FC31A405C9C47120C5307368335AD9F708511D1_il2cpp_TypeInfo_var));
		UpdateHandler_t9FC31A405C9C47120C5307368335AD9F708511D1 ** L_5 = __this->get_address_of_onUpdateEvent_9();
		UpdateHandler_t9FC31A405C9C47120C5307368335AD9F708511D1 * L_6 = V_2;
		UpdateHandler_t9FC31A405C9C47120C5307368335AD9F708511D1 * L_7 = V_1;
		UpdateHandler_t9FC31A405C9C47120C5307368335AD9F708511D1 * L_8 = InterlockedCompareExchangeImpl<UpdateHandler_t9FC31A405C9C47120C5307368335AD9F708511D1 *>((UpdateHandler_t9FC31A405C9C47120C5307368335AD9F708511D1 **)L_5, L_6, L_7);
		V_0 = L_8;
		UpdateHandler_t9FC31A405C9C47120C5307368335AD9F708511D1 * L_9 = V_0;
		UpdateHandler_t9FC31A405C9C47120C5307368335AD9F708511D1 * L_10 = V_1;
		if ((!(((RuntimeObject*)(UpdateHandler_t9FC31A405C9C47120C5307368335AD9F708511D1 *)L_9) == ((RuntimeObject*)(UpdateHandler_t9FC31A405C9C47120C5307368335AD9F708511D1 *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// System.Void Valve.VR.SteamVR_Behaviour_Boolean::remove_onUpdateEvent(Valve.VR.SteamVR_Behaviour_Boolean_UpdateHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_Boolean_remove_onUpdateEvent_mCDFDACEA7B803424CFC256C1FA1637794490CA2A (SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 * __this, UpdateHandler_t9FC31A405C9C47120C5307368335AD9F708511D1 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Boolean_remove_onUpdateEvent_mCDFDACEA7B803424CFC256C1FA1637794490CA2A_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	UpdateHandler_t9FC31A405C9C47120C5307368335AD9F708511D1 * V_0 = NULL;
	UpdateHandler_t9FC31A405C9C47120C5307368335AD9F708511D1 * V_1 = NULL;
	UpdateHandler_t9FC31A405C9C47120C5307368335AD9F708511D1 * V_2 = NULL;
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Behaviour_Boolean_remove_onUpdateEvent_mCDFDACEA7B803424CFC256C1FA1637794490CA2A_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		UpdateHandler_t9FC31A405C9C47120C5307368335AD9F708511D1 * L_0 = __this->get_onUpdateEvent_9();
		V_0 = L_0;
	}

IL_0007:
	{
		CHECK_PAUSE_POINT;
		UpdateHandler_t9FC31A405C9C47120C5307368335AD9F708511D1 * L_1 = V_0;
		V_1 = L_1;
		UpdateHandler_t9FC31A405C9C47120C5307368335AD9F708511D1 * L_2 = V_1;
		UpdateHandler_t9FC31A405C9C47120C5307368335AD9F708511D1 * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Remove_m0B0DB7D1B3AF96B71AFAA72BA0EFE32FBBC2932D(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((UpdateHandler_t9FC31A405C9C47120C5307368335AD9F708511D1 *)CastclassSealed((RuntimeObject*)L_4, UpdateHandler_t9FC31A405C9C47120C5307368335AD9F708511D1_il2cpp_TypeInfo_var));
		UpdateHandler_t9FC31A405C9C47120C5307368335AD9F708511D1 ** L_5 = __this->get_address_of_onUpdateEvent_9();
		UpdateHandler_t9FC31A405C9C47120C5307368335AD9F708511D1 * L_6 = V_2;
		UpdateHandler_t9FC31A405C9C47120C5307368335AD9F708511D1 * L_7 = V_1;
		UpdateHandler_t9FC31A405C9C47120C5307368335AD9F708511D1 * L_8 = InterlockedCompareExchangeImpl<UpdateHandler_t9FC31A405C9C47120C5307368335AD9F708511D1 *>((UpdateHandler_t9FC31A405C9C47120C5307368335AD9F708511D1 **)L_5, L_6, L_7);
		V_0 = L_8;
		UpdateHandler_t9FC31A405C9C47120C5307368335AD9F708511D1 * L_9 = V_0;
		UpdateHandler_t9FC31A405C9C47120C5307368335AD9F708511D1 * L_10 = V_1;
		if ((!(((RuntimeObject*)(UpdateHandler_t9FC31A405C9C47120C5307368335AD9F708511D1 *)L_9) == ((RuntimeObject*)(UpdateHandler_t9FC31A405C9C47120C5307368335AD9F708511D1 *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// System.Void Valve.VR.SteamVR_Behaviour_Boolean::add_onPressEvent(Valve.VR.SteamVR_Behaviour_Boolean_StateHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_Boolean_add_onPressEvent_m78CB583B2435293C92AD72C72715BB9C975DBC2D (SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 * __this, StateHandler_tC57B51755B81869515107A3BE4BC3865F974190D * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Boolean_add_onPressEvent_m78CB583B2435293C92AD72C72715BB9C975DBC2D_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	StateHandler_tC57B51755B81869515107A3BE4BC3865F974190D * V_0 = NULL;
	StateHandler_tC57B51755B81869515107A3BE4BC3865F974190D * V_1 = NULL;
	StateHandler_tC57B51755B81869515107A3BE4BC3865F974190D * V_2 = NULL;
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Behaviour_Boolean_add_onPressEvent_m78CB583B2435293C92AD72C72715BB9C975DBC2D_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		StateHandler_tC57B51755B81869515107A3BE4BC3865F974190D * L_0 = __this->get_onPressEvent_11();
		V_0 = L_0;
	}

IL_0007:
	{
		CHECK_PAUSE_POINT;
		StateHandler_tC57B51755B81869515107A3BE4BC3865F974190D * L_1 = V_0;
		V_1 = L_1;
		StateHandler_tC57B51755B81869515107A3BE4BC3865F974190D * L_2 = V_1;
		StateHandler_tC57B51755B81869515107A3BE4BC3865F974190D * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Combine_mC25D2F7DECAFBA6D9A2F9EBA8A77063F0658ECF1(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((StateHandler_tC57B51755B81869515107A3BE4BC3865F974190D *)CastclassSealed((RuntimeObject*)L_4, StateHandler_tC57B51755B81869515107A3BE4BC3865F974190D_il2cpp_TypeInfo_var));
		StateHandler_tC57B51755B81869515107A3BE4BC3865F974190D ** L_5 = __this->get_address_of_onPressEvent_11();
		StateHandler_tC57B51755B81869515107A3BE4BC3865F974190D * L_6 = V_2;
		StateHandler_tC57B51755B81869515107A3BE4BC3865F974190D * L_7 = V_1;
		StateHandler_tC57B51755B81869515107A3BE4BC3865F974190D * L_8 = InterlockedCompareExchangeImpl<StateHandler_tC57B51755B81869515107A3BE4BC3865F974190D *>((StateHandler_tC57B51755B81869515107A3BE4BC3865F974190D **)L_5, L_6, L_7);
		V_0 = L_8;
		StateHandler_tC57B51755B81869515107A3BE4BC3865F974190D * L_9 = V_0;
		StateHandler_tC57B51755B81869515107A3BE4BC3865F974190D * L_10 = V_1;
		if ((!(((RuntimeObject*)(StateHandler_tC57B51755B81869515107A3BE4BC3865F974190D *)L_9) == ((RuntimeObject*)(StateHandler_tC57B51755B81869515107A3BE4BC3865F974190D *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// System.Void Valve.VR.SteamVR_Behaviour_Boolean::remove_onPressEvent(Valve.VR.SteamVR_Behaviour_Boolean_StateHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_Boolean_remove_onPressEvent_m89A4E2359BCEAE601C15B51DB67997570E2087F5 (SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 * __this, StateHandler_tC57B51755B81869515107A3BE4BC3865F974190D * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Boolean_remove_onPressEvent_m89A4E2359BCEAE601C15B51DB67997570E2087F5_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	StateHandler_tC57B51755B81869515107A3BE4BC3865F974190D * V_0 = NULL;
	StateHandler_tC57B51755B81869515107A3BE4BC3865F974190D * V_1 = NULL;
	StateHandler_tC57B51755B81869515107A3BE4BC3865F974190D * V_2 = NULL;
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Behaviour_Boolean_remove_onPressEvent_m89A4E2359BCEAE601C15B51DB67997570E2087F5_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		StateHandler_tC57B51755B81869515107A3BE4BC3865F974190D * L_0 = __this->get_onPressEvent_11();
		V_0 = L_0;
	}

IL_0007:
	{
		CHECK_PAUSE_POINT;
		StateHandler_tC57B51755B81869515107A3BE4BC3865F974190D * L_1 = V_0;
		V_1 = L_1;
		StateHandler_tC57B51755B81869515107A3BE4BC3865F974190D * L_2 = V_1;
		StateHandler_tC57B51755B81869515107A3BE4BC3865F974190D * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Remove_m0B0DB7D1B3AF96B71AFAA72BA0EFE32FBBC2932D(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((StateHandler_tC57B51755B81869515107A3BE4BC3865F974190D *)CastclassSealed((RuntimeObject*)L_4, StateHandler_tC57B51755B81869515107A3BE4BC3865F974190D_il2cpp_TypeInfo_var));
		StateHandler_tC57B51755B81869515107A3BE4BC3865F974190D ** L_5 = __this->get_address_of_onPressEvent_11();
		StateHandler_tC57B51755B81869515107A3BE4BC3865F974190D * L_6 = V_2;
		StateHandler_tC57B51755B81869515107A3BE4BC3865F974190D * L_7 = V_1;
		StateHandler_tC57B51755B81869515107A3BE4BC3865F974190D * L_8 = InterlockedCompareExchangeImpl<StateHandler_tC57B51755B81869515107A3BE4BC3865F974190D *>((StateHandler_tC57B51755B81869515107A3BE4BC3865F974190D **)L_5, L_6, L_7);
		V_0 = L_8;
		StateHandler_tC57B51755B81869515107A3BE4BC3865F974190D * L_9 = V_0;
		StateHandler_tC57B51755B81869515107A3BE4BC3865F974190D * L_10 = V_1;
		if ((!(((RuntimeObject*)(StateHandler_tC57B51755B81869515107A3BE4BC3865F974190D *)L_9) == ((RuntimeObject*)(StateHandler_tC57B51755B81869515107A3BE4BC3865F974190D *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// System.Void Valve.VR.SteamVR_Behaviour_Boolean::add_onPressDownEvent(Valve.VR.SteamVR_Behaviour_Boolean_StateDownHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_Boolean_add_onPressDownEvent_m44EE97419CA1C7DA28237D6B4AF6763C709D5965 (SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 * __this, StateDownHandler_tFF77368F427C4FE6164A97B238F944123AA8FE24 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Boolean_add_onPressDownEvent_m44EE97419CA1C7DA28237D6B4AF6763C709D5965_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	StateDownHandler_tFF77368F427C4FE6164A97B238F944123AA8FE24 * V_0 = NULL;
	StateDownHandler_tFF77368F427C4FE6164A97B238F944123AA8FE24 * V_1 = NULL;
	StateDownHandler_tFF77368F427C4FE6164A97B238F944123AA8FE24 * V_2 = NULL;
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Behaviour_Boolean_add_onPressDownEvent_m44EE97419CA1C7DA28237D6B4AF6763C709D5965_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		StateDownHandler_tFF77368F427C4FE6164A97B238F944123AA8FE24 * L_0 = __this->get_onPressDownEvent_13();
		V_0 = L_0;
	}

IL_0007:
	{
		CHECK_PAUSE_POINT;
		StateDownHandler_tFF77368F427C4FE6164A97B238F944123AA8FE24 * L_1 = V_0;
		V_1 = L_1;
		StateDownHandler_tFF77368F427C4FE6164A97B238F944123AA8FE24 * L_2 = V_1;
		StateDownHandler_tFF77368F427C4FE6164A97B238F944123AA8FE24 * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Combine_mC25D2F7DECAFBA6D9A2F9EBA8A77063F0658ECF1(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((StateDownHandler_tFF77368F427C4FE6164A97B238F944123AA8FE24 *)CastclassSealed((RuntimeObject*)L_4, StateDownHandler_tFF77368F427C4FE6164A97B238F944123AA8FE24_il2cpp_TypeInfo_var));
		StateDownHandler_tFF77368F427C4FE6164A97B238F944123AA8FE24 ** L_5 = __this->get_address_of_onPressDownEvent_13();
		StateDownHandler_tFF77368F427C4FE6164A97B238F944123AA8FE24 * L_6 = V_2;
		StateDownHandler_tFF77368F427C4FE6164A97B238F944123AA8FE24 * L_7 = V_1;
		StateDownHandler_tFF77368F427C4FE6164A97B238F944123AA8FE24 * L_8 = InterlockedCompareExchangeImpl<StateDownHandler_tFF77368F427C4FE6164A97B238F944123AA8FE24 *>((StateDownHandler_tFF77368F427C4FE6164A97B238F944123AA8FE24 **)L_5, L_6, L_7);
		V_0 = L_8;
		StateDownHandler_tFF77368F427C4FE6164A97B238F944123AA8FE24 * L_9 = V_0;
		StateDownHandler_tFF77368F427C4FE6164A97B238F944123AA8FE24 * L_10 = V_1;
		if ((!(((RuntimeObject*)(StateDownHandler_tFF77368F427C4FE6164A97B238F944123AA8FE24 *)L_9) == ((RuntimeObject*)(StateDownHandler_tFF77368F427C4FE6164A97B238F944123AA8FE24 *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// System.Void Valve.VR.SteamVR_Behaviour_Boolean::remove_onPressDownEvent(Valve.VR.SteamVR_Behaviour_Boolean_StateDownHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_Boolean_remove_onPressDownEvent_m63B6DCE08B343ED946C513187583AB5DED2D86D0 (SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 * __this, StateDownHandler_tFF77368F427C4FE6164A97B238F944123AA8FE24 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Boolean_remove_onPressDownEvent_m63B6DCE08B343ED946C513187583AB5DED2D86D0_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	StateDownHandler_tFF77368F427C4FE6164A97B238F944123AA8FE24 * V_0 = NULL;
	StateDownHandler_tFF77368F427C4FE6164A97B238F944123AA8FE24 * V_1 = NULL;
	StateDownHandler_tFF77368F427C4FE6164A97B238F944123AA8FE24 * V_2 = NULL;
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Behaviour_Boolean_remove_onPressDownEvent_m63B6DCE08B343ED946C513187583AB5DED2D86D0_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		StateDownHandler_tFF77368F427C4FE6164A97B238F944123AA8FE24 * L_0 = __this->get_onPressDownEvent_13();
		V_0 = L_0;
	}

IL_0007:
	{
		CHECK_PAUSE_POINT;
		StateDownHandler_tFF77368F427C4FE6164A97B238F944123AA8FE24 * L_1 = V_0;
		V_1 = L_1;
		StateDownHandler_tFF77368F427C4FE6164A97B238F944123AA8FE24 * L_2 = V_1;
		StateDownHandler_tFF77368F427C4FE6164A97B238F944123AA8FE24 * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Remove_m0B0DB7D1B3AF96B71AFAA72BA0EFE32FBBC2932D(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((StateDownHandler_tFF77368F427C4FE6164A97B238F944123AA8FE24 *)CastclassSealed((RuntimeObject*)L_4, StateDownHandler_tFF77368F427C4FE6164A97B238F944123AA8FE24_il2cpp_TypeInfo_var));
		StateDownHandler_tFF77368F427C4FE6164A97B238F944123AA8FE24 ** L_5 = __this->get_address_of_onPressDownEvent_13();
		StateDownHandler_tFF77368F427C4FE6164A97B238F944123AA8FE24 * L_6 = V_2;
		StateDownHandler_tFF77368F427C4FE6164A97B238F944123AA8FE24 * L_7 = V_1;
		StateDownHandler_tFF77368F427C4FE6164A97B238F944123AA8FE24 * L_8 = InterlockedCompareExchangeImpl<StateDownHandler_tFF77368F427C4FE6164A97B238F944123AA8FE24 *>((StateDownHandler_tFF77368F427C4FE6164A97B238F944123AA8FE24 **)L_5, L_6, L_7);
		V_0 = L_8;
		StateDownHandler_tFF77368F427C4FE6164A97B238F944123AA8FE24 * L_9 = V_0;
		StateDownHandler_tFF77368F427C4FE6164A97B238F944123AA8FE24 * L_10 = V_1;
		if ((!(((RuntimeObject*)(StateDownHandler_tFF77368F427C4FE6164A97B238F944123AA8FE24 *)L_9) == ((RuntimeObject*)(StateDownHandler_tFF77368F427C4FE6164A97B238F944123AA8FE24 *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// System.Void Valve.VR.SteamVR_Behaviour_Boolean::add_onPressUpEvent(Valve.VR.SteamVR_Behaviour_Boolean_StateUpHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_Boolean_add_onPressUpEvent_m16A540FD9BD319DAB48EBE1FDB2382F4FE706D9C (SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 * __this, StateUpHandler_tC09A0C33E80BBF97F8E88D36519482DFE36DBCC5 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Boolean_add_onPressUpEvent_m16A540FD9BD319DAB48EBE1FDB2382F4FE706D9C_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	StateUpHandler_tC09A0C33E80BBF97F8E88D36519482DFE36DBCC5 * V_0 = NULL;
	StateUpHandler_tC09A0C33E80BBF97F8E88D36519482DFE36DBCC5 * V_1 = NULL;
	StateUpHandler_tC09A0C33E80BBF97F8E88D36519482DFE36DBCC5 * V_2 = NULL;
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Behaviour_Boolean_add_onPressUpEvent_m16A540FD9BD319DAB48EBE1FDB2382F4FE706D9C_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		StateUpHandler_tC09A0C33E80BBF97F8E88D36519482DFE36DBCC5 * L_0 = __this->get_onPressUpEvent_15();
		V_0 = L_0;
	}

IL_0007:
	{
		CHECK_PAUSE_POINT;
		StateUpHandler_tC09A0C33E80BBF97F8E88D36519482DFE36DBCC5 * L_1 = V_0;
		V_1 = L_1;
		StateUpHandler_tC09A0C33E80BBF97F8E88D36519482DFE36DBCC5 * L_2 = V_1;
		StateUpHandler_tC09A0C33E80BBF97F8E88D36519482DFE36DBCC5 * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Combine_mC25D2F7DECAFBA6D9A2F9EBA8A77063F0658ECF1(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((StateUpHandler_tC09A0C33E80BBF97F8E88D36519482DFE36DBCC5 *)CastclassSealed((RuntimeObject*)L_4, StateUpHandler_tC09A0C33E80BBF97F8E88D36519482DFE36DBCC5_il2cpp_TypeInfo_var));
		StateUpHandler_tC09A0C33E80BBF97F8E88D36519482DFE36DBCC5 ** L_5 = __this->get_address_of_onPressUpEvent_15();
		StateUpHandler_tC09A0C33E80BBF97F8E88D36519482DFE36DBCC5 * L_6 = V_2;
		StateUpHandler_tC09A0C33E80BBF97F8E88D36519482DFE36DBCC5 * L_7 = V_1;
		StateUpHandler_tC09A0C33E80BBF97F8E88D36519482DFE36DBCC5 * L_8 = InterlockedCompareExchangeImpl<StateUpHandler_tC09A0C33E80BBF97F8E88D36519482DFE36DBCC5 *>((StateUpHandler_tC09A0C33E80BBF97F8E88D36519482DFE36DBCC5 **)L_5, L_6, L_7);
		V_0 = L_8;
		StateUpHandler_tC09A0C33E80BBF97F8E88D36519482DFE36DBCC5 * L_9 = V_0;
		StateUpHandler_tC09A0C33E80BBF97F8E88D36519482DFE36DBCC5 * L_10 = V_1;
		if ((!(((RuntimeObject*)(StateUpHandler_tC09A0C33E80BBF97F8E88D36519482DFE36DBCC5 *)L_9) == ((RuntimeObject*)(StateUpHandler_tC09A0C33E80BBF97F8E88D36519482DFE36DBCC5 *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// System.Void Valve.VR.SteamVR_Behaviour_Boolean::remove_onPressUpEvent(Valve.VR.SteamVR_Behaviour_Boolean_StateUpHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_Boolean_remove_onPressUpEvent_mD752BBBB265F23E7902EB4BAFC468FACE9478695 (SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 * __this, StateUpHandler_tC09A0C33E80BBF97F8E88D36519482DFE36DBCC5 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Boolean_remove_onPressUpEvent_mD752BBBB265F23E7902EB4BAFC468FACE9478695_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	StateUpHandler_tC09A0C33E80BBF97F8E88D36519482DFE36DBCC5 * V_0 = NULL;
	StateUpHandler_tC09A0C33E80BBF97F8E88D36519482DFE36DBCC5 * V_1 = NULL;
	StateUpHandler_tC09A0C33E80BBF97F8E88D36519482DFE36DBCC5 * V_2 = NULL;
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Behaviour_Boolean_remove_onPressUpEvent_mD752BBBB265F23E7902EB4BAFC468FACE9478695_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		StateUpHandler_tC09A0C33E80BBF97F8E88D36519482DFE36DBCC5 * L_0 = __this->get_onPressUpEvent_15();
		V_0 = L_0;
	}

IL_0007:
	{
		CHECK_PAUSE_POINT;
		StateUpHandler_tC09A0C33E80BBF97F8E88D36519482DFE36DBCC5 * L_1 = V_0;
		V_1 = L_1;
		StateUpHandler_tC09A0C33E80BBF97F8E88D36519482DFE36DBCC5 * L_2 = V_1;
		StateUpHandler_tC09A0C33E80BBF97F8E88D36519482DFE36DBCC5 * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Remove_m0B0DB7D1B3AF96B71AFAA72BA0EFE32FBBC2932D(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((StateUpHandler_tC09A0C33E80BBF97F8E88D36519482DFE36DBCC5 *)CastclassSealed((RuntimeObject*)L_4, StateUpHandler_tC09A0C33E80BBF97F8E88D36519482DFE36DBCC5_il2cpp_TypeInfo_var));
		StateUpHandler_tC09A0C33E80BBF97F8E88D36519482DFE36DBCC5 ** L_5 = __this->get_address_of_onPressUpEvent_15();
		StateUpHandler_tC09A0C33E80BBF97F8E88D36519482DFE36DBCC5 * L_6 = V_2;
		StateUpHandler_tC09A0C33E80BBF97F8E88D36519482DFE36DBCC5 * L_7 = V_1;
		StateUpHandler_tC09A0C33E80BBF97F8E88D36519482DFE36DBCC5 * L_8 = InterlockedCompareExchangeImpl<StateUpHandler_tC09A0C33E80BBF97F8E88D36519482DFE36DBCC5 *>((StateUpHandler_tC09A0C33E80BBF97F8E88D36519482DFE36DBCC5 **)L_5, L_6, L_7);
		V_0 = L_8;
		StateUpHandler_tC09A0C33E80BBF97F8E88D36519482DFE36DBCC5 * L_9 = V_0;
		StateUpHandler_tC09A0C33E80BBF97F8E88D36519482DFE36DBCC5 * L_10 = V_1;
		if ((!(((RuntimeObject*)(StateUpHandler_tC09A0C33E80BBF97F8E88D36519482DFE36DBCC5 *)L_9) == ((RuntimeObject*)(StateUpHandler_tC09A0C33E80BBF97F8E88D36519482DFE36DBCC5 *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// System.Boolean Valve.VR.SteamVR_Behaviour_Boolean::get_isActive()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Behaviour_Boolean_get_isActive_m457796E8C22B2F4836F7A7ED4B815B4B6536527E (SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Boolean_get_isActive_m457796E8C22B2F4836F7A7ED4B815B4B6536527E_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Behaviour_Boolean_get_isActive_m457796E8C22B2F4836F7A7ED4B815B4B6536527E_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9042));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 9043));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9044));
		// public bool isActive { get { return booleanAction[inputSource].active; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9045));
		SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 * L_0 = __this->get_booleanAction_4();
		int32_t L_1 = __this->get_inputSource_5();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9047));
		NullCheck(L_0);
		SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB * L_2 = VirtFuncInvoker1< SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB *, int32_t >::Invoke(36 /* SourceElement Valve.VR.SteamVR_Action`2<Valve.VR.SteamVR_Action_Boolean_Source_Map,Valve.VR.SteamVR_Action_Boolean_Source>::get_Item(Valve.VR.SteamVR_Input_Sources) */, L_0, L_1);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9047));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9048));
		NullCheck(L_2);
		bool L_3 = VirtFuncInvoker0< bool >::Invoke(12 /* System.Boolean Valve.VR.SteamVR_Action_Source::get_active() */, L_2);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9048));
		V_0 = L_3;
		goto IL_001a;
	}

IL_001a:
	{
		// public bool isActive { get { return booleanAction[inputSource].active; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9046));
		bool L_4 = V_0;
		return L_4;
	}
}
// Valve.VR.SteamVR_ActionSet Valve.VR.SteamVR_Behaviour_Boolean::get_actionSet()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * SteamVR_Behaviour_Boolean_get_actionSet_m21C301CC7CE117FB00409868FC3B047494C72E53 (SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Boolean_get_actionSet_m21C301CC7CE117FB00409868FC3B047494C72E53_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * V_1 = NULL;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Behaviour_Boolean_get_actionSet_m21C301CC7CE117FB00409868FC3B047494C72E53_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9049));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 9050));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9051));
		// public SteamVR_ActionSet actionSet { get { if (booleanAction != null) return booleanAction.actionSet; else return null; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9052));
		SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 * L_0 = __this->get_booleanAction_4();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9057));
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734_il2cpp_TypeInfo_var);
		bool L_1 = SteamVR_Action_op_Inequality_m7114B6E3669F8C55CD3B5E4EC3A897648CBD0F8A(L_0, (SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9057));
		V_0 = L_1;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9053));
		bool L_2 = V_0;
		if (!L_2)
		{
			goto IL_001f;
		}
	}
	{
		// public SteamVR_ActionSet actionSet { get { if (booleanAction != null) return booleanAction.actionSet; else return null; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9054));
		SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 * L_3 = __this->get_booleanAction_4();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9058));
		NullCheck(L_3);
		SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * L_4 = VirtFuncInvoker0< SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * >::Invoke(19 /* Valve.VR.SteamVR_ActionSet Valve.VR.SteamVR_Action::get_actionSet() */, L_3);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9058));
		V_1 = L_4;
		goto IL_0023;
	}

IL_001f:
	{
		// public SteamVR_ActionSet actionSet { get { if (booleanAction != null) return booleanAction.actionSet; else return null; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9055));
		V_1 = (SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 *)NULL;
		goto IL_0023;
	}

IL_0023:
	{
		// public SteamVR_ActionSet actionSet { get { if (booleanAction != null) return booleanAction.actionSet; else return null; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9056));
		SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * L_5 = V_1;
		return L_5;
	}
}
// System.Void Valve.VR.SteamVR_Behaviour_Boolean::OnEnable()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_Boolean_OnEnable_m9453FBB03A4B1E4AF7D304679626C37543BFEF3D (SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Boolean_OnEnable_m9453FBB03A4B1E4AF7D304679626C37543BFEF3D_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Behaviour_Boolean_OnEnable_m9453FBB03A4B1E4AF7D304679626C37543BFEF3D_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9059));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 9060));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9061));
		// if (booleanAction == null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9062));
		SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 * L_0 = __this->get_booleanAction_4();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9069));
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734_il2cpp_TypeInfo_var);
		bool L_1 = SteamVR_Action_op_Equality_m16F1109154021CF7DC424B937A8AA5FC34463EE2(L_0, (SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9069));
		V_0 = L_1;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9063));
		bool L_2 = V_0;
		if (!L_2)
		{
			goto IL_0020;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9064));
		// Debug.LogError("[SteamVR] Boolean action not set.", this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9065));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9070));
		IL2CPP_RUNTIME_CLASS_INIT(Debug_t7B5FCB117E2FD63B6838BC52821B252E2BFB61C4_il2cpp_TypeInfo_var);
		Debug_LogError_m97139CB2EE76D5CD8308C1AD0499A5F163FC7F51(_stringLiteral75490E2CC47551562599B8A6004682CA5D470BD7, __this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9070));
		// return;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9066));
		goto IL_0027;
	}

IL_0020:
	{
		// AddHandlers();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9067));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9071));
		SteamVR_Behaviour_Boolean_AddHandlers_m177D600059EE1F3A255ABE94B86940647FB8A61A(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9071));
	}

IL_0027:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9068));
		return;
	}
}
// System.Void Valve.VR.SteamVR_Behaviour_Boolean::OnDisable()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_Boolean_OnDisable_mB213D24CEF50B25EDB9FEFB337609352A359BCAE (SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Boolean_OnDisable_mB213D24CEF50B25EDB9FEFB337609352A359BCAE_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Behaviour_Boolean_OnDisable_mB213D24CEF50B25EDB9FEFB337609352A359BCAE_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9072));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 9073));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9074));
		// RemoveHandlers();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9075));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9077));
		SteamVR_Behaviour_Boolean_RemoveHandlers_m8E4317760BDED9334828696FBA2D1557BF69C5DD(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9077));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9076));
		return;
	}
}
// System.Void Valve.VR.SteamVR_Behaviour_Boolean::AddHandlers()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_Boolean_AddHandlers_m177D600059EE1F3A255ABE94B86940647FB8A61A (SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Boolean_AddHandlers_m177D600059EE1F3A255ABE94B86940647FB8A61A_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Behaviour_Boolean_AddHandlers_m177D600059EE1F3A255ABE94B86940647FB8A61A_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9078));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 9079));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9080));
		// booleanAction[inputSource].onUpdate += SteamVR_Behaviour_Boolean_OnUpdate;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9081));
		SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 * L_0 = __this->get_booleanAction_4();
		int32_t L_1 = __this->get_inputSource_5();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9087));
		NullCheck(L_0);
		SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB * L_2 = VirtFuncInvoker1< SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB *, int32_t >::Invoke(36 /* SourceElement Valve.VR.SteamVR_Action`2<Valve.VR.SteamVR_Action_Boolean_Source_Map,Valve.VR.SteamVR_Action_Boolean_Source>::get_Item(Valve.VR.SteamVR_Input_Sources) */, L_0, L_1);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9087));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9088));
		UpdateHandler_tC5DA62D5AA34319AAE9E044A4D98A942E9F7738B * L_3 = (UpdateHandler_tC5DA62D5AA34319AAE9E044A4D98A942E9F7738B *)il2cpp_codegen_object_new(UpdateHandler_tC5DA62D5AA34319AAE9E044A4D98A942E9F7738B_il2cpp_TypeInfo_var);
		UpdateHandler__ctor_m68B2F5666A6F84AB256BDC9A1A0909290717ADB9(L_3, __this, (intptr_t)((intptr_t)SteamVR_Behaviour_Boolean_SteamVR_Behaviour_Boolean_OnUpdate_m8C821C2C8885633A23C1CC1DDBB66001F12986C9_RuntimeMethod_var), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9088));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9089));
		NullCheck(L_2);
		SteamVR_Action_Boolean_Source_add_onUpdate_mF15B2B618C21D657E51369504C1D1D69246E168C(L_2, L_3, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9089));
		// booleanAction[inputSource].onChange += SteamVR_Behaviour_Boolean_OnChange;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9082));
		SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 * L_4 = __this->get_booleanAction_4();
		int32_t L_5 = __this->get_inputSource_5();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9090));
		NullCheck(L_4);
		SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB * L_6 = VirtFuncInvoker1< SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB *, int32_t >::Invoke(36 /* SourceElement Valve.VR.SteamVR_Action`2<Valve.VR.SteamVR_Action_Boolean_Source_Map,Valve.VR.SteamVR_Action_Boolean_Source>::get_Item(Valve.VR.SteamVR_Input_Sources) */, L_4, L_5);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9090));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9091));
		ChangeHandler_tBE955A4C204CE64CDAD63911BA738EC2873DF7B0 * L_7 = (ChangeHandler_tBE955A4C204CE64CDAD63911BA738EC2873DF7B0 *)il2cpp_codegen_object_new(ChangeHandler_tBE955A4C204CE64CDAD63911BA738EC2873DF7B0_il2cpp_TypeInfo_var);
		ChangeHandler__ctor_mBD6FBA8BF779984B89C666C8C1210BA3C61F6B3B(L_7, __this, (intptr_t)((intptr_t)SteamVR_Behaviour_Boolean_SteamVR_Behaviour_Boolean_OnChange_mA8A5E8B564562CF67EE15E1D36446D2440A4E25E_RuntimeMethod_var), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9091));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9092));
		NullCheck(L_6);
		SteamVR_Action_Boolean_Source_add_onChange_m68CCE8BD8761AD8F33C83F871B2B75B5E908755D(L_6, L_7, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9092));
		// booleanAction[inputSource].onState += SteamVR_Behaviour_Boolean_OnState;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9083));
		SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 * L_8 = __this->get_booleanAction_4();
		int32_t L_9 = __this->get_inputSource_5();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9093));
		NullCheck(L_8);
		SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB * L_10 = VirtFuncInvoker1< SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB *, int32_t >::Invoke(36 /* SourceElement Valve.VR.SteamVR_Action`2<Valve.VR.SteamVR_Action_Boolean_Source_Map,Valve.VR.SteamVR_Action_Boolean_Source>::get_Item(Valve.VR.SteamVR_Input_Sources) */, L_8, L_9);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9093));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9094));
		StateHandler_tBBEC523C11F1EC99BF356128B427327EF349EAFA * L_11 = (StateHandler_tBBEC523C11F1EC99BF356128B427327EF349EAFA *)il2cpp_codegen_object_new(StateHandler_tBBEC523C11F1EC99BF356128B427327EF349EAFA_il2cpp_TypeInfo_var);
		StateHandler__ctor_mD536193D0C88821B66B667A03E4710142A33E112(L_11, __this, (intptr_t)((intptr_t)SteamVR_Behaviour_Boolean_SteamVR_Behaviour_Boolean_OnState_m1780B4C3A2C9559A4EB4B1AEC32FE99BDCC370A3_RuntimeMethod_var), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9094));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9095));
		NullCheck(L_10);
		SteamVR_Action_Boolean_Source_add_onState_mCA5E2D446D6F926BE045288CA0237D76F0080B68(L_10, L_11, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9095));
		// booleanAction[inputSource].onStateDown += SteamVR_Behaviour_Boolean_OnStateDown;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9084));
		SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 * L_12 = __this->get_booleanAction_4();
		int32_t L_13 = __this->get_inputSource_5();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9096));
		NullCheck(L_12);
		SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB * L_14 = VirtFuncInvoker1< SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB *, int32_t >::Invoke(36 /* SourceElement Valve.VR.SteamVR_Action`2<Valve.VR.SteamVR_Action_Boolean_Source_Map,Valve.VR.SteamVR_Action_Boolean_Source>::get_Item(Valve.VR.SteamVR_Input_Sources) */, L_12, L_13);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9096));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9097));
		StateDownHandler_t7D29100BA5CD0DFB8B7AE4388E1AB7AF114F4464 * L_15 = (StateDownHandler_t7D29100BA5CD0DFB8B7AE4388E1AB7AF114F4464 *)il2cpp_codegen_object_new(StateDownHandler_t7D29100BA5CD0DFB8B7AE4388E1AB7AF114F4464_il2cpp_TypeInfo_var);
		StateDownHandler__ctor_m54362BB217B5251C8EB76A5FEED10FF3DF9BFBA3(L_15, __this, (intptr_t)((intptr_t)SteamVR_Behaviour_Boolean_SteamVR_Behaviour_Boolean_OnStateDown_mCE635F55BFC94B8E928AE2C4B64CF1DD142FF81C_RuntimeMethod_var), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9097));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9098));
		NullCheck(L_14);
		SteamVR_Action_Boolean_Source_add_onStateDown_mA4DDBD321D3341520E4328691634D28662EC1A6C(L_14, L_15, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9098));
		// booleanAction[inputSource].onStateUp += SteamVR_Behaviour_Boolean_OnStateUp;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9085));
		SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 * L_16 = __this->get_booleanAction_4();
		int32_t L_17 = __this->get_inputSource_5();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9099));
		NullCheck(L_16);
		SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB * L_18 = VirtFuncInvoker1< SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB *, int32_t >::Invoke(36 /* SourceElement Valve.VR.SteamVR_Action`2<Valve.VR.SteamVR_Action_Boolean_Source_Map,Valve.VR.SteamVR_Action_Boolean_Source>::get_Item(Valve.VR.SteamVR_Input_Sources) */, L_16, L_17);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9099));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9100));
		StateUpHandler_t74A1CE14E1749B62B14281BCFA09CB750D7A5ED8 * L_19 = (StateUpHandler_t74A1CE14E1749B62B14281BCFA09CB750D7A5ED8 *)il2cpp_codegen_object_new(StateUpHandler_t74A1CE14E1749B62B14281BCFA09CB750D7A5ED8_il2cpp_TypeInfo_var);
		StateUpHandler__ctor_m9EF02EC85AA50B176C35BD412710624F3E2AE285(L_19, __this, (intptr_t)((intptr_t)SteamVR_Behaviour_Boolean_SteamVR_Behaviour_Boolean_OnStateUp_m4A9487A3FA04E03EC09144B04B1510D5719DD349_RuntimeMethod_var), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9100));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9101));
		NullCheck(L_18);
		SteamVR_Action_Boolean_Source_add_onStateUp_m6E3701968DB62C8658FE77B47301FCC539F0A846(L_18, L_19, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9101));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9086));
		return;
	}
}
// System.Void Valve.VR.SteamVR_Behaviour_Boolean::RemoveHandlers()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_Boolean_RemoveHandlers_m8E4317760BDED9334828696FBA2D1557BF69C5DD (SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Boolean_RemoveHandlers_m8E4317760BDED9334828696FBA2D1557BF69C5DD_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Behaviour_Boolean_RemoveHandlers_m8E4317760BDED9334828696FBA2D1557BF69C5DD_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9102));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 9103));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9104));
		// if (booleanAction != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9105));
		SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 * L_0 = __this->get_booleanAction_4();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9115));
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734_il2cpp_TypeInfo_var);
		bool L_1 = SteamVR_Action_op_Inequality_m7114B6E3669F8C55CD3B5E4EC3A897648CBD0F8A(L_0, (SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9115));
		V_0 = L_1;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9106));
		bool L_2 = V_0;
		if (!L_2)
		{
			goto IL_00c5;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9107));
		// booleanAction[inputSource].onUpdate -= SteamVR_Behaviour_Boolean_OnUpdate;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9108));
		SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 * L_3 = __this->get_booleanAction_4();
		int32_t L_4 = __this->get_inputSource_5();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9116));
		NullCheck(L_3);
		SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB * L_5 = VirtFuncInvoker1< SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB *, int32_t >::Invoke(36 /* SourceElement Valve.VR.SteamVR_Action`2<Valve.VR.SteamVR_Action_Boolean_Source_Map,Valve.VR.SteamVR_Action_Boolean_Source>::get_Item(Valve.VR.SteamVR_Input_Sources) */, L_3, L_4);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9116));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9117));
		UpdateHandler_tC5DA62D5AA34319AAE9E044A4D98A942E9F7738B * L_6 = (UpdateHandler_tC5DA62D5AA34319AAE9E044A4D98A942E9F7738B *)il2cpp_codegen_object_new(UpdateHandler_tC5DA62D5AA34319AAE9E044A4D98A942E9F7738B_il2cpp_TypeInfo_var);
		UpdateHandler__ctor_m68B2F5666A6F84AB256BDC9A1A0909290717ADB9(L_6, __this, (intptr_t)((intptr_t)SteamVR_Behaviour_Boolean_SteamVR_Behaviour_Boolean_OnUpdate_m8C821C2C8885633A23C1CC1DDBB66001F12986C9_RuntimeMethod_var), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9117));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9118));
		NullCheck(L_5);
		SteamVR_Action_Boolean_Source_remove_onUpdate_m4840B62E8474743295BA681B3BD382C8CC02D541(L_5, L_6, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9118));
		// booleanAction[inputSource].onChange -= SteamVR_Behaviour_Boolean_OnChange;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9109));
		SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 * L_7 = __this->get_booleanAction_4();
		int32_t L_8 = __this->get_inputSource_5();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9119));
		NullCheck(L_7);
		SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB * L_9 = VirtFuncInvoker1< SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB *, int32_t >::Invoke(36 /* SourceElement Valve.VR.SteamVR_Action`2<Valve.VR.SteamVR_Action_Boolean_Source_Map,Valve.VR.SteamVR_Action_Boolean_Source>::get_Item(Valve.VR.SteamVR_Input_Sources) */, L_7, L_8);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9119));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9120));
		ChangeHandler_tBE955A4C204CE64CDAD63911BA738EC2873DF7B0 * L_10 = (ChangeHandler_tBE955A4C204CE64CDAD63911BA738EC2873DF7B0 *)il2cpp_codegen_object_new(ChangeHandler_tBE955A4C204CE64CDAD63911BA738EC2873DF7B0_il2cpp_TypeInfo_var);
		ChangeHandler__ctor_mBD6FBA8BF779984B89C666C8C1210BA3C61F6B3B(L_10, __this, (intptr_t)((intptr_t)SteamVR_Behaviour_Boolean_SteamVR_Behaviour_Boolean_OnChange_mA8A5E8B564562CF67EE15E1D36446D2440A4E25E_RuntimeMethod_var), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9120));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9121));
		NullCheck(L_9);
		SteamVR_Action_Boolean_Source_remove_onChange_m4AE6619441A7345BB0F2478D3CC7BB3A2989ACDD(L_9, L_10, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9121));
		// booleanAction[inputSource].onState -= SteamVR_Behaviour_Boolean_OnState;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9110));
		SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 * L_11 = __this->get_booleanAction_4();
		int32_t L_12 = __this->get_inputSource_5();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9122));
		NullCheck(L_11);
		SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB * L_13 = VirtFuncInvoker1< SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB *, int32_t >::Invoke(36 /* SourceElement Valve.VR.SteamVR_Action`2<Valve.VR.SteamVR_Action_Boolean_Source_Map,Valve.VR.SteamVR_Action_Boolean_Source>::get_Item(Valve.VR.SteamVR_Input_Sources) */, L_11, L_12);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9122));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9123));
		StateHandler_tBBEC523C11F1EC99BF356128B427327EF349EAFA * L_14 = (StateHandler_tBBEC523C11F1EC99BF356128B427327EF349EAFA *)il2cpp_codegen_object_new(StateHandler_tBBEC523C11F1EC99BF356128B427327EF349EAFA_il2cpp_TypeInfo_var);
		StateHandler__ctor_mD536193D0C88821B66B667A03E4710142A33E112(L_14, __this, (intptr_t)((intptr_t)SteamVR_Behaviour_Boolean_SteamVR_Behaviour_Boolean_OnState_m1780B4C3A2C9559A4EB4B1AEC32FE99BDCC370A3_RuntimeMethod_var), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9123));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9124));
		NullCheck(L_13);
		SteamVR_Action_Boolean_Source_remove_onState_m4B9CF1F2637CD3DAF1AAB3896E32D22808C0544D(L_13, L_14, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9124));
		// booleanAction[inputSource].onStateDown -= SteamVR_Behaviour_Boolean_OnStateDown;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9111));
		SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 * L_15 = __this->get_booleanAction_4();
		int32_t L_16 = __this->get_inputSource_5();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9125));
		NullCheck(L_15);
		SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB * L_17 = VirtFuncInvoker1< SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB *, int32_t >::Invoke(36 /* SourceElement Valve.VR.SteamVR_Action`2<Valve.VR.SteamVR_Action_Boolean_Source_Map,Valve.VR.SteamVR_Action_Boolean_Source>::get_Item(Valve.VR.SteamVR_Input_Sources) */, L_15, L_16);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9125));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9126));
		StateDownHandler_t7D29100BA5CD0DFB8B7AE4388E1AB7AF114F4464 * L_18 = (StateDownHandler_t7D29100BA5CD0DFB8B7AE4388E1AB7AF114F4464 *)il2cpp_codegen_object_new(StateDownHandler_t7D29100BA5CD0DFB8B7AE4388E1AB7AF114F4464_il2cpp_TypeInfo_var);
		StateDownHandler__ctor_m54362BB217B5251C8EB76A5FEED10FF3DF9BFBA3(L_18, __this, (intptr_t)((intptr_t)SteamVR_Behaviour_Boolean_SteamVR_Behaviour_Boolean_OnStateDown_mCE635F55BFC94B8E928AE2C4B64CF1DD142FF81C_RuntimeMethod_var), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9126));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9127));
		NullCheck(L_17);
		SteamVR_Action_Boolean_Source_remove_onStateDown_m1D3AB0790D7CAC19944B8C1D28D9C84946BD32F4(L_17, L_18, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9127));
		// booleanAction[inputSource].onStateUp -= SteamVR_Behaviour_Boolean_OnStateUp;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9112));
		SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 * L_19 = __this->get_booleanAction_4();
		int32_t L_20 = __this->get_inputSource_5();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9128));
		NullCheck(L_19);
		SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB * L_21 = VirtFuncInvoker1< SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB *, int32_t >::Invoke(36 /* SourceElement Valve.VR.SteamVR_Action`2<Valve.VR.SteamVR_Action_Boolean_Source_Map,Valve.VR.SteamVR_Action_Boolean_Source>::get_Item(Valve.VR.SteamVR_Input_Sources) */, L_19, L_20);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9128));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9129));
		StateUpHandler_t74A1CE14E1749B62B14281BCFA09CB750D7A5ED8 * L_22 = (StateUpHandler_t74A1CE14E1749B62B14281BCFA09CB750D7A5ED8 *)il2cpp_codegen_object_new(StateUpHandler_t74A1CE14E1749B62B14281BCFA09CB750D7A5ED8_il2cpp_TypeInfo_var);
		StateUpHandler__ctor_m9EF02EC85AA50B176C35BD412710624F3E2AE285(L_22, __this, (intptr_t)((intptr_t)SteamVR_Behaviour_Boolean_SteamVR_Behaviour_Boolean_OnStateUp_m4A9487A3FA04E03EC09144B04B1510D5719DD349_RuntimeMethod_var), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9129));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9130));
		NullCheck(L_21);
		SteamVR_Action_Boolean_Source_remove_onStateUp_mDA98D1C74F95507A5519AC2A3C95F3CA6BD7F229(L_21, L_22, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9130));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9113));
	}

IL_00c5:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9114));
		return;
	}
}
// System.Void Valve.VR.SteamVR_Behaviour_Boolean::SteamVR_Behaviour_Boolean_OnStateUp(Valve.VR.SteamVR_Action_Boolean,Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_Boolean_SteamVR_Behaviour_Boolean_OnStateUp_m4A9487A3FA04E03EC09144B04B1510D5719DD349 (SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 * __this, SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 * ___fromAction0, int32_t ___fromSource1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Boolean_SteamVR_Behaviour_Boolean_OnStateUp_m4A9487A3FA04E03EC09144B04B1510D5719DD349_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	bool V_1 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___fromAction0), (&___fromSource1));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Behaviour_Boolean_SteamVR_Behaviour_Boolean_OnStateUp_m4A9487A3FA04E03EC09144B04B1510D5719DD349_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9131));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 9132));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9133));
		// if (onPressUp != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9134));
		SteamVR_Behaviour_BooleanEvent_t96626CBD0A0BD84C51D1F9E03DE5BEBFF58A48E4 * L_0 = __this->get_onPressUp_14();
		V_0 = (bool)((!(((RuntimeObject*)(SteamVR_Behaviour_BooleanEvent_t96626CBD0A0BD84C51D1F9E03DE5BEBFF58A48E4 *)L_0) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9135));
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_001f;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9136));
		// onPressUp.Invoke(this, fromSource, false);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9137));
		SteamVR_Behaviour_BooleanEvent_t96626CBD0A0BD84C51D1F9E03DE5BEBFF58A48E4 * L_2 = __this->get_onPressUp_14();
		int32_t L_3 = ___fromSource1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9145));
		NullCheck(L_2);
		UnityEvent_3_Invoke_m2432FA3F355A924507DF754FDAC9C9FC49D2B993(L_2, __this, L_3, (bool)0, /*hidden argument*/UnityEvent_3_Invoke_m2432FA3F355A924507DF754FDAC9C9FC49D2B993_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9145));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9138));
	}

IL_001f:
	{
		// if (onPressUpEvent != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9139));
		StateUpHandler_tC09A0C33E80BBF97F8E88D36519482DFE36DBCC5 * L_4 = __this->get_onPressUpEvent_15();
		V_1 = (bool)((!(((RuntimeObject*)(StateUpHandler_tC09A0C33E80BBF97F8E88D36519482DFE36DBCC5 *)L_4) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9140));
		bool L_5 = V_1;
		if (!L_5)
		{
			goto IL_003c;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9141));
		// onPressUpEvent.Invoke(this, fromSource);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9142));
		StateUpHandler_tC09A0C33E80BBF97F8E88D36519482DFE36DBCC5 * L_6 = __this->get_onPressUpEvent_15();
		int32_t L_7 = ___fromSource1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9146));
		NullCheck(L_6);
		StateUpHandler_Invoke_m4390170909DAFE643E31003AB1A7ADAC79D37446(L_6, __this, L_7, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9146));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9143));
	}

IL_003c:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9144));
		return;
	}
}
// System.Void Valve.VR.SteamVR_Behaviour_Boolean::SteamVR_Behaviour_Boolean_OnStateDown(Valve.VR.SteamVR_Action_Boolean,Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_Boolean_SteamVR_Behaviour_Boolean_OnStateDown_mCE635F55BFC94B8E928AE2C4B64CF1DD142FF81C (SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 * __this, SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 * ___fromAction0, int32_t ___fromSource1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Boolean_SteamVR_Behaviour_Boolean_OnStateDown_mCE635F55BFC94B8E928AE2C4B64CF1DD142FF81C_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	bool V_1 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___fromAction0), (&___fromSource1));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Behaviour_Boolean_SteamVR_Behaviour_Boolean_OnStateDown_mCE635F55BFC94B8E928AE2C4B64CF1DD142FF81C_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9147));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 9148));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9149));
		// if (onPressDown != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9150));
		SteamVR_Behaviour_BooleanEvent_t96626CBD0A0BD84C51D1F9E03DE5BEBFF58A48E4 * L_0 = __this->get_onPressDown_12();
		V_0 = (bool)((!(((RuntimeObject*)(SteamVR_Behaviour_BooleanEvent_t96626CBD0A0BD84C51D1F9E03DE5BEBFF58A48E4 *)L_0) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9151));
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_001f;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9152));
		// onPressDown.Invoke(this, fromSource, true);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9153));
		SteamVR_Behaviour_BooleanEvent_t96626CBD0A0BD84C51D1F9E03DE5BEBFF58A48E4 * L_2 = __this->get_onPressDown_12();
		int32_t L_3 = ___fromSource1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9161));
		NullCheck(L_2);
		UnityEvent_3_Invoke_m2432FA3F355A924507DF754FDAC9C9FC49D2B993(L_2, __this, L_3, (bool)1, /*hidden argument*/UnityEvent_3_Invoke_m2432FA3F355A924507DF754FDAC9C9FC49D2B993_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9161));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9154));
	}

IL_001f:
	{
		// if (onPressDownEvent != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9155));
		StateDownHandler_tFF77368F427C4FE6164A97B238F944123AA8FE24 * L_4 = __this->get_onPressDownEvent_13();
		V_1 = (bool)((!(((RuntimeObject*)(StateDownHandler_tFF77368F427C4FE6164A97B238F944123AA8FE24 *)L_4) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9156));
		bool L_5 = V_1;
		if (!L_5)
		{
			goto IL_003c;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9157));
		// onPressDownEvent.Invoke(this, fromSource);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9158));
		StateDownHandler_tFF77368F427C4FE6164A97B238F944123AA8FE24 * L_6 = __this->get_onPressDownEvent_13();
		int32_t L_7 = ___fromSource1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9162));
		NullCheck(L_6);
		StateDownHandler_Invoke_mCE0917DC4FC52D1A54846EAC994540AD19B9D893(L_6, __this, L_7, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9162));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9159));
	}

IL_003c:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9160));
		return;
	}
}
// System.Void Valve.VR.SteamVR_Behaviour_Boolean::SteamVR_Behaviour_Boolean_OnState(Valve.VR.SteamVR_Action_Boolean,Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_Boolean_SteamVR_Behaviour_Boolean_OnState_m1780B4C3A2C9559A4EB4B1AEC32FE99BDCC370A3 (SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 * __this, SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 * ___fromAction0, int32_t ___fromSource1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Boolean_SteamVR_Behaviour_Boolean_OnState_m1780B4C3A2C9559A4EB4B1AEC32FE99BDCC370A3_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	bool V_1 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___fromAction0), (&___fromSource1));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Behaviour_Boolean_SteamVR_Behaviour_Boolean_OnState_m1780B4C3A2C9559A4EB4B1AEC32FE99BDCC370A3_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9163));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 9164));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9165));
		// if (onPress != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9166));
		SteamVR_Behaviour_BooleanEvent_t96626CBD0A0BD84C51D1F9E03DE5BEBFF58A48E4 * L_0 = __this->get_onPress_10();
		V_0 = (bool)((!(((RuntimeObject*)(SteamVR_Behaviour_BooleanEvent_t96626CBD0A0BD84C51D1F9E03DE5BEBFF58A48E4 *)L_0) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9167));
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_001f;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9168));
		// onPress.Invoke(this, fromSource, true);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9169));
		SteamVR_Behaviour_BooleanEvent_t96626CBD0A0BD84C51D1F9E03DE5BEBFF58A48E4 * L_2 = __this->get_onPress_10();
		int32_t L_3 = ___fromSource1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9177));
		NullCheck(L_2);
		UnityEvent_3_Invoke_m2432FA3F355A924507DF754FDAC9C9FC49D2B993(L_2, __this, L_3, (bool)1, /*hidden argument*/UnityEvent_3_Invoke_m2432FA3F355A924507DF754FDAC9C9FC49D2B993_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9177));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9170));
	}

IL_001f:
	{
		// if (onPressEvent != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9171));
		StateHandler_tC57B51755B81869515107A3BE4BC3865F974190D * L_4 = __this->get_onPressEvent_11();
		V_1 = (bool)((!(((RuntimeObject*)(StateHandler_tC57B51755B81869515107A3BE4BC3865F974190D *)L_4) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9172));
		bool L_5 = V_1;
		if (!L_5)
		{
			goto IL_003c;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9173));
		// onPressEvent.Invoke(this, fromSource);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9174));
		StateHandler_tC57B51755B81869515107A3BE4BC3865F974190D * L_6 = __this->get_onPressEvent_11();
		int32_t L_7 = ___fromSource1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9178));
		NullCheck(L_6);
		StateHandler_Invoke_m77C883A72A64422A49098DAA5999A064E91E45CE(L_6, __this, L_7, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9178));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9175));
	}

IL_003c:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9176));
		return;
	}
}
// System.Void Valve.VR.SteamVR_Behaviour_Boolean::SteamVR_Behaviour_Boolean_OnUpdate(Valve.VR.SteamVR_Action_Boolean,Valve.VR.SteamVR_Input_Sources,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_Boolean_SteamVR_Behaviour_Boolean_OnUpdate_m8C821C2C8885633A23C1CC1DDBB66001F12986C9 (SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 * __this, SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 * ___fromAction0, int32_t ___fromSource1, bool ___newState2, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Boolean_SteamVR_Behaviour_Boolean_OnUpdate_m8C821C2C8885633A23C1CC1DDBB66001F12986C9_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	bool V_1 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___fromAction0), (&___fromSource1), (&___newState2));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Behaviour_Boolean_SteamVR_Behaviour_Boolean_OnUpdate_m8C821C2C8885633A23C1CC1DDBB66001F12986C9_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9179));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 9180));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9181));
		// if (onUpdate != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9182));
		SteamVR_Behaviour_BooleanEvent_t96626CBD0A0BD84C51D1F9E03DE5BEBFF58A48E4 * L_0 = __this->get_onUpdate_8();
		V_0 = (bool)((!(((RuntimeObject*)(SteamVR_Behaviour_BooleanEvent_t96626CBD0A0BD84C51D1F9E03DE5BEBFF58A48E4 *)L_0) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9183));
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_001f;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9184));
		// onUpdate.Invoke(this, fromSource, newState);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9185));
		SteamVR_Behaviour_BooleanEvent_t96626CBD0A0BD84C51D1F9E03DE5BEBFF58A48E4 * L_2 = __this->get_onUpdate_8();
		int32_t L_3 = ___fromSource1;
		bool L_4 = ___newState2;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9193));
		NullCheck(L_2);
		UnityEvent_3_Invoke_m2432FA3F355A924507DF754FDAC9C9FC49D2B993(L_2, __this, L_3, L_4, /*hidden argument*/UnityEvent_3_Invoke_m2432FA3F355A924507DF754FDAC9C9FC49D2B993_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9193));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9186));
	}

IL_001f:
	{
		// if (onUpdateEvent != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9187));
		UpdateHandler_t9FC31A405C9C47120C5307368335AD9F708511D1 * L_5 = __this->get_onUpdateEvent_9();
		V_1 = (bool)((!(((RuntimeObject*)(UpdateHandler_t9FC31A405C9C47120C5307368335AD9F708511D1 *)L_5) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9188));
		bool L_6 = V_1;
		if (!L_6)
		{
			goto IL_003d;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9189));
		// onUpdateEvent.Invoke(this, fromSource, newState);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9190));
		UpdateHandler_t9FC31A405C9C47120C5307368335AD9F708511D1 * L_7 = __this->get_onUpdateEvent_9();
		int32_t L_8 = ___fromSource1;
		bool L_9 = ___newState2;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9194));
		NullCheck(L_7);
		UpdateHandler_Invoke_m423C3C8C6E4BBCE15708583137DF06DC92508FEB(L_7, __this, L_8, L_9, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9194));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9191));
	}

IL_003d:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9192));
		return;
	}
}
// System.Void Valve.VR.SteamVR_Behaviour_Boolean::SteamVR_Behaviour_Boolean_OnChange(Valve.VR.SteamVR_Action_Boolean,Valve.VR.SteamVR_Input_Sources,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_Boolean_SteamVR_Behaviour_Boolean_OnChange_mA8A5E8B564562CF67EE15E1D36446D2440A4E25E (SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 * __this, SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 * ___fromAction0, int32_t ___fromSource1, bool ___newState2, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Boolean_SteamVR_Behaviour_Boolean_OnChange_mA8A5E8B564562CF67EE15E1D36446D2440A4E25E_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	bool V_1 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___fromAction0), (&___fromSource1), (&___newState2));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Behaviour_Boolean_SteamVR_Behaviour_Boolean_OnChange_mA8A5E8B564562CF67EE15E1D36446D2440A4E25E_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9195));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 9196));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9197));
		// if (onChange != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9198));
		SteamVR_Behaviour_BooleanEvent_t96626CBD0A0BD84C51D1F9E03DE5BEBFF58A48E4 * L_0 = __this->get_onChange_6();
		V_0 = (bool)((!(((RuntimeObject*)(SteamVR_Behaviour_BooleanEvent_t96626CBD0A0BD84C51D1F9E03DE5BEBFF58A48E4 *)L_0) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9199));
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_001f;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9200));
		// onChange.Invoke(this, fromSource, newState);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9201));
		SteamVR_Behaviour_BooleanEvent_t96626CBD0A0BD84C51D1F9E03DE5BEBFF58A48E4 * L_2 = __this->get_onChange_6();
		int32_t L_3 = ___fromSource1;
		bool L_4 = ___newState2;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9209));
		NullCheck(L_2);
		UnityEvent_3_Invoke_m2432FA3F355A924507DF754FDAC9C9FC49D2B993(L_2, __this, L_3, L_4, /*hidden argument*/UnityEvent_3_Invoke_m2432FA3F355A924507DF754FDAC9C9FC49D2B993_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9209));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9202));
	}

IL_001f:
	{
		// if (onChangeEvent != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9203));
		ChangeHandler_tADA56232D143B2D18BA3D6F2A9B5CE2AC637CBB6 * L_5 = __this->get_onChangeEvent_7();
		V_1 = (bool)((!(((RuntimeObject*)(ChangeHandler_tADA56232D143B2D18BA3D6F2A9B5CE2AC637CBB6 *)L_5) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9204));
		bool L_6 = V_1;
		if (!L_6)
		{
			goto IL_003d;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9205));
		// onChangeEvent.Invoke(this, fromSource, newState);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9206));
		ChangeHandler_tADA56232D143B2D18BA3D6F2A9B5CE2AC637CBB6 * L_7 = __this->get_onChangeEvent_7();
		int32_t L_8 = ___fromSource1;
		bool L_9 = ___newState2;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9210));
		NullCheck(L_7);
		ChangeHandler_Invoke_mF3CFD18B23248FD7BED819808EAE34E44E54755B(L_7, __this, L_8, L_9, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9210));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9207));
	}

IL_003d:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9208));
		return;
	}
}
// System.String Valve.VR.SteamVR_Behaviour_Boolean::GetLocalizedName(Valve.VR.EVRInputStringBits[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR String_t* SteamVR_Behaviour_Boolean_GetLocalizedName_mE96B914202186EA4C474A4DDC2EA2792DB46CBDD (SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 * __this, EVRInputStringBitsU5BU5D_t9F9E9B47CD745CAAB4F8EDC305D84DDF9E5BE511* ___localizedParts0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Boolean_GetLocalizedName_mE96B914202186EA4C474A4DDC2EA2792DB46CBDD_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	String_t* V_1 = NULL;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___localizedParts0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Behaviour_Boolean_GetLocalizedName_mE96B914202186EA4C474A4DDC2EA2792DB46CBDD_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9211));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 9212));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9213));
		// if (booleanAction != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9214));
		SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 * L_0 = __this->get_booleanAction_4();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9219));
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734_il2cpp_TypeInfo_var);
		bool L_1 = SteamVR_Action_op_Inequality_m7114B6E3669F8C55CD3B5E4EC3A897648CBD0F8A(L_0, (SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9219));
		V_0 = L_1;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9215));
		bool L_2 = V_0;
		if (!L_2)
		{
			goto IL_0026;
		}
	}
	{
		// return booleanAction.GetLocalizedOriginPart(inputSource, localizedParts);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9216));
		SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 * L_3 = __this->get_booleanAction_4();
		int32_t L_4 = __this->get_inputSource_5();
		EVRInputStringBitsU5BU5D_t9F9E9B47CD745CAAB4F8EDC305D84DDF9E5BE511* L_5 = ___localizedParts0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9220));
		NullCheck(L_3);
		String_t* L_6 = SteamVR_Action_In_2_GetLocalizedOriginPart_m54923EB664FBAAD29EFCB26E969517F74408FF6C(L_3, L_4, L_5, /*hidden argument*/SteamVR_Action_In_2_GetLocalizedOriginPart_m54923EB664FBAAD29EFCB26E969517F74408FF6C_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9220));
		V_1 = L_6;
		goto IL_002a;
	}

IL_0026:
	{
		// return null;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9217));
		V_1 = (String_t*)NULL;
		goto IL_002a;
	}

IL_002a:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9218));
		String_t* L_7 = V_1;
		return L_7;
	}
}
// System.Void Valve.VR.SteamVR_Behaviour_Boolean::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_Boolean__ctor_m7DA42323297A7153BC4F968813D4071E6E751977 (SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Boolean__ctor_m7DA42323297A7153BC4F968813D4071E6E751977_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Behaviour_Boolean__ctor_m7DA42323297A7153BC4F968813D4071E6E751977_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		MonoBehaviour__ctor_mEAEC84B222C60319D593E456D769B3311DFCEF97(__this, /*hidden argument*/NULL);
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Valve.VR.SteamVR_Behaviour_Boolean_ActiveChangeHandler::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ActiveChangeHandler__ctor_mDCF6846F97070FBC95F10EE1238244E4D946A4B0 (ActiveChangeHandler_t299D2C23766385EE91DB72700CF21326F803F453 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Void Valve.VR.SteamVR_Behaviour_Boolean_ActiveChangeHandler::Invoke(Valve.VR.SteamVR_Behaviour_Boolean,Valve.VR.SteamVR_Input_Sources,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ActiveChangeHandler_Invoke_m042AFC3CCF3820EF4B1C793233762F0425631346 (ActiveChangeHandler_t299D2C23766385EE91DB72700CF21326F803F453 * __this, SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 * ___fromAction0, int32_t ___fromSource1, bool ___active2, const RuntimeMethod* method)
{
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 3)
			{
				// open
				typedef void (*FunctionPointerType) (SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 *, int32_t, bool, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___active2, targetMethod);
			}
			else
			{
				// closed
				typedef void (*FunctionPointerType) (void*, SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 *, int32_t, bool, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___fromSource1, ___active2, targetMethod);
			}
		}
		else if (___parameterCount != 3)
		{
			// open
			if (il2cpp_codegen_method_is_virtual(targetMethod) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker2< int32_t, bool >::Invoke(targetMethod, ___fromAction0, ___fromSource1, ___active2);
					else
						GenericVirtActionInvoker2< int32_t, bool >::Invoke(targetMethod, ___fromAction0, ___fromSource1, ___active2);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker2< int32_t, bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), ___fromAction0, ___fromSource1, ___active2);
					else
						VirtActionInvoker2< int32_t, bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), ___fromAction0, ___fromSource1, ___active2);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(&___fromSource1) - 1), ___active2, targetMethod);
				}
				typedef void (*FunctionPointerType) (SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 *, int32_t, bool, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___active2, targetMethod);
			}
		}
		else
		{
			// closed
			if (targetThis != NULL && il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker3< SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 *, int32_t, bool >::Invoke(targetMethod, targetThis, ___fromAction0, ___fromSource1, ___active2);
					else
						GenericVirtActionInvoker3< SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 *, int32_t, bool >::Invoke(targetMethod, targetThis, ___fromAction0, ___fromSource1, ___active2);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker3< SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 *, int32_t, bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___fromAction0, ___fromSource1, ___active2);
					else
						VirtActionInvoker3< SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 *, int32_t, bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___fromAction0, ___fromSource1, ___active2);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, int32_t, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(___fromAction0) - 1), ___fromSource1, ___active2, targetMethod);
				}
				if (targetThis == NULL)
				{
					typedef void (*FunctionPointerType) (SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 *, int32_t, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___active2, targetMethod);
				}
				else
				{
					typedef void (*FunctionPointerType) (void*, SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 *, int32_t, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___fromSource1, ___active2, targetMethod);
				}
			}
		}
	}
}
// System.IAsyncResult Valve.VR.SteamVR_Behaviour_Boolean_ActiveChangeHandler::BeginInvoke(Valve.VR.SteamVR_Behaviour_Boolean,Valve.VR.SteamVR_Input_Sources,System.Boolean,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* ActiveChangeHandler_BeginInvoke_mC8544FB4F8CB99571370093CEFE27DA383B5E72A (ActiveChangeHandler_t299D2C23766385EE91DB72700CF21326F803F453 * __this, SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 * ___fromAction0, int32_t ___fromSource1, bool ___active2, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback3, RuntimeObject * ___object4, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (ActiveChangeHandler_BeginInvoke_mC8544FB4F8CB99571370093CEFE27DA383B5E72A_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[4] = {0};
	__d_args[0] = ___fromAction0;
	__d_args[1] = Box(SteamVR_Input_Sources_tCE41AA589FB3B9516BDE0DFABDCB4AAEA29528F7_il2cpp_TypeInfo_var, &___fromSource1);
	__d_args[2] = Box(Boolean_tB53F6830F670160873277339AA58F15CAED4399C_il2cpp_TypeInfo_var, &___active2);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback3, (RuntimeObject*)___object4);
}
// System.Void Valve.VR.SteamVR_Behaviour_Boolean_ActiveChangeHandler::EndInvoke(System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ActiveChangeHandler_EndInvoke_mF36DAE8C2316029E1DCCD65B0E76779CA90B7242 (ActiveChangeHandler_t299D2C23766385EE91DB72700CF21326F803F453 * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Valve.VR.SteamVR_Behaviour_Boolean_ChangeHandler::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ChangeHandler__ctor_m586AC376D5D929560981ECA9F86107A57F0CDFA5 (ChangeHandler_tADA56232D143B2D18BA3D6F2A9B5CE2AC637CBB6 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Void Valve.VR.SteamVR_Behaviour_Boolean_ChangeHandler::Invoke(Valve.VR.SteamVR_Behaviour_Boolean,Valve.VR.SteamVR_Input_Sources,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ChangeHandler_Invoke_mF3CFD18B23248FD7BED819808EAE34E44E54755B (ChangeHandler_tADA56232D143B2D18BA3D6F2A9B5CE2AC637CBB6 * __this, SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 * ___fromAction0, int32_t ___fromSource1, bool ___newState2, const RuntimeMethod* method)
{
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 3)
			{
				// open
				typedef void (*FunctionPointerType) (SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 *, int32_t, bool, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___newState2, targetMethod);
			}
			else
			{
				// closed
				typedef void (*FunctionPointerType) (void*, SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 *, int32_t, bool, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___fromSource1, ___newState2, targetMethod);
			}
		}
		else if (___parameterCount != 3)
		{
			// open
			if (il2cpp_codegen_method_is_virtual(targetMethod) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker2< int32_t, bool >::Invoke(targetMethod, ___fromAction0, ___fromSource1, ___newState2);
					else
						GenericVirtActionInvoker2< int32_t, bool >::Invoke(targetMethod, ___fromAction0, ___fromSource1, ___newState2);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker2< int32_t, bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), ___fromAction0, ___fromSource1, ___newState2);
					else
						VirtActionInvoker2< int32_t, bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), ___fromAction0, ___fromSource1, ___newState2);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(&___fromSource1) - 1), ___newState2, targetMethod);
				}
				typedef void (*FunctionPointerType) (SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 *, int32_t, bool, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___newState2, targetMethod);
			}
		}
		else
		{
			// closed
			if (targetThis != NULL && il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker3< SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 *, int32_t, bool >::Invoke(targetMethod, targetThis, ___fromAction0, ___fromSource1, ___newState2);
					else
						GenericVirtActionInvoker3< SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 *, int32_t, bool >::Invoke(targetMethod, targetThis, ___fromAction0, ___fromSource1, ___newState2);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker3< SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 *, int32_t, bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___fromAction0, ___fromSource1, ___newState2);
					else
						VirtActionInvoker3< SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 *, int32_t, bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___fromAction0, ___fromSource1, ___newState2);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, int32_t, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(___fromAction0) - 1), ___fromSource1, ___newState2, targetMethod);
				}
				if (targetThis == NULL)
				{
					typedef void (*FunctionPointerType) (SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 *, int32_t, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___newState2, targetMethod);
				}
				else
				{
					typedef void (*FunctionPointerType) (void*, SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 *, int32_t, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___fromSource1, ___newState2, targetMethod);
				}
			}
		}
	}
}
// System.IAsyncResult Valve.VR.SteamVR_Behaviour_Boolean_ChangeHandler::BeginInvoke(Valve.VR.SteamVR_Behaviour_Boolean,Valve.VR.SteamVR_Input_Sources,System.Boolean,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* ChangeHandler_BeginInvoke_mC46C07A1AAA22E75B4D3F7EA7E061AD632B5DD8E (ChangeHandler_tADA56232D143B2D18BA3D6F2A9B5CE2AC637CBB6 * __this, SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 * ___fromAction0, int32_t ___fromSource1, bool ___newState2, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback3, RuntimeObject * ___object4, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (ChangeHandler_BeginInvoke_mC46C07A1AAA22E75B4D3F7EA7E061AD632B5DD8E_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[4] = {0};
	__d_args[0] = ___fromAction0;
	__d_args[1] = Box(SteamVR_Input_Sources_tCE41AA589FB3B9516BDE0DFABDCB4AAEA29528F7_il2cpp_TypeInfo_var, &___fromSource1);
	__d_args[2] = Box(Boolean_tB53F6830F670160873277339AA58F15CAED4399C_il2cpp_TypeInfo_var, &___newState2);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback3, (RuntimeObject*)___object4);
}
// System.Void Valve.VR.SteamVR_Behaviour_Boolean_ChangeHandler::EndInvoke(System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ChangeHandler_EndInvoke_m4656586F9253F76219D85BE58FFA97AF8300E988 (ChangeHandler_tADA56232D143B2D18BA3D6F2A9B5CE2AC637CBB6 * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Valve.VR.SteamVR_Behaviour_Boolean_StateDownHandler::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void StateDownHandler__ctor_mC069F038D09D05B1F1E951475661B5FF473CB320 (StateDownHandler_tFF77368F427C4FE6164A97B238F944123AA8FE24 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Void Valve.VR.SteamVR_Behaviour_Boolean_StateDownHandler::Invoke(Valve.VR.SteamVR_Behaviour_Boolean,Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void StateDownHandler_Invoke_mCE0917DC4FC52D1A54846EAC994540AD19B9D893 (StateDownHandler_tFF77368F427C4FE6164A97B238F944123AA8FE24 * __this, SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 * ___fromAction0, int32_t ___fromSource1, const RuntimeMethod* method)
{
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 2)
			{
				// open
				typedef void (*FunctionPointerType) (SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 *, int32_t, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, targetMethod);
			}
			else
			{
				// closed
				typedef void (*FunctionPointerType) (void*, SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 *, int32_t, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___fromSource1, targetMethod);
			}
		}
		else if (___parameterCount != 2)
		{
			// open
			if (il2cpp_codegen_method_is_virtual(targetMethod) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker1< int32_t >::Invoke(targetMethod, ___fromAction0, ___fromSource1);
					else
						GenericVirtActionInvoker1< int32_t >::Invoke(targetMethod, ___fromAction0, ___fromSource1);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker1< int32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), ___fromAction0, ___fromSource1);
					else
						VirtActionInvoker1< int32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), ___fromAction0, ___fromSource1);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(&___fromSource1) - 1), targetMethod);
				}
				typedef void (*FunctionPointerType) (SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 *, int32_t, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, targetMethod);
			}
		}
		else
		{
			// closed
			if (targetThis != NULL && il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker2< SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 *, int32_t >::Invoke(targetMethod, targetThis, ___fromAction0, ___fromSource1);
					else
						GenericVirtActionInvoker2< SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 *, int32_t >::Invoke(targetMethod, targetThis, ___fromAction0, ___fromSource1);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker2< SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 *, int32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___fromAction0, ___fromSource1);
					else
						VirtActionInvoker2< SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 *, int32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___fromAction0, ___fromSource1);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, int32_t, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(___fromAction0) - 1), ___fromSource1, targetMethod);
				}
				if (targetThis == NULL)
				{
					typedef void (*FunctionPointerType) (SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 *, int32_t, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, targetMethod);
				}
				else
				{
					typedef void (*FunctionPointerType) (void*, SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 *, int32_t, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___fromSource1, targetMethod);
				}
			}
		}
	}
}
// System.IAsyncResult Valve.VR.SteamVR_Behaviour_Boolean_StateDownHandler::BeginInvoke(Valve.VR.SteamVR_Behaviour_Boolean,Valve.VR.SteamVR_Input_Sources,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* StateDownHandler_BeginInvoke_m736695B25518DFA422912F07C1001C6B117838A1 (StateDownHandler_tFF77368F427C4FE6164A97B238F944123AA8FE24 * __this, SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 * ___fromAction0, int32_t ___fromSource1, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback2, RuntimeObject * ___object3, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (StateDownHandler_BeginInvoke_m736695B25518DFA422912F07C1001C6B117838A1_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[3] = {0};
	__d_args[0] = ___fromAction0;
	__d_args[1] = Box(SteamVR_Input_Sources_tCE41AA589FB3B9516BDE0DFABDCB4AAEA29528F7_il2cpp_TypeInfo_var, &___fromSource1);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback2, (RuntimeObject*)___object3);
}
// System.Void Valve.VR.SteamVR_Behaviour_Boolean_StateDownHandler::EndInvoke(System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void StateDownHandler_EndInvoke_m1E859526368DA4B8931D551192F96C3786DF1522 (StateDownHandler_tFF77368F427C4FE6164A97B238F944123AA8FE24 * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Valve.VR.SteamVR_Behaviour_Boolean_StateHandler::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void StateHandler__ctor_m78A6AA734B769F993D8062D9A4C66C55B44DAB02 (StateHandler_tC57B51755B81869515107A3BE4BC3865F974190D * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Void Valve.VR.SteamVR_Behaviour_Boolean_StateHandler::Invoke(Valve.VR.SteamVR_Behaviour_Boolean,Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void StateHandler_Invoke_m77C883A72A64422A49098DAA5999A064E91E45CE (StateHandler_tC57B51755B81869515107A3BE4BC3865F974190D * __this, SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 * ___fromAction0, int32_t ___fromSource1, const RuntimeMethod* method)
{
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 2)
			{
				// open
				typedef void (*FunctionPointerType) (SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 *, int32_t, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, targetMethod);
			}
			else
			{
				// closed
				typedef void (*FunctionPointerType) (void*, SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 *, int32_t, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___fromSource1, targetMethod);
			}
		}
		else if (___parameterCount != 2)
		{
			// open
			if (il2cpp_codegen_method_is_virtual(targetMethod) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker1< int32_t >::Invoke(targetMethod, ___fromAction0, ___fromSource1);
					else
						GenericVirtActionInvoker1< int32_t >::Invoke(targetMethod, ___fromAction0, ___fromSource1);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker1< int32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), ___fromAction0, ___fromSource1);
					else
						VirtActionInvoker1< int32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), ___fromAction0, ___fromSource1);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(&___fromSource1) - 1), targetMethod);
				}
				typedef void (*FunctionPointerType) (SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 *, int32_t, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, targetMethod);
			}
		}
		else
		{
			// closed
			if (targetThis != NULL && il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker2< SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 *, int32_t >::Invoke(targetMethod, targetThis, ___fromAction0, ___fromSource1);
					else
						GenericVirtActionInvoker2< SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 *, int32_t >::Invoke(targetMethod, targetThis, ___fromAction0, ___fromSource1);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker2< SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 *, int32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___fromAction0, ___fromSource1);
					else
						VirtActionInvoker2< SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 *, int32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___fromAction0, ___fromSource1);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, int32_t, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(___fromAction0) - 1), ___fromSource1, targetMethod);
				}
				if (targetThis == NULL)
				{
					typedef void (*FunctionPointerType) (SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 *, int32_t, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, targetMethod);
				}
				else
				{
					typedef void (*FunctionPointerType) (void*, SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 *, int32_t, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___fromSource1, targetMethod);
				}
			}
		}
	}
}
// System.IAsyncResult Valve.VR.SteamVR_Behaviour_Boolean_StateHandler::BeginInvoke(Valve.VR.SteamVR_Behaviour_Boolean,Valve.VR.SteamVR_Input_Sources,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* StateHandler_BeginInvoke_m22E1ECACA00FEEBB643E41AD34908284FD5CC052 (StateHandler_tC57B51755B81869515107A3BE4BC3865F974190D * __this, SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 * ___fromAction0, int32_t ___fromSource1, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback2, RuntimeObject * ___object3, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (StateHandler_BeginInvoke_m22E1ECACA00FEEBB643E41AD34908284FD5CC052_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[3] = {0};
	__d_args[0] = ___fromAction0;
	__d_args[1] = Box(SteamVR_Input_Sources_tCE41AA589FB3B9516BDE0DFABDCB4AAEA29528F7_il2cpp_TypeInfo_var, &___fromSource1);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback2, (RuntimeObject*)___object3);
}
// System.Void Valve.VR.SteamVR_Behaviour_Boolean_StateHandler::EndInvoke(System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void StateHandler_EndInvoke_m1D4EC2D6F4ECC83A5BD54E88582A83183D69ECE9 (StateHandler_tC57B51755B81869515107A3BE4BC3865F974190D * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Valve.VR.SteamVR_Behaviour_Boolean_StateUpHandler::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void StateUpHandler__ctor_m3C99433654C53B5E4783E47E2CAAB29AA4EE1484 (StateUpHandler_tC09A0C33E80BBF97F8E88D36519482DFE36DBCC5 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Void Valve.VR.SteamVR_Behaviour_Boolean_StateUpHandler::Invoke(Valve.VR.SteamVR_Behaviour_Boolean,Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void StateUpHandler_Invoke_m4390170909DAFE643E31003AB1A7ADAC79D37446 (StateUpHandler_tC09A0C33E80BBF97F8E88D36519482DFE36DBCC5 * __this, SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 * ___fromAction0, int32_t ___fromSource1, const RuntimeMethod* method)
{
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 2)
			{
				// open
				typedef void (*FunctionPointerType) (SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 *, int32_t, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, targetMethod);
			}
			else
			{
				// closed
				typedef void (*FunctionPointerType) (void*, SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 *, int32_t, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___fromSource1, targetMethod);
			}
		}
		else if (___parameterCount != 2)
		{
			// open
			if (il2cpp_codegen_method_is_virtual(targetMethod) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker1< int32_t >::Invoke(targetMethod, ___fromAction0, ___fromSource1);
					else
						GenericVirtActionInvoker1< int32_t >::Invoke(targetMethod, ___fromAction0, ___fromSource1);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker1< int32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), ___fromAction0, ___fromSource1);
					else
						VirtActionInvoker1< int32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), ___fromAction0, ___fromSource1);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(&___fromSource1) - 1), targetMethod);
				}
				typedef void (*FunctionPointerType) (SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 *, int32_t, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, targetMethod);
			}
		}
		else
		{
			// closed
			if (targetThis != NULL && il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker2< SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 *, int32_t >::Invoke(targetMethod, targetThis, ___fromAction0, ___fromSource1);
					else
						GenericVirtActionInvoker2< SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 *, int32_t >::Invoke(targetMethod, targetThis, ___fromAction0, ___fromSource1);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker2< SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 *, int32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___fromAction0, ___fromSource1);
					else
						VirtActionInvoker2< SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 *, int32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___fromAction0, ___fromSource1);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, int32_t, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(___fromAction0) - 1), ___fromSource1, targetMethod);
				}
				if (targetThis == NULL)
				{
					typedef void (*FunctionPointerType) (SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 *, int32_t, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, targetMethod);
				}
				else
				{
					typedef void (*FunctionPointerType) (void*, SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 *, int32_t, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___fromSource1, targetMethod);
				}
			}
		}
	}
}
// System.IAsyncResult Valve.VR.SteamVR_Behaviour_Boolean_StateUpHandler::BeginInvoke(Valve.VR.SteamVR_Behaviour_Boolean,Valve.VR.SteamVR_Input_Sources,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* StateUpHandler_BeginInvoke_m718D72474A82BA510E83D02651146FDEC0B8D118 (StateUpHandler_tC09A0C33E80BBF97F8E88D36519482DFE36DBCC5 * __this, SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 * ___fromAction0, int32_t ___fromSource1, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback2, RuntimeObject * ___object3, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (StateUpHandler_BeginInvoke_m718D72474A82BA510E83D02651146FDEC0B8D118_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[3] = {0};
	__d_args[0] = ___fromAction0;
	__d_args[1] = Box(SteamVR_Input_Sources_tCE41AA589FB3B9516BDE0DFABDCB4AAEA29528F7_il2cpp_TypeInfo_var, &___fromSource1);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback2, (RuntimeObject*)___object3);
}
// System.Void Valve.VR.SteamVR_Behaviour_Boolean_StateUpHandler::EndInvoke(System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void StateUpHandler_EndInvoke_m4ACB9F433E1776026E80A74ABE0035ABB57916D5 (StateUpHandler_tC09A0C33E80BBF97F8E88D36519482DFE36DBCC5 * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Valve.VR.SteamVR_Behaviour_Boolean_UpdateHandler::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UpdateHandler__ctor_mCAC6AA493FB1A97CCADC4FF6EF60A105ABB9A0EF (UpdateHandler_t9FC31A405C9C47120C5307368335AD9F708511D1 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Void Valve.VR.SteamVR_Behaviour_Boolean_UpdateHandler::Invoke(Valve.VR.SteamVR_Behaviour_Boolean,Valve.VR.SteamVR_Input_Sources,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UpdateHandler_Invoke_m423C3C8C6E4BBCE15708583137DF06DC92508FEB (UpdateHandler_t9FC31A405C9C47120C5307368335AD9F708511D1 * __this, SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 * ___fromAction0, int32_t ___fromSource1, bool ___newState2, const RuntimeMethod* method)
{
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 3)
			{
				// open
				typedef void (*FunctionPointerType) (SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 *, int32_t, bool, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___newState2, targetMethod);
			}
			else
			{
				// closed
				typedef void (*FunctionPointerType) (void*, SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 *, int32_t, bool, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___fromSource1, ___newState2, targetMethod);
			}
		}
		else if (___parameterCount != 3)
		{
			// open
			if (il2cpp_codegen_method_is_virtual(targetMethod) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker2< int32_t, bool >::Invoke(targetMethod, ___fromAction0, ___fromSource1, ___newState2);
					else
						GenericVirtActionInvoker2< int32_t, bool >::Invoke(targetMethod, ___fromAction0, ___fromSource1, ___newState2);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker2< int32_t, bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), ___fromAction0, ___fromSource1, ___newState2);
					else
						VirtActionInvoker2< int32_t, bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), ___fromAction0, ___fromSource1, ___newState2);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(&___fromSource1) - 1), ___newState2, targetMethod);
				}
				typedef void (*FunctionPointerType) (SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 *, int32_t, bool, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___newState2, targetMethod);
			}
		}
		else
		{
			// closed
			if (targetThis != NULL && il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker3< SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 *, int32_t, bool >::Invoke(targetMethod, targetThis, ___fromAction0, ___fromSource1, ___newState2);
					else
						GenericVirtActionInvoker3< SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 *, int32_t, bool >::Invoke(targetMethod, targetThis, ___fromAction0, ___fromSource1, ___newState2);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker3< SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 *, int32_t, bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___fromAction0, ___fromSource1, ___newState2);
					else
						VirtActionInvoker3< SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 *, int32_t, bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___fromAction0, ___fromSource1, ___newState2);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, int32_t, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(___fromAction0) - 1), ___fromSource1, ___newState2, targetMethod);
				}
				if (targetThis == NULL)
				{
					typedef void (*FunctionPointerType) (SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 *, int32_t, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___newState2, targetMethod);
				}
				else
				{
					typedef void (*FunctionPointerType) (void*, SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 *, int32_t, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___fromSource1, ___newState2, targetMethod);
				}
			}
		}
	}
}
// System.IAsyncResult Valve.VR.SteamVR_Behaviour_Boolean_UpdateHandler::BeginInvoke(Valve.VR.SteamVR_Behaviour_Boolean,Valve.VR.SteamVR_Input_Sources,System.Boolean,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* UpdateHandler_BeginInvoke_mAF0630E1F8F6494E517F3A8E3F85291A5E63BC04 (UpdateHandler_t9FC31A405C9C47120C5307368335AD9F708511D1 * __this, SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 * ___fromAction0, int32_t ___fromSource1, bool ___newState2, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback3, RuntimeObject * ___object4, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (UpdateHandler_BeginInvoke_mAF0630E1F8F6494E517F3A8E3F85291A5E63BC04_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[4] = {0};
	__d_args[0] = ___fromAction0;
	__d_args[1] = Box(SteamVR_Input_Sources_tCE41AA589FB3B9516BDE0DFABDCB4AAEA29528F7_il2cpp_TypeInfo_var, &___fromSource1);
	__d_args[2] = Box(Boolean_tB53F6830F670160873277339AA58F15CAED4399C_il2cpp_TypeInfo_var, &___newState2);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback3, (RuntimeObject*)___object4);
}
// System.Void Valve.VR.SteamVR_Behaviour_Boolean_UpdateHandler::EndInvoke(System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UpdateHandler_EndInvoke_m902BF77A2043DED4832B2506E350FF505A1C9D46 (UpdateHandler_t9FC31A405C9C47120C5307368335AD9F708511D1 * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Valve.VR.SteamVR_Behaviour_BooleanEvent::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_BooleanEvent__ctor_m33798FEA433B2FC53CA7BC3F6EC450162099B83C (SteamVR_Behaviour_BooleanEvent_t96626CBD0A0BD84C51D1F9E03DE5BEBFF58A48E4 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_BooleanEvent__ctor_m33798FEA433B2FC53CA7BC3F6EC450162099B83C_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Behaviour_BooleanEvent__ctor_m33798FEA433B2FC53CA7BC3F6EC450162099B83C_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		UnityEvent_3__ctor_mC63650172D658E002E89CD9C8BC3E11ED2A0A0A2(__this, /*hidden argument*/UnityEvent_3__ctor_mC63650172D658E002E89CD9C8BC3E11ED2A0A0A2_RuntimeMethod_var);
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Boolean Valve.VR.SteamVR_Behaviour_Pose::get_isValid()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Behaviour_Pose_get_isValid_mC439A09C94C9C2C860D673D2AF3A1250BF1D0ED1 (SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Pose_get_isValid_mC439A09C94C9C2C860D673D2AF3A1250BF1D0ED1_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Behaviour_Pose_get_isValid_mC439A09C94C9C2C860D673D2AF3A1250BF1D0ED1_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9221));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 9222));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9223));
		// public bool isValid { get { return poseAction[inputSource].poseIsValid; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9224));
		SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * L_0 = __this->get_poseAction_4();
		int32_t L_1 = __this->get_inputSource_5();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9226));
		NullCheck(L_0);
		SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * L_2 = VirtFuncInvoker1< SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 *, int32_t >::Invoke(36 /* SourceElement Valve.VR.SteamVR_Action`2<Valve.VR.SteamVR_Action_Pose_Source_Map`1<Valve.VR.SteamVR_Action_Pose_Source>,Valve.VR.SteamVR_Action_Pose_Source>::get_Item(Valve.VR.SteamVR_Input_Sources) */, L_0, L_1);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9226));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9227));
		NullCheck(L_2);
		bool L_3 = SteamVR_Action_Pose_Source_get_poseIsValid_m45C4445DBD635BF4EDAA590D30874EA233DED74D(L_2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9227));
		V_0 = L_3;
		goto IL_001a;
	}

IL_001a:
	{
		// public bool isValid { get { return poseAction[inputSource].poseIsValid; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9225));
		bool L_4 = V_0;
		return L_4;
	}
}
// System.Boolean Valve.VR.SteamVR_Behaviour_Pose::get_isActive()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Behaviour_Pose_get_isActive_m40A24A17984B400137C0477A64B4936B8764728F (SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Pose_get_isActive_m40A24A17984B400137C0477A64B4936B8764728F_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Behaviour_Pose_get_isActive_m40A24A17984B400137C0477A64B4936B8764728F_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9228));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 9229));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9230));
		// public bool isActive { get { return poseAction[inputSource].active; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9231));
		SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * L_0 = __this->get_poseAction_4();
		int32_t L_1 = __this->get_inputSource_5();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9233));
		NullCheck(L_0);
		SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * L_2 = VirtFuncInvoker1< SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 *, int32_t >::Invoke(36 /* SourceElement Valve.VR.SteamVR_Action`2<Valve.VR.SteamVR_Action_Pose_Source_Map`1<Valve.VR.SteamVR_Action_Pose_Source>,Valve.VR.SteamVR_Action_Pose_Source>::get_Item(Valve.VR.SteamVR_Input_Sources) */, L_0, L_1);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9233));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9234));
		NullCheck(L_2);
		bool L_3 = VirtFuncInvoker0< bool >::Invoke(12 /* System.Boolean Valve.VR.SteamVR_Action_Source::get_active() */, L_2);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9234));
		V_0 = L_3;
		goto IL_001a;
	}

IL_001a:
	{
		// public bool isActive { get { return poseAction[inputSource].active; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9232));
		bool L_4 = V_0;
		return L_4;
	}
}
// System.Void Valve.VR.SteamVR_Behaviour_Pose::Start()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_Pose_Start_m97059074D4F923E2FE787F0ED2F2F9743B17FBD6 (SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Pose_Start_m97059074D4F923E2FE787F0ED2F2F9743B17FBD6_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	bool V_1 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Behaviour_Pose_Start_m97059074D4F923E2FE787F0ED2F2F9743B17FBD6_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9235));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 9236));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9237));
		// if (poseAction == null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9238));
		SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * L_0 = __this->get_poseAction_4();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9248));
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734_il2cpp_TypeInfo_var);
		bool L_1 = SteamVR_Action_op_Equality_m16F1109154021CF7DC424B937A8AA5FC34463EE2(L_0, (SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9248));
		V_0 = L_1;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9239));
		bool L_2 = V_0;
		if (!L_2)
		{
			goto IL_0020;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9240));
		// Debug.LogError("<b>[SteamVR]</b> No pose action set for this component", this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9241));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9249));
		IL2CPP_RUNTIME_CLASS_INIT(Debug_t7B5FCB117E2FD63B6838BC52821B252E2BFB61C4_il2cpp_TypeInfo_var);
		Debug_LogError_m97139CB2EE76D5CD8308C1AD0499A5F163FC7F51(_stringLiteralC8D5F6371B2F6BC2DEFFEF5B888A0F62ABB5C4CD, __this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9249));
		// return;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9242));
		goto IL_0048;
	}

IL_0020:
	{
		// CheckDeviceIndex();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9243));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9250));
		VirtActionInvoker0::Invoke(10 /* System.Void Valve.VR.SteamVR_Behaviour_Pose::CheckDeviceIndex() */, __this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9250));
		// if (origin == null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9244));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_3 = __this->get_origin_6();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9251));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_4 = Object_op_Equality_mBC2401774F3BE33E8CF6F0A8148E66C95D6CFF1C(L_3, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9251));
		V_1 = L_4;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9245));
		bool L_5 = V_1;
		if (!L_5)
		{
			goto IL_0048;
		}
	}
	{
		// origin = this.transform.parent;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9246));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9252));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_6 = Component_get_transform_m00F05BD782F920C301A7EBA480F3B7A904C07EC9(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9252));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9253));
		NullCheck(L_6);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_7 = Transform_get_parent_m8FA24E38A1FA29D90CBF3CDC9F9F017C65BB3403(L_6, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9253));
		__this->set_origin_6(L_7);
	}

IL_0048:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9247));
		return;
	}
}
// System.Void Valve.VR.SteamVR_Behaviour_Pose::OnEnable()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_Pose_OnEnable_m71BB8AE16F7490930CB15222660F612E35F0411B (SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Pose_OnEnable_m71BB8AE16F7490930CB15222660F612E35F0411B_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Behaviour_Pose_OnEnable_m71BB8AE16F7490930CB15222660F612E35F0411B_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9254));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 9255));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9256));
		// SteamVR.Initialize();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9257));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9267));
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_tE14648C0E73A16927B96F72915B425561B0D057F_il2cpp_TypeInfo_var);
		SteamVR_Initialize_m4290EF084BDC61199798490C498AA0DF8791260C((bool)0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9267));
		// if (poseAction != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9258));
		SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * L_0 = __this->get_poseAction_4();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9268));
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734_il2cpp_TypeInfo_var);
		bool L_1 = SteamVR_Action_op_Inequality_m7114B6E3669F8C55CD3B5E4EC3A897648CBD0F8A(L_0, (SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9268));
		V_0 = L_1;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9259));
		bool L_2 = V_0;
		if (!L_2)
		{
			goto IL_00ab;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9260));
		// poseAction[inputSource].onUpdate += SteamVR_Behaviour_Pose_OnUpdate;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9261));
		SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * L_3 = __this->get_poseAction_4();
		int32_t L_4 = __this->get_inputSource_5();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9269));
		NullCheck(L_3);
		SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * L_5 = VirtFuncInvoker1< SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 *, int32_t >::Invoke(36 /* SourceElement Valve.VR.SteamVR_Action`2<Valve.VR.SteamVR_Action_Pose_Source_Map`1<Valve.VR.SteamVR_Action_Pose_Source>,Valve.VR.SteamVR_Action_Pose_Source>::get_Item(Valve.VR.SteamVR_Input_Sources) */, L_3, L_4);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9269));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9270));
		UpdateHandler_t4F6AB1825F5E5CE6A7BBCD6C84541B3DF13C2AA1 * L_6 = (UpdateHandler_t4F6AB1825F5E5CE6A7BBCD6C84541B3DF13C2AA1 *)il2cpp_codegen_object_new(UpdateHandler_t4F6AB1825F5E5CE6A7BBCD6C84541B3DF13C2AA1_il2cpp_TypeInfo_var);
		UpdateHandler__ctor_mBD98A1E92C38030F3BFDCF1753EA9667131B5E08(L_6, __this, (intptr_t)((intptr_t)SteamVR_Behaviour_Pose_SteamVR_Behaviour_Pose_OnUpdate_m64560EEC47CC5A8789248FC785F1DC09C82C6E18_RuntimeMethod_var), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9270));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9271));
		NullCheck(L_5);
		SteamVR_Action_Pose_Source_add_onUpdate_m3490F1849AF58B9C1C64A455D119B6619BF1F9F4(L_5, L_6, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9271));
		// poseAction[inputSource].onDeviceConnectedChanged += OnDeviceConnectedChanged;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9262));
		SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * L_7 = __this->get_poseAction_4();
		int32_t L_8 = __this->get_inputSource_5();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9272));
		NullCheck(L_7);
		SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * L_9 = VirtFuncInvoker1< SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 *, int32_t >::Invoke(36 /* SourceElement Valve.VR.SteamVR_Action`2<Valve.VR.SteamVR_Action_Pose_Source_Map`1<Valve.VR.SteamVR_Action_Pose_Source>,Valve.VR.SteamVR_Action_Pose_Source>::get_Item(Valve.VR.SteamVR_Input_Sources) */, L_7, L_8);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9272));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9273));
		DeviceConnectedChangeHandler_t4AC124A9A94D668A0FB45EA8FC718729CEA3D0D9 * L_10 = (DeviceConnectedChangeHandler_t4AC124A9A94D668A0FB45EA8FC718729CEA3D0D9 *)il2cpp_codegen_object_new(DeviceConnectedChangeHandler_t4AC124A9A94D668A0FB45EA8FC718729CEA3D0D9_il2cpp_TypeInfo_var);
		DeviceConnectedChangeHandler__ctor_mFC468AB8A126E335C06F73ABA9CFDEA5688098B7(L_10, __this, (intptr_t)((intptr_t)GetVirtualMethodInfo(__this, 8)), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9273));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9274));
		NullCheck(L_9);
		SteamVR_Action_Pose_Source_add_onDeviceConnectedChanged_m2844E90BAA3AA5AEF71BEDE218CAB7EFBDF01828(L_9, L_10, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9274));
		// poseAction[inputSource].onTrackingChanged += OnTrackingChanged;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9263));
		SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * L_11 = __this->get_poseAction_4();
		int32_t L_12 = __this->get_inputSource_5();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9275));
		NullCheck(L_11);
		SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * L_13 = VirtFuncInvoker1< SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 *, int32_t >::Invoke(36 /* SourceElement Valve.VR.SteamVR_Action`2<Valve.VR.SteamVR_Action_Pose_Source_Map`1<Valve.VR.SteamVR_Action_Pose_Source>,Valve.VR.SteamVR_Action_Pose_Source>::get_Item(Valve.VR.SteamVR_Input_Sources) */, L_11, L_12);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9275));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9276));
		TrackingChangeHandler_t1CC1FD6A7111B86684B749C4E751B1F5237D2914 * L_14 = (TrackingChangeHandler_t1CC1FD6A7111B86684B749C4E751B1F5237D2914 *)il2cpp_codegen_object_new(TrackingChangeHandler_t1CC1FD6A7111B86684B749C4E751B1F5237D2914_il2cpp_TypeInfo_var);
		TrackingChangeHandler__ctor_m265F21C900027C0C60671E5DB6C4D8239D85E616(L_14, __this, (intptr_t)((intptr_t)GetVirtualMethodInfo(__this, 9)), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9276));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9277));
		NullCheck(L_13);
		SteamVR_Action_Pose_Source_add_onTrackingChanged_m2ECFC24CAD4E5BEEF240099853A3E36B7F0DFBE5(L_13, L_14, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9277));
		// poseAction[inputSource].onChange += SteamVR_Behaviour_Pose_OnChange;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9264));
		SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * L_15 = __this->get_poseAction_4();
		int32_t L_16 = __this->get_inputSource_5();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9278));
		NullCheck(L_15);
		SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * L_17 = VirtFuncInvoker1< SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 *, int32_t >::Invoke(36 /* SourceElement Valve.VR.SteamVR_Action`2<Valve.VR.SteamVR_Action_Pose_Source_Map`1<Valve.VR.SteamVR_Action_Pose_Source>,Valve.VR.SteamVR_Action_Pose_Source>::get_Item(Valve.VR.SteamVR_Input_Sources) */, L_15, L_16);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9278));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9279));
		ChangeHandler_tBB749BC376815901B6E13DF03202383F3302BFBE * L_18 = (ChangeHandler_tBB749BC376815901B6E13DF03202383F3302BFBE *)il2cpp_codegen_object_new(ChangeHandler_tBB749BC376815901B6E13DF03202383F3302BFBE_il2cpp_TypeInfo_var);
		ChangeHandler__ctor_mBA6347D8C94B1E1768590E151F2BDB6FE02148F7(L_18, __this, (intptr_t)((intptr_t)SteamVR_Behaviour_Pose_SteamVR_Behaviour_Pose_OnChange_mF4D37C55364E44522DB1A4EC21CEA17973FEFFC9_RuntimeMethod_var), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9279));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9280));
		NullCheck(L_17);
		SteamVR_Action_Pose_Source_add_onChange_m350CA9E264ACB24C9AAF2A2C8B0DBEC7A9665D22(L_17, L_18, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9280));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9265));
	}

IL_00ab:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9266));
		return;
	}
}
// System.Void Valve.VR.SteamVR_Behaviour_Pose::OnDisable()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_Pose_OnDisable_m770F05909A237037B5CC75216B591C1875A63E93 (SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Pose_OnDisable_m770F05909A237037B5CC75216B591C1875A63E93_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Behaviour_Pose_OnDisable_m770F05909A237037B5CC75216B591C1875A63E93_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9281));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 9282));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9283));
		// if (poseAction != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9284));
		SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * L_0 = __this->get_poseAction_4();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9294));
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734_il2cpp_TypeInfo_var);
		bool L_1 = SteamVR_Action_op_Inequality_m7114B6E3669F8C55CD3B5E4EC3A897648CBD0F8A(L_0, (SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9294));
		V_0 = L_1;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9285));
		bool L_2 = V_0;
		if (!L_2)
		{
			goto IL_00a4;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9286));
		// poseAction[inputSource].onUpdate -= SteamVR_Behaviour_Pose_OnUpdate;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9287));
		SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * L_3 = __this->get_poseAction_4();
		int32_t L_4 = __this->get_inputSource_5();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9295));
		NullCheck(L_3);
		SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * L_5 = VirtFuncInvoker1< SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 *, int32_t >::Invoke(36 /* SourceElement Valve.VR.SteamVR_Action`2<Valve.VR.SteamVR_Action_Pose_Source_Map`1<Valve.VR.SteamVR_Action_Pose_Source>,Valve.VR.SteamVR_Action_Pose_Source>::get_Item(Valve.VR.SteamVR_Input_Sources) */, L_3, L_4);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9295));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9296));
		UpdateHandler_t4F6AB1825F5E5CE6A7BBCD6C84541B3DF13C2AA1 * L_6 = (UpdateHandler_t4F6AB1825F5E5CE6A7BBCD6C84541B3DF13C2AA1 *)il2cpp_codegen_object_new(UpdateHandler_t4F6AB1825F5E5CE6A7BBCD6C84541B3DF13C2AA1_il2cpp_TypeInfo_var);
		UpdateHandler__ctor_mBD98A1E92C38030F3BFDCF1753EA9667131B5E08(L_6, __this, (intptr_t)((intptr_t)SteamVR_Behaviour_Pose_SteamVR_Behaviour_Pose_OnUpdate_m64560EEC47CC5A8789248FC785F1DC09C82C6E18_RuntimeMethod_var), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9296));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9297));
		NullCheck(L_5);
		SteamVR_Action_Pose_Source_remove_onUpdate_mBAB407029136DCDDBF725ED16D604A3F4CA303A2(L_5, L_6, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9297));
		// poseAction[inputSource].onDeviceConnectedChanged -= OnDeviceConnectedChanged;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9288));
		SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * L_7 = __this->get_poseAction_4();
		int32_t L_8 = __this->get_inputSource_5();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9298));
		NullCheck(L_7);
		SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * L_9 = VirtFuncInvoker1< SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 *, int32_t >::Invoke(36 /* SourceElement Valve.VR.SteamVR_Action`2<Valve.VR.SteamVR_Action_Pose_Source_Map`1<Valve.VR.SteamVR_Action_Pose_Source>,Valve.VR.SteamVR_Action_Pose_Source>::get_Item(Valve.VR.SteamVR_Input_Sources) */, L_7, L_8);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9298));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9299));
		DeviceConnectedChangeHandler_t4AC124A9A94D668A0FB45EA8FC718729CEA3D0D9 * L_10 = (DeviceConnectedChangeHandler_t4AC124A9A94D668A0FB45EA8FC718729CEA3D0D9 *)il2cpp_codegen_object_new(DeviceConnectedChangeHandler_t4AC124A9A94D668A0FB45EA8FC718729CEA3D0D9_il2cpp_TypeInfo_var);
		DeviceConnectedChangeHandler__ctor_mFC468AB8A126E335C06F73ABA9CFDEA5688098B7(L_10, __this, (intptr_t)((intptr_t)GetVirtualMethodInfo(__this, 8)), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9299));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9300));
		NullCheck(L_9);
		SteamVR_Action_Pose_Source_remove_onDeviceConnectedChanged_mCFD88686CD8FF8163D1A900691A7742AA2E8BB52(L_9, L_10, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9300));
		// poseAction[inputSource].onTrackingChanged -= OnTrackingChanged;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9289));
		SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * L_11 = __this->get_poseAction_4();
		int32_t L_12 = __this->get_inputSource_5();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9301));
		NullCheck(L_11);
		SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * L_13 = VirtFuncInvoker1< SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 *, int32_t >::Invoke(36 /* SourceElement Valve.VR.SteamVR_Action`2<Valve.VR.SteamVR_Action_Pose_Source_Map`1<Valve.VR.SteamVR_Action_Pose_Source>,Valve.VR.SteamVR_Action_Pose_Source>::get_Item(Valve.VR.SteamVR_Input_Sources) */, L_11, L_12);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9301));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9302));
		TrackingChangeHandler_t1CC1FD6A7111B86684B749C4E751B1F5237D2914 * L_14 = (TrackingChangeHandler_t1CC1FD6A7111B86684B749C4E751B1F5237D2914 *)il2cpp_codegen_object_new(TrackingChangeHandler_t1CC1FD6A7111B86684B749C4E751B1F5237D2914_il2cpp_TypeInfo_var);
		TrackingChangeHandler__ctor_m265F21C900027C0C60671E5DB6C4D8239D85E616(L_14, __this, (intptr_t)((intptr_t)GetVirtualMethodInfo(__this, 9)), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9302));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9303));
		NullCheck(L_13);
		SteamVR_Action_Pose_Source_remove_onTrackingChanged_mCF467E85C173ABE916896B29993C49829AB2149C(L_13, L_14, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9303));
		// poseAction[inputSource].onChange -= SteamVR_Behaviour_Pose_OnChange;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9290));
		SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * L_15 = __this->get_poseAction_4();
		int32_t L_16 = __this->get_inputSource_5();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9304));
		NullCheck(L_15);
		SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * L_17 = VirtFuncInvoker1< SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 *, int32_t >::Invoke(36 /* SourceElement Valve.VR.SteamVR_Action`2<Valve.VR.SteamVR_Action_Pose_Source_Map`1<Valve.VR.SteamVR_Action_Pose_Source>,Valve.VR.SteamVR_Action_Pose_Source>::get_Item(Valve.VR.SteamVR_Input_Sources) */, L_15, L_16);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9304));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9305));
		ChangeHandler_tBB749BC376815901B6E13DF03202383F3302BFBE * L_18 = (ChangeHandler_tBB749BC376815901B6E13DF03202383F3302BFBE *)il2cpp_codegen_object_new(ChangeHandler_tBB749BC376815901B6E13DF03202383F3302BFBE_il2cpp_TypeInfo_var);
		ChangeHandler__ctor_mBA6347D8C94B1E1768590E151F2BDB6FE02148F7(L_18, __this, (intptr_t)((intptr_t)SteamVR_Behaviour_Pose_SteamVR_Behaviour_Pose_OnChange_mF4D37C55364E44522DB1A4EC21CEA17973FEFFC9_RuntimeMethod_var), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9305));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9306));
		NullCheck(L_17);
		SteamVR_Action_Pose_Source_remove_onChange_m5648F89F86FF49FF910AD08C79FB0A2B27618A29(L_17, L_18, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9306));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9291));
	}

IL_00a4:
	{
		// historyBuffer.Clear();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9292));
		SteamVR_HistoryBuffer_tB82B2932C03165695AE1BE7BE8EDCADC6AE4A6E8 * L_19 = __this->get_historyBuffer_19();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9307));
		NullCheck(L_19);
		SteamVR_RingBuffer_1_Clear_mE5008382A9E53B1C4D0513C1F308724ED2EB2DB6(L_19, /*hidden argument*/SteamVR_RingBuffer_1_Clear_mE5008382A9E53B1C4D0513C1F308724ED2EB2DB6_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9307));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9293));
		return;
	}
}
// System.Void Valve.VR.SteamVR_Behaviour_Pose::SteamVR_Behaviour_Pose_OnUpdate(Valve.VR.SteamVR_Action_Pose,Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_Pose_SteamVR_Behaviour_Pose_OnUpdate_m64560EEC47CC5A8789248FC785F1DC09C82C6E18 (SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 * __this, SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * ___fromAction0, int32_t ___fromSource1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Pose_SteamVR_Behaviour_Pose_OnUpdate_m64560EEC47CC5A8789248FC785F1DC09C82C6E18_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	bool V_1 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___fromAction0), (&___fromSource1));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Behaviour_Pose_SteamVR_Behaviour_Pose_OnUpdate_m64560EEC47CC5A8789248FC785F1DC09C82C6E18_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9308));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 9309));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9310));
		// UpdateHistoryBuffer();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9311));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9320));
		SteamVR_Behaviour_Pose_UpdateHistoryBuffer_mE526E02932EAB531F93E8AB336EBBE7BB880E120(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9320));
		// UpdateTransform();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9312));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9321));
		VirtActionInvoker0::Invoke(7 /* System.Void Valve.VR.SteamVR_Behaviour_Pose::UpdateTransform() */, __this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9321));
		// if (onTransformUpdated != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9313));
		SteamVR_Behaviour_PoseEvent_t110293A57CED63A5C2FFEF4849FC452DE99B2F87 * L_0 = __this->get_onTransformUpdated_7();
		V_0 = (bool)((!(((RuntimeObject*)(SteamVR_Behaviour_PoseEvent_t110293A57CED63A5C2FFEF4849FC452DE99B2F87 *)L_0) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9314));
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_002f;
		}
	}
	{
		// onTransformUpdated.Invoke(this, inputSource);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9315));
		SteamVR_Behaviour_PoseEvent_t110293A57CED63A5C2FFEF4849FC452DE99B2F87 * L_2 = __this->get_onTransformUpdated_7();
		int32_t L_3 = __this->get_inputSource_5();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9322));
		NullCheck(L_2);
		UnityEvent_2_Invoke_mEA7AB15B5A48CDDF5EBB6ED1E70152910A221CC8(L_2, __this, L_3, /*hidden argument*/UnityEvent_2_Invoke_mEA7AB15B5A48CDDF5EBB6ED1E70152910A221CC8_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9322));
	}

IL_002f:
	{
		// if (onTransformUpdatedEvent != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9316));
		UpdateHandler_t7F4B3FFE3096B37EB5424E580DA100C61857DC4D * L_4 = __this->get_onTransformUpdatedEvent_12();
		V_1 = (bool)((!(((RuntimeObject*)(UpdateHandler_t7F4B3FFE3096B37EB5424E580DA100C61857DC4D *)L_4) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9317));
		bool L_5 = V_1;
		if (!L_5)
		{
			goto IL_004f;
		}
	}
	{
		// onTransformUpdatedEvent.Invoke(this, inputSource);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9318));
		UpdateHandler_t7F4B3FFE3096B37EB5424E580DA100C61857DC4D * L_6 = __this->get_onTransformUpdatedEvent_12();
		int32_t L_7 = __this->get_inputSource_5();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9323));
		NullCheck(L_6);
		UpdateHandler_Invoke_mD8E094DE1D96502467EB3BCE1F23E60B1DDC328B(L_6, __this, L_7, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9323));
	}

IL_004f:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9319));
		return;
	}
}
// System.Void Valve.VR.SteamVR_Behaviour_Pose::UpdateTransform()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_Pose_UpdateTransform_m2CA63E642A823EF173A01935179452312F7E7464 (SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Pose_UpdateTransform_m2CA63E642A823EF173A01935179452312F7E7464_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Behaviour_Pose_UpdateTransform_m2CA63E642A823EF173A01935179452312F7E7464_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9324));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 9325));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9326));
		// CheckDeviceIndex();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9327));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9339));
		VirtActionInvoker0::Invoke(10 /* System.Void Valve.VR.SteamVR_Behaviour_Pose::CheckDeviceIndex() */, __this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9339));
		// if (origin != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9328));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_0 = __this->get_origin_6();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9340));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_1 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_0, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9340));
		V_0 = L_1;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9329));
		bool L_2 = V_0;
		if (!L_2)
		{
			goto IL_0080;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9330));
		// transform.position = origin.transform.TransformPoint(poseAction[inputSource].localPosition);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9331));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9341));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_3 = Component_get_transform_m00F05BD782F920C301A7EBA480F3B7A904C07EC9(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9341));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_4 = __this->get_origin_6();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9342));
		NullCheck(L_4);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_5 = Component_get_transform_m00F05BD782F920C301A7EBA480F3B7A904C07EC9(L_4, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9342));
		SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * L_6 = __this->get_poseAction_4();
		int32_t L_7 = __this->get_inputSource_5();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9343));
		NullCheck(L_6);
		SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * L_8 = VirtFuncInvoker1< SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 *, int32_t >::Invoke(36 /* SourceElement Valve.VR.SteamVR_Action`2<Valve.VR.SteamVR_Action_Pose_Source_Map`1<Valve.VR.SteamVR_Action_Pose_Source>,Valve.VR.SteamVR_Action_Pose_Source>::get_Item(Valve.VR.SteamVR_Input_Sources) */, L_6, L_7);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9343));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9344));
		NullCheck(L_8);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_9 = SteamVR_Action_Pose_Source_get_localPosition_mE065A826D8D1A8CF44D9E7F0D038F24D70985833_inline(L_8, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9344));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9345));
		NullCheck(L_5);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_10 = Transform_TransformPoint_mA96DC2A20EE7F4F915F7509863A18D99F5DD76CB(L_5, L_9, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9345));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9346));
		NullCheck(L_3);
		Transform_set_position_mDA89E4893F14ECA5CBEEE7FB80A5BF7C1B8EA6DC(L_3, L_10, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9346));
		// transform.rotation = origin.rotation * poseAction[inputSource].localRotation;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9332));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9347));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_11 = Component_get_transform_m00F05BD782F920C301A7EBA480F3B7A904C07EC9(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9347));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_12 = __this->get_origin_6();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9348));
		NullCheck(L_12);
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_13 = Transform_get_rotation_m3AB90A67403249AECCA5E02BC70FCE8C90FE9FB9(L_12, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9348));
		SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * L_14 = __this->get_poseAction_4();
		int32_t L_15 = __this->get_inputSource_5();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9349));
		NullCheck(L_14);
		SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * L_16 = VirtFuncInvoker1< SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 *, int32_t >::Invoke(36 /* SourceElement Valve.VR.SteamVR_Action`2<Valve.VR.SteamVR_Action_Pose_Source_Map`1<Valve.VR.SteamVR_Action_Pose_Source>,Valve.VR.SteamVR_Action_Pose_Source>::get_Item(Valve.VR.SteamVR_Input_Sources) */, L_14, L_15);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9349));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9350));
		NullCheck(L_16);
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_17 = SteamVR_Action_Pose_Source_get_localRotation_m307D9DD92DFFFCC30446A71D9BD15674A797ED2A_inline(L_16, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9350));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9351));
		IL2CPP_RUNTIME_CLASS_INIT(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357_il2cpp_TypeInfo_var);
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_18 = Quaternion_op_Multiply_mDB9F738AA8160E3D85549F4FEDA23BC658B5A790(L_13, L_17, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9351));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9352));
		NullCheck(L_11);
		Transform_set_rotation_m429694E264117C6DC682EC6AF45C7864E5155935(L_11, L_18, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9352));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9333));
		goto IL_00c6;
	}

IL_0080:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9334));
		// transform.localPosition = poseAction[inputSource].localPosition;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9335));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9353));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_19 = Component_get_transform_m00F05BD782F920C301A7EBA480F3B7A904C07EC9(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9353));
		SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * L_20 = __this->get_poseAction_4();
		int32_t L_21 = __this->get_inputSource_5();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9354));
		NullCheck(L_20);
		SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * L_22 = VirtFuncInvoker1< SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 *, int32_t >::Invoke(36 /* SourceElement Valve.VR.SteamVR_Action`2<Valve.VR.SteamVR_Action_Pose_Source_Map`1<Valve.VR.SteamVR_Action_Pose_Source>,Valve.VR.SteamVR_Action_Pose_Source>::get_Item(Valve.VR.SteamVR_Input_Sources) */, L_20, L_21);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9354));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9355));
		NullCheck(L_22);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_23 = SteamVR_Action_Pose_Source_get_localPosition_mE065A826D8D1A8CF44D9E7F0D038F24D70985833_inline(L_22, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9355));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9356));
		NullCheck(L_19);
		Transform_set_localPosition_m275F5550DD939F83AFEB5E8D681131172E2E1728(L_19, L_23, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9356));
		// transform.localRotation = poseAction[inputSource].localRotation;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9336));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9357));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_24 = Component_get_transform_m00F05BD782F920C301A7EBA480F3B7A904C07EC9(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9357));
		SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * L_25 = __this->get_poseAction_4();
		int32_t L_26 = __this->get_inputSource_5();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9358));
		NullCheck(L_25);
		SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * L_27 = VirtFuncInvoker1< SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 *, int32_t >::Invoke(36 /* SourceElement Valve.VR.SteamVR_Action`2<Valve.VR.SteamVR_Action_Pose_Source_Map`1<Valve.VR.SteamVR_Action_Pose_Source>,Valve.VR.SteamVR_Action_Pose_Source>::get_Item(Valve.VR.SteamVR_Input_Sources) */, L_25, L_26);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9358));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9359));
		NullCheck(L_27);
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_28 = SteamVR_Action_Pose_Source_get_localRotation_m307D9DD92DFFFCC30446A71D9BD15674A797ED2A_inline(L_27, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9359));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9360));
		NullCheck(L_24);
		Transform_set_localRotation_mE2BECB0954FFC1D93FB631600D9A9BEFF41D9C8A(L_24, L_28, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9360));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9337));
	}

IL_00c6:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9338));
		return;
	}
}
// System.Void Valve.VR.SteamVR_Behaviour_Pose::SteamVR_Behaviour_Pose_OnChange(Valve.VR.SteamVR_Action_Pose,Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_Pose_SteamVR_Behaviour_Pose_OnChange_mF4D37C55364E44522DB1A4EC21CEA17973FEFFC9 (SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 * __this, SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * ___fromAction0, int32_t ___fromSource1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Pose_SteamVR_Behaviour_Pose_OnChange_mF4D37C55364E44522DB1A4EC21CEA17973FEFFC9_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	bool V_1 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___fromAction0), (&___fromSource1));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Behaviour_Pose_SteamVR_Behaviour_Pose_OnChange_mF4D37C55364E44522DB1A4EC21CEA17973FEFFC9_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9361));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 9362));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9363));
		// if (onTransformChanged != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9364));
		SteamVR_Behaviour_PoseEvent_t110293A57CED63A5C2FFEF4849FC452DE99B2F87 * L_0 = __this->get_onTransformChanged_8();
		V_0 = (bool)((!(((RuntimeObject*)(SteamVR_Behaviour_PoseEvent_t110293A57CED63A5C2FFEF4849FC452DE99B2F87 *)L_0) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9365));
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_001c;
		}
	}
	{
		// onTransformChanged.Invoke(this, fromSource);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9366));
		SteamVR_Behaviour_PoseEvent_t110293A57CED63A5C2FFEF4849FC452DE99B2F87 * L_2 = __this->get_onTransformChanged_8();
		int32_t L_3 = ___fromSource1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9371));
		NullCheck(L_2);
		UnityEvent_2_Invoke_mEA7AB15B5A48CDDF5EBB6ED1E70152910A221CC8(L_2, __this, L_3, /*hidden argument*/UnityEvent_2_Invoke_mEA7AB15B5A48CDDF5EBB6ED1E70152910A221CC8_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9371));
	}

IL_001c:
	{
		// if (onTransformChangedEvent != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9367));
		ChangeHandler_t62B565E3F59005232530941762BA9C99466E7190 * L_4 = __this->get_onTransformChangedEvent_13();
		V_1 = (bool)((!(((RuntimeObject*)(ChangeHandler_t62B565E3F59005232530941762BA9C99466E7190 *)L_4) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9368));
		bool L_5 = V_1;
		if (!L_5)
		{
			goto IL_0037;
		}
	}
	{
		// onTransformChangedEvent.Invoke(this, fromSource);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9369));
		ChangeHandler_t62B565E3F59005232530941762BA9C99466E7190 * L_6 = __this->get_onTransformChangedEvent_13();
		int32_t L_7 = ___fromSource1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9372));
		NullCheck(L_6);
		ChangeHandler_Invoke_m8CADF14E5C6D8F024A2391FA19D762981F26C7FE(L_6, __this, L_7, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9372));
	}

IL_0037:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9370));
		return;
	}
}
// System.Void Valve.VR.SteamVR_Behaviour_Pose::OnDeviceConnectedChanged(Valve.VR.SteamVR_Action_Pose,Valve.VR.SteamVR_Input_Sources,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_Pose_OnDeviceConnectedChanged_m6B04726DF8F8CB18443D79B36C3255B8D58A571C (SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 * __this, SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * ___changedAction0, int32_t ___changedSource1, bool ___connected2, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Pose_OnDeviceConnectedChanged_m6B04726DF8F8CB18443D79B36C3255B8D58A571C_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	bool V_1 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___changedAction0), (&___changedSource1), (&___connected2));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Behaviour_Pose_OnDeviceConnectedChanged_m6B04726DF8F8CB18443D79B36C3255B8D58A571C_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9373));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 9374));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9375));
		// CheckDeviceIndex();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9376));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9384));
		VirtActionInvoker0::Invoke(10 /* System.Void Valve.VR.SteamVR_Behaviour_Pose::CheckDeviceIndex() */, __this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9384));
		// if (onConnectedChanged != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9377));
		SteamVR_Behaviour_Pose_ConnectedChangedEvent_t79FB8A09A29315BCF3A67CC1FA2D124C01D3EAE9 * L_0 = __this->get_onConnectedChanged_9();
		V_0 = (bool)((!(((RuntimeObject*)(SteamVR_Behaviour_Pose_ConnectedChangedEvent_t79FB8A09A29315BCF3A67CC1FA2D124C01D3EAE9 *)L_0) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9378));
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_0029;
		}
	}
	{
		// onConnectedChanged.Invoke(this, inputSource, connected);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9379));
		SteamVR_Behaviour_Pose_ConnectedChangedEvent_t79FB8A09A29315BCF3A67CC1FA2D124C01D3EAE9 * L_2 = __this->get_onConnectedChanged_9();
		int32_t L_3 = __this->get_inputSource_5();
		bool L_4 = ___connected2;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9385));
		NullCheck(L_2);
		UnityEvent_3_Invoke_mA7A524CEB38FBD452FBFB7274DBC451D4B72A1A9(L_2, __this, L_3, L_4, /*hidden argument*/UnityEvent_3_Invoke_mA7A524CEB38FBD452FBFB7274DBC451D4B72A1A9_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9385));
	}

IL_0029:
	{
		// if (onConnectedChangedEvent != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9380));
		DeviceConnectedChangeHandler_tAC0D58B9BE0BEF1758FC23FC5A09211DAFC695AB * L_5 = __this->get_onConnectedChangedEvent_14();
		V_1 = (bool)((!(((RuntimeObject*)(DeviceConnectedChangeHandler_tAC0D58B9BE0BEF1758FC23FC5A09211DAFC695AB *)L_5) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9381));
		bool L_6 = V_1;
		if (!L_6)
		{
			goto IL_004a;
		}
	}
	{
		// onConnectedChangedEvent.Invoke(this, inputSource, connected);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9382));
		DeviceConnectedChangeHandler_tAC0D58B9BE0BEF1758FC23FC5A09211DAFC695AB * L_7 = __this->get_onConnectedChangedEvent_14();
		int32_t L_8 = __this->get_inputSource_5();
		bool L_9 = ___connected2;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9386));
		NullCheck(L_7);
		DeviceConnectedChangeHandler_Invoke_m319B9700F2F7862457458047C29099AC3661913C(L_7, __this, L_8, L_9, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9386));
	}

IL_004a:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9383));
		return;
	}
}
// System.Void Valve.VR.SteamVR_Behaviour_Pose::OnTrackingChanged(Valve.VR.SteamVR_Action_Pose,Valve.VR.SteamVR_Input_Sources,Valve.VR.ETrackingResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_Pose_OnTrackingChanged_mF2DFC24E6DE3E73283033A8BC837663E2F041990 (SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 * __this, SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * ___changedAction0, int32_t ___changedSource1, int32_t ___trackingChanged2, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Pose_OnTrackingChanged_mF2DFC24E6DE3E73283033A8BC837663E2F041990_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	bool V_1 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___changedAction0), (&___changedSource1), (&___trackingChanged2));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Behaviour_Pose_OnTrackingChanged_mF2DFC24E6DE3E73283033A8BC837663E2F041990_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9387));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 9388));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9389));
		// if (onTrackingChanged != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9390));
		SteamVR_Behaviour_Pose_TrackingChangedEvent_tC76D95F0E8D943109311BCE1B35E1D8CDC3C2E6E * L_0 = __this->get_onTrackingChanged_10();
		V_0 = (bool)((!(((RuntimeObject*)(SteamVR_Behaviour_Pose_TrackingChangedEvent_tC76D95F0E8D943109311BCE1B35E1D8CDC3C2E6E *)L_0) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9391));
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_0022;
		}
	}
	{
		// onTrackingChanged.Invoke(this, inputSource, trackingChanged);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9392));
		SteamVR_Behaviour_Pose_TrackingChangedEvent_tC76D95F0E8D943109311BCE1B35E1D8CDC3C2E6E * L_2 = __this->get_onTrackingChanged_10();
		int32_t L_3 = __this->get_inputSource_5();
		int32_t L_4 = ___trackingChanged2;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9397));
		NullCheck(L_2);
		UnityEvent_3_Invoke_mB847F82D2B4BB89E8D28F5B0DF0427181A45A4E4(L_2, __this, L_3, L_4, /*hidden argument*/UnityEvent_3_Invoke_mB847F82D2B4BB89E8D28F5B0DF0427181A45A4E4_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9397));
	}

IL_0022:
	{
		// if (onTrackingChangedEvent != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9393));
		TrackingChangeHandler_tE2D5245E21857392ED2CCBEAD0D65408B5DC5443 * L_5 = __this->get_onTrackingChangedEvent_15();
		V_1 = (bool)((!(((RuntimeObject*)(TrackingChangeHandler_tE2D5245E21857392ED2CCBEAD0D65408B5DC5443 *)L_5) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9394));
		bool L_6 = V_1;
		if (!L_6)
		{
			goto IL_0043;
		}
	}
	{
		// onTrackingChangedEvent.Invoke(this, inputSource, trackingChanged);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9395));
		TrackingChangeHandler_tE2D5245E21857392ED2CCBEAD0D65408B5DC5443 * L_7 = __this->get_onTrackingChangedEvent_15();
		int32_t L_8 = __this->get_inputSource_5();
		int32_t L_9 = ___trackingChanged2;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9398));
		NullCheck(L_7);
		TrackingChangeHandler_Invoke_m766CD6D6E218E3D4AE18FD7E581B080E81661AE2(L_7, __this, L_8, L_9, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9398));
	}

IL_0043:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9396));
		return;
	}
}
// System.Void Valve.VR.SteamVR_Behaviour_Pose::CheckDeviceIndex()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_Pose_CheckDeviceIndex_m39CCC3BB184503F6591E65782C022ED9FE15FAAE (SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Pose_CheckDeviceIndex_m39CCC3BB184503F6591E65782C022ED9FE15FAAE_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	int32_t V_1 = 0;
	bool V_2 = false;
	bool V_3 = false;
	bool V_4 = false;
	bool V_5 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_1));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Behaviour_Pose_CheckDeviceIndex_m39CCC3BB184503F6591E65782C022ED9FE15FAAE_RuntimeMethod_var, methodExecutionContextThis, NULL, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9399));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 9400));
	int32_t G_B3_0 = 0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9401));
		// if (poseAction[inputSource].active && poseAction[inputSource].deviceIsConnected)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9402));
		SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * L_0 = __this->get_poseAction_4();
		int32_t L_1 = __this->get_inputSource_5();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9425));
		NullCheck(L_0);
		SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * L_2 = VirtFuncInvoker1< SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 *, int32_t >::Invoke(36 /* SourceElement Valve.VR.SteamVR_Action`2<Valve.VR.SteamVR_Action_Pose_Source_Map`1<Valve.VR.SteamVR_Action_Pose_Source>,Valve.VR.SteamVR_Action_Pose_Source>::get_Item(Valve.VR.SteamVR_Input_Sources) */, L_0, L_1);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9425));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9426));
		NullCheck(L_2);
		bool L_3 = VirtFuncInvoker0< bool >::Invoke(12 /* System.Boolean Valve.VR.SteamVR_Action_Source::get_active() */, L_2);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9426));
		if (!L_3)
		{
			goto IL_0031;
		}
	}
	{
		SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * L_4 = __this->get_poseAction_4();
		int32_t L_5 = __this->get_inputSource_5();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9427));
		NullCheck(L_4);
		SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * L_6 = VirtFuncInvoker1< SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 *, int32_t >::Invoke(36 /* SourceElement Valve.VR.SteamVR_Action`2<Valve.VR.SteamVR_Action_Pose_Source_Map`1<Valve.VR.SteamVR_Action_Pose_Source>,Valve.VR.SteamVR_Action_Pose_Source>::get_Item(Valve.VR.SteamVR_Input_Sources) */, L_4, L_5);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9427));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9428));
		NullCheck(L_6);
		bool L_7 = SteamVR_Action_Pose_Source_get_deviceIsConnected_mF1AE6114E98F19B5783F49FDB71381DF6D7CC963(L_6, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9428));
		G_B3_0 = ((int32_t)(L_7));
		goto IL_0032;
	}

IL_0031:
	{
		G_B3_0 = 0;
	}

IL_0032:
	{
		V_0 = (bool)G_B3_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9403));
		bool L_8 = V_0;
		if (!L_8)
		{
			goto IL_0104;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9404));
		// int currentDeviceIndex = (int)poseAction[inputSource].trackedDeviceIndex;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9405));
		SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * L_9 = __this->get_poseAction_4();
		int32_t L_10 = __this->get_inputSource_5();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9429));
		NullCheck(L_9);
		SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * L_11 = VirtFuncInvoker1< SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 *, int32_t >::Invoke(36 /* SourceElement Valve.VR.SteamVR_Action`2<Valve.VR.SteamVR_Action_Pose_Source_Map`1<Valve.VR.SteamVR_Action_Pose_Source>,Valve.VR.SteamVR_Action_Pose_Source>::get_Item(Valve.VR.SteamVR_Input_Sources) */, L_9, L_10);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9429));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9430));
		NullCheck(L_11);
		uint32_t L_12 = SteamVR_Action_In_Source_get_trackedDeviceIndex_m59E74A19E16DBA17CB6C467C0DB2B2F78FBCB9EE(L_11, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9430));
		V_1 = L_12;
		// if (deviceIndex != currentDeviceIndex)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9406));
		int32_t L_13 = __this->get_deviceIndex_18();
		int32_t L_14 = V_1;
		V_2 = (bool)((((int32_t)((((int32_t)L_13) == ((int32_t)L_14))? 1 : 0)) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9407));
		bool L_15 = V_2;
		if (!L_15)
		{
			goto IL_0103;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9408));
		// deviceIndex = currentDeviceIndex;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9409));
		int32_t L_16 = V_1;
		__this->set_deviceIndex_18(L_16);
		// if (broadcastDeviceChanges)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9410));
		bool L_17 = __this->get_broadcastDeviceChanges_17();
		V_3 = L_17;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9411));
		bool L_18 = V_3;
		if (!L_18)
		{
			goto IL_00b2;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9412));
		// this.gameObject.BroadcastMessage("SetInputSource", inputSource, SendMessageOptions.DontRequireReceiver);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9413));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9431));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_19 = Component_get_gameObject_m0B0570BA8DDD3CD78A9DB568EA18D7317686603C(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9431));
		int32_t L_20 = __this->get_inputSource_5();
		int32_t L_21 = L_20;
		RuntimeObject * L_22 = Box(SteamVR_Input_Sources_tCE41AA589FB3B9516BDE0DFABDCB4AAEA29528F7_il2cpp_TypeInfo_var, &L_21);
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9432));
		NullCheck(L_19);
		GameObject_BroadcastMessage_mDF70A40A7E27DF70B4338EBB840500A54060E33D(L_19, _stringLiteralEAC095C8508D4D9F7B01D7D09BDECE985F78C376, L_22, 1, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9432));
		// this.gameObject.BroadcastMessage("SetDeviceIndex", deviceIndex, SendMessageOptions.DontRequireReceiver);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9414));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9433));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_23 = Component_get_gameObject_m0B0570BA8DDD3CD78A9DB568EA18D7317686603C(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9433));
		int32_t L_24 = __this->get_deviceIndex_18();
		int32_t L_25 = L_24;
		RuntimeObject * L_26 = Box(Int32_t585191389E07734F19F3156FF88FB3EF4800D102_il2cpp_TypeInfo_var, &L_25);
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9434));
		NullCheck(L_23);
		GameObject_BroadcastMessage_mDF70A40A7E27DF70B4338EBB840500A54060E33D(L_23, _stringLiteralE4187BF2FD07B599844663814FE58065E3DDA0E8, L_26, 1, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9434));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9415));
	}

IL_00b2:
	{
		// if (onDeviceIndexChanged != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9416));
		SteamVR_Behaviour_Pose_DeviceIndexChangedEvent_tB4204CD58F5763D655B3B020CAEA0CD8A45D13E9 * L_27 = __this->get_onDeviceIndexChanged_11();
		V_4 = (bool)((!(((RuntimeObject*)(SteamVR_Behaviour_Pose_DeviceIndexChangedEvent_tB4204CD58F5763D655B3B020CAEA0CD8A45D13E9 *)L_27) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9417));
		bool L_28 = V_4;
		if (!L_28)
		{
			goto IL_00da;
		}
	}
	{
		// onDeviceIndexChanged.Invoke(this, inputSource, deviceIndex);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9418));
		SteamVR_Behaviour_Pose_DeviceIndexChangedEvent_tB4204CD58F5763D655B3B020CAEA0CD8A45D13E9 * L_29 = __this->get_onDeviceIndexChanged_11();
		int32_t L_30 = __this->get_inputSource_5();
		int32_t L_31 = __this->get_deviceIndex_18();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9435));
		NullCheck(L_29);
		UnityEvent_3_Invoke_mF184EA69621E2B6057B98E93802B15C7DED15615(L_29, __this, L_30, L_31, /*hidden argument*/UnityEvent_3_Invoke_mF184EA69621E2B6057B98E93802B15C7DED15615_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9435));
	}

IL_00da:
	{
		// if (onDeviceIndexChangedEvent != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9419));
		DeviceIndexChangedHandler_t5AD6CF16FBFD1AFBCAABCE86FF9A5F9958E5E988 * L_32 = __this->get_onDeviceIndexChangedEvent_16();
		V_5 = (bool)((!(((RuntimeObject*)(DeviceIndexChangedHandler_t5AD6CF16FBFD1AFBCAABCE86FF9A5F9958E5E988 *)L_32) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9420));
		bool L_33 = V_5;
		if (!L_33)
		{
			goto IL_0102;
		}
	}
	{
		// onDeviceIndexChangedEvent.Invoke(this, inputSource, deviceIndex);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9421));
		DeviceIndexChangedHandler_t5AD6CF16FBFD1AFBCAABCE86FF9A5F9958E5E988 * L_34 = __this->get_onDeviceIndexChangedEvent_16();
		int32_t L_35 = __this->get_inputSource_5();
		int32_t L_36 = __this->get_deviceIndex_18();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9436));
		NullCheck(L_34);
		DeviceIndexChangedHandler_Invoke_mAFC2F1AF706E9F9AF63EEAF83C0F2C9ED3F854C5(L_34, __this, L_35, L_36, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9436));
	}

IL_0102:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9422));
	}

IL_0103:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9423));
	}

IL_0104:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9424));
		return;
	}
}
// System.Int32 Valve.VR.SteamVR_Behaviour_Pose::GetDeviceIndex()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t SteamVR_Behaviour_Pose_GetDeviceIndex_mD5C081326EB0983D79B585EFC222B7E2F10C5DF6 (SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Pose_GetDeviceIndex_mD5C081326EB0983D79B585EFC222B7E2F10C5DF6_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	int32_t V_1 = 0;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Behaviour_Pose_GetDeviceIndex_mD5C081326EB0983D79B585EFC222B7E2F10C5DF6_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9437));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 9438));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9439));
		// if (deviceIndex == -1)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9440));
		int32_t L_0 = __this->get_deviceIndex_18();
		V_0 = (bool)((((int32_t)L_0) == ((int32_t)(-1)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9441));
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_0015;
		}
	}
	{
		// CheckDeviceIndex();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9442));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9445));
		VirtActionInvoker0::Invoke(10 /* System.Void Valve.VR.SteamVR_Behaviour_Pose::CheckDeviceIndex() */, __this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9445));
	}

IL_0015:
	{
		// return deviceIndex;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9443));
		int32_t L_2 = __this->get_deviceIndex_18();
		V_1 = L_2;
		goto IL_001e;
	}

IL_001e:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9444));
		int32_t L_3 = V_1;
		return L_3;
	}
}
// UnityEngine.Vector3 Valve.VR.SteamVR_Behaviour_Pose::GetVelocity()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  SteamVR_Behaviour_Pose_GetVelocity_mBB18AD40A0D65C96D224253A7B275B512348ADEF (SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Pose_GetVelocity_mBB18AD40A0D65C96D224253A7B275B512348ADEF_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_0;
	memset((&V_0), 0, sizeof(V_0));
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Behaviour_Pose_GetVelocity_mBB18AD40A0D65C96D224253A7B275B512348ADEF_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9446));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 9447));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9448));
		// return poseAction[inputSource].velocity;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9449));
		SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * L_0 = __this->get_poseAction_4();
		int32_t L_1 = __this->get_inputSource_5();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9451));
		NullCheck(L_0);
		SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * L_2 = VirtFuncInvoker1< SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 *, int32_t >::Invoke(36 /* SourceElement Valve.VR.SteamVR_Action`2<Valve.VR.SteamVR_Action_Pose_Source_Map`1<Valve.VR.SteamVR_Action_Pose_Source>,Valve.VR.SteamVR_Action_Pose_Source>::get_Item(Valve.VR.SteamVR_Input_Sources) */, L_0, L_1);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9451));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9452));
		NullCheck(L_2);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_3 = SteamVR_Action_Pose_Source_get_velocity_m2B71BB7981006080D113442CB374529602A310BF_inline(L_2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9452));
		V_0 = L_3;
		goto IL_001a;
	}

IL_001a:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9450));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_4 = V_0;
		return L_4;
	}
}
// UnityEngine.Vector3 Valve.VR.SteamVR_Behaviour_Pose::GetAngularVelocity()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  SteamVR_Behaviour_Pose_GetAngularVelocity_mDD92D9D3AB3DEFF686F851056814F2D2C39FE19D (SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Pose_GetAngularVelocity_mDD92D9D3AB3DEFF686F851056814F2D2C39FE19D_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_0;
	memset((&V_0), 0, sizeof(V_0));
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Behaviour_Pose_GetAngularVelocity_mDD92D9D3AB3DEFF686F851056814F2D2C39FE19D_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9453));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 9454));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9455));
		// return poseAction[inputSource].angularVelocity;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9456));
		SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * L_0 = __this->get_poseAction_4();
		int32_t L_1 = __this->get_inputSource_5();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9458));
		NullCheck(L_0);
		SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * L_2 = VirtFuncInvoker1< SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 *, int32_t >::Invoke(36 /* SourceElement Valve.VR.SteamVR_Action`2<Valve.VR.SteamVR_Action_Pose_Source_Map`1<Valve.VR.SteamVR_Action_Pose_Source>,Valve.VR.SteamVR_Action_Pose_Source>::get_Item(Valve.VR.SteamVR_Input_Sources) */, L_0, L_1);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9458));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9459));
		NullCheck(L_2);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_3 = SteamVR_Action_Pose_Source_get_angularVelocity_mACAA45CB05DB94C9292ED147F3156109DAFA0209_inline(L_2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9459));
		V_0 = L_3;
		goto IL_001a;
	}

IL_001a:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9457));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_4 = V_0;
		return L_4;
	}
}
// System.Boolean Valve.VR.SteamVR_Behaviour_Pose::GetVelocitiesAtTimeOffset(System.Single,UnityEngine.Vector3&,UnityEngine.Vector3&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Behaviour_Pose_GetVelocitiesAtTimeOffset_mB6011F8E6EF24480384B98BAA608E0C33187CB7E (SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 * __this, float ___secondsFromNow0, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * ___velocity1, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * ___angularVelocity2, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Pose_GetVelocitiesAtTimeOffset_mB6011F8E6EF24480384B98BAA608E0C33187CB7E_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___secondsFromNow0), (&___velocity1), (&___angularVelocity2));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Behaviour_Pose_GetVelocitiesAtTimeOffset_mB6011F8E6EF24480384B98BAA608E0C33187CB7E_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9460));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 9461));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9462));
		// return poseAction[inputSource].GetVelocitiesAtTimeOffset(secondsFromNow, out velocity, out angularVelocity);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9463));
		SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * L_0 = __this->get_poseAction_4();
		int32_t L_1 = __this->get_inputSource_5();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9465));
		NullCheck(L_0);
		SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * L_2 = VirtFuncInvoker1< SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 *, int32_t >::Invoke(36 /* SourceElement Valve.VR.SteamVR_Action`2<Valve.VR.SteamVR_Action_Pose_Source_Map`1<Valve.VR.SteamVR_Action_Pose_Source>,Valve.VR.SteamVR_Action_Pose_Source>::get_Item(Valve.VR.SteamVR_Input_Sources) */, L_0, L_1);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9465));
		float L_3 = ___secondsFromNow0;
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * L_4 = ___velocity1;
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * L_5 = ___angularVelocity2;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9466));
		NullCheck(L_2);
		bool L_6 = SteamVR_Action_Pose_Source_GetVelocitiesAtTimeOffset_m68F72C5D84CF5620C5FF8978BCCC52B3F79C7935(L_2, L_3, (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 *)L_4, (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 *)L_5, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9466));
		V_0 = L_6;
		goto IL_001d;
	}

IL_001d:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9464));
		bool L_7 = V_0;
		return L_7;
	}
}
// System.Void Valve.VR.SteamVR_Behaviour_Pose::GetEstimatedPeakVelocities(UnityEngine.Vector3&,UnityEngine.Vector3&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_Pose_GetEstimatedPeakVelocities_m19E354C022B6413EAB6BD2B329D7EEF8B9B6BE39 (SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * ___velocity0, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * ___angularVelocity1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Pose_GetEstimatedPeakVelocities_m19E354C022B6413EAB6BD2B329D7EEF8B9B6BE39_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	int32_t V_0 = 0;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___velocity0), (&___angularVelocity1));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Behaviour_Pose_GetEstimatedPeakVelocities_m19E354C022B6413EAB6BD2B329D7EEF8B9B6BE39_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9467));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 9468));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9469));
		// int top = historyBuffer.GetTopVelocity(10, 1);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9470));
		SteamVR_HistoryBuffer_tB82B2932C03165695AE1BE7BE8EDCADC6AE4A6E8 * L_0 = __this->get_historyBuffer_19();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9473));
		NullCheck(L_0);
		int32_t L_1 = SteamVR_HistoryBuffer_GetTopVelocity_m5535E2C2A7901787B4389A2A4DEF684242BED659(L_0, ((int32_t)10), 1, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9473));
		V_0 = L_1;
		// historyBuffer.GetAverageVelocities(out velocity, out angularVelocity, 2, top);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9471));
		SteamVR_HistoryBuffer_tB82B2932C03165695AE1BE7BE8EDCADC6AE4A6E8 * L_2 = __this->get_historyBuffer_19();
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * L_3 = ___velocity0;
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * L_4 = ___angularVelocity1;
		int32_t L_5 = V_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9474));
		NullCheck(L_2);
		SteamVR_HistoryBuffer_GetAverageVelocities_mE13684826F9D7B93A242BFB733653CAB1EB5B2AE(L_2, (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 *)L_3, (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 *)L_4, 2, L_5, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9474));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9472));
		return;
	}
}
// System.Void Valve.VR.SteamVR_Behaviour_Pose::UpdateHistoryBuffer()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_Pose_UpdateHistoryBuffer_mE526E02932EAB531F93E8AB336EBBE7BB880E120 (SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Pose_UpdateHistoryBuffer_mE526E02932EAB531F93E8AB336EBBE7BB880E120_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	int32_t V_0 = 0;
	bool V_1 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Behaviour_Pose_UpdateHistoryBuffer_mE526E02932EAB531F93E8AB336EBBE7BB880E120_RuntimeMethod_var, methodExecutionContextThis, NULL, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9475));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 9476));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9477));
		// int currentFrame = Time.frameCount;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9478));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9486));
		int32_t L_0 = Time_get_frameCount_m97573E267B487B8FD4BF37615AFC19BED7B4E436(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9486));
		V_0 = L_0;
		// if (lastFrameUpdated != currentFrame)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9479));
		int32_t L_1 = __this->get_lastFrameUpdated_20();
		int32_t L_2 = V_0;
		V_1 = (bool)((((int32_t)((((int32_t)L_1) == ((int32_t)L_2))? 1 : 0)) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9480));
		bool L_3 = V_1;
		if (!L_3)
		{
			goto IL_0084;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9481));
		// historyBuffer.Update(poseAction[inputSource].localPosition, poseAction[inputSource].localRotation, poseAction[inputSource].velocity, poseAction[inputSource].angularVelocity);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9482));
		SteamVR_HistoryBuffer_tB82B2932C03165695AE1BE7BE8EDCADC6AE4A6E8 * L_4 = __this->get_historyBuffer_19();
		SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * L_5 = __this->get_poseAction_4();
		int32_t L_6 = __this->get_inputSource_5();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9487));
		NullCheck(L_5);
		SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * L_7 = VirtFuncInvoker1< SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 *, int32_t >::Invoke(36 /* SourceElement Valve.VR.SteamVR_Action`2<Valve.VR.SteamVR_Action_Pose_Source_Map`1<Valve.VR.SteamVR_Action_Pose_Source>,Valve.VR.SteamVR_Action_Pose_Source>::get_Item(Valve.VR.SteamVR_Input_Sources) */, L_5, L_6);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9487));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9488));
		NullCheck(L_7);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_8 = SteamVR_Action_Pose_Source_get_localPosition_mE065A826D8D1A8CF44D9E7F0D038F24D70985833_inline(L_7, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9488));
		SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * L_9 = __this->get_poseAction_4();
		int32_t L_10 = __this->get_inputSource_5();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9489));
		NullCheck(L_9);
		SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * L_11 = VirtFuncInvoker1< SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 *, int32_t >::Invoke(36 /* SourceElement Valve.VR.SteamVR_Action`2<Valve.VR.SteamVR_Action_Pose_Source_Map`1<Valve.VR.SteamVR_Action_Pose_Source>,Valve.VR.SteamVR_Action_Pose_Source>::get_Item(Valve.VR.SteamVR_Input_Sources) */, L_9, L_10);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9489));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9490));
		NullCheck(L_11);
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_12 = SteamVR_Action_Pose_Source_get_localRotation_m307D9DD92DFFFCC30446A71D9BD15674A797ED2A_inline(L_11, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9490));
		SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * L_13 = __this->get_poseAction_4();
		int32_t L_14 = __this->get_inputSource_5();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9491));
		NullCheck(L_13);
		SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * L_15 = VirtFuncInvoker1< SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 *, int32_t >::Invoke(36 /* SourceElement Valve.VR.SteamVR_Action`2<Valve.VR.SteamVR_Action_Pose_Source_Map`1<Valve.VR.SteamVR_Action_Pose_Source>,Valve.VR.SteamVR_Action_Pose_Source>::get_Item(Valve.VR.SteamVR_Input_Sources) */, L_13, L_14);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9491));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9492));
		NullCheck(L_15);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_16 = SteamVR_Action_Pose_Source_get_velocity_m2B71BB7981006080D113442CB374529602A310BF_inline(L_15, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9492));
		SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * L_17 = __this->get_poseAction_4();
		int32_t L_18 = __this->get_inputSource_5();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9493));
		NullCheck(L_17);
		SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * L_19 = VirtFuncInvoker1< SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 *, int32_t >::Invoke(36 /* SourceElement Valve.VR.SteamVR_Action`2<Valve.VR.SteamVR_Action_Pose_Source_Map`1<Valve.VR.SteamVR_Action_Pose_Source>,Valve.VR.SteamVR_Action_Pose_Source>::get_Item(Valve.VR.SteamVR_Input_Sources) */, L_17, L_18);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9493));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9494));
		NullCheck(L_19);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_20 = SteamVR_Action_Pose_Source_get_angularVelocity_mACAA45CB05DB94C9292ED147F3156109DAFA0209_inline(L_19, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9494));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9495));
		NullCheck(L_4);
		SteamVR_HistoryBuffer_Update_mB5AE66DC0E520253A10D559BB42199E8A6F4DE7B(L_4, L_8, L_12, L_16, L_20, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9495));
		// lastFrameUpdated = currentFrame;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9483));
		int32_t L_21 = V_0;
		__this->set_lastFrameUpdated_20(L_21);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9484));
	}

IL_0084:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9485));
		return;
	}
}
// System.String Valve.VR.SteamVR_Behaviour_Pose::GetLocalizedName(Valve.VR.EVRInputStringBits[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR String_t* SteamVR_Behaviour_Pose_GetLocalizedName_mA5196F8EE8CF059F362E93532D9E30C95C4D73C4 (SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 * __this, EVRInputStringBitsU5BU5D_t9F9E9B47CD745CAAB4F8EDC305D84DDF9E5BE511* ___localizedParts0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Pose_GetLocalizedName_mA5196F8EE8CF059F362E93532D9E30C95C4D73C4_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	String_t* V_1 = NULL;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___localizedParts0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Behaviour_Pose_GetLocalizedName_mA5196F8EE8CF059F362E93532D9E30C95C4D73C4_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9496));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 9497));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9498));
		// if (poseAction != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9499));
		SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * L_0 = __this->get_poseAction_4();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9504));
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734_il2cpp_TypeInfo_var);
		bool L_1 = SteamVR_Action_op_Inequality_m7114B6E3669F8C55CD3B5E4EC3A897648CBD0F8A(L_0, (SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9504));
		V_0 = L_1;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9500));
		bool L_2 = V_0;
		if (!L_2)
		{
			goto IL_0026;
		}
	}
	{
		// return poseAction.GetLocalizedOriginPart(inputSource, localizedParts);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9501));
		SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * L_3 = __this->get_poseAction_4();
		int32_t L_4 = __this->get_inputSource_5();
		EVRInputStringBitsU5BU5D_t9F9E9B47CD745CAAB4F8EDC305D84DDF9E5BE511* L_5 = ___localizedParts0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9505));
		NullCheck(L_3);
		String_t* L_6 = SteamVR_Action_In_2_GetLocalizedOriginPart_m06290187FCD54E2017BE7941CE0276DB4CFC24C4(L_3, L_4, L_5, /*hidden argument*/SteamVR_Action_In_2_GetLocalizedOriginPart_m06290187FCD54E2017BE7941CE0276DB4CFC24C4_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9505));
		V_1 = L_6;
		goto IL_002a;
	}

IL_0026:
	{
		// return null;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9502));
		V_1 = (String_t*)NULL;
		goto IL_002a;
	}

IL_002a:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9503));
		String_t* L_7 = V_1;
		return L_7;
	}
}
// System.Void Valve.VR.SteamVR_Behaviour_Pose::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_Pose__ctor_mC67126471413E301FCA36B9CB5624F7687A66FCB (SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Pose__ctor_mC67126471413E301FCA36B9CB5624F7687A66FCB_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Behaviour_Pose__ctor_mC67126471413E301FCA36B9CB5624F7687A66FCB_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9506));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 9507));
	{
		// public SteamVR_Action_Pose poseAction = SteamVR_Input.GetAction<SteamVR_Action_Pose>("Pose");
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9508));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9512));
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Input_tCE4A1EC6C51592CB9DCD7B860984CB2C4DD937BF_il2cpp_TypeInfo_var);
		SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * L_0 = SteamVR_Input_GetAction_TisSteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C_m6017595F00FF03D62CBFF0C3009BCD3A0C1BAB40(_stringLiteralD92A04E3CAD38B3C3435F2D66D371A05D88CCDE8, (bool)0, /*hidden argument*/SteamVR_Input_GetAction_TisSteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C_m6017595F00FF03D62CBFF0C3009BCD3A0C1BAB40_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9512));
		__this->set_poseAction_4(L_0);
		// public bool broadcastDeviceChanges = true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9509));
		__this->set_broadcastDeviceChanges_17((bool)1);
		// protected int deviceIndex = -1;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9510));
		__this->set_deviceIndex_18((-1));
		// protected SteamVR_HistoryBuffer historyBuffer = new SteamVR_HistoryBuffer(30);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9511));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9513));
		SteamVR_HistoryBuffer_tB82B2932C03165695AE1BE7BE8EDCADC6AE4A6E8 * L_1 = (SteamVR_HistoryBuffer_tB82B2932C03165695AE1BE7BE8EDCADC6AE4A6E8 *)il2cpp_codegen_object_new(SteamVR_HistoryBuffer_tB82B2932C03165695AE1BE7BE8EDCADC6AE4A6E8_il2cpp_TypeInfo_var);
		SteamVR_HistoryBuffer__ctor_mF1CDA69BC169476E9636EC6159D2C8FBA8634CDF(L_1, ((int32_t)30), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9513));
		__this->set_historyBuffer_19(L_1);
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9514));
		MonoBehaviour__ctor_mEAEC84B222C60319D593E456D769B3311DFCEF97(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9514));
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Valve.VR.SteamVR_Behaviour_Pose_ActiveChangeHandler::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ActiveChangeHandler__ctor_mB66EC9563A23D839B6BFA66A8561763EC24B202C (ActiveChangeHandler_t1FB373EFCE81765E92E8482D412853F249193DDA * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Void Valve.VR.SteamVR_Behaviour_Pose_ActiveChangeHandler::Invoke(Valve.VR.SteamVR_Behaviour_Pose,Valve.VR.SteamVR_Input_Sources,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ActiveChangeHandler_Invoke_mD462973D959F683C89F77DF15516E714C35EA953 (ActiveChangeHandler_t1FB373EFCE81765E92E8482D412853F249193DDA * __this, SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 * ___fromAction0, int32_t ___fromSource1, bool ___active2, const RuntimeMethod* method)
{
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 3)
			{
				// open
				typedef void (*FunctionPointerType) (SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 *, int32_t, bool, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___active2, targetMethod);
			}
			else
			{
				// closed
				typedef void (*FunctionPointerType) (void*, SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 *, int32_t, bool, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___fromSource1, ___active2, targetMethod);
			}
		}
		else if (___parameterCount != 3)
		{
			// open
			if (il2cpp_codegen_method_is_virtual(targetMethod) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker2< int32_t, bool >::Invoke(targetMethod, ___fromAction0, ___fromSource1, ___active2);
					else
						GenericVirtActionInvoker2< int32_t, bool >::Invoke(targetMethod, ___fromAction0, ___fromSource1, ___active2);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker2< int32_t, bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), ___fromAction0, ___fromSource1, ___active2);
					else
						VirtActionInvoker2< int32_t, bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), ___fromAction0, ___fromSource1, ___active2);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(&___fromSource1) - 1), ___active2, targetMethod);
				}
				typedef void (*FunctionPointerType) (SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 *, int32_t, bool, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___active2, targetMethod);
			}
		}
		else
		{
			// closed
			if (targetThis != NULL && il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker3< SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 *, int32_t, bool >::Invoke(targetMethod, targetThis, ___fromAction0, ___fromSource1, ___active2);
					else
						GenericVirtActionInvoker3< SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 *, int32_t, bool >::Invoke(targetMethod, targetThis, ___fromAction0, ___fromSource1, ___active2);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker3< SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 *, int32_t, bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___fromAction0, ___fromSource1, ___active2);
					else
						VirtActionInvoker3< SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 *, int32_t, bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___fromAction0, ___fromSource1, ___active2);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, int32_t, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(___fromAction0) - 1), ___fromSource1, ___active2, targetMethod);
				}
				if (targetThis == NULL)
				{
					typedef void (*FunctionPointerType) (SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 *, int32_t, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___active2, targetMethod);
				}
				else
				{
					typedef void (*FunctionPointerType) (void*, SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 *, int32_t, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___fromSource1, ___active2, targetMethod);
				}
			}
		}
	}
}
// System.IAsyncResult Valve.VR.SteamVR_Behaviour_Pose_ActiveChangeHandler::BeginInvoke(Valve.VR.SteamVR_Behaviour_Pose,Valve.VR.SteamVR_Input_Sources,System.Boolean,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* ActiveChangeHandler_BeginInvoke_m9EFC58B55DD7CDEDE87787F2B0B53DE1B4DBFB01 (ActiveChangeHandler_t1FB373EFCE81765E92E8482D412853F249193DDA * __this, SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 * ___fromAction0, int32_t ___fromSource1, bool ___active2, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback3, RuntimeObject * ___object4, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (ActiveChangeHandler_BeginInvoke_m9EFC58B55DD7CDEDE87787F2B0B53DE1B4DBFB01_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[4] = {0};
	__d_args[0] = ___fromAction0;
	__d_args[1] = Box(SteamVR_Input_Sources_tCE41AA589FB3B9516BDE0DFABDCB4AAEA29528F7_il2cpp_TypeInfo_var, &___fromSource1);
	__d_args[2] = Box(Boolean_tB53F6830F670160873277339AA58F15CAED4399C_il2cpp_TypeInfo_var, &___active2);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback3, (RuntimeObject*)___object4);
}
// System.Void Valve.VR.SteamVR_Behaviour_Pose_ActiveChangeHandler::EndInvoke(System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ActiveChangeHandler_EndInvoke_mE7108F88113F33A325B072B26DC4A34D2782F532 (ActiveChangeHandler_t1FB373EFCE81765E92E8482D412853F249193DDA * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Valve.VR.SteamVR_Behaviour_Pose_ChangeHandler::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ChangeHandler__ctor_m17F26F551917CEB8F30ED3D55C9D83AE66FC5E61 (ChangeHandler_t62B565E3F59005232530941762BA9C99466E7190 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Void Valve.VR.SteamVR_Behaviour_Pose_ChangeHandler::Invoke(Valve.VR.SteamVR_Behaviour_Pose,Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ChangeHandler_Invoke_m8CADF14E5C6D8F024A2391FA19D762981F26C7FE (ChangeHandler_t62B565E3F59005232530941762BA9C99466E7190 * __this, SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 * ___fromAction0, int32_t ___fromSource1, const RuntimeMethod* method)
{
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 2)
			{
				// open
				typedef void (*FunctionPointerType) (SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 *, int32_t, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, targetMethod);
			}
			else
			{
				// closed
				typedef void (*FunctionPointerType) (void*, SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 *, int32_t, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___fromSource1, targetMethod);
			}
		}
		else if (___parameterCount != 2)
		{
			// open
			if (il2cpp_codegen_method_is_virtual(targetMethod) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker1< int32_t >::Invoke(targetMethod, ___fromAction0, ___fromSource1);
					else
						GenericVirtActionInvoker1< int32_t >::Invoke(targetMethod, ___fromAction0, ___fromSource1);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker1< int32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), ___fromAction0, ___fromSource1);
					else
						VirtActionInvoker1< int32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), ___fromAction0, ___fromSource1);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(&___fromSource1) - 1), targetMethod);
				}
				typedef void (*FunctionPointerType) (SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 *, int32_t, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, targetMethod);
			}
		}
		else
		{
			// closed
			if (targetThis != NULL && il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker2< SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 *, int32_t >::Invoke(targetMethod, targetThis, ___fromAction0, ___fromSource1);
					else
						GenericVirtActionInvoker2< SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 *, int32_t >::Invoke(targetMethod, targetThis, ___fromAction0, ___fromSource1);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker2< SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 *, int32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___fromAction0, ___fromSource1);
					else
						VirtActionInvoker2< SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 *, int32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___fromAction0, ___fromSource1);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, int32_t, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(___fromAction0) - 1), ___fromSource1, targetMethod);
				}
				if (targetThis == NULL)
				{
					typedef void (*FunctionPointerType) (SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 *, int32_t, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, targetMethod);
				}
				else
				{
					typedef void (*FunctionPointerType) (void*, SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 *, int32_t, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___fromSource1, targetMethod);
				}
			}
		}
	}
}
// System.IAsyncResult Valve.VR.SteamVR_Behaviour_Pose_ChangeHandler::BeginInvoke(Valve.VR.SteamVR_Behaviour_Pose,Valve.VR.SteamVR_Input_Sources,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* ChangeHandler_BeginInvoke_m568B3F3E3D3E3471C79763C106FC6BB787AC63DE (ChangeHandler_t62B565E3F59005232530941762BA9C99466E7190 * __this, SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 * ___fromAction0, int32_t ___fromSource1, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback2, RuntimeObject * ___object3, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (ChangeHandler_BeginInvoke_m568B3F3E3D3E3471C79763C106FC6BB787AC63DE_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[3] = {0};
	__d_args[0] = ___fromAction0;
	__d_args[1] = Box(SteamVR_Input_Sources_tCE41AA589FB3B9516BDE0DFABDCB4AAEA29528F7_il2cpp_TypeInfo_var, &___fromSource1);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback2, (RuntimeObject*)___object3);
}
// System.Void Valve.VR.SteamVR_Behaviour_Pose_ChangeHandler::EndInvoke(System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ChangeHandler_EndInvoke_m2550C841FB6D4688416776337AEDA3CAF5DEA0C5 (ChangeHandler_t62B565E3F59005232530941762BA9C99466E7190 * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Valve.VR.SteamVR_Behaviour_Pose_DeviceConnectedChangeHandler::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void DeviceConnectedChangeHandler__ctor_m211BB659BD49FD322F43D6A19407786CB8401FCF (DeviceConnectedChangeHandler_tAC0D58B9BE0BEF1758FC23FC5A09211DAFC695AB * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Void Valve.VR.SteamVR_Behaviour_Pose_DeviceConnectedChangeHandler::Invoke(Valve.VR.SteamVR_Behaviour_Pose,Valve.VR.SteamVR_Input_Sources,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void DeviceConnectedChangeHandler_Invoke_m319B9700F2F7862457458047C29099AC3661913C (DeviceConnectedChangeHandler_tAC0D58B9BE0BEF1758FC23FC5A09211DAFC695AB * __this, SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 * ___fromAction0, int32_t ___fromSource1, bool ___deviceConnected2, const RuntimeMethod* method)
{
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 3)
			{
				// open
				typedef void (*FunctionPointerType) (SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 *, int32_t, bool, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___deviceConnected2, targetMethod);
			}
			else
			{
				// closed
				typedef void (*FunctionPointerType) (void*, SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 *, int32_t, bool, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___fromSource1, ___deviceConnected2, targetMethod);
			}
		}
		else if (___parameterCount != 3)
		{
			// open
			if (il2cpp_codegen_method_is_virtual(targetMethod) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker2< int32_t, bool >::Invoke(targetMethod, ___fromAction0, ___fromSource1, ___deviceConnected2);
					else
						GenericVirtActionInvoker2< int32_t, bool >::Invoke(targetMethod, ___fromAction0, ___fromSource1, ___deviceConnected2);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker2< int32_t, bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), ___fromAction0, ___fromSource1, ___deviceConnected2);
					else
						VirtActionInvoker2< int32_t, bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), ___fromAction0, ___fromSource1, ___deviceConnected2);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(&___fromSource1) - 1), ___deviceConnected2, targetMethod);
				}
				typedef void (*FunctionPointerType) (SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 *, int32_t, bool, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___deviceConnected2, targetMethod);
			}
		}
		else
		{
			// closed
			if (targetThis != NULL && il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker3< SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 *, int32_t, bool >::Invoke(targetMethod, targetThis, ___fromAction0, ___fromSource1, ___deviceConnected2);
					else
						GenericVirtActionInvoker3< SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 *, int32_t, bool >::Invoke(targetMethod, targetThis, ___fromAction0, ___fromSource1, ___deviceConnected2);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker3< SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 *, int32_t, bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___fromAction0, ___fromSource1, ___deviceConnected2);
					else
						VirtActionInvoker3< SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 *, int32_t, bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___fromAction0, ___fromSource1, ___deviceConnected2);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, int32_t, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(___fromAction0) - 1), ___fromSource1, ___deviceConnected2, targetMethod);
				}
				if (targetThis == NULL)
				{
					typedef void (*FunctionPointerType) (SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 *, int32_t, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___deviceConnected2, targetMethod);
				}
				else
				{
					typedef void (*FunctionPointerType) (void*, SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 *, int32_t, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___fromSource1, ___deviceConnected2, targetMethod);
				}
			}
		}
	}
}
// System.IAsyncResult Valve.VR.SteamVR_Behaviour_Pose_DeviceConnectedChangeHandler::BeginInvoke(Valve.VR.SteamVR_Behaviour_Pose,Valve.VR.SteamVR_Input_Sources,System.Boolean,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* DeviceConnectedChangeHandler_BeginInvoke_m7F6303D252D3958EFC6FBFB88C39A7CAB730D808 (DeviceConnectedChangeHandler_tAC0D58B9BE0BEF1758FC23FC5A09211DAFC695AB * __this, SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 * ___fromAction0, int32_t ___fromSource1, bool ___deviceConnected2, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback3, RuntimeObject * ___object4, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (DeviceConnectedChangeHandler_BeginInvoke_m7F6303D252D3958EFC6FBFB88C39A7CAB730D808_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[4] = {0};
	__d_args[0] = ___fromAction0;
	__d_args[1] = Box(SteamVR_Input_Sources_tCE41AA589FB3B9516BDE0DFABDCB4AAEA29528F7_il2cpp_TypeInfo_var, &___fromSource1);
	__d_args[2] = Box(Boolean_tB53F6830F670160873277339AA58F15CAED4399C_il2cpp_TypeInfo_var, &___deviceConnected2);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback3, (RuntimeObject*)___object4);
}
// System.Void Valve.VR.SteamVR_Behaviour_Pose_DeviceConnectedChangeHandler::EndInvoke(System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void DeviceConnectedChangeHandler_EndInvoke_m4351DB3775B80CE311151FF678830F65AEA9E2F8 (DeviceConnectedChangeHandler_tAC0D58B9BE0BEF1758FC23FC5A09211DAFC695AB * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Valve.VR.SteamVR_Behaviour_Pose_DeviceIndexChangedHandler::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void DeviceIndexChangedHandler__ctor_m3A1B88D51620E23309539B6E2DE49222FD1D848F (DeviceIndexChangedHandler_t5AD6CF16FBFD1AFBCAABCE86FF9A5F9958E5E988 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Void Valve.VR.SteamVR_Behaviour_Pose_DeviceIndexChangedHandler::Invoke(Valve.VR.SteamVR_Behaviour_Pose,Valve.VR.SteamVR_Input_Sources,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void DeviceIndexChangedHandler_Invoke_mAFC2F1AF706E9F9AF63EEAF83C0F2C9ED3F854C5 (DeviceIndexChangedHandler_t5AD6CF16FBFD1AFBCAABCE86FF9A5F9958E5E988 * __this, SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 * ___fromAction0, int32_t ___fromSource1, int32_t ___newDeviceIndex2, const RuntimeMethod* method)
{
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 3)
			{
				// open
				typedef void (*FunctionPointerType) (SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 *, int32_t, int32_t, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___newDeviceIndex2, targetMethod);
			}
			else
			{
				// closed
				typedef void (*FunctionPointerType) (void*, SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 *, int32_t, int32_t, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___fromSource1, ___newDeviceIndex2, targetMethod);
			}
		}
		else if (___parameterCount != 3)
		{
			// open
			if (il2cpp_codegen_method_is_virtual(targetMethod) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker2< int32_t, int32_t >::Invoke(targetMethod, ___fromAction0, ___fromSource1, ___newDeviceIndex2);
					else
						GenericVirtActionInvoker2< int32_t, int32_t >::Invoke(targetMethod, ___fromAction0, ___fromSource1, ___newDeviceIndex2);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker2< int32_t, int32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), ___fromAction0, ___fromSource1, ___newDeviceIndex2);
					else
						VirtActionInvoker2< int32_t, int32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), ___fromAction0, ___fromSource1, ___newDeviceIndex2);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, int32_t, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(&___fromSource1) - 1), ___newDeviceIndex2, targetMethod);
				}
				typedef void (*FunctionPointerType) (SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 *, int32_t, int32_t, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___newDeviceIndex2, targetMethod);
			}
		}
		else
		{
			// closed
			if (targetThis != NULL && il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker3< SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 *, int32_t, int32_t >::Invoke(targetMethod, targetThis, ___fromAction0, ___fromSource1, ___newDeviceIndex2);
					else
						GenericVirtActionInvoker3< SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 *, int32_t, int32_t >::Invoke(targetMethod, targetThis, ___fromAction0, ___fromSource1, ___newDeviceIndex2);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker3< SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 *, int32_t, int32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___fromAction0, ___fromSource1, ___newDeviceIndex2);
					else
						VirtActionInvoker3< SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 *, int32_t, int32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___fromAction0, ___fromSource1, ___newDeviceIndex2);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, int32_t, int32_t, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(___fromAction0) - 1), ___fromSource1, ___newDeviceIndex2, targetMethod);
				}
				if (targetThis == NULL)
				{
					typedef void (*FunctionPointerType) (SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 *, int32_t, int32_t, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___newDeviceIndex2, targetMethod);
				}
				else
				{
					typedef void (*FunctionPointerType) (void*, SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 *, int32_t, int32_t, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___fromSource1, ___newDeviceIndex2, targetMethod);
				}
			}
		}
	}
}
// System.IAsyncResult Valve.VR.SteamVR_Behaviour_Pose_DeviceIndexChangedHandler::BeginInvoke(Valve.VR.SteamVR_Behaviour_Pose,Valve.VR.SteamVR_Input_Sources,System.Int32,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* DeviceIndexChangedHandler_BeginInvoke_m3EA06069FF0751CCC7FB5C16942FC12934E6D0AB (DeviceIndexChangedHandler_t5AD6CF16FBFD1AFBCAABCE86FF9A5F9958E5E988 * __this, SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 * ___fromAction0, int32_t ___fromSource1, int32_t ___newDeviceIndex2, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback3, RuntimeObject * ___object4, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (DeviceIndexChangedHandler_BeginInvoke_m3EA06069FF0751CCC7FB5C16942FC12934E6D0AB_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[4] = {0};
	__d_args[0] = ___fromAction0;
	__d_args[1] = Box(SteamVR_Input_Sources_tCE41AA589FB3B9516BDE0DFABDCB4AAEA29528F7_il2cpp_TypeInfo_var, &___fromSource1);
	__d_args[2] = Box(Int32_t585191389E07734F19F3156FF88FB3EF4800D102_il2cpp_TypeInfo_var, &___newDeviceIndex2);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback3, (RuntimeObject*)___object4);
}
// System.Void Valve.VR.SteamVR_Behaviour_Pose_DeviceIndexChangedHandler::EndInvoke(System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void DeviceIndexChangedHandler_EndInvoke_m8AE8652F6F41E42C1079069C4C4237B46EBEF9C1 (DeviceIndexChangedHandler_t5AD6CF16FBFD1AFBCAABCE86FF9A5F9958E5E988 * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Valve.VR.SteamVR_Behaviour_Pose_TrackingChangeHandler::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void TrackingChangeHandler__ctor_m0A86E7FDAA608811EC26B60374A849387A6FE62F (TrackingChangeHandler_tE2D5245E21857392ED2CCBEAD0D65408B5DC5443 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Void Valve.VR.SteamVR_Behaviour_Pose_TrackingChangeHandler::Invoke(Valve.VR.SteamVR_Behaviour_Pose,Valve.VR.SteamVR_Input_Sources,Valve.VR.ETrackingResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void TrackingChangeHandler_Invoke_m766CD6D6E218E3D4AE18FD7E581B080E81661AE2 (TrackingChangeHandler_tE2D5245E21857392ED2CCBEAD0D65408B5DC5443 * __this, SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 * ___fromAction0, int32_t ___fromSource1, int32_t ___trackingState2, const RuntimeMethod* method)
{
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 3)
			{
				// open
				typedef void (*FunctionPointerType) (SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 *, int32_t, int32_t, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___trackingState2, targetMethod);
			}
			else
			{
				// closed
				typedef void (*FunctionPointerType) (void*, SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 *, int32_t, int32_t, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___fromSource1, ___trackingState2, targetMethod);
			}
		}
		else if (___parameterCount != 3)
		{
			// open
			if (il2cpp_codegen_method_is_virtual(targetMethod) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker2< int32_t, int32_t >::Invoke(targetMethod, ___fromAction0, ___fromSource1, ___trackingState2);
					else
						GenericVirtActionInvoker2< int32_t, int32_t >::Invoke(targetMethod, ___fromAction0, ___fromSource1, ___trackingState2);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker2< int32_t, int32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), ___fromAction0, ___fromSource1, ___trackingState2);
					else
						VirtActionInvoker2< int32_t, int32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), ___fromAction0, ___fromSource1, ___trackingState2);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, int32_t, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(&___fromSource1) - 1), ___trackingState2, targetMethod);
				}
				typedef void (*FunctionPointerType) (SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 *, int32_t, int32_t, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___trackingState2, targetMethod);
			}
		}
		else
		{
			// closed
			if (targetThis != NULL && il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker3< SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 *, int32_t, int32_t >::Invoke(targetMethod, targetThis, ___fromAction0, ___fromSource1, ___trackingState2);
					else
						GenericVirtActionInvoker3< SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 *, int32_t, int32_t >::Invoke(targetMethod, targetThis, ___fromAction0, ___fromSource1, ___trackingState2);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker3< SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 *, int32_t, int32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___fromAction0, ___fromSource1, ___trackingState2);
					else
						VirtActionInvoker3< SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 *, int32_t, int32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___fromAction0, ___fromSource1, ___trackingState2);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, int32_t, int32_t, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(___fromAction0) - 1), ___fromSource1, ___trackingState2, targetMethod);
				}
				if (targetThis == NULL)
				{
					typedef void (*FunctionPointerType) (SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 *, int32_t, int32_t, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___trackingState2, targetMethod);
				}
				else
				{
					typedef void (*FunctionPointerType) (void*, SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 *, int32_t, int32_t, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___fromSource1, ___trackingState2, targetMethod);
				}
			}
		}
	}
}
// System.IAsyncResult Valve.VR.SteamVR_Behaviour_Pose_TrackingChangeHandler::BeginInvoke(Valve.VR.SteamVR_Behaviour_Pose,Valve.VR.SteamVR_Input_Sources,Valve.VR.ETrackingResult,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* TrackingChangeHandler_BeginInvoke_m00461B7455FB2690F02EF8F8DD48C5AF8FDEEA38 (TrackingChangeHandler_tE2D5245E21857392ED2CCBEAD0D65408B5DC5443 * __this, SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 * ___fromAction0, int32_t ___fromSource1, int32_t ___trackingState2, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback3, RuntimeObject * ___object4, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (TrackingChangeHandler_BeginInvoke_m00461B7455FB2690F02EF8F8DD48C5AF8FDEEA38_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[4] = {0};
	__d_args[0] = ___fromAction0;
	__d_args[1] = Box(SteamVR_Input_Sources_tCE41AA589FB3B9516BDE0DFABDCB4AAEA29528F7_il2cpp_TypeInfo_var, &___fromSource1);
	__d_args[2] = Box(ETrackingResult_t989C2212A7DBCBBF86EA2C1E776BC60223B3126E_il2cpp_TypeInfo_var, &___trackingState2);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback3, (RuntimeObject*)___object4);
}
// System.Void Valve.VR.SteamVR_Behaviour_Pose_TrackingChangeHandler::EndInvoke(System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void TrackingChangeHandler_EndInvoke_m312664EADB4118DCABFC1624CC5D448416674DED (TrackingChangeHandler_tE2D5245E21857392ED2CCBEAD0D65408B5DC5443 * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Valve.VR.SteamVR_Behaviour_Pose_UpdateHandler::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UpdateHandler__ctor_m2EBCB63FBD2D58C350B94F576E2F42BE398444E2 (UpdateHandler_t7F4B3FFE3096B37EB5424E580DA100C61857DC4D * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Void Valve.VR.SteamVR_Behaviour_Pose_UpdateHandler::Invoke(Valve.VR.SteamVR_Behaviour_Pose,Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UpdateHandler_Invoke_mD8E094DE1D96502467EB3BCE1F23E60B1DDC328B (UpdateHandler_t7F4B3FFE3096B37EB5424E580DA100C61857DC4D * __this, SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 * ___fromAction0, int32_t ___fromSource1, const RuntimeMethod* method)
{
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 2)
			{
				// open
				typedef void (*FunctionPointerType) (SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 *, int32_t, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, targetMethod);
			}
			else
			{
				// closed
				typedef void (*FunctionPointerType) (void*, SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 *, int32_t, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___fromSource1, targetMethod);
			}
		}
		else if (___parameterCount != 2)
		{
			// open
			if (il2cpp_codegen_method_is_virtual(targetMethod) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker1< int32_t >::Invoke(targetMethod, ___fromAction0, ___fromSource1);
					else
						GenericVirtActionInvoker1< int32_t >::Invoke(targetMethod, ___fromAction0, ___fromSource1);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker1< int32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), ___fromAction0, ___fromSource1);
					else
						VirtActionInvoker1< int32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), ___fromAction0, ___fromSource1);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(&___fromSource1) - 1), targetMethod);
				}
				typedef void (*FunctionPointerType) (SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 *, int32_t, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, targetMethod);
			}
		}
		else
		{
			// closed
			if (targetThis != NULL && il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker2< SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 *, int32_t >::Invoke(targetMethod, targetThis, ___fromAction0, ___fromSource1);
					else
						GenericVirtActionInvoker2< SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 *, int32_t >::Invoke(targetMethod, targetThis, ___fromAction0, ___fromSource1);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker2< SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 *, int32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___fromAction0, ___fromSource1);
					else
						VirtActionInvoker2< SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 *, int32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___fromAction0, ___fromSource1);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, int32_t, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(___fromAction0) - 1), ___fromSource1, targetMethod);
				}
				if (targetThis == NULL)
				{
					typedef void (*FunctionPointerType) (SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 *, int32_t, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, targetMethod);
				}
				else
				{
					typedef void (*FunctionPointerType) (void*, SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 *, int32_t, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___fromSource1, targetMethod);
				}
			}
		}
	}
}
// System.IAsyncResult Valve.VR.SteamVR_Behaviour_Pose_UpdateHandler::BeginInvoke(Valve.VR.SteamVR_Behaviour_Pose,Valve.VR.SteamVR_Input_Sources,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* UpdateHandler_BeginInvoke_m26B03747F3053EB2308D3E232A493776D6F4DCA6 (UpdateHandler_t7F4B3FFE3096B37EB5424E580DA100C61857DC4D * __this, SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 * ___fromAction0, int32_t ___fromSource1, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback2, RuntimeObject * ___object3, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (UpdateHandler_BeginInvoke_m26B03747F3053EB2308D3E232A493776D6F4DCA6_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[3] = {0};
	__d_args[0] = ___fromAction0;
	__d_args[1] = Box(SteamVR_Input_Sources_tCE41AA589FB3B9516BDE0DFABDCB4AAEA29528F7_il2cpp_TypeInfo_var, &___fromSource1);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback2, (RuntimeObject*)___object3);
}
// System.Void Valve.VR.SteamVR_Behaviour_Pose_UpdateHandler::EndInvoke(System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UpdateHandler_EndInvoke_mC90C4ED70BC451D83D2836EA24D6305473ACD402 (UpdateHandler_t7F4B3FFE3096B37EB5424E580DA100C61857DC4D * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Valve.VR.SteamVR_Behaviour_Pose_ValidPoseChangeHandler::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ValidPoseChangeHandler__ctor_m7573F5A1C927280B84559DE4DE65D6599D9C9702 (ValidPoseChangeHandler_t9F17891A8C5AE0FD1A06F1C3ED15A5EDEB119DE9 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Void Valve.VR.SteamVR_Behaviour_Pose_ValidPoseChangeHandler::Invoke(Valve.VR.SteamVR_Behaviour_Pose,Valve.VR.SteamVR_Input_Sources,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ValidPoseChangeHandler_Invoke_m3E08A37FC82BA74199A4DD685DCFFDDDDE8DA3E7 (ValidPoseChangeHandler_t9F17891A8C5AE0FD1A06F1C3ED15A5EDEB119DE9 * __this, SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 * ___fromAction0, int32_t ___fromSource1, bool ___validPose2, const RuntimeMethod* method)
{
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 3)
			{
				// open
				typedef void (*FunctionPointerType) (SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 *, int32_t, bool, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___validPose2, targetMethod);
			}
			else
			{
				// closed
				typedef void (*FunctionPointerType) (void*, SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 *, int32_t, bool, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___fromSource1, ___validPose2, targetMethod);
			}
		}
		else if (___parameterCount != 3)
		{
			// open
			if (il2cpp_codegen_method_is_virtual(targetMethod) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker2< int32_t, bool >::Invoke(targetMethod, ___fromAction0, ___fromSource1, ___validPose2);
					else
						GenericVirtActionInvoker2< int32_t, bool >::Invoke(targetMethod, ___fromAction0, ___fromSource1, ___validPose2);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker2< int32_t, bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), ___fromAction0, ___fromSource1, ___validPose2);
					else
						VirtActionInvoker2< int32_t, bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), ___fromAction0, ___fromSource1, ___validPose2);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(&___fromSource1) - 1), ___validPose2, targetMethod);
				}
				typedef void (*FunctionPointerType) (SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 *, int32_t, bool, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___validPose2, targetMethod);
			}
		}
		else
		{
			// closed
			if (targetThis != NULL && il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker3< SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 *, int32_t, bool >::Invoke(targetMethod, targetThis, ___fromAction0, ___fromSource1, ___validPose2);
					else
						GenericVirtActionInvoker3< SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 *, int32_t, bool >::Invoke(targetMethod, targetThis, ___fromAction0, ___fromSource1, ___validPose2);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker3< SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 *, int32_t, bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___fromAction0, ___fromSource1, ___validPose2);
					else
						VirtActionInvoker3< SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 *, int32_t, bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___fromAction0, ___fromSource1, ___validPose2);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, int32_t, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(___fromAction0) - 1), ___fromSource1, ___validPose2, targetMethod);
				}
				if (targetThis == NULL)
				{
					typedef void (*FunctionPointerType) (SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 *, int32_t, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___validPose2, targetMethod);
				}
				else
				{
					typedef void (*FunctionPointerType) (void*, SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 *, int32_t, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___fromSource1, ___validPose2, targetMethod);
				}
			}
		}
	}
}
// System.IAsyncResult Valve.VR.SteamVR_Behaviour_Pose_ValidPoseChangeHandler::BeginInvoke(Valve.VR.SteamVR_Behaviour_Pose,Valve.VR.SteamVR_Input_Sources,System.Boolean,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* ValidPoseChangeHandler_BeginInvoke_m90A22A3018762948878C3076A235AF7B629BA3EE (ValidPoseChangeHandler_t9F17891A8C5AE0FD1A06F1C3ED15A5EDEB119DE9 * __this, SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 * ___fromAction0, int32_t ___fromSource1, bool ___validPose2, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback3, RuntimeObject * ___object4, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (ValidPoseChangeHandler_BeginInvoke_m90A22A3018762948878C3076A235AF7B629BA3EE_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[4] = {0};
	__d_args[0] = ___fromAction0;
	__d_args[1] = Box(SteamVR_Input_Sources_tCE41AA589FB3B9516BDE0DFABDCB4AAEA29528F7_il2cpp_TypeInfo_var, &___fromSource1);
	__d_args[2] = Box(Boolean_tB53F6830F670160873277339AA58F15CAED4399C_il2cpp_TypeInfo_var, &___validPose2);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback3, (RuntimeObject*)___object4);
}
// System.Void Valve.VR.SteamVR_Behaviour_Pose_ValidPoseChangeHandler::EndInvoke(System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ValidPoseChangeHandler_EndInvoke_m0B6E40335B04DAA6AFADF64D402660C80537964A (ValidPoseChangeHandler_t9F17891A8C5AE0FD1A06F1C3ED15A5EDEB119DE9 * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Valve.VR.SteamVR_Behaviour_PoseEvent::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_PoseEvent__ctor_mE21D7A6C21325526CC29883AC226EB797E66551F (SteamVR_Behaviour_PoseEvent_t110293A57CED63A5C2FFEF4849FC452DE99B2F87 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_PoseEvent__ctor_mE21D7A6C21325526CC29883AC226EB797E66551F_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Behaviour_PoseEvent__ctor_mE21D7A6C21325526CC29883AC226EB797E66551F_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		UnityEvent_2__ctor_mE94EED3D5D02FAC67378FC2787984A49F9DFD1B2(__this, /*hidden argument*/UnityEvent_2__ctor_mE94EED3D5D02FAC67378FC2787984A49F9DFD1B2_RuntimeMethod_var);
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Valve.VR.SteamVR_Behaviour_Pose_ConnectedChangedEvent::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_Pose_ConnectedChangedEvent__ctor_mB3A7DDCFDFCB023AE4B30735EF83D7D587A78FF8 (SteamVR_Behaviour_Pose_ConnectedChangedEvent_t79FB8A09A29315BCF3A67CC1FA2D124C01D3EAE9 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Pose_ConnectedChangedEvent__ctor_mB3A7DDCFDFCB023AE4B30735EF83D7D587A78FF8_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Behaviour_Pose_ConnectedChangedEvent__ctor_mB3A7DDCFDFCB023AE4B30735EF83D7D587A78FF8_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		UnityEvent_3__ctor_m574C424C59CC8F794C9F69BE3F30128F36D8D8BD(__this, /*hidden argument*/UnityEvent_3__ctor_m574C424C59CC8F794C9F69BE3F30128F36D8D8BD_RuntimeMethod_var);
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Valve.VR.SteamVR_Behaviour_Pose_DeviceIndexChangedEvent::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_Pose_DeviceIndexChangedEvent__ctor_m8D0C351CDDAC944761279EE787BA5C64CBAA7623 (SteamVR_Behaviour_Pose_DeviceIndexChangedEvent_tB4204CD58F5763D655B3B020CAEA0CD8A45D13E9 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Pose_DeviceIndexChangedEvent__ctor_m8D0C351CDDAC944761279EE787BA5C64CBAA7623_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Behaviour_Pose_DeviceIndexChangedEvent__ctor_m8D0C351CDDAC944761279EE787BA5C64CBAA7623_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		UnityEvent_3__ctor_m85EE828A60546309161F8608EF17D54E107B763D(__this, /*hidden argument*/UnityEvent_3__ctor_m85EE828A60546309161F8608EF17D54E107B763D_RuntimeMethod_var);
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Valve.VR.SteamVR_Behaviour_Pose_TrackingChangedEvent::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_Pose_TrackingChangedEvent__ctor_mEDB13441B307DC7FD0DB04C5E935F46C739694EE (SteamVR_Behaviour_Pose_TrackingChangedEvent_tC76D95F0E8D943109311BCE1B35E1D8CDC3C2E6E * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Pose_TrackingChangedEvent__ctor_mEDB13441B307DC7FD0DB04C5E935F46C739694EE_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Behaviour_Pose_TrackingChangedEvent__ctor_mEDB13441B307DC7FD0DB04C5E935F46C739694EE_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		UnityEvent_3__ctor_m44E339EBF173CA025EB43F196FFB59EDB3D2D9C8(__this, /*hidden argument*/UnityEvent_3__ctor_m44E339EBF173CA025EB43F196FFB59EDB3D2D9C8_RuntimeMethod_var);
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Boolean Valve.VR.SteamVR_Behaviour_Single::get_isActive()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Behaviour_Single_get_isActive_m4E14A5A450D7858CA2CEE40BED2BEFE66196843B (SteamVR_Behaviour_Single_t0224221A2437628A3FAFF02B7B02D88952021562 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Single_get_isActive_m4E14A5A450D7858CA2CEE40BED2BEFE66196843B_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Behaviour_Single_get_isActive_m4E14A5A450D7858CA2CEE40BED2BEFE66196843B_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9515));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 9516));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9517));
		// public bool isActive { get { return singleAction.GetActive(inputSource); } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9518));
		SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 * L_0 = __this->get_singleAction_4();
		int32_t L_1 = __this->get_inputSource_5();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9520));
		NullCheck(L_0);
		bool L_2 = VirtFuncInvoker1< bool, int32_t >::Invoke(31 /* System.Boolean Valve.VR.SteamVR_Action::GetActive(Valve.VR.SteamVR_Input_Sources) */, L_0, L_1);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9520));
		V_0 = L_2;
		goto IL_0015;
	}

IL_0015:
	{
		// public bool isActive { get { return singleAction.GetActive(inputSource); } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9519));
		bool L_3 = V_0;
		return L_3;
	}
}
// System.Void Valve.VR.SteamVR_Behaviour_Single::OnEnable()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_Single_OnEnable_m34F72F79DD21D6BAC95019E33A8FE25A2D558D2D (SteamVR_Behaviour_Single_t0224221A2437628A3FAFF02B7B02D88952021562 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Single_OnEnable_m34F72F79DD21D6BAC95019E33A8FE25A2D558D2D_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Behaviour_Single_OnEnable_m34F72F79DD21D6BAC95019E33A8FE25A2D558D2D_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9521));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 9522));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9523));
		// if (singleAction == null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9524));
		SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 * L_0 = __this->get_singleAction_4();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9531));
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734_il2cpp_TypeInfo_var);
		bool L_1 = SteamVR_Action_op_Equality_m16F1109154021CF7DC424B937A8AA5FC34463EE2(L_0, (SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9531));
		V_0 = L_1;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9525));
		bool L_2 = V_0;
		if (!L_2)
		{
			goto IL_0020;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9526));
		// Debug.LogError("[SteamVR] Single action not set.", this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9527));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9532));
		IL2CPP_RUNTIME_CLASS_INIT(Debug_t7B5FCB117E2FD63B6838BC52821B252E2BFB61C4_il2cpp_TypeInfo_var);
		Debug_LogError_m97139CB2EE76D5CD8308C1AD0499A5F163FC7F51(_stringLiteralB54CB9DBF86B2FBF3225C977A4074AA174D5411E, __this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9532));
		// return;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9528));
		goto IL_0027;
	}

IL_0020:
	{
		// AddHandlers();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9529));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9533));
		SteamVR_Behaviour_Single_AddHandlers_mA8B361755E3502B3485F63048BBB7936A97DBD78(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9533));
	}

IL_0027:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9530));
		return;
	}
}
// System.Void Valve.VR.SteamVR_Behaviour_Single::OnDisable()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_Single_OnDisable_mAEAD06F7B8D58C81D4C9B030CFC30CBF41FD84D5 (SteamVR_Behaviour_Single_t0224221A2437628A3FAFF02B7B02D88952021562 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Single_OnDisable_mAEAD06F7B8D58C81D4C9B030CFC30CBF41FD84D5_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Behaviour_Single_OnDisable_mAEAD06F7B8D58C81D4C9B030CFC30CBF41FD84D5_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9534));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 9535));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9536));
		// RemoveHandlers();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9537));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9539));
		SteamVR_Behaviour_Single_RemoveHandlers_m1836740684C0B04FB0D8E952785E7A0CBE269B00(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9539));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9538));
		return;
	}
}
// System.Void Valve.VR.SteamVR_Behaviour_Single::AddHandlers()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_Single_AddHandlers_mA8B361755E3502B3485F63048BBB7936A97DBD78 (SteamVR_Behaviour_Single_t0224221A2437628A3FAFF02B7B02D88952021562 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Single_AddHandlers_mA8B361755E3502B3485F63048BBB7936A97DBD78_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Behaviour_Single_AddHandlers_mA8B361755E3502B3485F63048BBB7936A97DBD78_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9540));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 9541));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9542));
		// singleAction[inputSource].onUpdate += SteamVR_Behaviour_Single_OnUpdate;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9543));
		SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 * L_0 = __this->get_singleAction_4();
		int32_t L_1 = __this->get_inputSource_5();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9547));
		NullCheck(L_0);
		SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F * L_2 = VirtFuncInvoker1< SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F *, int32_t >::Invoke(36 /* SourceElement Valve.VR.SteamVR_Action`2<Valve.VR.SteamVR_Action_Single_Source_Map,Valve.VR.SteamVR_Action_Single_Source>::get_Item(Valve.VR.SteamVR_Input_Sources) */, L_0, L_1);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9547));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9548));
		UpdateHandler_t4011C6F65732B2D2AD73A21EBF2ADD943897886D * L_3 = (UpdateHandler_t4011C6F65732B2D2AD73A21EBF2ADD943897886D *)il2cpp_codegen_object_new(UpdateHandler_t4011C6F65732B2D2AD73A21EBF2ADD943897886D_il2cpp_TypeInfo_var);
		UpdateHandler__ctor_m615A71B3C759B72EB938C012035EC7AA50040402(L_3, __this, (intptr_t)((intptr_t)SteamVR_Behaviour_Single_SteamVR_Behaviour_Single_OnUpdate_m3A0D7B72B650A79EA82489C424ECBC5E094C4644_RuntimeMethod_var), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9548));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9549));
		NullCheck(L_2);
		SteamVR_Action_Single_Source_add_onUpdate_m4A350FBCC760CA187A1709360F237F3BD715FF77(L_2, L_3, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9549));
		// singleAction[inputSource].onChange += SteamVR_Behaviour_Single_OnChange;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9544));
		SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 * L_4 = __this->get_singleAction_4();
		int32_t L_5 = __this->get_inputSource_5();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9550));
		NullCheck(L_4);
		SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F * L_6 = VirtFuncInvoker1< SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F *, int32_t >::Invoke(36 /* SourceElement Valve.VR.SteamVR_Action`2<Valve.VR.SteamVR_Action_Single_Source_Map,Valve.VR.SteamVR_Action_Single_Source>::get_Item(Valve.VR.SteamVR_Input_Sources) */, L_4, L_5);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9550));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9551));
		ChangeHandler_tF837F67A16B6ED5F9B2C676AC0AF9C611397DFED * L_7 = (ChangeHandler_tF837F67A16B6ED5F9B2C676AC0AF9C611397DFED *)il2cpp_codegen_object_new(ChangeHandler_tF837F67A16B6ED5F9B2C676AC0AF9C611397DFED_il2cpp_TypeInfo_var);
		ChangeHandler__ctor_m8C3023A91594EB9AD495FDAF6B6D9A7CAB842FB4(L_7, __this, (intptr_t)((intptr_t)SteamVR_Behaviour_Single_SteamVR_Behaviour_Single_OnChange_mF3F0B3C0B203C70B0E4408BB8E2971DEBE55786A_RuntimeMethod_var), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9551));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9552));
		NullCheck(L_6);
		SteamVR_Action_Single_Source_add_onChange_m069AAC383CD4F163B72BB46667E98FABB5C512C1(L_6, L_7, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9552));
		// singleAction[inputSource].onAxis += SteamVR_Behaviour_Single_OnAxis;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9545));
		SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 * L_8 = __this->get_singleAction_4();
		int32_t L_9 = __this->get_inputSource_5();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9553));
		NullCheck(L_8);
		SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F * L_10 = VirtFuncInvoker1< SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F *, int32_t >::Invoke(36 /* SourceElement Valve.VR.SteamVR_Action`2<Valve.VR.SteamVR_Action_Single_Source_Map,Valve.VR.SteamVR_Action_Single_Source>::get_Item(Valve.VR.SteamVR_Input_Sources) */, L_8, L_9);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9553));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9554));
		AxisHandler_tB065AC6B40691A33562DB817EBD29E5721A64843 * L_11 = (AxisHandler_tB065AC6B40691A33562DB817EBD29E5721A64843 *)il2cpp_codegen_object_new(AxisHandler_tB065AC6B40691A33562DB817EBD29E5721A64843_il2cpp_TypeInfo_var);
		AxisHandler__ctor_m77FDAF7B8C55A5EDDFAE09A7A2FBDE6F71613111(L_11, __this, (intptr_t)((intptr_t)SteamVR_Behaviour_Single_SteamVR_Behaviour_Single_OnAxis_m7C907C6A3BCC3B3B45A8FA9202B221F7B05E317A_RuntimeMethod_var), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9554));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9555));
		NullCheck(L_10);
		SteamVR_Action_Single_Source_add_onAxis_mD6207DBD9D01A9637D16677C7EE3239DEC4B3C3D(L_10, L_11, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9555));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9546));
		return;
	}
}
// System.Void Valve.VR.SteamVR_Behaviour_Single::RemoveHandlers()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_Single_RemoveHandlers_m1836740684C0B04FB0D8E952785E7A0CBE269B00 (SteamVR_Behaviour_Single_t0224221A2437628A3FAFF02B7B02D88952021562 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Single_RemoveHandlers_m1836740684C0B04FB0D8E952785E7A0CBE269B00_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Behaviour_Single_RemoveHandlers_m1836740684C0B04FB0D8E952785E7A0CBE269B00_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9556));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 9557));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9558));
		// if (singleAction != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9559));
		SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 * L_0 = __this->get_singleAction_4();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9567));
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734_il2cpp_TypeInfo_var);
		bool L_1 = SteamVR_Action_op_Inequality_m7114B6E3669F8C55CD3B5E4EC3A897648CBD0F8A(L_0, (SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9567));
		V_0 = L_1;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9560));
		bool L_2 = V_0;
		if (!L_2)
		{
			goto IL_007c;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9561));
		// singleAction[inputSource].onUpdate -= SteamVR_Behaviour_Single_OnUpdate;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9562));
		SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 * L_3 = __this->get_singleAction_4();
		int32_t L_4 = __this->get_inputSource_5();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9568));
		NullCheck(L_3);
		SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F * L_5 = VirtFuncInvoker1< SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F *, int32_t >::Invoke(36 /* SourceElement Valve.VR.SteamVR_Action`2<Valve.VR.SteamVR_Action_Single_Source_Map,Valve.VR.SteamVR_Action_Single_Source>::get_Item(Valve.VR.SteamVR_Input_Sources) */, L_3, L_4);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9568));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9569));
		UpdateHandler_t4011C6F65732B2D2AD73A21EBF2ADD943897886D * L_6 = (UpdateHandler_t4011C6F65732B2D2AD73A21EBF2ADD943897886D *)il2cpp_codegen_object_new(UpdateHandler_t4011C6F65732B2D2AD73A21EBF2ADD943897886D_il2cpp_TypeInfo_var);
		UpdateHandler__ctor_m615A71B3C759B72EB938C012035EC7AA50040402(L_6, __this, (intptr_t)((intptr_t)SteamVR_Behaviour_Single_SteamVR_Behaviour_Single_OnUpdate_m3A0D7B72B650A79EA82489C424ECBC5E094C4644_RuntimeMethod_var), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9569));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9570));
		NullCheck(L_5);
		SteamVR_Action_Single_Source_remove_onUpdate_mCD24B03F0DDBFB275AD1A829C9C9647C4BCA5E7F(L_5, L_6, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9570));
		// singleAction[inputSource].onChange -= SteamVR_Behaviour_Single_OnChange;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9563));
		SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 * L_7 = __this->get_singleAction_4();
		int32_t L_8 = __this->get_inputSource_5();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9571));
		NullCheck(L_7);
		SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F * L_9 = VirtFuncInvoker1< SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F *, int32_t >::Invoke(36 /* SourceElement Valve.VR.SteamVR_Action`2<Valve.VR.SteamVR_Action_Single_Source_Map,Valve.VR.SteamVR_Action_Single_Source>::get_Item(Valve.VR.SteamVR_Input_Sources) */, L_7, L_8);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9571));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9572));
		ChangeHandler_tF837F67A16B6ED5F9B2C676AC0AF9C611397DFED * L_10 = (ChangeHandler_tF837F67A16B6ED5F9B2C676AC0AF9C611397DFED *)il2cpp_codegen_object_new(ChangeHandler_tF837F67A16B6ED5F9B2C676AC0AF9C611397DFED_il2cpp_TypeInfo_var);
		ChangeHandler__ctor_m8C3023A91594EB9AD495FDAF6B6D9A7CAB842FB4(L_10, __this, (intptr_t)((intptr_t)SteamVR_Behaviour_Single_SteamVR_Behaviour_Single_OnChange_mF3F0B3C0B203C70B0E4408BB8E2971DEBE55786A_RuntimeMethod_var), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9572));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9573));
		NullCheck(L_9);
		SteamVR_Action_Single_Source_remove_onChange_mA6A9C82FD5071E689ADAAF2B4600F040F9F766D5(L_9, L_10, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9573));
		// singleAction[inputSource].onAxis -= SteamVR_Behaviour_Single_OnAxis;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9564));
		SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 * L_11 = __this->get_singleAction_4();
		int32_t L_12 = __this->get_inputSource_5();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9574));
		NullCheck(L_11);
		SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F * L_13 = VirtFuncInvoker1< SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F *, int32_t >::Invoke(36 /* SourceElement Valve.VR.SteamVR_Action`2<Valve.VR.SteamVR_Action_Single_Source_Map,Valve.VR.SteamVR_Action_Single_Source>::get_Item(Valve.VR.SteamVR_Input_Sources) */, L_11, L_12);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9574));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9575));
		AxisHandler_tB065AC6B40691A33562DB817EBD29E5721A64843 * L_14 = (AxisHandler_tB065AC6B40691A33562DB817EBD29E5721A64843 *)il2cpp_codegen_object_new(AxisHandler_tB065AC6B40691A33562DB817EBD29E5721A64843_il2cpp_TypeInfo_var);
		AxisHandler__ctor_m77FDAF7B8C55A5EDDFAE09A7A2FBDE6F71613111(L_14, __this, (intptr_t)((intptr_t)SteamVR_Behaviour_Single_SteamVR_Behaviour_Single_OnAxis_m7C907C6A3BCC3B3B45A8FA9202B221F7B05E317A_RuntimeMethod_var), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9575));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9576));
		NullCheck(L_13);
		SteamVR_Action_Single_Source_remove_onAxis_m7AC665F411374B61F073D43948D50EDDE66B7AF2(L_13, L_14, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9576));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9565));
	}

IL_007c:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9566));
		return;
	}
}
// System.Void Valve.VR.SteamVR_Behaviour_Single::SteamVR_Behaviour_Single_OnUpdate(Valve.VR.SteamVR_Action_Single,Valve.VR.SteamVR_Input_Sources,System.Single,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_Single_SteamVR_Behaviour_Single_OnUpdate_m3A0D7B72B650A79EA82489C424ECBC5E094C4644 (SteamVR_Behaviour_Single_t0224221A2437628A3FAFF02B7B02D88952021562 * __this, SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 * ___fromAction0, int32_t ___fromSource1, float ___newAxis2, float ___newDelta3, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Single_SteamVR_Behaviour_Single_OnUpdate_m3A0D7B72B650A79EA82489C424ECBC5E094C4644_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	bool V_1 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___fromAction0), (&___fromSource1), (&___newAxis2), (&___newDelta3));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Behaviour_Single_SteamVR_Behaviour_Single_OnUpdate_m3A0D7B72B650A79EA82489C424ECBC5E094C4644_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9577));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 9578));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9579));
		// if (onUpdate != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9580));
		SteamVR_Behaviour_SingleEvent_tB6C52A82965E98E5B7A851CB572E9B6FD88FE4F4 * L_0 = __this->get_onUpdate_7();
		V_0 = (bool)((!(((RuntimeObject*)(SteamVR_Behaviour_SingleEvent_tB6C52A82965E98E5B7A851CB572E9B6FD88FE4F4 *)L_0) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9581));
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_0021;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9582));
		// onUpdate.Invoke(this, fromSource, newAxis, newDelta);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9583));
		SteamVR_Behaviour_SingleEvent_tB6C52A82965E98E5B7A851CB572E9B6FD88FE4F4 * L_2 = __this->get_onUpdate_7();
		int32_t L_3 = ___fromSource1;
		float L_4 = ___newAxis2;
		float L_5 = ___newDelta3;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9591));
		NullCheck(L_2);
		UnityEvent_4_Invoke_m7C62CEBE22AEFFBA3F1FE11C5E7B46019F8E6B85(L_2, __this, L_3, L_4, L_5, /*hidden argument*/UnityEvent_4_Invoke_m7C62CEBE22AEFFBA3F1FE11C5E7B46019F8E6B85_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9591));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9584));
	}

IL_0021:
	{
		// if (onUpdateEvent != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9585));
		UpdateHandler_t35B29D0C538D0A17C13EFD36765FF0278EE256D4 * L_6 = __this->get_onUpdateEvent_10();
		V_1 = (bool)((!(((RuntimeObject*)(UpdateHandler_t35B29D0C538D0A17C13EFD36765FF0278EE256D4 *)L_6) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9586));
		bool L_7 = V_1;
		if (!L_7)
		{
			goto IL_0041;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9587));
		// onUpdateEvent.Invoke(this, fromSource, newAxis, newDelta);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9588));
		UpdateHandler_t35B29D0C538D0A17C13EFD36765FF0278EE256D4 * L_8 = __this->get_onUpdateEvent_10();
		int32_t L_9 = ___fromSource1;
		float L_10 = ___newAxis2;
		float L_11 = ___newDelta3;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9592));
		NullCheck(L_8);
		UpdateHandler_Invoke_m84942E8C81D99B00E49FC64BFD74F6A0B123A2DD(L_8, __this, L_9, L_10, L_11, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9592));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9589));
	}

IL_0041:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9590));
		return;
	}
}
// System.Void Valve.VR.SteamVR_Behaviour_Single::SteamVR_Behaviour_Single_OnChange(Valve.VR.SteamVR_Action_Single,Valve.VR.SteamVR_Input_Sources,System.Single,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_Single_SteamVR_Behaviour_Single_OnChange_mF3F0B3C0B203C70B0E4408BB8E2971DEBE55786A (SteamVR_Behaviour_Single_t0224221A2437628A3FAFF02B7B02D88952021562 * __this, SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 * ___fromAction0, int32_t ___fromSource1, float ___newAxis2, float ___newDelta3, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Single_SteamVR_Behaviour_Single_OnChange_mF3F0B3C0B203C70B0E4408BB8E2971DEBE55786A_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	bool V_1 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___fromAction0), (&___fromSource1), (&___newAxis2), (&___newDelta3));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Behaviour_Single_SteamVR_Behaviour_Single_OnChange_mF3F0B3C0B203C70B0E4408BB8E2971DEBE55786A_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9593));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 9594));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9595));
		// if (onChange != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9596));
		SteamVR_Behaviour_SingleEvent_tB6C52A82965E98E5B7A851CB572E9B6FD88FE4F4 * L_0 = __this->get_onChange_6();
		V_0 = (bool)((!(((RuntimeObject*)(SteamVR_Behaviour_SingleEvent_tB6C52A82965E98E5B7A851CB572E9B6FD88FE4F4 *)L_0) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9597));
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_0021;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9598));
		// onChange.Invoke(this, fromSource, newAxis, newDelta);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9599));
		SteamVR_Behaviour_SingleEvent_tB6C52A82965E98E5B7A851CB572E9B6FD88FE4F4 * L_2 = __this->get_onChange_6();
		int32_t L_3 = ___fromSource1;
		float L_4 = ___newAxis2;
		float L_5 = ___newDelta3;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9607));
		NullCheck(L_2);
		UnityEvent_4_Invoke_m7C62CEBE22AEFFBA3F1FE11C5E7B46019F8E6B85(L_2, __this, L_3, L_4, L_5, /*hidden argument*/UnityEvent_4_Invoke_m7C62CEBE22AEFFBA3F1FE11C5E7B46019F8E6B85_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9607));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9600));
	}

IL_0021:
	{
		// if (onChangeEvent != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9601));
		ChangeHandler_t5D78A5C2B8BE043F0EF515BB84766EC330B52DF7 * L_6 = __this->get_onChangeEvent_9();
		V_1 = (bool)((!(((RuntimeObject*)(ChangeHandler_t5D78A5C2B8BE043F0EF515BB84766EC330B52DF7 *)L_6) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9602));
		bool L_7 = V_1;
		if (!L_7)
		{
			goto IL_0041;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9603));
		// onChangeEvent.Invoke(this, fromSource, newAxis, newDelta);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9604));
		ChangeHandler_t5D78A5C2B8BE043F0EF515BB84766EC330B52DF7 * L_8 = __this->get_onChangeEvent_9();
		int32_t L_9 = ___fromSource1;
		float L_10 = ___newAxis2;
		float L_11 = ___newDelta3;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9608));
		NullCheck(L_8);
		ChangeHandler_Invoke_m13F669E97E3EA368C92C64F0172CD01CBC42B931(L_8, __this, L_9, L_10, L_11, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9608));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9605));
	}

IL_0041:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9606));
		return;
	}
}
// System.Void Valve.VR.SteamVR_Behaviour_Single::SteamVR_Behaviour_Single_OnAxis(Valve.VR.SteamVR_Action_Single,Valve.VR.SteamVR_Input_Sources,System.Single,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_Single_SteamVR_Behaviour_Single_OnAxis_m7C907C6A3BCC3B3B45A8FA9202B221F7B05E317A (SteamVR_Behaviour_Single_t0224221A2437628A3FAFF02B7B02D88952021562 * __this, SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 * ___fromAction0, int32_t ___fromSource1, float ___newAxis2, float ___newDelta3, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Single_SteamVR_Behaviour_Single_OnAxis_m7C907C6A3BCC3B3B45A8FA9202B221F7B05E317A_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	bool V_1 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___fromAction0), (&___fromSource1), (&___newAxis2), (&___newDelta3));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Behaviour_Single_SteamVR_Behaviour_Single_OnAxis_m7C907C6A3BCC3B3B45A8FA9202B221F7B05E317A_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9609));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 9610));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9611));
		// if (onAxis != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9612));
		SteamVR_Behaviour_SingleEvent_tB6C52A82965E98E5B7A851CB572E9B6FD88FE4F4 * L_0 = __this->get_onAxis_8();
		V_0 = (bool)((!(((RuntimeObject*)(SteamVR_Behaviour_SingleEvent_tB6C52A82965E98E5B7A851CB572E9B6FD88FE4F4 *)L_0) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9613));
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_0021;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9614));
		// onAxis.Invoke(this, fromSource, newAxis, newDelta);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9615));
		SteamVR_Behaviour_SingleEvent_tB6C52A82965E98E5B7A851CB572E9B6FD88FE4F4 * L_2 = __this->get_onAxis_8();
		int32_t L_3 = ___fromSource1;
		float L_4 = ___newAxis2;
		float L_5 = ___newDelta3;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9623));
		NullCheck(L_2);
		UnityEvent_4_Invoke_m7C62CEBE22AEFFBA3F1FE11C5E7B46019F8E6B85(L_2, __this, L_3, L_4, L_5, /*hidden argument*/UnityEvent_4_Invoke_m7C62CEBE22AEFFBA3F1FE11C5E7B46019F8E6B85_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9623));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9616));
	}

IL_0021:
	{
		// if (onAxisEvent != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9617));
		AxisHandler_t6CD6525481A3708C4FFC01A49F13C96EBD464F6C * L_6 = __this->get_onAxisEvent_11();
		V_1 = (bool)((!(((RuntimeObject*)(AxisHandler_t6CD6525481A3708C4FFC01A49F13C96EBD464F6C *)L_6) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9618));
		bool L_7 = V_1;
		if (!L_7)
		{
			goto IL_0041;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9619));
		// onAxisEvent.Invoke(this, fromSource, newAxis, newDelta);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9620));
		AxisHandler_t6CD6525481A3708C4FFC01A49F13C96EBD464F6C * L_8 = __this->get_onAxisEvent_11();
		int32_t L_9 = ___fromSource1;
		float L_10 = ___newAxis2;
		float L_11 = ___newDelta3;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9624));
		NullCheck(L_8);
		AxisHandler_Invoke_m8E9BFB173CCA66F9303D7EE7B256B8C16D7033BA(L_8, __this, L_9, L_10, L_11, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9624));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9621));
	}

IL_0041:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9622));
		return;
	}
}
// System.String Valve.VR.SteamVR_Behaviour_Single::GetLocalizedName(Valve.VR.EVRInputStringBits[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR String_t* SteamVR_Behaviour_Single_GetLocalizedName_mB7382309743B679DF1148B459F6D4000D48D673A (SteamVR_Behaviour_Single_t0224221A2437628A3FAFF02B7B02D88952021562 * __this, EVRInputStringBitsU5BU5D_t9F9E9B47CD745CAAB4F8EDC305D84DDF9E5BE511* ___localizedParts0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Single_GetLocalizedName_mB7382309743B679DF1148B459F6D4000D48D673A_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	String_t* V_1 = NULL;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___localizedParts0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Behaviour_Single_GetLocalizedName_mB7382309743B679DF1148B459F6D4000D48D673A_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9625));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 9626));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9627));
		// if (singleAction != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9628));
		SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 * L_0 = __this->get_singleAction_4();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9633));
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734_il2cpp_TypeInfo_var);
		bool L_1 = SteamVR_Action_op_Inequality_m7114B6E3669F8C55CD3B5E4EC3A897648CBD0F8A(L_0, (SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9633));
		V_0 = L_1;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9629));
		bool L_2 = V_0;
		if (!L_2)
		{
			goto IL_0026;
		}
	}
	{
		// return singleAction.GetLocalizedOriginPart(inputSource, localizedParts);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9630));
		SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 * L_3 = __this->get_singleAction_4();
		int32_t L_4 = __this->get_inputSource_5();
		EVRInputStringBitsU5BU5D_t9F9E9B47CD745CAAB4F8EDC305D84DDF9E5BE511* L_5 = ___localizedParts0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9634));
		NullCheck(L_3);
		String_t* L_6 = SteamVR_Action_In_2_GetLocalizedOriginPart_m68B2DF7EE84BFF3AD79B5306A4D26E96F68E5B57(L_3, L_4, L_5, /*hidden argument*/SteamVR_Action_In_2_GetLocalizedOriginPart_m68B2DF7EE84BFF3AD79B5306A4D26E96F68E5B57_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9634));
		V_1 = L_6;
		goto IL_002a;
	}

IL_0026:
	{
		// return null;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9631));
		V_1 = (String_t*)NULL;
		goto IL_002a;
	}

IL_002a:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9632));
		String_t* L_7 = V_1;
		return L_7;
	}
}
// System.Void Valve.VR.SteamVR_Behaviour_Single::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_Single__ctor_m9BF52CED548807A2F0B39324A0AB28E3A047E546 (SteamVR_Behaviour_Single_t0224221A2437628A3FAFF02B7B02D88952021562 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Single__ctor_m9BF52CED548807A2F0B39324A0AB28E3A047E546_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Behaviour_Single__ctor_m9BF52CED548807A2F0B39324A0AB28E3A047E546_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		MonoBehaviour__ctor_mEAEC84B222C60319D593E456D769B3311DFCEF97(__this, /*hidden argument*/NULL);
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Valve.VR.SteamVR_Behaviour_Single_AxisHandler::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void AxisHandler__ctor_m5DA0ABB177818B2034B56BF21F8E2CB0DB34E2AA (AxisHandler_t6CD6525481A3708C4FFC01A49F13C96EBD464F6C * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Void Valve.VR.SteamVR_Behaviour_Single_AxisHandler::Invoke(Valve.VR.SteamVR_Behaviour_Single,Valve.VR.SteamVR_Input_Sources,System.Single,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void AxisHandler_Invoke_m8E9BFB173CCA66F9303D7EE7B256B8C16D7033BA (AxisHandler_t6CD6525481A3708C4FFC01A49F13C96EBD464F6C * __this, SteamVR_Behaviour_Single_t0224221A2437628A3FAFF02B7B02D88952021562 * ___fromAction0, int32_t ___fromSource1, float ___newAxis2, float ___newDelta3, const RuntimeMethod* method)
{
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 4)
			{
				// open
				typedef void (*FunctionPointerType) (SteamVR_Behaviour_Single_t0224221A2437628A3FAFF02B7B02D88952021562 *, int32_t, float, float, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___newAxis2, ___newDelta3, targetMethod);
			}
			else
			{
				// closed
				typedef void (*FunctionPointerType) (void*, SteamVR_Behaviour_Single_t0224221A2437628A3FAFF02B7B02D88952021562 *, int32_t, float, float, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___fromSource1, ___newAxis2, ___newDelta3, targetMethod);
			}
		}
		else if (___parameterCount != 4)
		{
			// open
			if (il2cpp_codegen_method_is_virtual(targetMethod) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker3< int32_t, float, float >::Invoke(targetMethod, ___fromAction0, ___fromSource1, ___newAxis2, ___newDelta3);
					else
						GenericVirtActionInvoker3< int32_t, float, float >::Invoke(targetMethod, ___fromAction0, ___fromSource1, ___newAxis2, ___newDelta3);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker3< int32_t, float, float >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), ___fromAction0, ___fromSource1, ___newAxis2, ___newDelta3);
					else
						VirtActionInvoker3< int32_t, float, float >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), ___fromAction0, ___fromSource1, ___newAxis2, ___newDelta3);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, float, float, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(&___fromSource1) - 1), ___newAxis2, ___newDelta3, targetMethod);
				}
				typedef void (*FunctionPointerType) (SteamVR_Behaviour_Single_t0224221A2437628A3FAFF02B7B02D88952021562 *, int32_t, float, float, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___newAxis2, ___newDelta3, targetMethod);
			}
		}
		else
		{
			// closed
			if (targetThis != NULL && il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker4< SteamVR_Behaviour_Single_t0224221A2437628A3FAFF02B7B02D88952021562 *, int32_t, float, float >::Invoke(targetMethod, targetThis, ___fromAction0, ___fromSource1, ___newAxis2, ___newDelta3);
					else
						GenericVirtActionInvoker4< SteamVR_Behaviour_Single_t0224221A2437628A3FAFF02B7B02D88952021562 *, int32_t, float, float >::Invoke(targetMethod, targetThis, ___fromAction0, ___fromSource1, ___newAxis2, ___newDelta3);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker4< SteamVR_Behaviour_Single_t0224221A2437628A3FAFF02B7B02D88952021562 *, int32_t, float, float >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___fromAction0, ___fromSource1, ___newAxis2, ___newDelta3);
					else
						VirtActionInvoker4< SteamVR_Behaviour_Single_t0224221A2437628A3FAFF02B7B02D88952021562 *, int32_t, float, float >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___fromAction0, ___fromSource1, ___newAxis2, ___newDelta3);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, int32_t, float, float, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(___fromAction0) - 1), ___fromSource1, ___newAxis2, ___newDelta3, targetMethod);
				}
				if (targetThis == NULL)
				{
					typedef void (*FunctionPointerType) (SteamVR_Behaviour_Single_t0224221A2437628A3FAFF02B7B02D88952021562 *, int32_t, float, float, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___newAxis2, ___newDelta3, targetMethod);
				}
				else
				{
					typedef void (*FunctionPointerType) (void*, SteamVR_Behaviour_Single_t0224221A2437628A3FAFF02B7B02D88952021562 *, int32_t, float, float, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___fromSource1, ___newAxis2, ___newDelta3, targetMethod);
				}
			}
		}
	}
}
// System.IAsyncResult Valve.VR.SteamVR_Behaviour_Single_AxisHandler::BeginInvoke(Valve.VR.SteamVR_Behaviour_Single,Valve.VR.SteamVR_Input_Sources,System.Single,System.Single,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* AxisHandler_BeginInvoke_m88D17B13096F6C66E8A85564F2B616663CA053E9 (AxisHandler_t6CD6525481A3708C4FFC01A49F13C96EBD464F6C * __this, SteamVR_Behaviour_Single_t0224221A2437628A3FAFF02B7B02D88952021562 * ___fromAction0, int32_t ___fromSource1, float ___newAxis2, float ___newDelta3, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback4, RuntimeObject * ___object5, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (AxisHandler_BeginInvoke_m88D17B13096F6C66E8A85564F2B616663CA053E9_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[5] = {0};
	__d_args[0] = ___fromAction0;
	__d_args[1] = Box(SteamVR_Input_Sources_tCE41AA589FB3B9516BDE0DFABDCB4AAEA29528F7_il2cpp_TypeInfo_var, &___fromSource1);
	__d_args[2] = Box(Single_tDDDA9169C4E4E308AC6D7A824F9B28DC82204AE1_il2cpp_TypeInfo_var, &___newAxis2);
	__d_args[3] = Box(Single_tDDDA9169C4E4E308AC6D7A824F9B28DC82204AE1_il2cpp_TypeInfo_var, &___newDelta3);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback4, (RuntimeObject*)___object5);
}
// System.Void Valve.VR.SteamVR_Behaviour_Single_AxisHandler::EndInvoke(System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void AxisHandler_EndInvoke_m1C288835875DF15926341343836FCD55E8D5E230 (AxisHandler_t6CD6525481A3708C4FFC01A49F13C96EBD464F6C * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Valve.VR.SteamVR_Behaviour_Single_ChangeHandler::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ChangeHandler__ctor_mC4CA16288DD0A45F6CBFC8B5D57F9F221D4C8696 (ChangeHandler_t5D78A5C2B8BE043F0EF515BB84766EC330B52DF7 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Void Valve.VR.SteamVR_Behaviour_Single_ChangeHandler::Invoke(Valve.VR.SteamVR_Behaviour_Single,Valve.VR.SteamVR_Input_Sources,System.Single,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ChangeHandler_Invoke_m13F669E97E3EA368C92C64F0172CD01CBC42B931 (ChangeHandler_t5D78A5C2B8BE043F0EF515BB84766EC330B52DF7 * __this, SteamVR_Behaviour_Single_t0224221A2437628A3FAFF02B7B02D88952021562 * ___fromAction0, int32_t ___fromSource1, float ___newAxis2, float ___newDelta3, const RuntimeMethod* method)
{
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 4)
			{
				// open
				typedef void (*FunctionPointerType) (SteamVR_Behaviour_Single_t0224221A2437628A3FAFF02B7B02D88952021562 *, int32_t, float, float, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___newAxis2, ___newDelta3, targetMethod);
			}
			else
			{
				// closed
				typedef void (*FunctionPointerType) (void*, SteamVR_Behaviour_Single_t0224221A2437628A3FAFF02B7B02D88952021562 *, int32_t, float, float, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___fromSource1, ___newAxis2, ___newDelta3, targetMethod);
			}
		}
		else if (___parameterCount != 4)
		{
			// open
			if (il2cpp_codegen_method_is_virtual(targetMethod) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker3< int32_t, float, float >::Invoke(targetMethod, ___fromAction0, ___fromSource1, ___newAxis2, ___newDelta3);
					else
						GenericVirtActionInvoker3< int32_t, float, float >::Invoke(targetMethod, ___fromAction0, ___fromSource1, ___newAxis2, ___newDelta3);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker3< int32_t, float, float >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), ___fromAction0, ___fromSource1, ___newAxis2, ___newDelta3);
					else
						VirtActionInvoker3< int32_t, float, float >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), ___fromAction0, ___fromSource1, ___newAxis2, ___newDelta3);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, float, float, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(&___fromSource1) - 1), ___newAxis2, ___newDelta3, targetMethod);
				}
				typedef void (*FunctionPointerType) (SteamVR_Behaviour_Single_t0224221A2437628A3FAFF02B7B02D88952021562 *, int32_t, float, float, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___newAxis2, ___newDelta3, targetMethod);
			}
		}
		else
		{
			// closed
			if (targetThis != NULL && il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker4< SteamVR_Behaviour_Single_t0224221A2437628A3FAFF02B7B02D88952021562 *, int32_t, float, float >::Invoke(targetMethod, targetThis, ___fromAction0, ___fromSource1, ___newAxis2, ___newDelta3);
					else
						GenericVirtActionInvoker4< SteamVR_Behaviour_Single_t0224221A2437628A3FAFF02B7B02D88952021562 *, int32_t, float, float >::Invoke(targetMethod, targetThis, ___fromAction0, ___fromSource1, ___newAxis2, ___newDelta3);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker4< SteamVR_Behaviour_Single_t0224221A2437628A3FAFF02B7B02D88952021562 *, int32_t, float, float >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___fromAction0, ___fromSource1, ___newAxis2, ___newDelta3);
					else
						VirtActionInvoker4< SteamVR_Behaviour_Single_t0224221A2437628A3FAFF02B7B02D88952021562 *, int32_t, float, float >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___fromAction0, ___fromSource1, ___newAxis2, ___newDelta3);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, int32_t, float, float, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(___fromAction0) - 1), ___fromSource1, ___newAxis2, ___newDelta3, targetMethod);
				}
				if (targetThis == NULL)
				{
					typedef void (*FunctionPointerType) (SteamVR_Behaviour_Single_t0224221A2437628A3FAFF02B7B02D88952021562 *, int32_t, float, float, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___newAxis2, ___newDelta3, targetMethod);
				}
				else
				{
					typedef void (*FunctionPointerType) (void*, SteamVR_Behaviour_Single_t0224221A2437628A3FAFF02B7B02D88952021562 *, int32_t, float, float, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___fromSource1, ___newAxis2, ___newDelta3, targetMethod);
				}
			}
		}
	}
}
// System.IAsyncResult Valve.VR.SteamVR_Behaviour_Single_ChangeHandler::BeginInvoke(Valve.VR.SteamVR_Behaviour_Single,Valve.VR.SteamVR_Input_Sources,System.Single,System.Single,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* ChangeHandler_BeginInvoke_mD4D7FCD9D98A908CF0D977DE88926EEDB8FFED4B (ChangeHandler_t5D78A5C2B8BE043F0EF515BB84766EC330B52DF7 * __this, SteamVR_Behaviour_Single_t0224221A2437628A3FAFF02B7B02D88952021562 * ___fromAction0, int32_t ___fromSource1, float ___newAxis2, float ___newDelta3, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback4, RuntimeObject * ___object5, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (ChangeHandler_BeginInvoke_mD4D7FCD9D98A908CF0D977DE88926EEDB8FFED4B_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[5] = {0};
	__d_args[0] = ___fromAction0;
	__d_args[1] = Box(SteamVR_Input_Sources_tCE41AA589FB3B9516BDE0DFABDCB4AAEA29528F7_il2cpp_TypeInfo_var, &___fromSource1);
	__d_args[2] = Box(Single_tDDDA9169C4E4E308AC6D7A824F9B28DC82204AE1_il2cpp_TypeInfo_var, &___newAxis2);
	__d_args[3] = Box(Single_tDDDA9169C4E4E308AC6D7A824F9B28DC82204AE1_il2cpp_TypeInfo_var, &___newDelta3);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback4, (RuntimeObject*)___object5);
}
// System.Void Valve.VR.SteamVR_Behaviour_Single_ChangeHandler::EndInvoke(System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ChangeHandler_EndInvoke_m3B5554DB01FFF33E13B143E9BFC3DAE5D8279B42 (ChangeHandler_t5D78A5C2B8BE043F0EF515BB84766EC330B52DF7 * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Valve.VR.SteamVR_Behaviour_Single_UpdateHandler::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UpdateHandler__ctor_m1F158B645B064F67BD211882A1D8BC126F791CFB (UpdateHandler_t35B29D0C538D0A17C13EFD36765FF0278EE256D4 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Void Valve.VR.SteamVR_Behaviour_Single_UpdateHandler::Invoke(Valve.VR.SteamVR_Behaviour_Single,Valve.VR.SteamVR_Input_Sources,System.Single,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UpdateHandler_Invoke_m84942E8C81D99B00E49FC64BFD74F6A0B123A2DD (UpdateHandler_t35B29D0C538D0A17C13EFD36765FF0278EE256D4 * __this, SteamVR_Behaviour_Single_t0224221A2437628A3FAFF02B7B02D88952021562 * ___fromAction0, int32_t ___fromSource1, float ___newAxis2, float ___newDelta3, const RuntimeMethod* method)
{
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 4)
			{
				// open
				typedef void (*FunctionPointerType) (SteamVR_Behaviour_Single_t0224221A2437628A3FAFF02B7B02D88952021562 *, int32_t, float, float, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___newAxis2, ___newDelta3, targetMethod);
			}
			else
			{
				// closed
				typedef void (*FunctionPointerType) (void*, SteamVR_Behaviour_Single_t0224221A2437628A3FAFF02B7B02D88952021562 *, int32_t, float, float, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___fromSource1, ___newAxis2, ___newDelta3, targetMethod);
			}
		}
		else if (___parameterCount != 4)
		{
			// open
			if (il2cpp_codegen_method_is_virtual(targetMethod) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker3< int32_t, float, float >::Invoke(targetMethod, ___fromAction0, ___fromSource1, ___newAxis2, ___newDelta3);
					else
						GenericVirtActionInvoker3< int32_t, float, float >::Invoke(targetMethod, ___fromAction0, ___fromSource1, ___newAxis2, ___newDelta3);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker3< int32_t, float, float >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), ___fromAction0, ___fromSource1, ___newAxis2, ___newDelta3);
					else
						VirtActionInvoker3< int32_t, float, float >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), ___fromAction0, ___fromSource1, ___newAxis2, ___newDelta3);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, float, float, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(&___fromSource1) - 1), ___newAxis2, ___newDelta3, targetMethod);
				}
				typedef void (*FunctionPointerType) (SteamVR_Behaviour_Single_t0224221A2437628A3FAFF02B7B02D88952021562 *, int32_t, float, float, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___newAxis2, ___newDelta3, targetMethod);
			}
		}
		else
		{
			// closed
			if (targetThis != NULL && il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker4< SteamVR_Behaviour_Single_t0224221A2437628A3FAFF02B7B02D88952021562 *, int32_t, float, float >::Invoke(targetMethod, targetThis, ___fromAction0, ___fromSource1, ___newAxis2, ___newDelta3);
					else
						GenericVirtActionInvoker4< SteamVR_Behaviour_Single_t0224221A2437628A3FAFF02B7B02D88952021562 *, int32_t, float, float >::Invoke(targetMethod, targetThis, ___fromAction0, ___fromSource1, ___newAxis2, ___newDelta3);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker4< SteamVR_Behaviour_Single_t0224221A2437628A3FAFF02B7B02D88952021562 *, int32_t, float, float >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___fromAction0, ___fromSource1, ___newAxis2, ___newDelta3);
					else
						VirtActionInvoker4< SteamVR_Behaviour_Single_t0224221A2437628A3FAFF02B7B02D88952021562 *, int32_t, float, float >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___fromAction0, ___fromSource1, ___newAxis2, ___newDelta3);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, int32_t, float, float, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(___fromAction0) - 1), ___fromSource1, ___newAxis2, ___newDelta3, targetMethod);
				}
				if (targetThis == NULL)
				{
					typedef void (*FunctionPointerType) (SteamVR_Behaviour_Single_t0224221A2437628A3FAFF02B7B02D88952021562 *, int32_t, float, float, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___newAxis2, ___newDelta3, targetMethod);
				}
				else
				{
					typedef void (*FunctionPointerType) (void*, SteamVR_Behaviour_Single_t0224221A2437628A3FAFF02B7B02D88952021562 *, int32_t, float, float, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___fromSource1, ___newAxis2, ___newDelta3, targetMethod);
				}
			}
		}
	}
}
// System.IAsyncResult Valve.VR.SteamVR_Behaviour_Single_UpdateHandler::BeginInvoke(Valve.VR.SteamVR_Behaviour_Single,Valve.VR.SteamVR_Input_Sources,System.Single,System.Single,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* UpdateHandler_BeginInvoke_m35C396791BD00AED1D9D225BA0AF383D2CC9AAF8 (UpdateHandler_t35B29D0C538D0A17C13EFD36765FF0278EE256D4 * __this, SteamVR_Behaviour_Single_t0224221A2437628A3FAFF02B7B02D88952021562 * ___fromAction0, int32_t ___fromSource1, float ___newAxis2, float ___newDelta3, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback4, RuntimeObject * ___object5, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (UpdateHandler_BeginInvoke_m35C396791BD00AED1D9D225BA0AF383D2CC9AAF8_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[5] = {0};
	__d_args[0] = ___fromAction0;
	__d_args[1] = Box(SteamVR_Input_Sources_tCE41AA589FB3B9516BDE0DFABDCB4AAEA29528F7_il2cpp_TypeInfo_var, &___fromSource1);
	__d_args[2] = Box(Single_tDDDA9169C4E4E308AC6D7A824F9B28DC82204AE1_il2cpp_TypeInfo_var, &___newAxis2);
	__d_args[3] = Box(Single_tDDDA9169C4E4E308AC6D7A824F9B28DC82204AE1_il2cpp_TypeInfo_var, &___newDelta3);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback4, (RuntimeObject*)___object5);
}
// System.Void Valve.VR.SteamVR_Behaviour_Single_UpdateHandler::EndInvoke(System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UpdateHandler_EndInvoke_m8154C4D12736984D9BA105CBD78C50D860EE3FB8 (UpdateHandler_t35B29D0C538D0A17C13EFD36765FF0278EE256D4 * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Valve.VR.SteamVR_Behaviour_SingleEvent::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_SingleEvent__ctor_mCB263C5784C9521020523CB1D641F3212B620E65 (SteamVR_Behaviour_SingleEvent_tB6C52A82965E98E5B7A851CB572E9B6FD88FE4F4 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_SingleEvent__ctor_mCB263C5784C9521020523CB1D641F3212B620E65_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Behaviour_SingleEvent__ctor_mCB263C5784C9521020523CB1D641F3212B620E65_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		UnityEvent_4__ctor_m4979081DD527042CB93C3F1971860DDC9587C584(__this, /*hidden argument*/UnityEvent_4__ctor_m4979081DD527042CB93C3F1971860DDC9587C584_RuntimeMethod_var);
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Boolean Valve.VR.SteamVR_Behaviour_Skeleton::get_skeletonAvailable()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Behaviour_Skeleton_get_skeletonAvailable_m29DBA8C30D07CAF0C3F1423F7886AB2F3D8422E2 (SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Skeleton_get_skeletonAvailable_m29DBA8C30D07CAF0C3F1423F7886AB2F3D8422E2_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Behaviour_Skeleton_get_skeletonAvailable_m29DBA8C30D07CAF0C3F1423F7886AB2F3D8422E2_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9635));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 9636));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9637));
		// public bool skeletonAvailable { get { return skeletonAction.activeBinding; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9638));
		SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * L_0 = __this->get_skeletonAction_4();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9640));
		NullCheck(L_0);
		bool L_1 = VirtFuncInvoker0< bool >::Invoke(22 /* System.Boolean Valve.VR.SteamVR_Action::get_activeBinding() */, L_0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9640));
		V_0 = L_1;
		goto IL_000f;
	}

IL_000f:
	{
		// public bool skeletonAvailable { get { return skeletonAction.activeBinding; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9639));
		bool L_2 = V_0;
		return L_2;
	}
}
// System.Boolean Valve.VR.SteamVR_Behaviour_Skeleton::get_isActive()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Behaviour_Skeleton_get_isActive_m7A5399D4BDB910D528B36B9081868B1D8F20A6AB (SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Skeleton_get_isActive_m7A5399D4BDB910D528B36B9081868B1D8F20A6AB_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Behaviour_Skeleton_get_isActive_m7A5399D4BDB910D528B36B9081868B1D8F20A6AB_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9641));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 9642));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9643));
		// public bool isActive { get { return skeletonAction.GetActive(); } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9644));
		SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * L_0 = __this->get_skeletonAction_4();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9646));
		NullCheck(L_0);
		bool L_1 = SteamVR_Action_Skeleton_GetActive_m6E06AD31889D5E0E0431CA1766F874759FE3216F(L_0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9646));
		V_0 = L_1;
		goto IL_000f;
	}

IL_000f:
	{
		// public bool isActive { get { return skeletonAction.GetActive(); } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9645));
		bool L_2 = V_0;
		return L_2;
	}
}
// System.Single[] Valve.VR.SteamVR_Behaviour_Skeleton::get_fingerCurls()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* SteamVR_Behaviour_Skeleton_get_fingerCurls_mFC2F3FB37B5E27AD00DFF92BA955D73F74130749 (SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Skeleton_get_fingerCurls_mFC2F3FB37B5E27AD00DFF92BA955D73F74130749_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* V_1 = NULL;
	SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* V_2 = NULL;
	int32_t V_3 = 0;
	bool V_4 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_2), (&V_3));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Behaviour_Skeleton_get_fingerCurls_mFC2F3FB37B5E27AD00DFF92BA955D73F74130749_RuntimeMethod_var, methodExecutionContextThis, NULL, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9647));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 9648));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9649));
		// if (skeletonAvailable)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9650));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9666));
		bool L_0 = SteamVR_Behaviour_Skeleton_get_skeletonAvailable_m29DBA8C30D07CAF0C3F1423F7886AB2F3D8422E2(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9666));
		V_0 = L_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9651));
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_001b;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9652));
		// return skeletonAction.GetFingerCurls();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9653));
		SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * L_2 = __this->get_skeletonAction_4();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9667));
		NullCheck(L_2);
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_3 = SteamVR_Action_Skeleton_GetFingerCurls_mB05B99839838D84A19A639120BC6DD7FB2395A29(L_2, (bool)0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9667));
		V_1 = L_3;
		goto IL_004f;
	}

IL_001b:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9654));
		// float[] curls = new float[5];
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9655));
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_4 = (SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5*)(SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5*)SZArrayNew(SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5_il2cpp_TypeInfo_var, (uint32_t)5);
		V_2 = L_4;
		// for (int i = 0; i < 5; i++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9656));
		V_3 = 0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9657));
		goto IL_0041;
	}

IL_0027:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9658));
		// curls[i] = fallbackCurlAction.GetAxis(inputSource);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9659));
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_5 = V_2;
		int32_t L_6 = V_3;
		SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 * L_7 = __this->get_fallbackCurlAction_24();
		int32_t L_8 = __this->get_inputSource_5();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9668));
		NullCheck(L_7);
		float L_9 = SteamVR_Action_Single_GetAxis_m3847D567B96AA8D8186F641ED603D3C28C77F04B(L_7, L_8, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9668));
		NullCheck(L_5);
		(L_5)->SetAt(static_cast<il2cpp_array_size_t>(L_6), (float)L_9);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9660));
		// for (int i = 0; i < 5; i++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9661));
		int32_t L_10 = V_3;
		V_3 = ((int32_t)il2cpp_codegen_add((int32_t)L_10, (int32_t)1));
	}

IL_0041:
	{
		// for (int i = 0; i < 5; i++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9662));
		int32_t L_11 = V_3;
		V_4 = (bool)((((int32_t)L_11) < ((int32_t)5))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9663));
		bool L_12 = V_4;
		if (L_12)
		{
			goto IL_0027;
		}
	}
	{
		// return curls;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9664));
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_13 = V_2;
		V_1 = L_13;
		goto IL_004f;
	}

IL_004f:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9665));
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_14 = V_1;
		return L_14;
	}
}
// System.Single Valve.VR.SteamVR_Behaviour_Skeleton::get_thumbCurl()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Behaviour_Skeleton_get_thumbCurl_m7B2B803A55117F627E5F42D8A46D413A5A5E60A8 (SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Skeleton_get_thumbCurl_m7B2B803A55117F627E5F42D8A46D413A5A5E60A8_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	float V_1 = 0.0f;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Behaviour_Skeleton_get_thumbCurl_m7B2B803A55117F627E5F42D8A46D413A5A5E60A8_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9669));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 9670));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9671));
		// if (skeletonAvailable)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9672));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9677));
		bool L_0 = SteamVR_Behaviour_Skeleton_get_skeletonAvailable_m29DBA8C30D07CAF0C3F1423F7886AB2F3D8422E2(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9677));
		V_0 = L_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9673));
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_001a;
		}
	}
	{
		// return skeletonAction.GetFingerCurl(SteamVR_Skeleton_FingerIndexEnum.thumb);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9674));
		SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * L_2 = __this->get_skeletonAction_4();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9678));
		NullCheck(L_2);
		float L_3 = SteamVR_Action_Skeleton_GetFingerCurl_m74152BBAF9EE89F9A8F186E462FFD0DDE1C9D420(L_2, 0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9678));
		V_1 = L_3;
		goto IL_002e;
	}

IL_001a:
	{
		// return fallbackCurlAction.GetAxis(inputSource);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9675));
		SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 * L_4 = __this->get_fallbackCurlAction_24();
		int32_t L_5 = __this->get_inputSource_5();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9679));
		NullCheck(L_4);
		float L_6 = SteamVR_Action_Single_GetAxis_m3847D567B96AA8D8186F641ED603D3C28C77F04B(L_4, L_5, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9679));
		V_1 = L_6;
		goto IL_002e;
	}

IL_002e:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9676));
		float L_7 = V_1;
		return L_7;
	}
}
// System.Single Valve.VR.SteamVR_Behaviour_Skeleton::get_indexCurl()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Behaviour_Skeleton_get_indexCurl_mD1B41A04184ECE7B6F55FF7F1FB7F3C5EAB3DF6B (SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Skeleton_get_indexCurl_mD1B41A04184ECE7B6F55FF7F1FB7F3C5EAB3DF6B_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	float V_1 = 0.0f;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Behaviour_Skeleton_get_indexCurl_mD1B41A04184ECE7B6F55FF7F1FB7F3C5EAB3DF6B_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9680));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 9681));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9682));
		// if (skeletonAvailable)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9683));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9688));
		bool L_0 = SteamVR_Behaviour_Skeleton_get_skeletonAvailable_m29DBA8C30D07CAF0C3F1423F7886AB2F3D8422E2(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9688));
		V_0 = L_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9684));
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_001a;
		}
	}
	{
		// return skeletonAction.GetFingerCurl(SteamVR_Skeleton_FingerIndexEnum.index);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9685));
		SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * L_2 = __this->get_skeletonAction_4();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9689));
		NullCheck(L_2);
		float L_3 = SteamVR_Action_Skeleton_GetFingerCurl_m74152BBAF9EE89F9A8F186E462FFD0DDE1C9D420(L_2, 1, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9689));
		V_1 = L_3;
		goto IL_002e;
	}

IL_001a:
	{
		// return fallbackCurlAction.GetAxis(inputSource);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9686));
		SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 * L_4 = __this->get_fallbackCurlAction_24();
		int32_t L_5 = __this->get_inputSource_5();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9690));
		NullCheck(L_4);
		float L_6 = SteamVR_Action_Single_GetAxis_m3847D567B96AA8D8186F641ED603D3C28C77F04B(L_4, L_5, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9690));
		V_1 = L_6;
		goto IL_002e;
	}

IL_002e:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9687));
		float L_7 = V_1;
		return L_7;
	}
}
// System.Single Valve.VR.SteamVR_Behaviour_Skeleton::get_middleCurl()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Behaviour_Skeleton_get_middleCurl_m28DD66133817793DB7179A4C41BADAD9ADEE7FFC (SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Skeleton_get_middleCurl_m28DD66133817793DB7179A4C41BADAD9ADEE7FFC_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	float V_1 = 0.0f;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Behaviour_Skeleton_get_middleCurl_m28DD66133817793DB7179A4C41BADAD9ADEE7FFC_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9691));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 9692));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9693));
		// if (skeletonAvailable)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9694));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9699));
		bool L_0 = SteamVR_Behaviour_Skeleton_get_skeletonAvailable_m29DBA8C30D07CAF0C3F1423F7886AB2F3D8422E2(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9699));
		V_0 = L_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9695));
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_001a;
		}
	}
	{
		// return skeletonAction.GetFingerCurl(SteamVR_Skeleton_FingerIndexEnum.middle);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9696));
		SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * L_2 = __this->get_skeletonAction_4();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9700));
		NullCheck(L_2);
		float L_3 = SteamVR_Action_Skeleton_GetFingerCurl_m74152BBAF9EE89F9A8F186E462FFD0DDE1C9D420(L_2, 2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9700));
		V_1 = L_3;
		goto IL_002e;
	}

IL_001a:
	{
		// return fallbackCurlAction.GetAxis(inputSource);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9697));
		SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 * L_4 = __this->get_fallbackCurlAction_24();
		int32_t L_5 = __this->get_inputSource_5();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9701));
		NullCheck(L_4);
		float L_6 = SteamVR_Action_Single_GetAxis_m3847D567B96AA8D8186F641ED603D3C28C77F04B(L_4, L_5, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9701));
		V_1 = L_6;
		goto IL_002e;
	}

IL_002e:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9698));
		float L_7 = V_1;
		return L_7;
	}
}
// System.Single Valve.VR.SteamVR_Behaviour_Skeleton::get_ringCurl()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Behaviour_Skeleton_get_ringCurl_mF4985B2B88334870D9CFF939D14042C856BBF2E1 (SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Skeleton_get_ringCurl_mF4985B2B88334870D9CFF939D14042C856BBF2E1_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	float V_1 = 0.0f;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Behaviour_Skeleton_get_ringCurl_mF4985B2B88334870D9CFF939D14042C856BBF2E1_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9702));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 9703));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9704));
		// if (skeletonAvailable)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9705));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9710));
		bool L_0 = SteamVR_Behaviour_Skeleton_get_skeletonAvailable_m29DBA8C30D07CAF0C3F1423F7886AB2F3D8422E2(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9710));
		V_0 = L_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9706));
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_001a;
		}
	}
	{
		// return skeletonAction.GetFingerCurl(SteamVR_Skeleton_FingerIndexEnum.ring);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9707));
		SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * L_2 = __this->get_skeletonAction_4();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9711));
		NullCheck(L_2);
		float L_3 = SteamVR_Action_Skeleton_GetFingerCurl_m74152BBAF9EE89F9A8F186E462FFD0DDE1C9D420(L_2, 3, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9711));
		V_1 = L_3;
		goto IL_002e;
	}

IL_001a:
	{
		// return fallbackCurlAction.GetAxis(inputSource);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9708));
		SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 * L_4 = __this->get_fallbackCurlAction_24();
		int32_t L_5 = __this->get_inputSource_5();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9712));
		NullCheck(L_4);
		float L_6 = SteamVR_Action_Single_GetAxis_m3847D567B96AA8D8186F641ED603D3C28C77F04B(L_4, L_5, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9712));
		V_1 = L_6;
		goto IL_002e;
	}

IL_002e:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9709));
		float L_7 = V_1;
		return L_7;
	}
}
// System.Single Valve.VR.SteamVR_Behaviour_Skeleton::get_pinkyCurl()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Behaviour_Skeleton_get_pinkyCurl_mD9E46EDAC22DAF10948A67B1C573DF43283D9D61 (SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Skeleton_get_pinkyCurl_mD9E46EDAC22DAF10948A67B1C573DF43283D9D61_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	float V_1 = 0.0f;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Behaviour_Skeleton_get_pinkyCurl_mD9E46EDAC22DAF10948A67B1C573DF43283D9D61_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9713));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 9714));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9715));
		// if (skeletonAvailable)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9716));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9721));
		bool L_0 = SteamVR_Behaviour_Skeleton_get_skeletonAvailable_m29DBA8C30D07CAF0C3F1423F7886AB2F3D8422E2(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9721));
		V_0 = L_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9717));
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_001a;
		}
	}
	{
		// return skeletonAction.GetFingerCurl(SteamVR_Skeleton_FingerIndexEnum.pinky);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9718));
		SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * L_2 = __this->get_skeletonAction_4();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9722));
		NullCheck(L_2);
		float L_3 = SteamVR_Action_Skeleton_GetFingerCurl_m74152BBAF9EE89F9A8F186E462FFD0DDE1C9D420(L_2, 4, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9722));
		V_1 = L_3;
		goto IL_002e;
	}

IL_001a:
	{
		// return fallbackCurlAction.GetAxis(inputSource);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9719));
		SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 * L_4 = __this->get_fallbackCurlAction_24();
		int32_t L_5 = __this->get_inputSource_5();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9723));
		NullCheck(L_4);
		float L_6 = SteamVR_Action_Single_GetAxis_m3847D567B96AA8D8186F641ED603D3C28C77F04B(L_4, L_5, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9723));
		V_1 = L_6;
		goto IL_002e;
	}

IL_002e:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9720));
		float L_7 = V_1;
		return L_7;
	}
}
// UnityEngine.Transform Valve.VR.SteamVR_Behaviour_Skeleton::get_root()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * SteamVR_Behaviour_Skeleton_get_root_mD3DAF1F8B126283FF4FA842767325C0A7A23D9DF (SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Skeleton_get_root_mD3DAF1F8B126283FF4FA842767325C0A7A23D9DF_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * V_0 = NULL;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Behaviour_Skeleton_get_root_mD3DAF1F8B126283FF4FA842767325C0A7A23D9DF_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9724));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 9725));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9726));
		// public Transform root { get { return bones[SteamVR_Skeleton_JointIndexes.root]; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9727));
		TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804* L_0 = __this->get_bones_35();
		NullCheck(L_0);
		int32_t L_1 = 0;
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_2 = (L_0)->GetAt(static_cast<il2cpp_array_size_t>(L_1));
		V_0 = L_2;
		goto IL_000c;
	}

IL_000c:
	{
		// public Transform root { get { return bones[SteamVR_Skeleton_JointIndexes.root]; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9728));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_3 = V_0;
		return L_3;
	}
}
// UnityEngine.Transform Valve.VR.SteamVR_Behaviour_Skeleton::get_wrist()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * SteamVR_Behaviour_Skeleton_get_wrist_mC7D139233381826280F7225DFEF194495D7CEDAB (SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Skeleton_get_wrist_mC7D139233381826280F7225DFEF194495D7CEDAB_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * V_0 = NULL;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Behaviour_Skeleton_get_wrist_mC7D139233381826280F7225DFEF194495D7CEDAB_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9729));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 9730));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9731));
		// public Transform wrist { get { return bones[SteamVR_Skeleton_JointIndexes.wrist]; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9732));
		TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804* L_0 = __this->get_bones_35();
		NullCheck(L_0);
		int32_t L_1 = 1;
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_2 = (L_0)->GetAt(static_cast<il2cpp_array_size_t>(L_1));
		V_0 = L_2;
		goto IL_000c;
	}

IL_000c:
	{
		// public Transform wrist { get { return bones[SteamVR_Skeleton_JointIndexes.wrist]; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9733));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_3 = V_0;
		return L_3;
	}
}
// UnityEngine.Transform Valve.VR.SteamVR_Behaviour_Skeleton::get_indexMetacarpal()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * SteamVR_Behaviour_Skeleton_get_indexMetacarpal_mD76F8BED852C7945BEDDCC1F548C32B363E5BEDC (SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Skeleton_get_indexMetacarpal_mD76F8BED852C7945BEDDCC1F548C32B363E5BEDC_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * V_0 = NULL;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Behaviour_Skeleton_get_indexMetacarpal_mD76F8BED852C7945BEDDCC1F548C32B363E5BEDC_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9734));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 9735));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9736));
		// public Transform indexMetacarpal { get { return bones[SteamVR_Skeleton_JointIndexes.indexMetacarpal]; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9737));
		TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804* L_0 = __this->get_bones_35();
		NullCheck(L_0);
		int32_t L_1 = 6;
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_2 = (L_0)->GetAt(static_cast<il2cpp_array_size_t>(L_1));
		V_0 = L_2;
		goto IL_000c;
	}

IL_000c:
	{
		// public Transform indexMetacarpal { get { return bones[SteamVR_Skeleton_JointIndexes.indexMetacarpal]; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9738));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_3 = V_0;
		return L_3;
	}
}
// UnityEngine.Transform Valve.VR.SteamVR_Behaviour_Skeleton::get_indexProximal()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * SteamVR_Behaviour_Skeleton_get_indexProximal_m12B2B068243D619BE16744095599DA88E55F14E9 (SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Skeleton_get_indexProximal_m12B2B068243D619BE16744095599DA88E55F14E9_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * V_0 = NULL;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Behaviour_Skeleton_get_indexProximal_m12B2B068243D619BE16744095599DA88E55F14E9_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9739));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 9740));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9741));
		// public Transform indexProximal { get { return bones[SteamVR_Skeleton_JointIndexes.indexProximal]; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9742));
		TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804* L_0 = __this->get_bones_35();
		NullCheck(L_0);
		int32_t L_1 = 7;
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_2 = (L_0)->GetAt(static_cast<il2cpp_array_size_t>(L_1));
		V_0 = L_2;
		goto IL_000c;
	}

IL_000c:
	{
		// public Transform indexProximal { get { return bones[SteamVR_Skeleton_JointIndexes.indexProximal]; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9743));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_3 = V_0;
		return L_3;
	}
}
// UnityEngine.Transform Valve.VR.SteamVR_Behaviour_Skeleton::get_indexMiddle()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * SteamVR_Behaviour_Skeleton_get_indexMiddle_mBC700387F3C19B996B52211EDB152C037F2BC445 (SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Skeleton_get_indexMiddle_mBC700387F3C19B996B52211EDB152C037F2BC445_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * V_0 = NULL;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Behaviour_Skeleton_get_indexMiddle_mBC700387F3C19B996B52211EDB152C037F2BC445_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9744));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 9745));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9746));
		// public Transform indexMiddle { get { return bones[SteamVR_Skeleton_JointIndexes.indexMiddle]; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9747));
		TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804* L_0 = __this->get_bones_35();
		NullCheck(L_0);
		int32_t L_1 = 8;
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_2 = (L_0)->GetAt(static_cast<il2cpp_array_size_t>(L_1));
		V_0 = L_2;
		goto IL_000c;
	}

IL_000c:
	{
		// public Transform indexMiddle { get { return bones[SteamVR_Skeleton_JointIndexes.indexMiddle]; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9748));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_3 = V_0;
		return L_3;
	}
}
// UnityEngine.Transform Valve.VR.SteamVR_Behaviour_Skeleton::get_indexDistal()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * SteamVR_Behaviour_Skeleton_get_indexDistal_m5C68558EE577F1A6D3CFB7CC616823E8DC19DB07 (SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Skeleton_get_indexDistal_m5C68558EE577F1A6D3CFB7CC616823E8DC19DB07_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * V_0 = NULL;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Behaviour_Skeleton_get_indexDistal_m5C68558EE577F1A6D3CFB7CC616823E8DC19DB07_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9749));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 9750));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9751));
		// public Transform indexDistal { get { return bones[SteamVR_Skeleton_JointIndexes.indexDistal]; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9752));
		TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804* L_0 = __this->get_bones_35();
		NullCheck(L_0);
		int32_t L_1 = ((int32_t)9);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_2 = (L_0)->GetAt(static_cast<il2cpp_array_size_t>(L_1));
		V_0 = L_2;
		goto IL_000d;
	}

IL_000d:
	{
		// public Transform indexDistal { get { return bones[SteamVR_Skeleton_JointIndexes.indexDistal]; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9753));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_3 = V_0;
		return L_3;
	}
}
// UnityEngine.Transform Valve.VR.SteamVR_Behaviour_Skeleton::get_indexTip()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * SteamVR_Behaviour_Skeleton_get_indexTip_m7BEF68906E2D53FE258E21179322DEB564D5BF5D (SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Skeleton_get_indexTip_m7BEF68906E2D53FE258E21179322DEB564D5BF5D_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * V_0 = NULL;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Behaviour_Skeleton_get_indexTip_m7BEF68906E2D53FE258E21179322DEB564D5BF5D_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9754));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 9755));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9756));
		// public Transform indexTip { get { return bones[SteamVR_Skeleton_JointIndexes.indexTip]; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9757));
		TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804* L_0 = __this->get_bones_35();
		NullCheck(L_0);
		int32_t L_1 = ((int32_t)10);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_2 = (L_0)->GetAt(static_cast<il2cpp_array_size_t>(L_1));
		V_0 = L_2;
		goto IL_000d;
	}

IL_000d:
	{
		// public Transform indexTip { get { return bones[SteamVR_Skeleton_JointIndexes.indexTip]; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9758));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_3 = V_0;
		return L_3;
	}
}
// UnityEngine.Transform Valve.VR.SteamVR_Behaviour_Skeleton::get_middleMetacarpal()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * SteamVR_Behaviour_Skeleton_get_middleMetacarpal_m472C2141EED2877E54822404E3C239CB73FD8AFF (SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Skeleton_get_middleMetacarpal_m472C2141EED2877E54822404E3C239CB73FD8AFF_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * V_0 = NULL;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Behaviour_Skeleton_get_middleMetacarpal_m472C2141EED2877E54822404E3C239CB73FD8AFF_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9759));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 9760));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9761));
		// public Transform middleMetacarpal { get { return bones[SteamVR_Skeleton_JointIndexes.middleMetacarpal]; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9762));
		TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804* L_0 = __this->get_bones_35();
		NullCheck(L_0);
		int32_t L_1 = ((int32_t)11);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_2 = (L_0)->GetAt(static_cast<il2cpp_array_size_t>(L_1));
		V_0 = L_2;
		goto IL_000d;
	}

IL_000d:
	{
		// public Transform middleMetacarpal { get { return bones[SteamVR_Skeleton_JointIndexes.middleMetacarpal]; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9763));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_3 = V_0;
		return L_3;
	}
}
// UnityEngine.Transform Valve.VR.SteamVR_Behaviour_Skeleton::get_middleProximal()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * SteamVR_Behaviour_Skeleton_get_middleProximal_m2160F1117BA71E7BF52BF518FCB2BA156A4C9939 (SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Skeleton_get_middleProximal_m2160F1117BA71E7BF52BF518FCB2BA156A4C9939_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * V_0 = NULL;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Behaviour_Skeleton_get_middleProximal_m2160F1117BA71E7BF52BF518FCB2BA156A4C9939_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9764));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 9765));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9766));
		// public Transform middleProximal { get { return bones[SteamVR_Skeleton_JointIndexes.middleProximal]; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9767));
		TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804* L_0 = __this->get_bones_35();
		NullCheck(L_0);
		int32_t L_1 = ((int32_t)12);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_2 = (L_0)->GetAt(static_cast<il2cpp_array_size_t>(L_1));
		V_0 = L_2;
		goto IL_000d;
	}

IL_000d:
	{
		// public Transform middleProximal { get { return bones[SteamVR_Skeleton_JointIndexes.middleProximal]; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9768));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_3 = V_0;
		return L_3;
	}
}
// UnityEngine.Transform Valve.VR.SteamVR_Behaviour_Skeleton::get_middleMiddle()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * SteamVR_Behaviour_Skeleton_get_middleMiddle_m49B293EF0D60AFA7CAE933F392D317DC971BC8A7 (SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Skeleton_get_middleMiddle_m49B293EF0D60AFA7CAE933F392D317DC971BC8A7_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * V_0 = NULL;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Behaviour_Skeleton_get_middleMiddle_m49B293EF0D60AFA7CAE933F392D317DC971BC8A7_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9769));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 9770));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9771));
		// public Transform middleMiddle { get { return bones[SteamVR_Skeleton_JointIndexes.middleMiddle]; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9772));
		TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804* L_0 = __this->get_bones_35();
		NullCheck(L_0);
		int32_t L_1 = ((int32_t)13);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_2 = (L_0)->GetAt(static_cast<il2cpp_array_size_t>(L_1));
		V_0 = L_2;
		goto IL_000d;
	}

IL_000d:
	{
		// public Transform middleMiddle { get { return bones[SteamVR_Skeleton_JointIndexes.middleMiddle]; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9773));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_3 = V_0;
		return L_3;
	}
}
// UnityEngine.Transform Valve.VR.SteamVR_Behaviour_Skeleton::get_middleDistal()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * SteamVR_Behaviour_Skeleton_get_middleDistal_m349C9ACA71BB75EF3789240F820F3C7C1F83106D (SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Skeleton_get_middleDistal_m349C9ACA71BB75EF3789240F820F3C7C1F83106D_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * V_0 = NULL;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Behaviour_Skeleton_get_middleDistal_m349C9ACA71BB75EF3789240F820F3C7C1F83106D_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9774));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 9775));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9776));
		// public Transform middleDistal { get { return bones[SteamVR_Skeleton_JointIndexes.middleDistal]; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9777));
		TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804* L_0 = __this->get_bones_35();
		NullCheck(L_0);
		int32_t L_1 = ((int32_t)14);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_2 = (L_0)->GetAt(static_cast<il2cpp_array_size_t>(L_1));
		V_0 = L_2;
		goto IL_000d;
	}

IL_000d:
	{
		// public Transform middleDistal { get { return bones[SteamVR_Skeleton_JointIndexes.middleDistal]; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9778));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_3 = V_0;
		return L_3;
	}
}
// UnityEngine.Transform Valve.VR.SteamVR_Behaviour_Skeleton::get_middleTip()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * SteamVR_Behaviour_Skeleton_get_middleTip_m92D8F32D6D39694B20C40E552AF7FE4A80B4426B (SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Skeleton_get_middleTip_m92D8F32D6D39694B20C40E552AF7FE4A80B4426B_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * V_0 = NULL;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Behaviour_Skeleton_get_middleTip_m92D8F32D6D39694B20C40E552AF7FE4A80B4426B_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9779));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 9780));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9781));
		// public Transform middleTip { get { return bones[SteamVR_Skeleton_JointIndexes.middleTip]; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9782));
		TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804* L_0 = __this->get_bones_35();
		NullCheck(L_0);
		int32_t L_1 = ((int32_t)15);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_2 = (L_0)->GetAt(static_cast<il2cpp_array_size_t>(L_1));
		V_0 = L_2;
		goto IL_000d;
	}

IL_000d:
	{
		// public Transform middleTip { get { return bones[SteamVR_Skeleton_JointIndexes.middleTip]; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9783));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_3 = V_0;
		return L_3;
	}
}
// UnityEngine.Transform Valve.VR.SteamVR_Behaviour_Skeleton::get_pinkyMetacarpal()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * SteamVR_Behaviour_Skeleton_get_pinkyMetacarpal_m841F6ED3D869C93F0384195A4C21CE08B071605F (SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Skeleton_get_pinkyMetacarpal_m841F6ED3D869C93F0384195A4C21CE08B071605F_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * V_0 = NULL;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Behaviour_Skeleton_get_pinkyMetacarpal_m841F6ED3D869C93F0384195A4C21CE08B071605F_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9784));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 9785));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9786));
		// public Transform pinkyMetacarpal { get { return bones[SteamVR_Skeleton_JointIndexes.pinkyMetacarpal]; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9787));
		TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804* L_0 = __this->get_bones_35();
		NullCheck(L_0);
		int32_t L_1 = ((int32_t)21);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_2 = (L_0)->GetAt(static_cast<il2cpp_array_size_t>(L_1));
		V_0 = L_2;
		goto IL_000d;
	}

IL_000d:
	{
		// public Transform pinkyMetacarpal { get { return bones[SteamVR_Skeleton_JointIndexes.pinkyMetacarpal]; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9788));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_3 = V_0;
		return L_3;
	}
}
// UnityEngine.Transform Valve.VR.SteamVR_Behaviour_Skeleton::get_pinkyProximal()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * SteamVR_Behaviour_Skeleton_get_pinkyProximal_m248721E4423A15A1C7A681B6698658CFD75F4727 (SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Skeleton_get_pinkyProximal_m248721E4423A15A1C7A681B6698658CFD75F4727_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * V_0 = NULL;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Behaviour_Skeleton_get_pinkyProximal_m248721E4423A15A1C7A681B6698658CFD75F4727_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9789));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 9790));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9791));
		// public Transform pinkyProximal { get { return bones[SteamVR_Skeleton_JointIndexes.pinkyProximal]; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9792));
		TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804* L_0 = __this->get_bones_35();
		NullCheck(L_0);
		int32_t L_1 = ((int32_t)22);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_2 = (L_0)->GetAt(static_cast<il2cpp_array_size_t>(L_1));
		V_0 = L_2;
		goto IL_000d;
	}

IL_000d:
	{
		// public Transform pinkyProximal { get { return bones[SteamVR_Skeleton_JointIndexes.pinkyProximal]; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9793));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_3 = V_0;
		return L_3;
	}
}
// UnityEngine.Transform Valve.VR.SteamVR_Behaviour_Skeleton::get_pinkyMiddle()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * SteamVR_Behaviour_Skeleton_get_pinkyMiddle_m902A0ED89D0CB4F02183B58844BDFA102FA49215 (SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Skeleton_get_pinkyMiddle_m902A0ED89D0CB4F02183B58844BDFA102FA49215_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * V_0 = NULL;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Behaviour_Skeleton_get_pinkyMiddle_m902A0ED89D0CB4F02183B58844BDFA102FA49215_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9794));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 9795));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9796));
		// public Transform pinkyMiddle { get { return bones[SteamVR_Skeleton_JointIndexes.pinkyMiddle]; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9797));
		TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804* L_0 = __this->get_bones_35();
		NullCheck(L_0);
		int32_t L_1 = ((int32_t)23);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_2 = (L_0)->GetAt(static_cast<il2cpp_array_size_t>(L_1));
		V_0 = L_2;
		goto IL_000d;
	}

IL_000d:
	{
		// public Transform pinkyMiddle { get { return bones[SteamVR_Skeleton_JointIndexes.pinkyMiddle]; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9798));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_3 = V_0;
		return L_3;
	}
}
// UnityEngine.Transform Valve.VR.SteamVR_Behaviour_Skeleton::get_pinkyDistal()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * SteamVR_Behaviour_Skeleton_get_pinkyDistal_m293037BC745BE67ADAA05821663D2120DEA39C2B (SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Skeleton_get_pinkyDistal_m293037BC745BE67ADAA05821663D2120DEA39C2B_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * V_0 = NULL;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Behaviour_Skeleton_get_pinkyDistal_m293037BC745BE67ADAA05821663D2120DEA39C2B_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9799));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 9800));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9801));
		// public Transform pinkyDistal { get { return bones[SteamVR_Skeleton_JointIndexes.pinkyDistal]; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9802));
		TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804* L_0 = __this->get_bones_35();
		NullCheck(L_0);
		int32_t L_1 = ((int32_t)24);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_2 = (L_0)->GetAt(static_cast<il2cpp_array_size_t>(L_1));
		V_0 = L_2;
		goto IL_000d;
	}

IL_000d:
	{
		// public Transform pinkyDistal { get { return bones[SteamVR_Skeleton_JointIndexes.pinkyDistal]; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9803));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_3 = V_0;
		return L_3;
	}
}
// UnityEngine.Transform Valve.VR.SteamVR_Behaviour_Skeleton::get_pinkyTip()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * SteamVR_Behaviour_Skeleton_get_pinkyTip_mB6410DCFB16FAD7E8BF984835E45C00B5BDA257A (SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Skeleton_get_pinkyTip_mB6410DCFB16FAD7E8BF984835E45C00B5BDA257A_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * V_0 = NULL;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Behaviour_Skeleton_get_pinkyTip_mB6410DCFB16FAD7E8BF984835E45C00B5BDA257A_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9804));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 9805));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9806));
		// public Transform pinkyTip { get { return bones[SteamVR_Skeleton_JointIndexes.pinkyTip]; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9807));
		TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804* L_0 = __this->get_bones_35();
		NullCheck(L_0);
		int32_t L_1 = ((int32_t)25);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_2 = (L_0)->GetAt(static_cast<il2cpp_array_size_t>(L_1));
		V_0 = L_2;
		goto IL_000d;
	}

IL_000d:
	{
		// public Transform pinkyTip { get { return bones[SteamVR_Skeleton_JointIndexes.pinkyTip]; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9808));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_3 = V_0;
		return L_3;
	}
}
// UnityEngine.Transform Valve.VR.SteamVR_Behaviour_Skeleton::get_ringMetacarpal()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * SteamVR_Behaviour_Skeleton_get_ringMetacarpal_mFBCCD061248927BA8ABEA7475393D23A9485C334 (SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Skeleton_get_ringMetacarpal_mFBCCD061248927BA8ABEA7475393D23A9485C334_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * V_0 = NULL;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Behaviour_Skeleton_get_ringMetacarpal_mFBCCD061248927BA8ABEA7475393D23A9485C334_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9809));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 9810));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9811));
		// public Transform ringMetacarpal { get { return bones[SteamVR_Skeleton_JointIndexes.ringMetacarpal]; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9812));
		TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804* L_0 = __this->get_bones_35();
		NullCheck(L_0);
		int32_t L_1 = ((int32_t)16);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_2 = (L_0)->GetAt(static_cast<il2cpp_array_size_t>(L_1));
		V_0 = L_2;
		goto IL_000d;
	}

IL_000d:
	{
		// public Transform ringMetacarpal { get { return bones[SteamVR_Skeleton_JointIndexes.ringMetacarpal]; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9813));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_3 = V_0;
		return L_3;
	}
}
// UnityEngine.Transform Valve.VR.SteamVR_Behaviour_Skeleton::get_ringProximal()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * SteamVR_Behaviour_Skeleton_get_ringProximal_m4F4648D23E440C842E806ADFA2EEEEB166C6380F (SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Skeleton_get_ringProximal_m4F4648D23E440C842E806ADFA2EEEEB166C6380F_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * V_0 = NULL;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Behaviour_Skeleton_get_ringProximal_m4F4648D23E440C842E806ADFA2EEEEB166C6380F_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9814));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 9815));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9816));
		// public Transform ringProximal { get { return bones[SteamVR_Skeleton_JointIndexes.ringProximal]; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9817));
		TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804* L_0 = __this->get_bones_35();
		NullCheck(L_0);
		int32_t L_1 = ((int32_t)17);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_2 = (L_0)->GetAt(static_cast<il2cpp_array_size_t>(L_1));
		V_0 = L_2;
		goto IL_000d;
	}

IL_000d:
	{
		// public Transform ringProximal { get { return bones[SteamVR_Skeleton_JointIndexes.ringProximal]; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9818));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_3 = V_0;
		return L_3;
	}
}
// UnityEngine.Transform Valve.VR.SteamVR_Behaviour_Skeleton::get_ringMiddle()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * SteamVR_Behaviour_Skeleton_get_ringMiddle_m95882BB0A66F1DBFCC2954B4368D51DC9C6B87A4 (SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Skeleton_get_ringMiddle_m95882BB0A66F1DBFCC2954B4368D51DC9C6B87A4_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * V_0 = NULL;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Behaviour_Skeleton_get_ringMiddle_m95882BB0A66F1DBFCC2954B4368D51DC9C6B87A4_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9819));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 9820));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9821));
		// public Transform ringMiddle { get { return bones[SteamVR_Skeleton_JointIndexes.ringMiddle]; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9822));
		TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804* L_0 = __this->get_bones_35();
		NullCheck(L_0);
		int32_t L_1 = ((int32_t)18);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_2 = (L_0)->GetAt(static_cast<il2cpp_array_size_t>(L_1));
		V_0 = L_2;
		goto IL_000d;
	}

IL_000d:
	{
		// public Transform ringMiddle { get { return bones[SteamVR_Skeleton_JointIndexes.ringMiddle]; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9823));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_3 = V_0;
		return L_3;
	}
}
// UnityEngine.Transform Valve.VR.SteamVR_Behaviour_Skeleton::get_ringDistal()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * SteamVR_Behaviour_Skeleton_get_ringDistal_mC8282D64379F0281AD5BFCEF468F59AF7BD36D86 (SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Skeleton_get_ringDistal_mC8282D64379F0281AD5BFCEF468F59AF7BD36D86_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * V_0 = NULL;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Behaviour_Skeleton_get_ringDistal_mC8282D64379F0281AD5BFCEF468F59AF7BD36D86_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9824));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 9825));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9826));
		// public Transform ringDistal { get { return bones[SteamVR_Skeleton_JointIndexes.ringDistal]; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9827));
		TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804* L_0 = __this->get_bones_35();
		NullCheck(L_0);
		int32_t L_1 = ((int32_t)19);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_2 = (L_0)->GetAt(static_cast<il2cpp_array_size_t>(L_1));
		V_0 = L_2;
		goto IL_000d;
	}

IL_000d:
	{
		// public Transform ringDistal { get { return bones[SteamVR_Skeleton_JointIndexes.ringDistal]; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9828));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_3 = V_0;
		return L_3;
	}
}
// UnityEngine.Transform Valve.VR.SteamVR_Behaviour_Skeleton::get_ringTip()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * SteamVR_Behaviour_Skeleton_get_ringTip_m08A038D2A81F1DCC692B7F8C52180B1CAAC07E7D (SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Skeleton_get_ringTip_m08A038D2A81F1DCC692B7F8C52180B1CAAC07E7D_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * V_0 = NULL;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Behaviour_Skeleton_get_ringTip_m08A038D2A81F1DCC692B7F8C52180B1CAAC07E7D_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9829));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 9830));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9831));
		// public Transform ringTip { get { return bones[SteamVR_Skeleton_JointIndexes.ringTip]; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9832));
		TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804* L_0 = __this->get_bones_35();
		NullCheck(L_0);
		int32_t L_1 = ((int32_t)20);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_2 = (L_0)->GetAt(static_cast<il2cpp_array_size_t>(L_1));
		V_0 = L_2;
		goto IL_000d;
	}

IL_000d:
	{
		// public Transform ringTip { get { return bones[SteamVR_Skeleton_JointIndexes.ringTip]; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9833));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_3 = V_0;
		return L_3;
	}
}
// UnityEngine.Transform Valve.VR.SteamVR_Behaviour_Skeleton::get_thumbMetacarpal()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * SteamVR_Behaviour_Skeleton_get_thumbMetacarpal_m1DD9F526A4600544142EB02B77EFC316614C4BC6 (SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Skeleton_get_thumbMetacarpal_m1DD9F526A4600544142EB02B77EFC316614C4BC6_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * V_0 = NULL;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Behaviour_Skeleton_get_thumbMetacarpal_m1DD9F526A4600544142EB02B77EFC316614C4BC6_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9834));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 9835));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9836));
		// public Transform thumbMetacarpal { get { return bones[SteamVR_Skeleton_JointIndexes.thumbMetacarpal]; } } //doesn't exist - mapped to proximal
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9837));
		TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804* L_0 = __this->get_bones_35();
		NullCheck(L_0);
		int32_t L_1 = 2;
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_2 = (L_0)->GetAt(static_cast<il2cpp_array_size_t>(L_1));
		V_0 = L_2;
		goto IL_000c;
	}

IL_000c:
	{
		// public Transform thumbMetacarpal { get { return bones[SteamVR_Skeleton_JointIndexes.thumbMetacarpal]; } } //doesn't exist - mapped to proximal
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9838));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_3 = V_0;
		return L_3;
	}
}
// UnityEngine.Transform Valve.VR.SteamVR_Behaviour_Skeleton::get_thumbProximal()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * SteamVR_Behaviour_Skeleton_get_thumbProximal_m0CB4247ED100768398A3C9E9908E0C3ED240534A (SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Skeleton_get_thumbProximal_m0CB4247ED100768398A3C9E9908E0C3ED240534A_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * V_0 = NULL;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Behaviour_Skeleton_get_thumbProximal_m0CB4247ED100768398A3C9E9908E0C3ED240534A_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9839));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 9840));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9841));
		// public Transform thumbProximal { get { return bones[SteamVR_Skeleton_JointIndexes.thumbProximal]; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9842));
		TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804* L_0 = __this->get_bones_35();
		NullCheck(L_0);
		int32_t L_1 = 2;
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_2 = (L_0)->GetAt(static_cast<il2cpp_array_size_t>(L_1));
		V_0 = L_2;
		goto IL_000c;
	}

IL_000c:
	{
		// public Transform thumbProximal { get { return bones[SteamVR_Skeleton_JointIndexes.thumbProximal]; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9843));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_3 = V_0;
		return L_3;
	}
}
// UnityEngine.Transform Valve.VR.SteamVR_Behaviour_Skeleton::get_thumbMiddle()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * SteamVR_Behaviour_Skeleton_get_thumbMiddle_m027A0D17549E8F231A9469445958DC7B14D016E8 (SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Skeleton_get_thumbMiddle_m027A0D17549E8F231A9469445958DC7B14D016E8_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * V_0 = NULL;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Behaviour_Skeleton_get_thumbMiddle_m027A0D17549E8F231A9469445958DC7B14D016E8_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9844));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 9845));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9846));
		// public Transform thumbMiddle { get { return bones[SteamVR_Skeleton_JointIndexes.thumbMiddle]; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9847));
		TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804* L_0 = __this->get_bones_35();
		NullCheck(L_0);
		int32_t L_1 = 3;
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_2 = (L_0)->GetAt(static_cast<il2cpp_array_size_t>(L_1));
		V_0 = L_2;
		goto IL_000c;
	}

IL_000c:
	{
		// public Transform thumbMiddle { get { return bones[SteamVR_Skeleton_JointIndexes.thumbMiddle]; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9848));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_3 = V_0;
		return L_3;
	}
}
// UnityEngine.Transform Valve.VR.SteamVR_Behaviour_Skeleton::get_thumbDistal()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * SteamVR_Behaviour_Skeleton_get_thumbDistal_m1AAE37DA4600B5E65E440ECE9AF86A811F467F0E (SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Skeleton_get_thumbDistal_m1AAE37DA4600B5E65E440ECE9AF86A811F467F0E_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * V_0 = NULL;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Behaviour_Skeleton_get_thumbDistal_m1AAE37DA4600B5E65E440ECE9AF86A811F467F0E_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9849));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 9850));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9851));
		// public Transform thumbDistal { get { return bones[SteamVR_Skeleton_JointIndexes.thumbDistal]; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9852));
		TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804* L_0 = __this->get_bones_35();
		NullCheck(L_0);
		int32_t L_1 = 4;
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_2 = (L_0)->GetAt(static_cast<il2cpp_array_size_t>(L_1));
		V_0 = L_2;
		goto IL_000c;
	}

IL_000c:
	{
		// public Transform thumbDistal { get { return bones[SteamVR_Skeleton_JointIndexes.thumbDistal]; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9853));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_3 = V_0;
		return L_3;
	}
}
// UnityEngine.Transform Valve.VR.SteamVR_Behaviour_Skeleton::get_thumbTip()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * SteamVR_Behaviour_Skeleton_get_thumbTip_m760E6291B5983333C3A2B6D69B21E6CAC2C0C2F3 (SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Skeleton_get_thumbTip_m760E6291B5983333C3A2B6D69B21E6CAC2C0C2F3_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * V_0 = NULL;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Behaviour_Skeleton_get_thumbTip_m760E6291B5983333C3A2B6D69B21E6CAC2C0C2F3_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9854));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 9855));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9856));
		// public Transform thumbTip { get { return bones[SteamVR_Skeleton_JointIndexes.thumbTip]; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9857));
		TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804* L_0 = __this->get_bones_35();
		NullCheck(L_0);
		int32_t L_1 = 5;
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_2 = (L_0)->GetAt(static_cast<il2cpp_array_size_t>(L_1));
		V_0 = L_2;
		goto IL_000c;
	}

IL_000c:
	{
		// public Transform thumbTip { get { return bones[SteamVR_Skeleton_JointIndexes.thumbTip]; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9858));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_3 = V_0;
		return L_3;
	}
}
// UnityEngine.Transform Valve.VR.SteamVR_Behaviour_Skeleton::get_thumbAux()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * SteamVR_Behaviour_Skeleton_get_thumbAux_m201F1B59F4234329F05A42DB1147CA5273D74A4C (SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Skeleton_get_thumbAux_m201F1B59F4234329F05A42DB1147CA5273D74A4C_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * V_0 = NULL;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Behaviour_Skeleton_get_thumbAux_m201F1B59F4234329F05A42DB1147CA5273D74A4C_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9859));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 9860));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9861));
		// public Transform thumbAux { get { return bones[SteamVR_Skeleton_JointIndexes.thumbAux]; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9862));
		TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804* L_0 = __this->get_bones_35();
		NullCheck(L_0);
		int32_t L_1 = ((int32_t)26);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_2 = (L_0)->GetAt(static_cast<il2cpp_array_size_t>(L_1));
		V_0 = L_2;
		goto IL_000d;
	}

IL_000d:
	{
		// public Transform thumbAux { get { return bones[SteamVR_Skeleton_JointIndexes.thumbAux]; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9863));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_3 = V_0;
		return L_3;
	}
}
// UnityEngine.Transform Valve.VR.SteamVR_Behaviour_Skeleton::get_indexAux()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * SteamVR_Behaviour_Skeleton_get_indexAux_m94BBF354535FE699655BC855C045AB31676A8055 (SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Skeleton_get_indexAux_m94BBF354535FE699655BC855C045AB31676A8055_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * V_0 = NULL;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Behaviour_Skeleton_get_indexAux_m94BBF354535FE699655BC855C045AB31676A8055_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9864));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 9865));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9866));
		// public Transform indexAux { get { return bones[SteamVR_Skeleton_JointIndexes.indexAux]; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9867));
		TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804* L_0 = __this->get_bones_35();
		NullCheck(L_0);
		int32_t L_1 = ((int32_t)27);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_2 = (L_0)->GetAt(static_cast<il2cpp_array_size_t>(L_1));
		V_0 = L_2;
		goto IL_000d;
	}

IL_000d:
	{
		// public Transform indexAux { get { return bones[SteamVR_Skeleton_JointIndexes.indexAux]; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9868));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_3 = V_0;
		return L_3;
	}
}
// UnityEngine.Transform Valve.VR.SteamVR_Behaviour_Skeleton::get_middleAux()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * SteamVR_Behaviour_Skeleton_get_middleAux_m488FFCDE7292ADF3EE6366E785D5E5A62A6C5B4D (SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Skeleton_get_middleAux_m488FFCDE7292ADF3EE6366E785D5E5A62A6C5B4D_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * V_0 = NULL;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Behaviour_Skeleton_get_middleAux_m488FFCDE7292ADF3EE6366E785D5E5A62A6C5B4D_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9869));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 9870));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9871));
		// public Transform middleAux { get { return bones[SteamVR_Skeleton_JointIndexes.middleAux]; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9872));
		TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804* L_0 = __this->get_bones_35();
		NullCheck(L_0);
		int32_t L_1 = ((int32_t)28);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_2 = (L_0)->GetAt(static_cast<il2cpp_array_size_t>(L_1));
		V_0 = L_2;
		goto IL_000d;
	}

IL_000d:
	{
		// public Transform middleAux { get { return bones[SteamVR_Skeleton_JointIndexes.middleAux]; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9873));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_3 = V_0;
		return L_3;
	}
}
// UnityEngine.Transform Valve.VR.SteamVR_Behaviour_Skeleton::get_ringAux()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * SteamVR_Behaviour_Skeleton_get_ringAux_mC29BFE8AD2E1307BB9DC6E253D3C1CC577E7444C (SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Skeleton_get_ringAux_mC29BFE8AD2E1307BB9DC6E253D3C1CC577E7444C_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * V_0 = NULL;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Behaviour_Skeleton_get_ringAux_mC29BFE8AD2E1307BB9DC6E253D3C1CC577E7444C_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9874));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 9875));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9876));
		// public Transform ringAux { get { return bones[SteamVR_Skeleton_JointIndexes.ringAux]; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9877));
		TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804* L_0 = __this->get_bones_35();
		NullCheck(L_0);
		int32_t L_1 = ((int32_t)29);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_2 = (L_0)->GetAt(static_cast<il2cpp_array_size_t>(L_1));
		V_0 = L_2;
		goto IL_000d;
	}

IL_000d:
	{
		// public Transform ringAux { get { return bones[SteamVR_Skeleton_JointIndexes.ringAux]; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9878));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_3 = V_0;
		return L_3;
	}
}
// UnityEngine.Transform Valve.VR.SteamVR_Behaviour_Skeleton::get_pinkyAux()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * SteamVR_Behaviour_Skeleton_get_pinkyAux_m08C510C97BC16F5911DD9FD0219CB1F610B99B39 (SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Skeleton_get_pinkyAux_m08C510C97BC16F5911DD9FD0219CB1F610B99B39_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * V_0 = NULL;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Behaviour_Skeleton_get_pinkyAux_m08C510C97BC16F5911DD9FD0219CB1F610B99B39_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9879));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 9880));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9881));
		// public Transform pinkyAux { get { return bones[SteamVR_Skeleton_JointIndexes.pinkyAux]; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9882));
		TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804* L_0 = __this->get_bones_35();
		NullCheck(L_0);
		int32_t L_1 = ((int32_t)30);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_2 = (L_0)->GetAt(static_cast<il2cpp_array_size_t>(L_1));
		V_0 = L_2;
		goto IL_000d;
	}

IL_000d:
	{
		// public Transform pinkyAux { get { return bones[SteamVR_Skeleton_JointIndexes.pinkyAux]; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9883));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_3 = V_0;
		return L_3;
	}
}
// UnityEngine.Transform[] Valve.VR.SteamVR_Behaviour_Skeleton::get_proximals()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804* SteamVR_Behaviour_Skeleton_get_proximals_m9024F6277D6328C79249A56C1C961AA7E725B4BE (SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Skeleton_get_proximals_m9024F6277D6328C79249A56C1C961AA7E725B4BE_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Behaviour_Skeleton_get_proximals_m9024F6277D6328C79249A56C1C961AA7E725B4BE_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9884));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 9885));
	{
		// public Transform[] proximals { get; protected set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9886));
		TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804* L_0 = __this->get_U3CproximalsU3Ek__BackingField_27();
		return L_0;
	}
}
// System.Void Valve.VR.SteamVR_Behaviour_Skeleton::set_proximals(UnityEngine.Transform[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_Skeleton_set_proximals_mDDA03D4409588EB318C40F83363ABB3C4D463069 (SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A * __this, TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804* ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Skeleton_set_proximals_mDDA03D4409588EB318C40F83363ABB3C4D463069_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Behaviour_Skeleton_set_proximals_mDDA03D4409588EB318C40F83363ABB3C4D463069_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9887));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 9888));
	{
		// public Transform[] proximals { get; protected set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9889));
		TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804* L_0 = ___value0;
		__this->set_U3CproximalsU3Ek__BackingField_27(L_0);
		return;
	}
}
// UnityEngine.Transform[] Valve.VR.SteamVR_Behaviour_Skeleton::get_middles()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804* SteamVR_Behaviour_Skeleton_get_middles_mD7DAC9171C603C3C45B4A9F1D89448CBCFFB390C (SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Skeleton_get_middles_mD7DAC9171C603C3C45B4A9F1D89448CBCFFB390C_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Behaviour_Skeleton_get_middles_mD7DAC9171C603C3C45B4A9F1D89448CBCFFB390C_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9890));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 9891));
	{
		// public Transform[] middles { get; protected set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9892));
		TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804* L_0 = __this->get_U3CmiddlesU3Ek__BackingField_28();
		return L_0;
	}
}
// System.Void Valve.VR.SteamVR_Behaviour_Skeleton::set_middles(UnityEngine.Transform[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_Skeleton_set_middles_mB85213CC9E37A3B86AEEA3A14EA16DB460136773 (SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A * __this, TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804* ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Skeleton_set_middles_mB85213CC9E37A3B86AEEA3A14EA16DB460136773_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Behaviour_Skeleton_set_middles_mB85213CC9E37A3B86AEEA3A14EA16DB460136773_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9893));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 9894));
	{
		// public Transform[] middles { get; protected set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9895));
		TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804* L_0 = ___value0;
		__this->set_U3CmiddlesU3Ek__BackingField_28(L_0);
		return;
	}
}
// UnityEngine.Transform[] Valve.VR.SteamVR_Behaviour_Skeleton::get_distals()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804* SteamVR_Behaviour_Skeleton_get_distals_mE5C550FFA6E9223EB39BF988AB875D58965FBDD5 (SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Skeleton_get_distals_mE5C550FFA6E9223EB39BF988AB875D58965FBDD5_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Behaviour_Skeleton_get_distals_mE5C550FFA6E9223EB39BF988AB875D58965FBDD5_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9896));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 9897));
	{
		// public Transform[] distals { get; protected set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9898));
		TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804* L_0 = __this->get_U3CdistalsU3Ek__BackingField_29();
		return L_0;
	}
}
// System.Void Valve.VR.SteamVR_Behaviour_Skeleton::set_distals(UnityEngine.Transform[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_Skeleton_set_distals_m7D276F9D28125233D7AD24EA8A2F0F9F0A0B4541 (SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A * __this, TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804* ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Skeleton_set_distals_m7D276F9D28125233D7AD24EA8A2F0F9F0A0B4541_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Behaviour_Skeleton_set_distals_m7D276F9D28125233D7AD24EA8A2F0F9F0A0B4541_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9899));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 9900));
	{
		// public Transform[] distals { get; protected set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9901));
		TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804* L_0 = ___value0;
		__this->set_U3CdistalsU3Ek__BackingField_29(L_0);
		return;
	}
}
// UnityEngine.Transform[] Valve.VR.SteamVR_Behaviour_Skeleton::get_tips()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804* SteamVR_Behaviour_Skeleton_get_tips_m26AB3F53089E1D3AE4B4821BB051E2D57200439A (SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Skeleton_get_tips_m26AB3F53089E1D3AE4B4821BB051E2D57200439A_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Behaviour_Skeleton_get_tips_m26AB3F53089E1D3AE4B4821BB051E2D57200439A_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9902));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 9903));
	{
		// public Transform[] tips { get; protected set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9904));
		TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804* L_0 = __this->get_U3CtipsU3Ek__BackingField_30();
		return L_0;
	}
}
// System.Void Valve.VR.SteamVR_Behaviour_Skeleton::set_tips(UnityEngine.Transform[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_Skeleton_set_tips_m7ED7EAB9823F9DC1C4E8E888D6C1FBE636C07331 (SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A * __this, TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804* ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Skeleton_set_tips_m7ED7EAB9823F9DC1C4E8E888D6C1FBE636C07331_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Behaviour_Skeleton_set_tips_m7ED7EAB9823F9DC1C4E8E888D6C1FBE636C07331_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9905));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 9906));
	{
		// public Transform[] tips { get; protected set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9907));
		TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804* L_0 = ___value0;
		__this->set_U3CtipsU3Ek__BackingField_30(L_0);
		return;
	}
}
// UnityEngine.Transform[] Valve.VR.SteamVR_Behaviour_Skeleton::get_auxs()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804* SteamVR_Behaviour_Skeleton_get_auxs_m72AC37161D096F4092E72761E2F6060006BB64EB (SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Skeleton_get_auxs_m72AC37161D096F4092E72761E2F6060006BB64EB_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Behaviour_Skeleton_get_auxs_m72AC37161D096F4092E72761E2F6060006BB64EB_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9908));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 9909));
	{
		// public Transform[] auxs { get; protected set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9910));
		TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804* L_0 = __this->get_U3CauxsU3Ek__BackingField_31();
		return L_0;
	}
}
// System.Void Valve.VR.SteamVR_Behaviour_Skeleton::set_auxs(UnityEngine.Transform[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_Skeleton_set_auxs_m825F3D35FF398084D053A9968403269EA25E2A8A (SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A * __this, TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804* ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Skeleton_set_auxs_m825F3D35FF398084D053A9968403269EA25E2A8A_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Behaviour_Skeleton_set_auxs_m825F3D35FF398084D053A9968403269EA25E2A8A_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9911));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 9912));
	{
		// public Transform[] auxs { get; protected set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9913));
		TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804* L_0 = ___value0;
		__this->set_U3CauxsU3Ek__BackingField_31(L_0);
		return;
	}
}
// Valve.VR.EVRSkeletalTrackingLevel Valve.VR.SteamVR_Behaviour_Skeleton::get_skeletalTrackingLevel()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t SteamVR_Behaviour_Skeleton_get_skeletalTrackingLevel_m1B59D03F48D6C1BCBBC143F29C69A4E92C13E990 (SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Skeleton_get_skeletalTrackingLevel_m1B59D03F48D6C1BCBBC143F29C69A4E92C13E990_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	int32_t V_1 = 0;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Behaviour_Skeleton_get_skeletalTrackingLevel_m1B59D03F48D6C1BCBBC143F29C69A4E92C13E990_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9914));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 9915));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9916));
		// if (skeletonAvailable)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9917));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9924));
		bool L_0 = SteamVR_Behaviour_Skeleton_get_skeletonAvailable_m29DBA8C30D07CAF0C3F1423F7886AB2F3D8422E2(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9924));
		V_0 = L_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9918));
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_001a;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9919));
		// return skeletonAction.skeletalTrackingLevel;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9920));
		SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * L_2 = __this->get_skeletonAction_4();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9925));
		NullCheck(L_2);
		int32_t L_3 = SteamVR_Action_Skeleton_get_skeletalTrackingLevel_m42CDC3C3C98C91065325A4C71510B9B8B6FBAA14(L_2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9925));
		V_1 = L_3;
		goto IL_001f;
	}

IL_001a:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9921));
		// return EVRSkeletalTrackingLevel.VRSkeletalTracking_Estimated;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9922));
		V_1 = 0;
		goto IL_001f;
	}

IL_001f:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9923));
		int32_t L_4 = V_1;
		return L_4;
	}
}
// System.Boolean Valve.VR.SteamVR_Behaviour_Skeleton::get_isBlending()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Behaviour_Skeleton_get_isBlending_m8A020CA28D67702590D64E541589BF3CE41D39F3 (SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Skeleton_get_isBlending_m8A020CA28D67702590D64E541589BF3CE41D39F3_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Behaviour_Skeleton_get_isBlending_m8A020CA28D67702590D64E541589BF3CE41D39F3_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9926));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 9927));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9928));
		// return blendRoutine != null;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9929));
		Coroutine_tAE7DB2FC70A0AE6477F896F852057CB0754F06EC * L_0 = __this->get_blendRoutine_32();
		V_0 = (bool)((!(((RuntimeObject*)(Coroutine_tAE7DB2FC70A0AE6477F896F852057CB0754F06EC *)L_0) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
		goto IL_000d;
	}

IL_000d:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9930));
		bool L_1 = V_0;
		return L_1;
	}
}
// Valve.VR.SteamVR_ActionSet Valve.VR.SteamVR_Behaviour_Skeleton::get_actionSet()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * SteamVR_Behaviour_Skeleton_get_actionSet_mA75400EF472E973EBC0A08E6EFE11D2C2DCB2D73 (SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Skeleton_get_actionSet_mA75400EF472E973EBC0A08E6EFE11D2C2DCB2D73_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * V_0 = NULL;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Behaviour_Skeleton_get_actionSet_mA75400EF472E973EBC0A08E6EFE11D2C2DCB2D73_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9931));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 9932));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9933));
		// return skeletonAction.actionSet;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9934));
		SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * L_0 = __this->get_skeletonAction_4();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9936));
		NullCheck(L_0);
		SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * L_1 = VirtFuncInvoker0< SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * >::Invoke(19 /* Valve.VR.SteamVR_ActionSet Valve.VR.SteamVR_Action::get_actionSet() */, L_0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9936));
		V_0 = L_1;
		goto IL_000f;
	}

IL_000f:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9935));
		SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * L_2 = V_0;
		return L_2;
	}
}
// Valve.VR.SteamVR_ActionDirections Valve.VR.SteamVR_Behaviour_Skeleton::get_direction()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t SteamVR_Behaviour_Skeleton_get_direction_mFE711368D78BB6517DD102486C71BFACAE4D648F (SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Skeleton_get_direction_mFE711368D78BB6517DD102486C71BFACAE4D648F_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	int32_t V_0 = 0;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Behaviour_Skeleton_get_direction_mFE711368D78BB6517DD102486C71BFACAE4D648F_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9937));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 9938));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9939));
		// return skeletonAction.direction;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9940));
		SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * L_0 = __this->get_skeletonAction_4();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9942));
		NullCheck(L_0);
		int32_t L_1 = VirtFuncInvoker0< int32_t >::Invoke(20 /* Valve.VR.SteamVR_ActionDirections Valve.VR.SteamVR_Action::get_direction() */, L_0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9942));
		V_0 = L_1;
		goto IL_000f;
	}

IL_000f:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9941));
		int32_t L_2 = V_0;
		return L_2;
	}
}
// System.Void Valve.VR.SteamVR_Behaviour_Skeleton::Awake()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_Skeleton_Awake_m0C9DE5C9FFD5BDFE5F04E89072B607308C6111AF (SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Skeleton_Awake_m0C9DE5C9FFD5BDFE5F04E89072B607308C6111AF_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Behaviour_Skeleton_Awake_m0C9DE5C9FFD5BDFE5F04E89072B607308C6111AF_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9943));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 9944));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9945));
		// SteamVR.Initialize();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9946));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9955));
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_tE14648C0E73A16927B96F72915B425561B0D057F_il2cpp_TypeInfo_var);
		SteamVR_Initialize_m4290EF084BDC61199798490C498AA0DF8791260C((bool)0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9955));
		// AssignBonesArray();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9947));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9956));
		VirtActionInvoker0::Invoke(6 /* System.Void Valve.VR.SteamVR_Behaviour_Skeleton::AssignBonesArray() */, __this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9956));
		// proximals = new Transform[] { thumbProximal, indexProximal, middleProximal, ringProximal, pinkyProximal };
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9948));
		TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804* L_0 = (TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804*)(TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804*)SZArrayNew(TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804_il2cpp_TypeInfo_var, (uint32_t)5);
		TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804* L_1 = L_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9957));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_2 = SteamVR_Behaviour_Skeleton_get_thumbProximal_m0CB4247ED100768398A3C9E9908E0C3ED240534A(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9957));
		NullCheck(L_1);
		ArrayElementTypeCheck (L_1, L_2);
		(L_1)->SetAt(static_cast<il2cpp_array_size_t>(0), (Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA *)L_2);
		TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804* L_3 = L_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9958));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_4 = SteamVR_Behaviour_Skeleton_get_indexProximal_m12B2B068243D619BE16744095599DA88E55F14E9(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9958));
		NullCheck(L_3);
		ArrayElementTypeCheck (L_3, L_4);
		(L_3)->SetAt(static_cast<il2cpp_array_size_t>(1), (Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA *)L_4);
		TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804* L_5 = L_3;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9959));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_6 = SteamVR_Behaviour_Skeleton_get_middleProximal_m2160F1117BA71E7BF52BF518FCB2BA156A4C9939(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9959));
		NullCheck(L_5);
		ArrayElementTypeCheck (L_5, L_6);
		(L_5)->SetAt(static_cast<il2cpp_array_size_t>(2), (Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA *)L_6);
		TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804* L_7 = L_5;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9960));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_8 = SteamVR_Behaviour_Skeleton_get_ringProximal_m4F4648D23E440C842E806ADFA2EEEEB166C6380F(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9960));
		NullCheck(L_7);
		ArrayElementTypeCheck (L_7, L_8);
		(L_7)->SetAt(static_cast<il2cpp_array_size_t>(3), (Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA *)L_8);
		TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804* L_9 = L_7;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9961));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_10 = SteamVR_Behaviour_Skeleton_get_pinkyProximal_m248721E4423A15A1C7A681B6698658CFD75F4727(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9961));
		NullCheck(L_9);
		ArrayElementTypeCheck (L_9, L_10);
		(L_9)->SetAt(static_cast<il2cpp_array_size_t>(4), (Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA *)L_10);
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9962));
		SteamVR_Behaviour_Skeleton_set_proximals_mDDA03D4409588EB318C40F83363ABB3C4D463069_inline(__this, L_9, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9962));
		// middles = new Transform[] { thumbMiddle, indexMiddle, middleMiddle, ringMiddle, pinkyMiddle };
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9949));
		TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804* L_11 = (TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804*)(TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804*)SZArrayNew(TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804_il2cpp_TypeInfo_var, (uint32_t)5);
		TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804* L_12 = L_11;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9963));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_13 = SteamVR_Behaviour_Skeleton_get_thumbMiddle_m027A0D17549E8F231A9469445958DC7B14D016E8(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9963));
		NullCheck(L_12);
		ArrayElementTypeCheck (L_12, L_13);
		(L_12)->SetAt(static_cast<il2cpp_array_size_t>(0), (Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA *)L_13);
		TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804* L_14 = L_12;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9964));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_15 = SteamVR_Behaviour_Skeleton_get_indexMiddle_mBC700387F3C19B996B52211EDB152C037F2BC445(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9964));
		NullCheck(L_14);
		ArrayElementTypeCheck (L_14, L_15);
		(L_14)->SetAt(static_cast<il2cpp_array_size_t>(1), (Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA *)L_15);
		TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804* L_16 = L_14;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9965));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_17 = SteamVR_Behaviour_Skeleton_get_middleMiddle_m49B293EF0D60AFA7CAE933F392D317DC971BC8A7(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9965));
		NullCheck(L_16);
		ArrayElementTypeCheck (L_16, L_17);
		(L_16)->SetAt(static_cast<il2cpp_array_size_t>(2), (Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA *)L_17);
		TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804* L_18 = L_16;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9966));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_19 = SteamVR_Behaviour_Skeleton_get_ringMiddle_m95882BB0A66F1DBFCC2954B4368D51DC9C6B87A4(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9966));
		NullCheck(L_18);
		ArrayElementTypeCheck (L_18, L_19);
		(L_18)->SetAt(static_cast<il2cpp_array_size_t>(3), (Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA *)L_19);
		TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804* L_20 = L_18;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9967));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_21 = SteamVR_Behaviour_Skeleton_get_pinkyMiddle_m902A0ED89D0CB4F02183B58844BDFA102FA49215(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9967));
		NullCheck(L_20);
		ArrayElementTypeCheck (L_20, L_21);
		(L_20)->SetAt(static_cast<il2cpp_array_size_t>(4), (Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA *)L_21);
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9968));
		SteamVR_Behaviour_Skeleton_set_middles_mB85213CC9E37A3B86AEEA3A14EA16DB460136773_inline(__this, L_20, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9968));
		// distals = new Transform[] { thumbDistal, indexDistal, middleDistal, ringDistal, pinkyDistal };
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9950));
		TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804* L_22 = (TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804*)(TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804*)SZArrayNew(TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804_il2cpp_TypeInfo_var, (uint32_t)5);
		TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804* L_23 = L_22;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9969));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_24 = SteamVR_Behaviour_Skeleton_get_thumbDistal_m1AAE37DA4600B5E65E440ECE9AF86A811F467F0E(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9969));
		NullCheck(L_23);
		ArrayElementTypeCheck (L_23, L_24);
		(L_23)->SetAt(static_cast<il2cpp_array_size_t>(0), (Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA *)L_24);
		TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804* L_25 = L_23;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9970));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_26 = SteamVR_Behaviour_Skeleton_get_indexDistal_m5C68558EE577F1A6D3CFB7CC616823E8DC19DB07(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9970));
		NullCheck(L_25);
		ArrayElementTypeCheck (L_25, L_26);
		(L_25)->SetAt(static_cast<il2cpp_array_size_t>(1), (Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA *)L_26);
		TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804* L_27 = L_25;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9971));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_28 = SteamVR_Behaviour_Skeleton_get_middleDistal_m349C9ACA71BB75EF3789240F820F3C7C1F83106D(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9971));
		NullCheck(L_27);
		ArrayElementTypeCheck (L_27, L_28);
		(L_27)->SetAt(static_cast<il2cpp_array_size_t>(2), (Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA *)L_28);
		TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804* L_29 = L_27;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9972));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_30 = SteamVR_Behaviour_Skeleton_get_ringDistal_mC8282D64379F0281AD5BFCEF468F59AF7BD36D86(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9972));
		NullCheck(L_29);
		ArrayElementTypeCheck (L_29, L_30);
		(L_29)->SetAt(static_cast<il2cpp_array_size_t>(3), (Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA *)L_30);
		TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804* L_31 = L_29;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9973));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_32 = SteamVR_Behaviour_Skeleton_get_pinkyDistal_m293037BC745BE67ADAA05821663D2120DEA39C2B(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9973));
		NullCheck(L_31);
		ArrayElementTypeCheck (L_31, L_32);
		(L_31)->SetAt(static_cast<il2cpp_array_size_t>(4), (Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA *)L_32);
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9974));
		SteamVR_Behaviour_Skeleton_set_distals_m7D276F9D28125233D7AD24EA8A2F0F9F0A0B4541_inline(__this, L_31, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9974));
		// tips = new Transform[] { thumbTip, indexTip, middleTip, ringTip, pinkyTip };
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9951));
		TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804* L_33 = (TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804*)(TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804*)SZArrayNew(TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804_il2cpp_TypeInfo_var, (uint32_t)5);
		TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804* L_34 = L_33;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9975));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_35 = SteamVR_Behaviour_Skeleton_get_thumbTip_m760E6291B5983333C3A2B6D69B21E6CAC2C0C2F3(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9975));
		NullCheck(L_34);
		ArrayElementTypeCheck (L_34, L_35);
		(L_34)->SetAt(static_cast<il2cpp_array_size_t>(0), (Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA *)L_35);
		TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804* L_36 = L_34;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9976));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_37 = SteamVR_Behaviour_Skeleton_get_indexTip_m7BEF68906E2D53FE258E21179322DEB564D5BF5D(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9976));
		NullCheck(L_36);
		ArrayElementTypeCheck (L_36, L_37);
		(L_36)->SetAt(static_cast<il2cpp_array_size_t>(1), (Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA *)L_37);
		TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804* L_38 = L_36;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9977));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_39 = SteamVR_Behaviour_Skeleton_get_middleTip_m92D8F32D6D39694B20C40E552AF7FE4A80B4426B(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9977));
		NullCheck(L_38);
		ArrayElementTypeCheck (L_38, L_39);
		(L_38)->SetAt(static_cast<il2cpp_array_size_t>(2), (Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA *)L_39);
		TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804* L_40 = L_38;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9978));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_41 = SteamVR_Behaviour_Skeleton_get_ringTip_m08A038D2A81F1DCC692B7F8C52180B1CAAC07E7D(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9978));
		NullCheck(L_40);
		ArrayElementTypeCheck (L_40, L_41);
		(L_40)->SetAt(static_cast<il2cpp_array_size_t>(3), (Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA *)L_41);
		TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804* L_42 = L_40;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9979));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_43 = SteamVR_Behaviour_Skeleton_get_pinkyTip_mB6410DCFB16FAD7E8BF984835E45C00B5BDA257A(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9979));
		NullCheck(L_42);
		ArrayElementTypeCheck (L_42, L_43);
		(L_42)->SetAt(static_cast<il2cpp_array_size_t>(4), (Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA *)L_43);
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9980));
		SteamVR_Behaviour_Skeleton_set_tips_m7ED7EAB9823F9DC1C4E8E888D6C1FBE636C07331_inline(__this, L_42, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9980));
		// auxs = new Transform[] { thumbAux, indexAux, middleAux, ringAux, pinkyAux };
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9952));
		TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804* L_44 = (TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804*)(TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804*)SZArrayNew(TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804_il2cpp_TypeInfo_var, (uint32_t)5);
		TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804* L_45 = L_44;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9981));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_46 = SteamVR_Behaviour_Skeleton_get_thumbAux_m201F1B59F4234329F05A42DB1147CA5273D74A4C(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9981));
		NullCheck(L_45);
		ArrayElementTypeCheck (L_45, L_46);
		(L_45)->SetAt(static_cast<il2cpp_array_size_t>(0), (Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA *)L_46);
		TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804* L_47 = L_45;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9982));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_48 = SteamVR_Behaviour_Skeleton_get_indexAux_m94BBF354535FE699655BC855C045AB31676A8055(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9982));
		NullCheck(L_47);
		ArrayElementTypeCheck (L_47, L_48);
		(L_47)->SetAt(static_cast<il2cpp_array_size_t>(1), (Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA *)L_48);
		TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804* L_49 = L_47;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9983));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_50 = SteamVR_Behaviour_Skeleton_get_middleAux_m488FFCDE7292ADF3EE6366E785D5E5A62A6C5B4D(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9983));
		NullCheck(L_49);
		ArrayElementTypeCheck (L_49, L_50);
		(L_49)->SetAt(static_cast<il2cpp_array_size_t>(2), (Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA *)L_50);
		TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804* L_51 = L_49;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9984));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_52 = SteamVR_Behaviour_Skeleton_get_ringAux_mC29BFE8AD2E1307BB9DC6E253D3C1CC577E7444C(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9984));
		NullCheck(L_51);
		ArrayElementTypeCheck (L_51, L_52);
		(L_51)->SetAt(static_cast<il2cpp_array_size_t>(3), (Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA *)L_52);
		TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804* L_53 = L_51;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9985));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_54 = SteamVR_Behaviour_Skeleton_get_pinkyAux_m08C510C97BC16F5911DD9FD0219CB1F610B99B39(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9985));
		NullCheck(L_53);
		ArrayElementTypeCheck (L_53, L_54);
		(L_53)->SetAt(static_cast<il2cpp_array_size_t>(4), (Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA *)L_54);
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9986));
		SteamVR_Behaviour_Skeleton_set_auxs_m825F3D35FF398084D053A9968403269EA25E2A8A_inline(__this, L_53, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9986));
		// CheckSkeletonAction();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9953));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9987));
		VirtActionInvoker0::Invoke(5 /* System.Void Valve.VR.SteamVR_Behaviour_Skeleton::CheckSkeletonAction() */, __this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9987));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9954));
		return;
	}
}
// System.Void Valve.VR.SteamVR_Behaviour_Skeleton::CheckSkeletonAction()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_Skeleton_CheckSkeletonAction_m2BDDE69EA812CD3E7804C23E6EE65BD5FECC0FB6 (SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Skeleton_CheckSkeletonAction_m2BDDE69EA812CD3E7804C23E6EE65BD5FECC0FB6_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Behaviour_Skeleton_CheckSkeletonAction_m2BDDE69EA812CD3E7804C23E6EE65BD5FECC0FB6_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9988));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 9989));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9990));
		// if (skeletonAction == null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9991));
		SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * L_0 = __this->get_skeletonAction_4();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9995));
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734_il2cpp_TypeInfo_var);
		bool L_1 = SteamVR_Action_op_Equality_m16F1109154021CF7DC424B937A8AA5FC34463EE2(L_0, (SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9995));
		V_0 = L_1;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9992));
		bool L_2 = V_0;
		if (!L_2)
		{
			goto IL_0038;
		}
	}
	{
		// skeletonAction = SteamVR_Input.GetAction<SteamVR_Action_Skeleton>("Skeleton" + inputSource.ToString());
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9993));
		int32_t* L_3 = __this->get_address_of_inputSource_5();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9996));
		RuntimeObject * L_4 = Box(SteamVR_Input_Sources_tCE41AA589FB3B9516BDE0DFABDCB4AAEA29528F7_il2cpp_TypeInfo_var, L_3);
		NullCheck(L_4);
		String_t* L_5 = VirtFuncInvoker0< String_t* >::Invoke(3 /* System.String System.Object::ToString() */, L_4);
		*L_3 = *(int32_t*)UnBox(L_4);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9996));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9997));
		String_t* L_6 = String_Concat_mB78D0094592718DA6D5DB6C712A9C225631666BE(_stringLiteral4337EF337ECBAE01528EC15AA4029353FD42657C, L_5, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9997));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9998));
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Input_tCE4A1EC6C51592CB9DCD7B860984CB2C4DD937BF_il2cpp_TypeInfo_var);
		SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * L_7 = SteamVR_Input_GetAction_TisSteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504_m0EC1DD77FC160AEEF0E26CB478B21769AD6BA3D5(L_6, (bool)0, /*hidden argument*/SteamVR_Input_GetAction_TisSteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504_m0EC1DD77FC160AEEF0E26CB478B21769AD6BA3D5_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9998));
		__this->set_skeletonAction_4(L_7);
	}

IL_0038:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9994));
		return;
	}
}
// System.Void Valve.VR.SteamVR_Behaviour_Skeleton::AssignBonesArray()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_Skeleton_AssignBonesArray_mFEA6008860951F615A995F2D5FFE1CEFCF8A0327 (SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Skeleton_AssignBonesArray_mFEA6008860951F615A995F2D5FFE1CEFCF8A0327_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Behaviour_Skeleton_AssignBonesArray_mFEA6008860951F615A995F2D5FFE1CEFCF8A0327_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9999));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 10000));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10001));
		// bones = skeletonRoot.GetComponentsInChildren<Transform>();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10002));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_0 = __this->get_skeletonRoot_7();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10004));
		NullCheck(L_0);
		TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804* L_1 = Component_GetComponentsInChildren_TisTransform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA_m335E18CE04D2AD7313D89DBEA3A88EDB76255113(L_0, /*hidden argument*/Component_GetComponentsInChildren_TisTransform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA_m335E18CE04D2AD7313D89DBEA3A88EDB76255113_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10004));
		__this->set_bones_35(L_1);
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10003));
		return;
	}
}
// System.Void Valve.VR.SteamVR_Behaviour_Skeleton::OnEnable()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_Skeleton_OnEnable_m666F965B2ED6A54028F62E7FE1C8BE75B2D4C421 (SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Skeleton_OnEnable_m666F965B2ED6A54028F62E7FE1C8BE75B2D4C421_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Behaviour_Skeleton_OnEnable_m666F965B2ED6A54028F62E7FE1C8BE75B2D4C421_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10005));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 10006));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10007));
		// CheckSkeletonAction();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10008));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10017));
		VirtActionInvoker0::Invoke(5 /* System.Void Valve.VR.SteamVR_Behaviour_Skeleton::CheckSkeletonAction() */, __this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10017));
		// SteamVR_Input.onSkeletonsUpdated += SteamVR_Input_OnSkeletonsUpdated;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10009));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10018));
		SkeletonsUpdatedHandler_t87EC02E2FFD91D305E5C4E8B64110AA2981F3DD6 * L_0 = (SkeletonsUpdatedHandler_t87EC02E2FFD91D305E5C4E8B64110AA2981F3DD6 *)il2cpp_codegen_object_new(SkeletonsUpdatedHandler_t87EC02E2FFD91D305E5C4E8B64110AA2981F3DD6_il2cpp_TypeInfo_var);
		SkeletonsUpdatedHandler__ctor_m00B36814D5070D5715A0187CFF466DC31EEF53F5(L_0, __this, (intptr_t)((intptr_t)GetVirtualMethodInfo(__this, 9)), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10018));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10019));
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Input_tCE4A1EC6C51592CB9DCD7B860984CB2C4DD937BF_il2cpp_TypeInfo_var);
		SteamVR_Input_add_onSkeletonsUpdated_mABDC58C0D49B43F4C1161A46BFB03AD7791574CC(L_0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10019));
		// if (skeletonAction != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10010));
		SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * L_1 = __this->get_skeletonAction_4();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10020));
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734_il2cpp_TypeInfo_var);
		bool L_2 = SteamVR_Action_op_Inequality_m7114B6E3669F8C55CD3B5E4EC3A897648CBD0F8A(L_1, (SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10020));
		V_0 = L_2;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10011));
		bool L_3 = V_0;
		if (!L_3)
		{
			goto IL_005d;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10012));
		// skeletonAction.onDeviceConnectedChanged += OnDeviceConnectedChanged;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10013));
		SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * L_4 = __this->get_skeletonAction_4();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10021));
		DeviceConnectedChangeHandler_tA531478A75E2F7B0C49D41DADBB9FD7BD46C4592 * L_5 = (DeviceConnectedChangeHandler_tA531478A75E2F7B0C49D41DADBB9FD7BD46C4592 *)il2cpp_codegen_object_new(DeviceConnectedChangeHandler_tA531478A75E2F7B0C49D41DADBB9FD7BD46C4592_il2cpp_TypeInfo_var);
		DeviceConnectedChangeHandler__ctor_m8F5774FBC2C0DEA2AE17138C7D67D6FAD3385D8C(L_5, __this, (intptr_t)((intptr_t)SteamVR_Behaviour_Skeleton_OnDeviceConnectedChanged_mBB013D861DFBCE800C8A242E0FB46BB65E063358_RuntimeMethod_var), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10021));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10022));
		NullCheck(L_4);
		SteamVR_Action_Skeleton_add_onDeviceConnectedChanged_m92354268E04EC26BEA381884B6642CFBB1E08CC1(L_4, L_5, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10022));
		// skeletonAction.onTrackingChanged += OnTrackingChanged;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10014));
		SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * L_6 = __this->get_skeletonAction_4();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10023));
		TrackingChangeHandler_t8AD34E45FED47F362BB0D3E5B6B950708A0EC6B4 * L_7 = (TrackingChangeHandler_t8AD34E45FED47F362BB0D3E5B6B950708A0EC6B4 *)il2cpp_codegen_object_new(TrackingChangeHandler_t8AD34E45FED47F362BB0D3E5B6B950708A0EC6B4_il2cpp_TypeInfo_var);
		TrackingChangeHandler__ctor_m6669C85631291CBFDD37E8F72F923C1BB4EFBDA5(L_7, __this, (intptr_t)((intptr_t)SteamVR_Behaviour_Skeleton_OnTrackingChanged_m41FB143E880B6783DC175AF058D056ABF95A7CFB_RuntimeMethod_var), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10023));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10024));
		NullCheck(L_6);
		SteamVR_Action_Skeleton_add_onTrackingChanged_m27D7D512A8B28F439D5462462C58725039CB823B(L_6, L_7, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10024));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10015));
	}

IL_005d:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10016));
		return;
	}
}
// System.Void Valve.VR.SteamVR_Behaviour_Skeleton::OnDisable()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_Skeleton_OnDisable_m336A8F4BFDDFB74C4C3AB14FD3A968E4B5023DC9 (SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Skeleton_OnDisable_m336A8F4BFDDFB74C4C3AB14FD3A968E4B5023DC9_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Behaviour_Skeleton_OnDisable_m336A8F4BFDDFB74C4C3AB14FD3A968E4B5023DC9_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10025));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 10026));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10027));
		// SteamVR_Input.onSkeletonsUpdated -= SteamVR_Input_OnSkeletonsUpdated;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10028));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10036));
		SkeletonsUpdatedHandler_t87EC02E2FFD91D305E5C4E8B64110AA2981F3DD6 * L_0 = (SkeletonsUpdatedHandler_t87EC02E2FFD91D305E5C4E8B64110AA2981F3DD6 *)il2cpp_codegen_object_new(SkeletonsUpdatedHandler_t87EC02E2FFD91D305E5C4E8B64110AA2981F3DD6_il2cpp_TypeInfo_var);
		SkeletonsUpdatedHandler__ctor_m00B36814D5070D5715A0187CFF466DC31EEF53F5(L_0, __this, (intptr_t)((intptr_t)GetVirtualMethodInfo(__this, 9)), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10036));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10037));
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Input_tCE4A1EC6C51592CB9DCD7B860984CB2C4DD937BF_il2cpp_TypeInfo_var);
		SteamVR_Input_remove_onSkeletonsUpdated_m5E2E6D9B3ED52BAB24CFF5BB7CB1785A290A82D2(L_0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10037));
		// if (skeletonAction != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10029));
		SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * L_1 = __this->get_skeletonAction_4();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10038));
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734_il2cpp_TypeInfo_var);
		bool L_2 = SteamVR_Action_op_Inequality_m7114B6E3669F8C55CD3B5E4EC3A897648CBD0F8A(L_1, (SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10038));
		V_0 = L_2;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10030));
		bool L_3 = V_0;
		if (!L_3)
		{
			goto IL_0056;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10031));
		// skeletonAction.onDeviceConnectedChanged -= OnDeviceConnectedChanged;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10032));
		SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * L_4 = __this->get_skeletonAction_4();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10039));
		DeviceConnectedChangeHandler_tA531478A75E2F7B0C49D41DADBB9FD7BD46C4592 * L_5 = (DeviceConnectedChangeHandler_tA531478A75E2F7B0C49D41DADBB9FD7BD46C4592 *)il2cpp_codegen_object_new(DeviceConnectedChangeHandler_tA531478A75E2F7B0C49D41DADBB9FD7BD46C4592_il2cpp_TypeInfo_var);
		DeviceConnectedChangeHandler__ctor_m8F5774FBC2C0DEA2AE17138C7D67D6FAD3385D8C(L_5, __this, (intptr_t)((intptr_t)SteamVR_Behaviour_Skeleton_OnDeviceConnectedChanged_mBB013D861DFBCE800C8A242E0FB46BB65E063358_RuntimeMethod_var), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10039));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10040));
		NullCheck(L_4);
		SteamVR_Action_Skeleton_remove_onDeviceConnectedChanged_mCC1CD5EF82563E7FE898D2BAE0DEDC59C9AFA8C9(L_4, L_5, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10040));
		// skeletonAction.onTrackingChanged -= OnTrackingChanged;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10033));
		SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * L_6 = __this->get_skeletonAction_4();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10041));
		TrackingChangeHandler_t8AD34E45FED47F362BB0D3E5B6B950708A0EC6B4 * L_7 = (TrackingChangeHandler_t8AD34E45FED47F362BB0D3E5B6B950708A0EC6B4 *)il2cpp_codegen_object_new(TrackingChangeHandler_t8AD34E45FED47F362BB0D3E5B6B950708A0EC6B4_il2cpp_TypeInfo_var);
		TrackingChangeHandler__ctor_m6669C85631291CBFDD37E8F72F923C1BB4EFBDA5(L_7, __this, (intptr_t)((intptr_t)SteamVR_Behaviour_Skeleton_OnTrackingChanged_m41FB143E880B6783DC175AF058D056ABF95A7CFB_RuntimeMethod_var), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10041));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10042));
		NullCheck(L_6);
		SteamVR_Action_Skeleton_remove_onTrackingChanged_mE5229135F65372F6DDA222F462565A6D0E66DA6D(L_6, L_7, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10042));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10034));
	}

IL_0056:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10035));
		return;
	}
}
// System.Void Valve.VR.SteamVR_Behaviour_Skeleton::OnDeviceConnectedChanged(Valve.VR.SteamVR_Action_Skeleton,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_Skeleton_OnDeviceConnectedChanged_mBB013D861DFBCE800C8A242E0FB46BB65E063358 (SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A * __this, SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * ___fromAction0, bool ___deviceConnected1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Skeleton_OnDeviceConnectedChanged_mBB013D861DFBCE800C8A242E0FB46BB65E063358_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	bool V_1 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___fromAction0), (&___deviceConnected1));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Behaviour_Skeleton_OnDeviceConnectedChanged_mBB013D861DFBCE800C8A242E0FB46BB65E063358_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10043));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 10044));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10045));
		// if (onConnectedChanged != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10046));
		SteamVR_Behaviour_Skeleton_ConnectedChangedEvent_t448A3C929AA8F491BB03F8340DC791D40A546C85 * L_0 = __this->get_onConnectedChanged_15();
		V_0 = (bool)((!(((RuntimeObject*)(SteamVR_Behaviour_Skeleton_ConnectedChangedEvent_t448A3C929AA8F491BB03F8340DC791D40A546C85 *)L_0) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10047));
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_0022;
		}
	}
	{
		// onConnectedChanged.Invoke(this, inputSource, deviceConnected);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10048));
		SteamVR_Behaviour_Skeleton_ConnectedChangedEvent_t448A3C929AA8F491BB03F8340DC791D40A546C85 * L_2 = __this->get_onConnectedChanged_15();
		int32_t L_3 = __this->get_inputSource_5();
		bool L_4 = ___deviceConnected1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10053));
		NullCheck(L_2);
		UnityEvent_3_Invoke_m0DB14EAF35361C179F364C7BF3681380E75E0089(L_2, __this, L_3, L_4, /*hidden argument*/UnityEvent_3_Invoke_m0DB14EAF35361C179F364C7BF3681380E75E0089_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10053));
	}

IL_0022:
	{
		// if (onConnectedChangedEvent != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10049));
		DeviceConnectedChangeHandler_t0F6018732B70A6C87D60D7C71A04183CE5B1E617 * L_5 = __this->get_onConnectedChangedEvent_20();
		V_1 = (bool)((!(((RuntimeObject*)(DeviceConnectedChangeHandler_t0F6018732B70A6C87D60D7C71A04183CE5B1E617 *)L_5) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10050));
		bool L_6 = V_1;
		if (!L_6)
		{
			goto IL_0043;
		}
	}
	{
		// onConnectedChangedEvent.Invoke(this, inputSource, deviceConnected);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10051));
		DeviceConnectedChangeHandler_t0F6018732B70A6C87D60D7C71A04183CE5B1E617 * L_7 = __this->get_onConnectedChangedEvent_20();
		int32_t L_8 = __this->get_inputSource_5();
		bool L_9 = ___deviceConnected1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10054));
		NullCheck(L_7);
		DeviceConnectedChangeHandler_Invoke_m0C99D561FBE9074CCA3C5304F7A3EBCF8D9CBEB2(L_7, __this, L_8, L_9, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10054));
	}

IL_0043:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10052));
		return;
	}
}
// System.Void Valve.VR.SteamVR_Behaviour_Skeleton::OnTrackingChanged(Valve.VR.SteamVR_Action_Skeleton,Valve.VR.ETrackingResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_Skeleton_OnTrackingChanged_m41FB143E880B6783DC175AF058D056ABF95A7CFB (SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A * __this, SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * ___fromAction0, int32_t ___trackingState1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Skeleton_OnTrackingChanged_m41FB143E880B6783DC175AF058D056ABF95A7CFB_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	bool V_1 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___fromAction0), (&___trackingState1));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Behaviour_Skeleton_OnTrackingChanged_m41FB143E880B6783DC175AF058D056ABF95A7CFB_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10055));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 10056));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10057));
		// if (onTrackingChanged != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10058));
		SteamVR_Behaviour_Skeleton_TrackingChangedEvent_tE5D388C0E5523A46227EEF4DC31BB575AE0E6E90 * L_0 = __this->get_onTrackingChanged_16();
		V_0 = (bool)((!(((RuntimeObject*)(SteamVR_Behaviour_Skeleton_TrackingChangedEvent_tE5D388C0E5523A46227EEF4DC31BB575AE0E6E90 *)L_0) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10059));
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_0022;
		}
	}
	{
		// onTrackingChanged.Invoke(this, inputSource, trackingState);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10060));
		SteamVR_Behaviour_Skeleton_TrackingChangedEvent_tE5D388C0E5523A46227EEF4DC31BB575AE0E6E90 * L_2 = __this->get_onTrackingChanged_16();
		int32_t L_3 = __this->get_inputSource_5();
		int32_t L_4 = ___trackingState1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10065));
		NullCheck(L_2);
		UnityEvent_3_Invoke_mA5EF9426BEE9D582B1CF18E40D0A27D0DC9AE099(L_2, __this, L_3, L_4, /*hidden argument*/UnityEvent_3_Invoke_mA5EF9426BEE9D582B1CF18E40D0A27D0DC9AE099_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10065));
	}

IL_0022:
	{
		// if (onTrackingChangedEvent != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10061));
		TrackingChangeHandler_t0354ED148830BCEA31C451E8C314757B70B5D63F * L_5 = __this->get_onTrackingChangedEvent_21();
		V_1 = (bool)((!(((RuntimeObject*)(TrackingChangeHandler_t0354ED148830BCEA31C451E8C314757B70B5D63F *)L_5) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10062));
		bool L_6 = V_1;
		if (!L_6)
		{
			goto IL_0043;
		}
	}
	{
		// onTrackingChangedEvent.Invoke(this, inputSource, trackingState);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10063));
		TrackingChangeHandler_t0354ED148830BCEA31C451E8C314757B70B5D63F * L_7 = __this->get_onTrackingChangedEvent_21();
		int32_t L_8 = __this->get_inputSource_5();
		int32_t L_9 = ___trackingState1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10066));
		NullCheck(L_7);
		TrackingChangeHandler_Invoke_mB11B131DB495AA43338E55645109AB8BDEF630E6(L_7, __this, L_8, L_9, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10066));
	}

IL_0043:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10064));
		return;
	}
}
// System.Void Valve.VR.SteamVR_Behaviour_Skeleton::SteamVR_Input_OnSkeletonsUpdated(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_Skeleton_SteamVR_Input_OnSkeletonsUpdated_m598443034B16E6CBC070FF31923991689A33BBBE (SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A * __this, bool ___skipSendingEvents0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Skeleton_SteamVR_Input_OnSkeletonsUpdated_m598443034B16E6CBC070FF31923991689A33BBBE_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___skipSendingEvents0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Behaviour_Skeleton_SteamVR_Input_OnSkeletonsUpdated_m598443034B16E6CBC070FF31923991689A33BBBE_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10067));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 10068));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10069));
		// UpdateSkeleton();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10070));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10072));
		VirtActionInvoker0::Invoke(10 /* System.Void Valve.VR.SteamVR_Behaviour_Skeleton::UpdateSkeleton() */, __this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10072));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10071));
		return;
	}
}
// System.Void Valve.VR.SteamVR_Behaviour_Skeleton::UpdateSkeleton()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_Skeleton_UpdateSkeleton_m8A721557BCB584BAEE752332CF8089DDFCDD5165 (SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Skeleton_UpdateSkeleton_m8A721557BCB584BAEE752332CF8089DDFCDD5165_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	bool V_1 = false;
	bool V_2 = false;
	bool V_3 = false;
	bool V_4 = false;
	bool V_5 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Behaviour_Skeleton_UpdateSkeleton_m8A721557BCB584BAEE752332CF8089DDFCDD5165_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10073));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 10074));
	int32_t G_B7_0 = 0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10075));
		// if (skeletonAction == null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10076));
		SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * L_0 = __this->get_skeletonAction_4();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10100));
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734_il2cpp_TypeInfo_var);
		bool L_1 = SteamVR_Action_op_Equality_m16F1109154021CF7DC424B937A8AA5FC34463EE2(L_0, (SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10100));
		V_0 = L_1;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10077));
		bool L_2 = V_0;
		if (!L_2)
		{
			goto IL_0016;
		}
	}
	{
		// return;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10078));
		goto IL_00d0;
	}

IL_0016:
	{
		// if (updatePose)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10079));
		bool L_3 = __this->get_updatePose_9();
		V_1 = L_3;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10080));
		bool L_4 = V_1;
		if (!L_4)
		{
			goto IL_0027;
		}
	}
	{
		// UpdatePose();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10081));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10101));
		VirtActionInvoker0::Invoke(16 /* System.Void Valve.VR.SteamVR_Behaviour_Skeleton::UpdatePose() */, __this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10101));
	}

IL_0027:
	{
		// if (blendPoser != null && skeletonBlend < 1)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10082));
		SteamVR_Skeleton_Poser_t8BAF9FB80E002A7B21C380E9137C955DA4292CBA * L_5 = __this->get_blendPoser_25();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10102));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_6 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_5, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10102));
		if (!L_6)
		{
			goto IL_0044;
		}
	}
	{
		float L_7 = __this->get_skeletonBlend_11();
		G_B7_0 = ((((float)L_7) < ((float)(1.0f)))? 1 : 0);
		goto IL_0045;
	}

IL_0044:
	{
		G_B7_0 = 0;
	}

IL_0045:
	{
		V_2 = (bool)G_B7_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10083));
		bool L_8 = V_2;
		if (!L_8)
		{
			goto IL_007c;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10084));
		// if (blendSnapshot == null) blendSnapshot = blendPoser.GetBlendedPose(this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10085));
		SteamVR_Skeleton_PoseSnapshot_t0E1C4250EA9F357DFC204D8E5D9C2111593C3E18 * L_9 = __this->get_blendSnapshot_26();
		V_3 = (bool)((((RuntimeObject*)(SteamVR_Skeleton_PoseSnapshot_t0E1C4250EA9F357DFC204D8E5D9C2111593C3E18 *)L_9) == ((RuntimeObject*)(RuntimeObject *)NULL))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10086));
		bool L_10 = V_3;
		if (!L_10)
		{
			goto IL_0069;
		}
	}
	{
		// if (blendSnapshot == null) blendSnapshot = blendPoser.GetBlendedPose(this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10087));
		SteamVR_Skeleton_Poser_t8BAF9FB80E002A7B21C380E9137C955DA4292CBA * L_11 = __this->get_blendPoser_25();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10103));
		NullCheck(L_11);
		SteamVR_Skeleton_PoseSnapshot_t0E1C4250EA9F357DFC204D8E5D9C2111593C3E18 * L_12 = SteamVR_Skeleton_Poser_GetBlendedPose_m8D1B12610AE9E4C0EF760253126B7096BACB0F59(L_11, __this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10103));
		__this->set_blendSnapshot_26(L_12);
	}

IL_0069:
	{
		// blendSnapshot = blendPoser.GetBlendedPose(this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10088));
		SteamVR_Skeleton_Poser_t8BAF9FB80E002A7B21C380E9137C955DA4292CBA * L_13 = __this->get_blendPoser_25();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10104));
		NullCheck(L_13);
		SteamVR_Skeleton_PoseSnapshot_t0E1C4250EA9F357DFC204D8E5D9C2111593C3E18 * L_14 = SteamVR_Skeleton_Poser_GetBlendedPose_m8D1B12610AE9E4C0EF760253126B7096BACB0F59(L_13, __this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10104));
		__this->set_blendSnapshot_26(L_14);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10089));
	}

IL_007c:
	{
		// if (rangeOfMotionBlendRoutine == null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10090));
		Coroutine_tAE7DB2FC70A0AE6477F896F852057CB0754F06EC * L_15 = __this->get_rangeOfMotionBlendRoutine_33();
		V_4 = (bool)((((RuntimeObject*)(Coroutine_tAE7DB2FC70A0AE6477F896F852057CB0754F06EC *)L_15) == ((RuntimeObject*)(RuntimeObject *)NULL))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10091));
		bool L_16 = V_4;
		if (!L_16)
		{
			goto IL_00d0;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10092));
		// if (temporaryRangeOfMotion != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10093));
		Nullable_1_t1A7B9FD0D5A1C2016BC211A63A5BB64D3B4E70DD * L_17 = __this->get_address_of_temporaryRangeOfMotion_36();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10105));
		bool L_18 = Nullable_1_get_HasValue_mDB6CB8F03CCDC2BB72988E311BC1B841C8D4BD35_inline((Nullable_1_t1A7B9FD0D5A1C2016BC211A63A5BB64D3B4E70DD *)L_17, /*hidden argument*/Nullable_1_get_HasValue_mDB6CB8F03CCDC2BB72988E311BC1B841C8D4BD35_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10105));
		V_5 = L_18;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10094));
		bool L_19 = V_5;
		if (!L_19)
		{
			goto IL_00b6;
		}
	}
	{
		// skeletonAction.SetRangeOfMotion(temporaryRangeOfMotion.Value);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10095));
		SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * L_20 = __this->get_skeletonAction_4();
		Nullable_1_t1A7B9FD0D5A1C2016BC211A63A5BB64D3B4E70DD * L_21 = __this->get_address_of_temporaryRangeOfMotion_36();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10106));
		int32_t L_22 = Nullable_1_get_Value_m76F1CC0EF9E5DB41AF44CAC048AE6C5CC55E583D((Nullable_1_t1A7B9FD0D5A1C2016BC211A63A5BB64D3B4E70DD *)L_21, /*hidden argument*/Nullable_1_get_Value_m76F1CC0EF9E5DB41AF44CAC048AE6C5CC55E583D_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10106));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10107));
		NullCheck(L_20);
		SteamVR_Action_Skeleton_SetRangeOfMotion_mF9A18F8B97BE27E61EF44516E381801FA301FC11(L_20, L_22, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10107));
		goto IL_00c8;
	}

IL_00b6:
	{
		// skeletonAction.SetRangeOfMotion(rangeOfMotion); //this may be a frame behind
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10096));
		SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * L_23 = __this->get_skeletonAction_4();
		int32_t L_24 = __this->get_rangeOfMotion_6();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10108));
		NullCheck(L_23);
		SteamVR_Action_Skeleton_SetRangeOfMotion_mF9A18F8B97BE27E61EF44516E381801FA301FC11(L_23, L_24, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10108));
	}

IL_00c8:
	{
		// UpdateSkeletonTransforms();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10097));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10109));
		VirtActionInvoker0::Invoke(12 /* System.Void Valve.VR.SteamVR_Behaviour_Skeleton::UpdateSkeletonTransforms() */, __this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10109));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10098));
	}

IL_00d0:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10099));
		return;
	}
}
// System.Void Valve.VR.SteamVR_Behaviour_Skeleton::SetTemporaryRangeOfMotion(Valve.VR.EVRSkeletalMotionRange,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_Skeleton_SetTemporaryRangeOfMotion_m8E38F56F2DC763DAE274D0FF8E560A2E527B6341 (SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A * __this, int32_t ___newRangeOfMotion0, float ___blendOverSeconds1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Skeleton_SetTemporaryRangeOfMotion_m8E38F56F2DC763DAE274D0FF8E560A2E527B6341_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	Nullable_1_t1A7B9FD0D5A1C2016BC211A63A5BB64D3B4E70DD  V_1;
	memset((&V_1), 0, sizeof(V_1));
	int32_t V_2 = 0;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___newRangeOfMotion0), (&___blendOverSeconds1));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Behaviour_Skeleton_SetTemporaryRangeOfMotion_m8E38F56F2DC763DAE274D0FF8E560A2E527B6341_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10110));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 10111));
	int32_t G_B3_0 = 0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10112));
		// if (rangeOfMotion != newRangeOfMotion || temporaryRangeOfMotion != newRangeOfMotion)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10113));
		int32_t L_0 = __this->get_rangeOfMotion_6();
		int32_t L_1 = ___newRangeOfMotion0;
		if ((!(((uint32_t)L_0) == ((uint32_t)L_1))))
		{
			goto IL_002a;
		}
	}
	{
		Nullable_1_t1A7B9FD0D5A1C2016BC211A63A5BB64D3B4E70DD  L_2 = __this->get_temporaryRangeOfMotion_36();
		V_1 = L_2;
		int32_t L_3 = ___newRangeOfMotion0;
		V_2 = L_3;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10119));
		int32_t L_4 = Nullable_1_GetValueOrDefault_m2ED1EF0EC4DE8912C2A0BC877B2F66CBF5789506_inline((Nullable_1_t1A7B9FD0D5A1C2016BC211A63A5BB64D3B4E70DD *)(&V_1), /*hidden argument*/Nullable_1_GetValueOrDefault_m2ED1EF0EC4DE8912C2A0BC877B2F66CBF5789506_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10119));
		int32_t L_5 = V_2;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10120));
		bool L_6 = Nullable_1_get_HasValue_mDB6CB8F03CCDC2BB72988E311BC1B841C8D4BD35_inline((Nullable_1_t1A7B9FD0D5A1C2016BC211A63A5BB64D3B4E70DD *)(&V_1), /*hidden argument*/Nullable_1_get_HasValue_mDB6CB8F03CCDC2BB72988E311BC1B841C8D4BD35_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10120));
		G_B3_0 = ((((int32_t)((int32_t)((int32_t)((((int32_t)L_4) == ((int32_t)L_5))? 1 : 0)&(int32_t)L_6))) == ((int32_t)0))? 1 : 0);
		goto IL_002b;
	}

IL_002a:
	{
		G_B3_0 = 1;
	}

IL_002b:
	{
		V_0 = (bool)G_B3_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10114));
		bool L_7 = V_0;
		if (!L_7)
		{
			goto IL_003a;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10115));
		// TemporaryRangeOfMotionBlend(newRangeOfMotion, blendOverSeconds);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10116));
		int32_t L_8 = ___newRangeOfMotion0;
		float L_9 = ___blendOverSeconds1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10121));
		SteamVR_Behaviour_Skeleton_TemporaryRangeOfMotionBlend_mECB584C8E1228F4834B1C3183C05EC9498C2DBBC(__this, L_8, L_9, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10121));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10117));
	}

IL_003a:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10118));
		return;
	}
}
// System.Void Valve.VR.SteamVR_Behaviour_Skeleton::ResetTemporaryRangeOfMotion(System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_Skeleton_ResetTemporaryRangeOfMotion_m4E2CEF87B74459C90B16E894FDE1AC9D4608D2EC (SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A * __this, float ___blendOverSeconds0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Skeleton_ResetTemporaryRangeOfMotion_m4E2CEF87B74459C90B16E894FDE1AC9D4608D2EC_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___blendOverSeconds0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Behaviour_Skeleton_ResetTemporaryRangeOfMotion_m4E2CEF87B74459C90B16E894FDE1AC9D4608D2EC_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10122));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 10123));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10124));
		// ResetTemporaryRangeOfMotionBlend(blendOverSeconds);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10125));
		float L_0 = ___blendOverSeconds0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10127));
		SteamVR_Behaviour_Skeleton_ResetTemporaryRangeOfMotionBlend_m9DB5FE93F5496BA28DE90CB72D4B2E75590F6B7D(__this, L_0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10127));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10126));
		return;
	}
}
// System.Void Valve.VR.SteamVR_Behaviour_Skeleton::SetRangeOfMotion(Valve.VR.EVRSkeletalMotionRange,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_Skeleton_SetRangeOfMotion_mC202AD3ED46108BE0AD87288B46179A5F7F0399F (SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A * __this, int32_t ___newRangeOfMotion0, float ___blendOverSeconds1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Skeleton_SetRangeOfMotion_mC202AD3ED46108BE0AD87288B46179A5F7F0399F_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___newRangeOfMotion0), (&___blendOverSeconds1));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Behaviour_Skeleton_SetRangeOfMotion_mC202AD3ED46108BE0AD87288B46179A5F7F0399F_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10128));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 10129));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10130));
		// if (rangeOfMotion != newRangeOfMotion)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10131));
		int32_t L_0 = __this->get_rangeOfMotion_6();
		int32_t L_1 = ___newRangeOfMotion0;
		V_0 = (bool)((((int32_t)((((int32_t)L_0) == ((int32_t)L_1))? 1 : 0)) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10132));
		bool L_2 = V_0;
		if (!L_2)
		{
			goto IL_001c;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10133));
		// RangeOfMotionBlend(newRangeOfMotion, blendOverSeconds);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10134));
		int32_t L_3 = ___newRangeOfMotion0;
		float L_4 = ___blendOverSeconds1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10137));
		SteamVR_Behaviour_Skeleton_RangeOfMotionBlend_m25BEC8CDC3F025656BCCF6CA62CF19A4E50BBEAD(__this, L_3, L_4, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10137));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10135));
	}

IL_001c:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10136));
		return;
	}
}
// System.Void Valve.VR.SteamVR_Behaviour_Skeleton::BlendToSkeleton(System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_Skeleton_BlendToSkeleton_mC99E21112EBFA120AC0045BA98EF21957BC2328C (SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A * __this, float ___overTime0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Skeleton_BlendToSkeleton_mC99E21112EBFA120AC0045BA98EF21957BC2328C_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___overTime0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Behaviour_Skeleton_BlendToSkeleton_mC99E21112EBFA120AC0045BA98EF21957BC2328C_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10138));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 10139));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10140));
		// if (blendPoser != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10141));
		SteamVR_Skeleton_Poser_t8BAF9FB80E002A7B21C380E9137C955DA4292CBA * L_0 = __this->get_blendPoser_25();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10147));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_1 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_0, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10147));
		V_0 = L_1;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10142));
		bool L_2 = V_0;
		if (!L_2)
		{
			goto IL_0023;
		}
	}
	{
		// blendSnapshot = blendPoser.GetBlendedPose(this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10143));
		SteamVR_Skeleton_Poser_t8BAF9FB80E002A7B21C380E9137C955DA4292CBA * L_3 = __this->get_blendPoser_25();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10148));
		NullCheck(L_3);
		SteamVR_Skeleton_PoseSnapshot_t0E1C4250EA9F357DFC204D8E5D9C2111593C3E18 * L_4 = SteamVR_Skeleton_Poser_GetBlendedPose_m8D1B12610AE9E4C0EF760253126B7096BACB0F59(L_3, __this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10148));
		__this->set_blendSnapshot_26(L_4);
	}

IL_0023:
	{
		// blendPoser = null;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10144));
		__this->set_blendPoser_25((SteamVR_Skeleton_Poser_t8BAF9FB80E002A7B21C380E9137C955DA4292CBA *)NULL);
		// BlendTo(1, overTime);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10145));
		float L_5 = ___overTime0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10149));
		SteamVR_Behaviour_Skeleton_BlendTo_m9212F504D764F114CCBD48D3510E93336C7ED353(__this, (1.0f), L_5, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10149));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10146));
		return;
	}
}
// System.Void Valve.VR.SteamVR_Behaviour_Skeleton::BlendToPoser(Valve.VR.SteamVR_Skeleton_Poser,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_Skeleton_BlendToPoser_m765D7E5F374964D2B2B8965C7F5B0D36C5209EFB (SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A * __this, SteamVR_Skeleton_Poser_t8BAF9FB80E002A7B21C380E9137C955DA4292CBA * ___poser0, float ___overTime1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Skeleton_BlendToPoser_m765D7E5F374964D2B2B8965C7F5B0D36C5209EFB_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___poser0), (&___overTime1));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Behaviour_Skeleton_BlendToPoser_m765D7E5F374964D2B2B8965C7F5B0D36C5209EFB_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10150));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 10151));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10152));
		// if (poser == null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10153));
		SteamVR_Skeleton_Poser_t8BAF9FB80E002A7B21C380E9137C955DA4292CBA * L_0 = ___poser0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10159));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_1 = Object_op_Equality_mBC2401774F3BE33E8CF6F0A8148E66C95D6CFF1C(L_0, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10159));
		V_0 = L_1;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10154));
		bool L_2 = V_0;
		if (!L_2)
		{
			goto IL_000e;
		}
	}
	{
		// return;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10155));
		goto IL_0022;
	}

IL_000e:
	{
		// blendPoser = poser;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10156));
		SteamVR_Skeleton_Poser_t8BAF9FB80E002A7B21C380E9137C955DA4292CBA * L_3 = ___poser0;
		__this->set_blendPoser_25(L_3);
		// BlendTo(0, overTime);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10157));
		float L_4 = ___overTime1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10160));
		SteamVR_Behaviour_Skeleton_BlendTo_m9212F504D764F114CCBD48D3510E93336C7ED353(__this, (0.0f), L_4, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10160));
	}

IL_0022:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10158));
		return;
	}
}
// System.Void Valve.VR.SteamVR_Behaviour_Skeleton::BlendToAnimation(System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_Skeleton_BlendToAnimation_m541806513667917D49B82A6488C23C8B29FF7D4E (SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A * __this, float ___overTime0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Skeleton_BlendToAnimation_m541806513667917D49B82A6488C23C8B29FF7D4E_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___overTime0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Behaviour_Skeleton_BlendToAnimation_m541806513667917D49B82A6488C23C8B29FF7D4E_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10161));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 10162));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10163));
		// BlendTo(0, overTime);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10164));
		float L_0 = ___overTime0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10166));
		SteamVR_Behaviour_Skeleton_BlendTo_m9212F504D764F114CCBD48D3510E93336C7ED353(__this, (0.0f), L_0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10166));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10165));
		return;
	}
}
// System.Void Valve.VR.SteamVR_Behaviour_Skeleton::BlendTo(System.Single,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_Skeleton_BlendTo_m9212F504D764F114CCBD48D3510E93336C7ED353 (SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A * __this, float ___blendToAmount0, float ___overTime1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Skeleton_BlendTo_m9212F504D764F114CCBD48D3510E93336C7ED353_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	bool V_1 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___blendToAmount0), (&___overTime1));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Behaviour_Skeleton_BlendTo_m9212F504D764F114CCBD48D3510E93336C7ED353_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10167));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 10168));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10169));
		// if (blendRoutine != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10170));
		Coroutine_tAE7DB2FC70A0AE6477F896F852057CB0754F06EC * L_0 = __this->get_blendRoutine_32();
		V_0 = (bool)((!(((RuntimeObject*)(Coroutine_tAE7DB2FC70A0AE6477F896F852057CB0754F06EC *)L_0) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10171));
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_001b;
		}
	}
	{
		// StopCoroutine(blendRoutine);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10172));
		Coroutine_tAE7DB2FC70A0AE6477F896F852057CB0754F06EC * L_2 = __this->get_blendRoutine_32();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10177));
		MonoBehaviour_StopCoroutine_mC465FFA3C386BA22384F7AFA5495FF2286510562(__this, L_2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10177));
	}

IL_001b:
	{
		// if (this.gameObject.activeInHierarchy)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10173));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10178));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_3 = Component_get_gameObject_m0B0570BA8DDD3CD78A9DB568EA18D7317686603C(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10178));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10179));
		NullCheck(L_3);
		bool L_4 = GameObject_get_activeInHierarchy_mDEE60F1B28281974BA9880EC448682F3DAABB1EF(L_3, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10179));
		V_1 = L_4;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10174));
		bool L_5 = V_1;
		if (!L_5)
		{
			goto IL_003e;
		}
	}
	{
		// blendRoutine = StartCoroutine(DoBlendRoutine(blendToAmount, overTime));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10175));
		float L_6 = ___blendToAmount0;
		float L_7 = ___overTime1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10180));
		RuntimeObject* L_8 = SteamVR_Behaviour_Skeleton_DoBlendRoutine_m1D4DD994425C4B916480E31F58E3787F09185CDE(__this, L_6, L_7, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10180));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10181));
		Coroutine_tAE7DB2FC70A0AE6477F896F852057CB0754F06EC * L_9 = MonoBehaviour_StartCoroutine_mBF8044CE06A35D76A69669ADD8977D05956616B7(__this, L_8, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10181));
		__this->set_blendRoutine_32(L_9);
	}

IL_003e:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10176));
		return;
	}
}
// System.Collections.IEnumerator Valve.VR.SteamVR_Behaviour_Skeleton::DoBlendRoutine(System.Single,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* SteamVR_Behaviour_Skeleton_DoBlendRoutine_m1D4DD994425C4B916480E31F58E3787F09185CDE (SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A * __this, float ___blendToAmount0, float ___overTime1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Skeleton_DoBlendRoutine_m1D4DD994425C4B916480E31F58E3787F09185CDE_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Behaviour_Skeleton_DoBlendRoutine_m1D4DD994425C4B916480E31F58E3787F09185CDE_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		U3CDoBlendRoutineU3Ed__152_tFF832A9C1A3DA477A5CB7789B762723F29BB50D6 * L_0 = (U3CDoBlendRoutineU3Ed__152_tFF832A9C1A3DA477A5CB7789B762723F29BB50D6 *)il2cpp_codegen_object_new(U3CDoBlendRoutineU3Ed__152_tFF832A9C1A3DA477A5CB7789B762723F29BB50D6_il2cpp_TypeInfo_var);
		U3CDoBlendRoutineU3Ed__152__ctor_m3CFC1BF114C96CFC002A0C92C1B2794F788B107E(L_0, 0, /*hidden argument*/NULL);
		U3CDoBlendRoutineU3Ed__152_tFF832A9C1A3DA477A5CB7789B762723F29BB50D6 * L_1 = L_0;
		NullCheck(L_1);
		L_1->set_U3CU3E4__this_4(__this);
		U3CDoBlendRoutineU3Ed__152_tFF832A9C1A3DA477A5CB7789B762723F29BB50D6 * L_2 = L_1;
		float L_3 = ___blendToAmount0;
		NullCheck(L_2);
		L_2->set_blendToAmount_2(L_3);
		U3CDoBlendRoutineU3Ed__152_tFF832A9C1A3DA477A5CB7789B762723F29BB50D6 * L_4 = L_2;
		float L_5 = ___overTime1;
		NullCheck(L_4);
		L_4->set_overTime_3(L_5);
		return L_4;
	}
}
// System.Void Valve.VR.SteamVR_Behaviour_Skeleton::RangeOfMotionBlend(Valve.VR.EVRSkeletalMotionRange,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_Skeleton_RangeOfMotionBlend_m25BEC8CDC3F025656BCCF6CA62CF19A4E50BBEAD (SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A * __this, int32_t ___newRangeOfMotion0, float ___blendOverSeconds1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Skeleton_RangeOfMotionBlend_m25BEC8CDC3F025656BCCF6CA62CF19A4E50BBEAD_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	int32_t V_0 = 0;
	bool V_1 = false;
	bool V_2 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___newRangeOfMotion0), (&___blendOverSeconds1));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Behaviour_Skeleton_RangeOfMotionBlend_m25BEC8CDC3F025656BCCF6CA62CF19A4E50BBEAD_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10182));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 10183));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10184));
		// if (rangeOfMotionBlendRoutine != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10185));
		Coroutine_tAE7DB2FC70A0AE6477F896F852057CB0754F06EC * L_0 = __this->get_rangeOfMotionBlendRoutine_33();
		V_1 = (bool)((!(((RuntimeObject*)(Coroutine_tAE7DB2FC70A0AE6477F896F852057CB0754F06EC *)L_0) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10186));
		bool L_1 = V_1;
		if (!L_1)
		{
			goto IL_001b;
		}
	}
	{
		// StopCoroutine(rangeOfMotionBlendRoutine);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10187));
		Coroutine_tAE7DB2FC70A0AE6477F896F852057CB0754F06EC * L_2 = __this->get_rangeOfMotionBlendRoutine_33();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10196));
		MonoBehaviour_StopCoroutine_mC465FFA3C386BA22384F7AFA5495FF2286510562(__this, L_2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10196));
	}

IL_001b:
	{
		// EVRSkeletalMotionRange oldRangeOfMotion = rangeOfMotion;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10188));
		int32_t L_3 = __this->get_rangeOfMotion_6();
		V_0 = L_3;
		// rangeOfMotion = newRangeOfMotion;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10189));
		int32_t L_4 = ___newRangeOfMotion0;
		__this->set_rangeOfMotion_6(L_4);
		// if (this.gameObject.activeInHierarchy)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10190));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10197));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_5 = Component_get_gameObject_m0B0570BA8DDD3CD78A9DB568EA18D7317686603C(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10197));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10198));
		NullCheck(L_5);
		bool L_6 = GameObject_get_activeInHierarchy_mDEE60F1B28281974BA9880EC448682F3DAABB1EF(L_5, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10198));
		V_2 = L_6;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10191));
		bool L_7 = V_2;
		if (!L_7)
		{
			goto IL_004f;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10192));
		// rangeOfMotionBlendRoutine = StartCoroutine(DoRangeOfMotionBlend(oldRangeOfMotion, newRangeOfMotion, blendOverSeconds));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10193));
		int32_t L_8 = V_0;
		int32_t L_9 = ___newRangeOfMotion0;
		float L_10 = ___blendOverSeconds1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10199));
		RuntimeObject* L_11 = SteamVR_Behaviour_Skeleton_DoRangeOfMotionBlend_m95E3E709146E51D114E33DEE72CB991F2AE16AC7(__this, L_8, L_9, L_10, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10199));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10200));
		Coroutine_tAE7DB2FC70A0AE6477F896F852057CB0754F06EC * L_12 = MonoBehaviour_StartCoroutine_mBF8044CE06A35D76A69669ADD8977D05956616B7(__this, L_11, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10200));
		__this->set_rangeOfMotionBlendRoutine_33(L_12);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10194));
	}

IL_004f:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10195));
		return;
	}
}
// System.Void Valve.VR.SteamVR_Behaviour_Skeleton::TemporaryRangeOfMotionBlend(Valve.VR.EVRSkeletalMotionRange,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_Skeleton_TemporaryRangeOfMotionBlend_mECB584C8E1228F4834B1C3183C05EC9498C2DBBC (SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A * __this, int32_t ___newRangeOfMotion0, float ___blendOverSeconds1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Skeleton_TemporaryRangeOfMotionBlend_mECB584C8E1228F4834B1C3183C05EC9498C2DBBC_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	int32_t V_0 = 0;
	bool V_1 = false;
	bool V_2 = false;
	bool V_3 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___newRangeOfMotion0), (&___blendOverSeconds1));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Behaviour_Skeleton_TemporaryRangeOfMotionBlend_mECB584C8E1228F4834B1C3183C05EC9498C2DBBC_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10201));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 10202));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10203));
		// if (rangeOfMotionBlendRoutine != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10204));
		Coroutine_tAE7DB2FC70A0AE6477F896F852057CB0754F06EC * L_0 = __this->get_rangeOfMotionBlendRoutine_33();
		V_1 = (bool)((!(((RuntimeObject*)(Coroutine_tAE7DB2FC70A0AE6477F896F852057CB0754F06EC *)L_0) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10205));
		bool L_1 = V_1;
		if (!L_1)
		{
			goto IL_001b;
		}
	}
	{
		// StopCoroutine(rangeOfMotionBlendRoutine);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10206));
		Coroutine_tAE7DB2FC70A0AE6477F896F852057CB0754F06EC * L_2 = __this->get_rangeOfMotionBlendRoutine_33();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10218));
		MonoBehaviour_StopCoroutine_mC465FFA3C386BA22384F7AFA5495FF2286510562(__this, L_2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10218));
	}

IL_001b:
	{
		// EVRSkeletalMotionRange oldRangeOfMotion = rangeOfMotion;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10207));
		int32_t L_3 = __this->get_rangeOfMotion_6();
		V_0 = L_3;
		// if (temporaryRangeOfMotion != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10208));
		Nullable_1_t1A7B9FD0D5A1C2016BC211A63A5BB64D3B4E70DD * L_4 = __this->get_address_of_temporaryRangeOfMotion_36();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10219));
		bool L_5 = Nullable_1_get_HasValue_mDB6CB8F03CCDC2BB72988E311BC1B841C8D4BD35_inline((Nullable_1_t1A7B9FD0D5A1C2016BC211A63A5BB64D3B4E70DD *)L_4, /*hidden argument*/Nullable_1_get_HasValue_mDB6CB8F03CCDC2BB72988E311BC1B841C8D4BD35_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10219));
		V_2 = L_5;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10209));
		bool L_6 = V_2;
		if (!L_6)
		{
			goto IL_003d;
		}
	}
	{
		// oldRangeOfMotion = temporaryRangeOfMotion.Value;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10210));
		Nullable_1_t1A7B9FD0D5A1C2016BC211A63A5BB64D3B4E70DD * L_7 = __this->get_address_of_temporaryRangeOfMotion_36();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10220));
		int32_t L_8 = Nullable_1_get_Value_m76F1CC0EF9E5DB41AF44CAC048AE6C5CC55E583D((Nullable_1_t1A7B9FD0D5A1C2016BC211A63A5BB64D3B4E70DD *)L_7, /*hidden argument*/Nullable_1_get_Value_m76F1CC0EF9E5DB41AF44CAC048AE6C5CC55E583D_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10220));
		V_0 = L_8;
	}

IL_003d:
	{
		// temporaryRangeOfMotion = newRangeOfMotion;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10211));
		int32_t L_9 = ___newRangeOfMotion0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10221));
		Nullable_1_t1A7B9FD0D5A1C2016BC211A63A5BB64D3B4E70DD  L_10;
		memset((&L_10), 0, sizeof(L_10));
		Nullable_1__ctor_m6C36C3DE6765E158493B68F2697E0F4FB30A221A((&L_10), L_9, /*hidden argument*/Nullable_1__ctor_m6C36C3DE6765E158493B68F2697E0F4FB30A221A_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10221));
		__this->set_temporaryRangeOfMotion_36(L_10);
		// if (this.gameObject.activeInHierarchy)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10212));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10222));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_11 = Component_get_gameObject_m0B0570BA8DDD3CD78A9DB568EA18D7317686603C(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10222));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10223));
		NullCheck(L_11);
		bool L_12 = GameObject_get_activeInHierarchy_mDEE60F1B28281974BA9880EC448682F3DAABB1EF(L_11, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10223));
		V_3 = L_12;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10213));
		bool L_13 = V_3;
		if (!L_13)
		{
			goto IL_006f;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10214));
		// rangeOfMotionBlendRoutine = StartCoroutine(DoRangeOfMotionBlend(oldRangeOfMotion, newRangeOfMotion, blendOverSeconds));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10215));
		int32_t L_14 = V_0;
		int32_t L_15 = ___newRangeOfMotion0;
		float L_16 = ___blendOverSeconds1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10224));
		RuntimeObject* L_17 = SteamVR_Behaviour_Skeleton_DoRangeOfMotionBlend_m95E3E709146E51D114E33DEE72CB991F2AE16AC7(__this, L_14, L_15, L_16, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10224));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10225));
		Coroutine_tAE7DB2FC70A0AE6477F896F852057CB0754F06EC * L_18 = MonoBehaviour_StartCoroutine_mBF8044CE06A35D76A69669ADD8977D05956616B7(__this, L_17, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10225));
		__this->set_rangeOfMotionBlendRoutine_33(L_18);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10216));
	}

IL_006f:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10217));
		return;
	}
}
// System.Void Valve.VR.SteamVR_Behaviour_Skeleton::ResetTemporaryRangeOfMotionBlend(System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_Skeleton_ResetTemporaryRangeOfMotionBlend_m9DB5FE93F5496BA28DE90CB72D4B2E75590F6B7D (SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A * __this, float ___blendOverSeconds0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Skeleton_ResetTemporaryRangeOfMotionBlend_m9DB5FE93F5496BA28DE90CB72D4B2E75590F6B7D_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	int32_t V_1 = 0;
	int32_t V_2 = 0;
	bool V_3 = false;
	bool V_4 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___blendOverSeconds0));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_1), (&V_2));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Behaviour_Skeleton_ResetTemporaryRangeOfMotionBlend_m9DB5FE93F5496BA28DE90CB72D4B2E75590F6B7D_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10226));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 10227));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10228));
		// if (temporaryRangeOfMotion != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10229));
		Nullable_1_t1A7B9FD0D5A1C2016BC211A63A5BB64D3B4E70DD * L_0 = __this->get_address_of_temporaryRangeOfMotion_36();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10245));
		bool L_1 = Nullable_1_get_HasValue_mDB6CB8F03CCDC2BB72988E311BC1B841C8D4BD35_inline((Nullable_1_t1A7B9FD0D5A1C2016BC211A63A5BB64D3B4E70DD *)L_0, /*hidden argument*/Nullable_1_get_HasValue_mDB6CB8F03CCDC2BB72988E311BC1B841C8D4BD35_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10245));
		V_0 = L_1;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10230));
		bool L_2 = V_0;
		if (!L_2)
		{
			goto IL_0073;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10231));
		// if (rangeOfMotionBlendRoutine != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10232));
		Coroutine_tAE7DB2FC70A0AE6477F896F852057CB0754F06EC * L_3 = __this->get_rangeOfMotionBlendRoutine_33();
		V_3 = (bool)((!(((RuntimeObject*)(Coroutine_tAE7DB2FC70A0AE6477F896F852057CB0754F06EC *)L_3) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10233));
		bool L_4 = V_3;
		if (!L_4)
		{
			goto IL_002b;
		}
	}
	{
		// StopCoroutine(rangeOfMotionBlendRoutine);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10234));
		Coroutine_tAE7DB2FC70A0AE6477F896F852057CB0754F06EC * L_5 = __this->get_rangeOfMotionBlendRoutine_33();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10246));
		MonoBehaviour_StopCoroutine_mC465FFA3C386BA22384F7AFA5495FF2286510562(__this, L_5, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10246));
	}

IL_002b:
	{
		// EVRSkeletalMotionRange oldRangeOfMotion = temporaryRangeOfMotion.Value;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10235));
		Nullable_1_t1A7B9FD0D5A1C2016BC211A63A5BB64D3B4E70DD * L_6 = __this->get_address_of_temporaryRangeOfMotion_36();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10247));
		int32_t L_7 = Nullable_1_get_Value_m76F1CC0EF9E5DB41AF44CAC048AE6C5CC55E583D((Nullable_1_t1A7B9FD0D5A1C2016BC211A63A5BB64D3B4E70DD *)L_6, /*hidden argument*/Nullable_1_get_Value_m76F1CC0EF9E5DB41AF44CAC048AE6C5CC55E583D_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10247));
		V_1 = L_7;
		// EVRSkeletalMotionRange newRangeOfMotion = rangeOfMotion;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10236));
		int32_t L_8 = __this->get_rangeOfMotion_6();
		V_2 = L_8;
		// temporaryRangeOfMotion = null;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10237));
		Nullable_1_t1A7B9FD0D5A1C2016BC211A63A5BB64D3B4E70DD * L_9 = __this->get_address_of_temporaryRangeOfMotion_36();
		il2cpp_codegen_initobj(L_9, sizeof(Nullable_1_t1A7B9FD0D5A1C2016BC211A63A5BB64D3B4E70DD ));
		// if (this.gameObject.activeInHierarchy)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10238));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10248));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_10 = Component_get_gameObject_m0B0570BA8DDD3CD78A9DB568EA18D7317686603C(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10248));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10249));
		NullCheck(L_10);
		bool L_11 = GameObject_get_activeInHierarchy_mDEE60F1B28281974BA9880EC448682F3DAABB1EF(L_10, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10249));
		V_4 = L_11;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10239));
		bool L_12 = V_4;
		if (!L_12)
		{
			goto IL_0072;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10240));
		// rangeOfMotionBlendRoutine = StartCoroutine(DoRangeOfMotionBlend(oldRangeOfMotion, newRangeOfMotion, blendOverSeconds));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10241));
		int32_t L_13 = V_1;
		int32_t L_14 = V_2;
		float L_15 = ___blendOverSeconds0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10250));
		RuntimeObject* L_16 = SteamVR_Behaviour_Skeleton_DoRangeOfMotionBlend_m95E3E709146E51D114E33DEE72CB991F2AE16AC7(__this, L_13, L_14, L_15, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10250));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10251));
		Coroutine_tAE7DB2FC70A0AE6477F896F852057CB0754F06EC * L_17 = MonoBehaviour_StartCoroutine_mBF8044CE06A35D76A69669ADD8977D05956616B7(__this, L_16, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10251));
		__this->set_rangeOfMotionBlendRoutine_33(L_17);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10242));
	}

IL_0072:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10243));
	}

IL_0073:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10244));
		return;
	}
}
// System.Collections.IEnumerator Valve.VR.SteamVR_Behaviour_Skeleton::DoRangeOfMotionBlend(Valve.VR.EVRSkeletalMotionRange,Valve.VR.EVRSkeletalMotionRange,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* SteamVR_Behaviour_Skeleton_DoRangeOfMotionBlend_m95E3E709146E51D114E33DEE72CB991F2AE16AC7 (SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A * __this, int32_t ___oldRangeOfMotion0, int32_t ___newRangeOfMotion1, float ___overTime2, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Skeleton_DoRangeOfMotionBlend_m95E3E709146E51D114E33DEE72CB991F2AE16AC7_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Behaviour_Skeleton_DoRangeOfMotionBlend_m95E3E709146E51D114E33DEE72CB991F2AE16AC7_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		U3CDoRangeOfMotionBlendU3Ed__156_tA971D0B47D544B2CDCFFBDE43070BD5D7572E0C9 * L_0 = (U3CDoRangeOfMotionBlendU3Ed__156_tA971D0B47D544B2CDCFFBDE43070BD5D7572E0C9 *)il2cpp_codegen_object_new(U3CDoRangeOfMotionBlendU3Ed__156_tA971D0B47D544B2CDCFFBDE43070BD5D7572E0C9_il2cpp_TypeInfo_var);
		U3CDoRangeOfMotionBlendU3Ed__156__ctor_m844C5227B6A1E8DFC65302D6B11586B7DC5EE1B8(L_0, 0, /*hidden argument*/NULL);
		U3CDoRangeOfMotionBlendU3Ed__156_tA971D0B47D544B2CDCFFBDE43070BD5D7572E0C9 * L_1 = L_0;
		NullCheck(L_1);
		L_1->set_U3CU3E4__this_5(__this);
		U3CDoRangeOfMotionBlendU3Ed__156_tA971D0B47D544B2CDCFFBDE43070BD5D7572E0C9 * L_2 = L_1;
		int32_t L_3 = ___oldRangeOfMotion0;
		NullCheck(L_2);
		L_2->set_oldRangeOfMotion_2(L_3);
		U3CDoRangeOfMotionBlendU3Ed__156_tA971D0B47D544B2CDCFFBDE43070BD5D7572E0C9 * L_4 = L_2;
		int32_t L_5 = ___newRangeOfMotion1;
		NullCheck(L_4);
		L_4->set_newRangeOfMotion_3(L_5);
		U3CDoRangeOfMotionBlendU3Ed__156_tA971D0B47D544B2CDCFFBDE43070BD5D7572E0C9 * L_6 = L_4;
		float L_7 = ___overTime2;
		NullCheck(L_6);
		L_6->set_overTime_4(L_7);
		return L_6;
	}
}
// UnityEngine.Quaternion Valve.VR.SteamVR_Behaviour_Skeleton::GetBlendPoseForBone(System.Int32,UnityEngine.Quaternion)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  SteamVR_Behaviour_Skeleton_GetBlendPoseForBone_mC14927EEE3A0F082B6B58C6F626C80BCA348FE37 (SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A * __this, int32_t ___boneIndex0, Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  ___skeletonRotation1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Skeleton_GetBlendPoseForBone_mC14927EEE3A0F082B6B58C6F626C80BCA348FE37_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  V_0;
	memset((&V_0), 0, sizeof(V_0));
	Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  V_1;
	memset((&V_1), 0, sizeof(V_1));
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___boneIndex0), (&___skeletonRotation1));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Behaviour_Skeleton_GetBlendPoseForBone_mC14927EEE3A0F082B6B58C6F626C80BCA348FE37_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10252));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 10253));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10254));
		// Quaternion poseRotation = blendSnapshot.boneRotations[boneIndex];
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10255));
		SteamVR_Skeleton_PoseSnapshot_t0E1C4250EA9F357DFC204D8E5D9C2111593C3E18 * L_0 = __this->get_blendSnapshot_26();
		NullCheck(L_0);
		QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3* L_1 = L_0->get_boneRotations_4();
		int32_t L_2 = ___boneIndex0;
		NullCheck(L_1);
		int32_t L_3 = L_2;
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_4 = (L_1)->GetAt(static_cast<il2cpp_array_size_t>(L_3));
		V_0 = L_4;
		// return poseRotation;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10256));
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_5 = V_0;
		V_1 = L_5;
		goto IL_0017;
	}

IL_0017:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10257));
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_6 = V_1;
		return L_6;
	}
}
// System.Void Valve.VR.SteamVR_Behaviour_Skeleton::UpdateSkeletonTransforms()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_Skeleton_UpdateSkeletonTransforms_m6CAAE4DB0C10D98DAE76647A2CAF20F8A4B3F97D (SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Skeleton_UpdateSkeletonTransforms_m6CAAE4DB0C10D98DAE76647A2CAF20F8A4B3F97D_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* V_0 = NULL;
	QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3* V_1 = NULL;
	bool V_2 = false;
	bool V_3 = false;
	SteamVR_Skeleton_Pose_Hand_tB273028E85AA961B7A088E75DA7263BF6BAA395E * V_4 = NULL;
	int32_t V_5 = 0;
	bool V_6 = false;
	bool V_7 = false;
	Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  V_8;
	memset((&V_8), 0, sizeof(V_8));
	bool V_9 = false;
	int32_t V_10 = 0;
	Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  V_11;
	memset((&V_11), 0, sizeof(V_11));
	bool V_12 = false;
	bool V_13 = false;
	int32_t V_14 = 0;
	bool V_15 = false;
	bool V_16 = false;
	int32_t V_17 = 0;
	bool V_18 = false;
	bool V_19 = false;
	SteamVR_Skeleton_Pose_Hand_tB273028E85AA961B7A088E75DA7263BF6BAA395E * V_20 = NULL;
	bool V_21 = false;
	bool V_22 = false;
	bool V_23 = false;
	bool V_24 = false;
	bool V_25 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0), (&V_1), (&V_4), (&V_5), (&V_8), (&V_10), (&V_11), (&V_14), (&V_17), (&V_20));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Behaviour_Skeleton_UpdateSkeletonTransforms_m6CAAE4DB0C10D98DAE76647A2CAF20F8A4B3F97D_RuntimeMethod_var, methodExecutionContextThis, NULL, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10258));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 10259));
	int32_t G_B10_0 = 0;
	int32_t G_B12_0 = 0;
	int32_t G_B41_0 = 0;
	int32_t G_B43_0 = 0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10260));
		// Vector3[] bonePositions = GetBonePositions();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10261));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10367));
		Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* L_0 = SteamVR_Behaviour_Skeleton_GetBonePositions_m75282A7A4582E34D6C613827729532F3C279238D(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10367));
		V_0 = L_0;
		// Quaternion[] boneRotations = GetBoneRotations();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10262));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10368));
		QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3* L_1 = SteamVR_Behaviour_Skeleton_GetBoneRotations_mDB798AEB8FCA9F3E884563A4E4FBCA07EE3D464B(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10368));
		V_1 = L_1;
		// if (skeletonBlend <= 0)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10263));
		float L_2 = __this->get_skeletonBlend_11();
		V_2 = (bool)((((int32_t)((!(((float)L_2) <= ((float)(0.0f))))? 1 : 0)) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10264));
		bool L_3 = V_2;
		if (!L_3)
		{
			goto IL_0179;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10265));
		// if (blendPoser != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10266));
		SteamVR_Skeleton_Poser_t8BAF9FB80E002A7B21C380E9137C955DA4292CBA * L_4 = __this->get_blendPoser_25();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10369));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_5 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_4, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10369));
		V_3 = L_5;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10267));
		bool L_6 = V_3;
		if (!L_6)
		{
			goto IL_011a;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10268));
		// SteamVR_Skeleton_Pose_Hand mainPose = blendPoser.skeletonMainPose.GetHand(inputSource);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10269));
		SteamVR_Skeleton_Poser_t8BAF9FB80E002A7B21C380E9137C955DA4292CBA * L_7 = __this->get_blendPoser_25();
		NullCheck(L_7);
		SteamVR_Skeleton_Pose_tE0875BE0979F259871814680A295FF216A3FE593 * L_8 = L_7->get_skeletonMainPose_9();
		int32_t L_9 = __this->get_inputSource_5();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10370));
		NullCheck(L_8);
		SteamVR_Skeleton_Pose_Hand_tB273028E85AA961B7A088E75DA7263BF6BAA395E * L_10 = SteamVR_Skeleton_Pose_GetHand_m15DBAECA5942E5F9E019A064E4E92B9E61A7A898(L_8, L_9, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10370));
		V_4 = L_10;
		// for (int boneIndex = 0; boneIndex < bones.Length; boneIndex++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10270));
		V_5 = 0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10271));
		goto IL_0102;
	}

IL_005b:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10272));
		// if (bones[boneIndex] == null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10273));
		TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804* L_11 = __this->get_bones_35();
		int32_t L_12 = V_5;
		NullCheck(L_11);
		int32_t L_13 = L_12;
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_14 = (L_11)->GetAt(static_cast<il2cpp_array_size_t>(L_13));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10371));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_15 = Object_op_Equality_mBC2401774F3BE33E8CF6F0A8148E66C95D6CFF1C(L_14, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10371));
		V_6 = L_15;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10274));
		bool L_16 = V_6;
		if (!L_16)
		{
			goto IL_0076;
		}
	}
	{
		// continue;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10275));
		goto IL_00fc;
	}

IL_0076:
	{
		// if ((boneIndex == SteamVR_Skeleton_JointIndexes.wrist && mainPose.ignoreWristPoseData) ||
		//     (boneIndex == SteamVR_Skeleton_JointIndexes.root && mainPose.ignoreRootPoseData))
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10276));
		int32_t L_17 = V_5;
		if ((!(((uint32_t)L_17) == ((uint32_t)1))))
		{
			goto IL_0084;
		}
	}
	{
		SteamVR_Skeleton_Pose_Hand_tB273028E85AA961B7A088E75DA7263BF6BAA395E * L_18 = V_4;
		NullCheck(L_18);
		bool L_19 = L_18->get_ignoreWristPoseData_7();
		if (L_19)
		{
			goto IL_0094;
		}
	}

IL_0084:
	{
		int32_t L_20 = V_5;
		if (L_20)
		{
			goto IL_0091;
		}
	}
	{
		SteamVR_Skeleton_Pose_Hand_tB273028E85AA961B7A088E75DA7263BF6BAA395E * L_21 = V_4;
		NullCheck(L_21);
		bool L_22 = L_21->get_ignoreRootPoseData_6();
		G_B10_0 = ((int32_t)(L_22));
		goto IL_0092;
	}

IL_0091:
	{
		G_B10_0 = 0;
	}

IL_0092:
	{
		G_B12_0 = G_B10_0;
		goto IL_0095;
	}

IL_0094:
	{
		G_B12_0 = 1;
	}

IL_0095:
	{
		V_7 = (bool)G_B12_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10277));
		bool L_23 = V_7;
		if (!L_23)
		{
			goto IL_00c1;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10278));
		// SetBonePosition(boneIndex, bonePositions[boneIndex]);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10279));
		int32_t L_24 = V_5;
		Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* L_25 = V_0;
		int32_t L_26 = V_5;
		NullCheck(L_25);
		int32_t L_27 = L_26;
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_28 = (L_25)->GetAt(static_cast<il2cpp_array_size_t>(L_27));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10372));
		VirtActionInvoker2< int32_t, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  >::Invoke(13 /* System.Void Valve.VR.SteamVR_Behaviour_Skeleton::SetBonePosition(System.Int32,UnityEngine.Vector3) */, __this, L_24, L_28);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10372));
		// SetBoneRotation(boneIndex, boneRotations[boneIndex]);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10280));
		int32_t L_29 = V_5;
		QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3* L_30 = V_1;
		int32_t L_31 = V_5;
		NullCheck(L_30);
		int32_t L_32 = L_31;
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_33 = (L_30)->GetAt(static_cast<il2cpp_array_size_t>(L_32));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10373));
		VirtActionInvoker2< int32_t, Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  >::Invoke(14 /* System.Void Valve.VR.SteamVR_Behaviour_Skeleton::SetBoneRotation(System.Int32,UnityEngine.Quaternion) */, __this, L_29, L_33);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10373));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10281));
		goto IL_00fb;
	}

IL_00c1:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10282));
		// Quaternion poseRotation = GetBlendPoseForBone(boneIndex, boneRotations[boneIndex]);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10283));
		int32_t L_34 = V_5;
		QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3* L_35 = V_1;
		int32_t L_36 = V_5;
		NullCheck(L_35);
		int32_t L_37 = L_36;
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_38 = (L_35)->GetAt(static_cast<il2cpp_array_size_t>(L_37));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10374));
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_39 = VirtFuncInvoker2< Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357 , int32_t, Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  >::Invoke(11 /* UnityEngine.Quaternion Valve.VR.SteamVR_Behaviour_Skeleton::GetBlendPoseForBone(System.Int32,UnityEngine.Quaternion) */, __this, L_34, L_38);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10374));
		V_8 = L_39;
		// SetBonePosition(boneIndex, blendSnapshot.bonePositions[boneIndex]);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10284));
		int32_t L_40 = V_5;
		SteamVR_Skeleton_PoseSnapshot_t0E1C4250EA9F357DFC204D8E5D9C2111593C3E18 * L_41 = __this->get_blendSnapshot_26();
		NullCheck(L_41);
		Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* L_42 = L_41->get_bonePositions_3();
		int32_t L_43 = V_5;
		NullCheck(L_42);
		int32_t L_44 = L_43;
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_45 = (L_42)->GetAt(static_cast<il2cpp_array_size_t>(L_44));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10375));
		VirtActionInvoker2< int32_t, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  >::Invoke(13 /* System.Void Valve.VR.SteamVR_Behaviour_Skeleton::SetBonePosition(System.Int32,UnityEngine.Vector3) */, __this, L_40, L_45);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10375));
		// SetBoneRotation(boneIndex, poseRotation);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10285));
		int32_t L_46 = V_5;
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_47 = V_8;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10376));
		VirtActionInvoker2< int32_t, Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  >::Invoke(14 /* System.Void Valve.VR.SteamVR_Behaviour_Skeleton::SetBoneRotation(System.Int32,UnityEngine.Quaternion) */, __this, L_46, L_47);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10376));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10286));
	}

IL_00fb:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10287));
	}

IL_00fc:
	{
		// for (int boneIndex = 0; boneIndex < bones.Length; boneIndex++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10288));
		int32_t L_48 = V_5;
		V_5 = ((int32_t)il2cpp_codegen_add((int32_t)L_48, (int32_t)1));
	}

IL_0102:
	{
		// for (int boneIndex = 0; boneIndex < bones.Length; boneIndex++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10289));
		int32_t L_49 = V_5;
		TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804* L_50 = __this->get_bones_35();
		NullCheck(L_50);
		V_9 = (bool)((((int32_t)L_49) < ((int32_t)(((int32_t)((int32_t)(((RuntimeArray*)L_50)->max_length))))))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10290));
		bool L_51 = V_9;
		if (L_51)
		{
			goto IL_005b;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10291));
		goto IL_0173;
	}

IL_011a:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10292));
		// for (int boneIndex = 0; boneIndex < bones.Length; boneIndex++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10293));
		V_10 = 0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10294));
		goto IL_0160;
	}

IL_0120:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10295));
		// Quaternion poseRotation = GetBlendPoseForBone(boneIndex, boneRotations[boneIndex]);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10296));
		int32_t L_52 = V_10;
		QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3* L_53 = V_1;
		int32_t L_54 = V_10;
		NullCheck(L_53);
		int32_t L_55 = L_54;
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_56 = (L_53)->GetAt(static_cast<il2cpp_array_size_t>(L_55));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10377));
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_57 = VirtFuncInvoker2< Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357 , int32_t, Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  >::Invoke(11 /* UnityEngine.Quaternion Valve.VR.SteamVR_Behaviour_Skeleton::GetBlendPoseForBone(System.Int32,UnityEngine.Quaternion) */, __this, L_52, L_56);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10377));
		V_11 = L_57;
		// SetBonePosition(boneIndex, blendSnapshot.bonePositions[boneIndex]);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10297));
		int32_t L_58 = V_10;
		SteamVR_Skeleton_PoseSnapshot_t0E1C4250EA9F357DFC204D8E5D9C2111593C3E18 * L_59 = __this->get_blendSnapshot_26();
		NullCheck(L_59);
		Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* L_60 = L_59->get_bonePositions_3();
		int32_t L_61 = V_10;
		NullCheck(L_60);
		int32_t L_62 = L_61;
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_63 = (L_60)->GetAt(static_cast<il2cpp_array_size_t>(L_62));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10378));
		VirtActionInvoker2< int32_t, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  >::Invoke(13 /* System.Void Valve.VR.SteamVR_Behaviour_Skeleton::SetBonePosition(System.Int32,UnityEngine.Vector3) */, __this, L_58, L_63);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10378));
		// SetBoneRotation(boneIndex, poseRotation);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10298));
		int32_t L_64 = V_10;
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_65 = V_11;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10379));
		VirtActionInvoker2< int32_t, Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  >::Invoke(14 /* System.Void Valve.VR.SteamVR_Behaviour_Skeleton::SetBoneRotation(System.Int32,UnityEngine.Quaternion) */, __this, L_64, L_65);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10379));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10299));
		// for (int boneIndex = 0; boneIndex < bones.Length; boneIndex++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10300));
		int32_t L_66 = V_10;
		V_10 = ((int32_t)il2cpp_codegen_add((int32_t)L_66, (int32_t)1));
	}

IL_0160:
	{
		// for (int boneIndex = 0; boneIndex < bones.Length; boneIndex++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10301));
		int32_t L_67 = V_10;
		TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804* L_68 = __this->get_bones_35();
		NullCheck(L_68);
		V_12 = (bool)((((int32_t)L_67) < ((int32_t)(((int32_t)((int32_t)(((RuntimeArray*)L_68)->max_length))))))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10302));
		bool L_69 = V_12;
		if (L_69)
		{
			goto IL_0120;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10303));
	}

IL_0173:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10304));
		goto IL_03d3;
	}

IL_0179:
	{
		// else if (skeletonBlend >= 1)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10305));
		float L_70 = __this->get_skeletonBlend_11();
		V_13 = (bool)((((int32_t)((!(((float)L_70) >= ((float)(1.0f))))? 1 : 0)) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10306));
		bool L_71 = V_13;
		if (!L_71)
		{
			goto IL_01ee;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10307));
		// for (int boneIndex = 0; boneIndex < bones.Length; boneIndex++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10308));
		V_14 = 0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10309));
		goto IL_01d6;
	}

IL_0195:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10310));
		// if (bones[boneIndex] == null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10311));
		TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804* L_72 = __this->get_bones_35();
		int32_t L_73 = V_14;
		NullCheck(L_72);
		int32_t L_74 = L_73;
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_75 = (L_72)->GetAt(static_cast<il2cpp_array_size_t>(L_74));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10380));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_76 = Object_op_Equality_mBC2401774F3BE33E8CF6F0A8148E66C95D6CFF1C(L_75, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10380));
		V_15 = L_76;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10312));
		bool L_77 = V_15;
		if (!L_77)
		{
			goto IL_01ad;
		}
	}
	{
		// continue;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10313));
		goto IL_01d0;
	}

IL_01ad:
	{
		// SetBonePosition(boneIndex, bonePositions[boneIndex]);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10314));
		int32_t L_78 = V_14;
		Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* L_79 = V_0;
		int32_t L_80 = V_14;
		NullCheck(L_79);
		int32_t L_81 = L_80;
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_82 = (L_79)->GetAt(static_cast<il2cpp_array_size_t>(L_81));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10381));
		VirtActionInvoker2< int32_t, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  >::Invoke(13 /* System.Void Valve.VR.SteamVR_Behaviour_Skeleton::SetBonePosition(System.Int32,UnityEngine.Vector3) */, __this, L_78, L_82);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10381));
		// SetBoneRotation(boneIndex, boneRotations[boneIndex]);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10315));
		int32_t L_83 = V_14;
		QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3* L_84 = V_1;
		int32_t L_85 = V_14;
		NullCheck(L_84);
		int32_t L_86 = L_85;
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_87 = (L_84)->GetAt(static_cast<il2cpp_array_size_t>(L_86));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10382));
		VirtActionInvoker2< int32_t, Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  >::Invoke(14 /* System.Void Valve.VR.SteamVR_Behaviour_Skeleton::SetBoneRotation(System.Int32,UnityEngine.Quaternion) */, __this, L_83, L_87);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10382));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10316));
	}

IL_01d0:
	{
		// for (int boneIndex = 0; boneIndex < bones.Length; boneIndex++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10317));
		int32_t L_88 = V_14;
		V_14 = ((int32_t)il2cpp_codegen_add((int32_t)L_88, (int32_t)1));
	}

IL_01d6:
	{
		// for (int boneIndex = 0; boneIndex < bones.Length; boneIndex++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10318));
		int32_t L_89 = V_14;
		TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804* L_90 = __this->get_bones_35();
		NullCheck(L_90);
		V_16 = (bool)((((int32_t)L_89) < ((int32_t)(((int32_t)((int32_t)(((RuntimeArray*)L_90)->max_length))))))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10319));
		bool L_91 = V_16;
		if (L_91)
		{
			goto IL_0195;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10320));
		goto IL_03d3;
	}

IL_01ee:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10321));
		// for (int boneIndex = 0; boneIndex < bones.Length; boneIndex++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10322));
		V_17 = 0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10323));
		goto IL_03bd;
	}

IL_01f7:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10324));
		// if (bones[boneIndex] == null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10325));
		TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804* L_92 = __this->get_bones_35();
		int32_t L_93 = V_17;
		NullCheck(L_92);
		int32_t L_94 = L_93;
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_95 = (L_92)->GetAt(static_cast<il2cpp_array_size_t>(L_94));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10383));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_96 = Object_op_Equality_mBC2401774F3BE33E8CF6F0A8148E66C95D6CFF1C(L_95, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10383));
		V_18 = L_96;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10326));
		bool L_97 = V_18;
		if (!L_97)
		{
			goto IL_0212;
		}
	}
	{
		// continue;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10327));
		goto IL_03b7;
	}

IL_0212:
	{
		// if (blendPoser != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10328));
		SteamVR_Skeleton_Poser_t8BAF9FB80E002A7B21C380E9137C955DA4292CBA * L_98 = __this->get_blendPoser_25();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10384));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_99 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_98, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10384));
		V_19 = L_99;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10329));
		bool L_100 = V_19;
		if (!L_100)
		{
			goto IL_02ef;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10330));
		// SteamVR_Skeleton_Pose_Hand mainPose = blendPoser.skeletonMainPose.GetHand(inputSource);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10331));
		SteamVR_Skeleton_Poser_t8BAF9FB80E002A7B21C380E9137C955DA4292CBA * L_101 = __this->get_blendPoser_25();
		NullCheck(L_101);
		SteamVR_Skeleton_Pose_tE0875BE0979F259871814680A295FF216A3FE593 * L_102 = L_101->get_skeletonMainPose_9();
		int32_t L_103 = __this->get_inputSource_5();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10385));
		NullCheck(L_102);
		SteamVR_Skeleton_Pose_Hand_tB273028E85AA961B7A088E75DA7263BF6BAA395E * L_104 = SteamVR_Skeleton_Pose_GetHand_m15DBAECA5942E5F9E019A064E4E92B9E61A7A898(L_102, L_103, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10385));
		V_20 = L_104;
		// if ((boneIndex == SteamVR_Skeleton_JointIndexes.wrist && mainPose.ignoreWristPoseData) ||
		//     (boneIndex == SteamVR_Skeleton_JointIndexes.root && mainPose.ignoreRootPoseData))
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10332));
		int32_t L_105 = V_17;
		if ((!(((uint32_t)L_105) == ((uint32_t)1))))
		{
			goto IL_024e;
		}
	}
	{
		SteamVR_Skeleton_Pose_Hand_tB273028E85AA961B7A088E75DA7263BF6BAA395E * L_106 = V_20;
		NullCheck(L_106);
		bool L_107 = L_106->get_ignoreWristPoseData_7();
		if (L_107)
		{
			goto IL_025e;
		}
	}

IL_024e:
	{
		int32_t L_108 = V_17;
		if (L_108)
		{
			goto IL_025b;
		}
	}
	{
		SteamVR_Skeleton_Pose_Hand_tB273028E85AA961B7A088E75DA7263BF6BAA395E * L_109 = V_20;
		NullCheck(L_109);
		bool L_110 = L_109->get_ignoreRootPoseData_6();
		G_B41_0 = ((int32_t)(L_110));
		goto IL_025c;
	}

IL_025b:
	{
		G_B41_0 = 0;
	}

IL_025c:
	{
		G_B43_0 = G_B41_0;
		goto IL_025f;
	}

IL_025e:
	{
		G_B43_0 = 1;
	}

IL_025f:
	{
		V_21 = (bool)G_B43_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10333));
		bool L_111 = V_21;
		if (!L_111)
		{
			goto IL_028b;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10334));
		// SetBonePosition(boneIndex, bonePositions[boneIndex]);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10335));
		int32_t L_112 = V_17;
		Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* L_113 = V_0;
		int32_t L_114 = V_17;
		NullCheck(L_113);
		int32_t L_115 = L_114;
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_116 = (L_113)->GetAt(static_cast<il2cpp_array_size_t>(L_115));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10386));
		VirtActionInvoker2< int32_t, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  >::Invoke(13 /* System.Void Valve.VR.SteamVR_Behaviour_Skeleton::SetBonePosition(System.Int32,UnityEngine.Vector3) */, __this, L_112, L_116);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10386));
		// SetBoneRotation(boneIndex, boneRotations[boneIndex]);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10336));
		int32_t L_117 = V_17;
		QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3* L_118 = V_1;
		int32_t L_119 = V_17;
		NullCheck(L_118);
		int32_t L_120 = L_119;
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_121 = (L_118)->GetAt(static_cast<il2cpp_array_size_t>(L_120));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10387));
		VirtActionInvoker2< int32_t, Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  >::Invoke(14 /* System.Void Valve.VR.SteamVR_Behaviour_Skeleton::SetBoneRotation(System.Int32,UnityEngine.Quaternion) */, __this, L_117, L_121);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10387));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10337));
		goto IL_02e9;
	}

IL_028b:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10338));
		// SetBonePosition(boneIndex, Vector3.Lerp(blendSnapshot.bonePositions[boneIndex], bonePositions[boneIndex], skeletonBlend));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10339));
		int32_t L_122 = V_17;
		SteamVR_Skeleton_PoseSnapshot_t0E1C4250EA9F357DFC204D8E5D9C2111593C3E18 * L_123 = __this->get_blendSnapshot_26();
		NullCheck(L_123);
		Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* L_124 = L_123->get_bonePositions_3();
		int32_t L_125 = V_17;
		NullCheck(L_124);
		int32_t L_126 = L_125;
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_127 = (L_124)->GetAt(static_cast<il2cpp_array_size_t>(L_126));
		Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* L_128 = V_0;
		int32_t L_129 = V_17;
		NullCheck(L_128);
		int32_t L_130 = L_129;
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_131 = (L_128)->GetAt(static_cast<il2cpp_array_size_t>(L_130));
		float L_132 = __this->get_skeletonBlend_11();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10388));
		IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_133 = Vector3_Lerp_m5BA75496B803820CC64079383956D73C6FD4A8A1(L_127, L_131, L_132, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10388));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10389));
		VirtActionInvoker2< int32_t, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  >::Invoke(13 /* System.Void Valve.VR.SteamVR_Behaviour_Skeleton::SetBonePosition(System.Int32,UnityEngine.Vector3) */, __this, L_122, L_133);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10389));
		// SetBoneRotation(boneIndex, Quaternion.Lerp(blendSnapshot.boneRotations[boneIndex], boneRotations[boneIndex], skeletonBlend));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10340));
		int32_t L_134 = V_17;
		SteamVR_Skeleton_PoseSnapshot_t0E1C4250EA9F357DFC204D8E5D9C2111593C3E18 * L_135 = __this->get_blendSnapshot_26();
		NullCheck(L_135);
		QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3* L_136 = L_135->get_boneRotations_4();
		int32_t L_137 = V_17;
		NullCheck(L_136);
		int32_t L_138 = L_137;
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_139 = (L_136)->GetAt(static_cast<il2cpp_array_size_t>(L_138));
		QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3* L_140 = V_1;
		int32_t L_141 = V_17;
		NullCheck(L_140);
		int32_t L_142 = L_141;
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_143 = (L_140)->GetAt(static_cast<il2cpp_array_size_t>(L_142));
		float L_144 = __this->get_skeletonBlend_11();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10390));
		IL2CPP_RUNTIME_CLASS_INIT(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357_il2cpp_TypeInfo_var);
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_145 = Quaternion_Lerp_m749B3988EE2EF387CC9BFB76C81B7465A7534E27(L_139, L_143, L_144, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10390));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10391));
		VirtActionInvoker2< int32_t, Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  >::Invoke(14 /* System.Void Valve.VR.SteamVR_Behaviour_Skeleton::SetBoneRotation(System.Int32,UnityEngine.Quaternion) */, __this, L_134, L_145);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10391));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10341));
	}

IL_02e9:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10342));
		goto IL_03b6;
	}

IL_02ef:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10343));
		// if (blendSnapshot == null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10344));
		SteamVR_Skeleton_PoseSnapshot_t0E1C4250EA9F357DFC204D8E5D9C2111593C3E18 * L_146 = __this->get_blendSnapshot_26();
		V_22 = (bool)((((RuntimeObject*)(SteamVR_Skeleton_PoseSnapshot_t0E1C4250EA9F357DFC204D8E5D9C2111593C3E18 *)L_146) == ((RuntimeObject*)(RuntimeObject *)NULL))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10345));
		bool L_147 = V_22;
		if (!L_147)
		{
			goto IL_0357;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10346));
		// SetBonePosition(boneIndex, Vector3.Lerp(bones[boneIndex].localPosition, bonePositions[boneIndex], skeletonBlend));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10347));
		int32_t L_148 = V_17;
		TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804* L_149 = __this->get_bones_35();
		int32_t L_150 = V_17;
		NullCheck(L_149);
		int32_t L_151 = L_150;
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_152 = (L_149)->GetAt(static_cast<il2cpp_array_size_t>(L_151));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10392));
		NullCheck(L_152);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_153 = Transform_get_localPosition_m812D43318E05BDCB78310EB7308785A13D85EFD8(L_152, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10392));
		Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* L_154 = V_0;
		int32_t L_155 = V_17;
		NullCheck(L_154);
		int32_t L_156 = L_155;
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_157 = (L_154)->GetAt(static_cast<il2cpp_array_size_t>(L_156));
		float L_158 = __this->get_skeletonBlend_11();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10393));
		IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_159 = Vector3_Lerp_m5BA75496B803820CC64079383956D73C6FD4A8A1(L_153, L_157, L_158, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10393));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10394));
		VirtActionInvoker2< int32_t, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  >::Invoke(13 /* System.Void Valve.VR.SteamVR_Behaviour_Skeleton::SetBonePosition(System.Int32,UnityEngine.Vector3) */, __this, L_148, L_159);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10394));
		// SetBoneRotation(boneIndex, Quaternion.Lerp(bones[boneIndex].localRotation, boneRotations[boneIndex], skeletonBlend));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10348));
		int32_t L_160 = V_17;
		TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804* L_161 = __this->get_bones_35();
		int32_t L_162 = V_17;
		NullCheck(L_161);
		int32_t L_163 = L_162;
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_164 = (L_161)->GetAt(static_cast<il2cpp_array_size_t>(L_163));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10395));
		NullCheck(L_164);
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_165 = Transform_get_localRotation_mEDA319E1B42EF12A19A95AC0824345B6574863FE(L_164, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10395));
		QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3* L_166 = V_1;
		int32_t L_167 = V_17;
		NullCheck(L_166);
		int32_t L_168 = L_167;
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_169 = (L_166)->GetAt(static_cast<il2cpp_array_size_t>(L_168));
		float L_170 = __this->get_skeletonBlend_11();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10396));
		IL2CPP_RUNTIME_CLASS_INIT(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357_il2cpp_TypeInfo_var);
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_171 = Quaternion_Lerp_m749B3988EE2EF387CC9BFB76C81B7465A7534E27(L_165, L_169, L_170, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10396));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10397));
		VirtActionInvoker2< int32_t, Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  >::Invoke(14 /* System.Void Valve.VR.SteamVR_Behaviour_Skeleton::SetBoneRotation(System.Int32,UnityEngine.Quaternion) */, __this, L_160, L_171);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10397));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10349));
		goto IL_03b5;
	}

IL_0357:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10350));
		// SetBonePosition(boneIndex, Vector3.Lerp(blendSnapshot.bonePositions[boneIndex], bonePositions[boneIndex], skeletonBlend));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10351));
		int32_t L_172 = V_17;
		SteamVR_Skeleton_PoseSnapshot_t0E1C4250EA9F357DFC204D8E5D9C2111593C3E18 * L_173 = __this->get_blendSnapshot_26();
		NullCheck(L_173);
		Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* L_174 = L_173->get_bonePositions_3();
		int32_t L_175 = V_17;
		NullCheck(L_174);
		int32_t L_176 = L_175;
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_177 = (L_174)->GetAt(static_cast<il2cpp_array_size_t>(L_176));
		Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* L_178 = V_0;
		int32_t L_179 = V_17;
		NullCheck(L_178);
		int32_t L_180 = L_179;
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_181 = (L_178)->GetAt(static_cast<il2cpp_array_size_t>(L_180));
		float L_182 = __this->get_skeletonBlend_11();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10398));
		IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_183 = Vector3_Lerp_m5BA75496B803820CC64079383956D73C6FD4A8A1(L_177, L_181, L_182, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10398));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10399));
		VirtActionInvoker2< int32_t, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  >::Invoke(13 /* System.Void Valve.VR.SteamVR_Behaviour_Skeleton::SetBonePosition(System.Int32,UnityEngine.Vector3) */, __this, L_172, L_183);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10399));
		// SetBoneRotation(boneIndex, Quaternion.Lerp(blendSnapshot.boneRotations[boneIndex], boneRotations[boneIndex], skeletonBlend));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10352));
		int32_t L_184 = V_17;
		SteamVR_Skeleton_PoseSnapshot_t0E1C4250EA9F357DFC204D8E5D9C2111593C3E18 * L_185 = __this->get_blendSnapshot_26();
		NullCheck(L_185);
		QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3* L_186 = L_185->get_boneRotations_4();
		int32_t L_187 = V_17;
		NullCheck(L_186);
		int32_t L_188 = L_187;
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_189 = (L_186)->GetAt(static_cast<il2cpp_array_size_t>(L_188));
		QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3* L_190 = V_1;
		int32_t L_191 = V_17;
		NullCheck(L_190);
		int32_t L_192 = L_191;
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_193 = (L_190)->GetAt(static_cast<il2cpp_array_size_t>(L_192));
		float L_194 = __this->get_skeletonBlend_11();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10400));
		IL2CPP_RUNTIME_CLASS_INIT(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357_il2cpp_TypeInfo_var);
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_195 = Quaternion_Lerp_m749B3988EE2EF387CC9BFB76C81B7465A7534E27(L_189, L_193, L_194, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10400));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10401));
		VirtActionInvoker2< int32_t, Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  >::Invoke(14 /* System.Void Valve.VR.SteamVR_Behaviour_Skeleton::SetBoneRotation(System.Int32,UnityEngine.Quaternion) */, __this, L_184, L_195);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10401));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10353));
	}

IL_03b5:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10354));
	}

IL_03b6:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10355));
	}

IL_03b7:
	{
		// for (int boneIndex = 0; boneIndex < bones.Length; boneIndex++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10356));
		int32_t L_196 = V_17;
		V_17 = ((int32_t)il2cpp_codegen_add((int32_t)L_196, (int32_t)1));
	}

IL_03bd:
	{
		// for (int boneIndex = 0; boneIndex < bones.Length; boneIndex++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10357));
		int32_t L_197 = V_17;
		TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804* L_198 = __this->get_bones_35();
		NullCheck(L_198);
		V_23 = (bool)((((int32_t)L_197) < ((int32_t)(((int32_t)((int32_t)(((RuntimeArray*)L_198)->max_length))))))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10358));
		bool L_199 = V_23;
		if (L_199)
		{
			goto IL_01f7;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10359));
	}

IL_03d3:
	{
		// if (onBoneTransformsUpdated != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10360));
		SteamVR_Behaviour_SkeletonEvent_t2A4AAE28B8BB6F5E52B7A7FAF6ADF1F3DE537627 * L_200 = __this->get_onBoneTransformsUpdated_12();
		V_24 = (bool)((!(((RuntimeObject*)(SteamVR_Behaviour_SkeletonEvent_t2A4AAE28B8BB6F5E52B7A7FAF6ADF1F3DE537627 *)L_200) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10361));
		bool L_201 = V_24;
		if (!L_201)
		{
			goto IL_03f5;
		}
	}
	{
		// onBoneTransformsUpdated.Invoke(this, inputSource);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10362));
		SteamVR_Behaviour_SkeletonEvent_t2A4AAE28B8BB6F5E52B7A7FAF6ADF1F3DE537627 * L_202 = __this->get_onBoneTransformsUpdated_12();
		int32_t L_203 = __this->get_inputSource_5();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10402));
		NullCheck(L_202);
		UnityEvent_2_Invoke_mA149632942D05C483CA654D6D8355DB4EA1ED032(L_202, __this, L_203, /*hidden argument*/UnityEvent_2_Invoke_mA149632942D05C483CA654D6D8355DB4EA1ED032_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10402));
	}

IL_03f5:
	{
		// if (onBoneTransformsUpdatedEvent != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10363));
		UpdateHandler_t529F28858847FB086B7F9A7A7E52860C7430976A * L_204 = __this->get_onBoneTransformsUpdatedEvent_17();
		V_25 = (bool)((!(((RuntimeObject*)(UpdateHandler_t529F28858847FB086B7F9A7A7E52860C7430976A *)L_204) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10364));
		bool L_205 = V_25;
		if (!L_205)
		{
			goto IL_0417;
		}
	}
	{
		// onBoneTransformsUpdatedEvent.Invoke(this, inputSource);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10365));
		UpdateHandler_t529F28858847FB086B7F9A7A7E52860C7430976A * L_206 = __this->get_onBoneTransformsUpdatedEvent_17();
		int32_t L_207 = __this->get_inputSource_5();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10403));
		NullCheck(L_206);
		UpdateHandler_Invoke_m8827E292EA413A4EF794103BB153F8CC8A719E89(L_206, __this, L_207, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10403));
	}

IL_0417:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10366));
		return;
	}
}
// System.Void Valve.VR.SteamVR_Behaviour_Skeleton::SetBonePosition(System.Int32,UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_Skeleton_SetBonePosition_mF68B1979177BF95A63611FE90E424C31A0A13D10 (SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A * __this, int32_t ___boneIndex0, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___localPosition1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Skeleton_SetBonePosition_mF68B1979177BF95A63611FE90E424C31A0A13D10_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___boneIndex0), (&___localPosition1));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Behaviour_Skeleton_SetBonePosition_mF68B1979177BF95A63611FE90E424C31A0A13D10_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10404));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 10405));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10406));
		// if (onlySetRotations == false) //ignore position sets if we're only setting rotations
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10407));
		bool L_0 = __this->get_onlySetRotations_10();
		V_0 = (bool)((((int32_t)L_0) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10408));
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_001d;
		}
	}
	{
		// bones[boneIndex].localPosition = localPosition;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10409));
		TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804* L_2 = __this->get_bones_35();
		int32_t L_3 = ___boneIndex0;
		NullCheck(L_2);
		int32_t L_4 = L_3;
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_5 = (L_2)->GetAt(static_cast<il2cpp_array_size_t>(L_4));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_6 = ___localPosition1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10411));
		NullCheck(L_5);
		Transform_set_localPosition_m275F5550DD939F83AFEB5E8D681131172E2E1728(L_5, L_6, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10411));
	}

IL_001d:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10410));
		return;
	}
}
// System.Void Valve.VR.SteamVR_Behaviour_Skeleton::SetBoneRotation(System.Int32,UnityEngine.Quaternion)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_Skeleton_SetBoneRotation_mD07C8CDEACEC3AA140BE927471DFD52D90B560F3 (SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A * __this, int32_t ___boneIndex0, Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  ___localRotation1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Skeleton_SetBoneRotation_mD07C8CDEACEC3AA140BE927471DFD52D90B560F3_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___boneIndex0), (&___localRotation1));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Behaviour_Skeleton_SetBoneRotation_mD07C8CDEACEC3AA140BE927471DFD52D90B560F3_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10412));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 10413));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10414));
		// bones[boneIndex].localRotation = localRotation;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10415));
		TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804* L_0 = __this->get_bones_35();
		int32_t L_1 = ___boneIndex0;
		NullCheck(L_0);
		int32_t L_2 = L_1;
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_3 = (L_0)->GetAt(static_cast<il2cpp_array_size_t>(L_2));
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_4 = ___localRotation1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10417));
		NullCheck(L_3);
		Transform_set_localRotation_mE2BECB0954FFC1D93FB631600D9A9BEFF41D9C8A(L_3, L_4, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10417));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10416));
		return;
	}
}
// UnityEngine.Transform Valve.VR.SteamVR_Behaviour_Skeleton::GetBone(System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * SteamVR_Behaviour_Skeleton_GetBone_m07F4F82851D27C2C50260064C80655F31ED2306E (SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A * __this, int32_t ___joint0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Skeleton_GetBone_m07F4F82851D27C2C50260064C80655F31ED2306E_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * V_1 = NULL;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___joint0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Behaviour_Skeleton_GetBone_m07F4F82851D27C2C50260064C80655F31ED2306E_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10418));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 10419));
	int32_t G_B3_0 = 0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10420));
		// if (bones == null || bones.Length == 0)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10421));
		TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804* L_0 = __this->get_bones_35();
		if (!L_0)
		{
			goto IL_0015;
		}
	}
	{
		TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804* L_1 = __this->get_bones_35();
		NullCheck(L_1);
		G_B3_0 = ((((int32_t)(((RuntimeArray*)L_1)->max_length)) == ((int32_t)0))? 1 : 0);
		goto IL_0016;
	}

IL_0015:
	{
		G_B3_0 = 1;
	}

IL_0016:
	{
		V_0 = (bool)G_B3_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10422));
		bool L_2 = V_0;
		if (!L_2)
		{
			goto IL_0021;
		}
	}
	{
		// Awake();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10423));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10426));
		VirtActionInvoker0::Invoke(4 /* System.Void Valve.VR.SteamVR_Behaviour_Skeleton::Awake() */, __this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10426));
	}

IL_0021:
	{
		// return bones[joint];
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10424));
		TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804* L_3 = __this->get_bones_35();
		int32_t L_4 = ___joint0;
		NullCheck(L_3);
		int32_t L_5 = L_4;
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_6 = (L_3)->GetAt(static_cast<il2cpp_array_size_t>(L_5));
		V_1 = L_6;
		goto IL_002c;
	}

IL_002c:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10425));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_7 = V_1;
		return L_7;
	}
}
// UnityEngine.Vector3 Valve.VR.SteamVR_Behaviour_Skeleton::GetBonePosition(System.Int32,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  SteamVR_Behaviour_Skeleton_GetBonePosition_m93D130AC841B858219288EFDA208058A4D0F63C4 (SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A * __this, int32_t ___joint0, bool ___local1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Skeleton_GetBonePosition_m93D130AC841B858219288EFDA208058A4D0F63C4_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_1;
	memset((&V_1), 0, sizeof(V_1));
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___joint0), (&___local1));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Behaviour_Skeleton_GetBonePosition_m93D130AC841B858219288EFDA208058A4D0F63C4_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10427));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 10428));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10429));
		// if (local)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10430));
		bool L_0 = ___local1;
		V_0 = L_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10431));
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_0016;
		}
	}
	{
		// return bones[joint].localPosition;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10432));
		TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804* L_2 = __this->get_bones_35();
		int32_t L_3 = ___joint0;
		NullCheck(L_2);
		int32_t L_4 = L_3;
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_5 = (L_2)->GetAt(static_cast<il2cpp_array_size_t>(L_4));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10435));
		NullCheck(L_5);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_6 = Transform_get_localPosition_m812D43318E05BDCB78310EB7308785A13D85EFD8(L_5, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10435));
		V_1 = L_6;
		goto IL_0026;
	}

IL_0016:
	{
		// return bones[joint].position;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10433));
		TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804* L_7 = __this->get_bones_35();
		int32_t L_8 = ___joint0;
		NullCheck(L_7);
		int32_t L_9 = L_8;
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_10 = (L_7)->GetAt(static_cast<il2cpp_array_size_t>(L_9));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10436));
		NullCheck(L_10);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_11 = Transform_get_position_mF54C3A064F7C8E24F1C56EE128728B2E4485E294(L_10, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10436));
		V_1 = L_11;
		goto IL_0026;
	}

IL_0026:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10434));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_12 = V_1;
		return L_12;
	}
}
// UnityEngine.Quaternion Valve.VR.SteamVR_Behaviour_Skeleton::GetBoneRotation(System.Int32,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  SteamVR_Behaviour_Skeleton_GetBoneRotation_m0154D8A9C1F0CBD415FFF1077DBEDD6806B3EB96 (SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A * __this, int32_t ___joint0, bool ___local1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Skeleton_GetBoneRotation_m0154D8A9C1F0CBD415FFF1077DBEDD6806B3EB96_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  V_1;
	memset((&V_1), 0, sizeof(V_1));
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___joint0), (&___local1));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Behaviour_Skeleton_GetBoneRotation_m0154D8A9C1F0CBD415FFF1077DBEDD6806B3EB96_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10437));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 10438));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10439));
		// if (local)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10440));
		bool L_0 = ___local1;
		V_0 = L_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10441));
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_0016;
		}
	}
	{
		// return bones[joint].localRotation;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10442));
		TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804* L_2 = __this->get_bones_35();
		int32_t L_3 = ___joint0;
		NullCheck(L_2);
		int32_t L_4 = L_3;
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_5 = (L_2)->GetAt(static_cast<il2cpp_array_size_t>(L_4));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10445));
		NullCheck(L_5);
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_6 = Transform_get_localRotation_mEDA319E1B42EF12A19A95AC0824345B6574863FE(L_5, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10445));
		V_1 = L_6;
		goto IL_0026;
	}

IL_0016:
	{
		// return bones[joint].rotation;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10443));
		TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804* L_7 = __this->get_bones_35();
		int32_t L_8 = ___joint0;
		NullCheck(L_7);
		int32_t L_9 = L_8;
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_10 = (L_7)->GetAt(static_cast<il2cpp_array_size_t>(L_9));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10446));
		NullCheck(L_10);
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_11 = Transform_get_rotation_m3AB90A67403249AECCA5E02BC70FCE8C90FE9FB9(L_10, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10446));
		V_1 = L_11;
		goto IL_0026;
	}

IL_0026:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10444));
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_12 = V_1;
		return L_12;
	}
}
// UnityEngine.Vector3[] Valve.VR.SteamVR_Behaviour_Skeleton::GetBonePositions()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* SteamVR_Behaviour_Skeleton_GetBonePositions_m75282A7A4582E34D6C613827729532F3C279238D (SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Skeleton_GetBonePositions_m75282A7A4582E34D6C613827729532F3C279238D_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* V_1 = NULL;
	bool V_2 = false;
	int32_t V_3 = 0;
	bool V_4 = false;
	Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* V_5 = NULL;
	bool V_6 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_1), (&V_3));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Behaviour_Skeleton_GetBonePositions_m75282A7A4582E34D6C613827729532F3C279238D_RuntimeMethod_var, methodExecutionContextThis, NULL, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10447));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 10448));
	int32_t G_B4_0 = 0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10449));
		// if (skeletonAvailable)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10450));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10476));
		bool L_0 = SteamVR_Behaviour_Skeleton_get_skeletonAvailable_m29DBA8C30D07CAF0C3F1423F7886AB2F3D8422E2(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10476));
		V_0 = L_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10451));
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_0063;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10452));
		// Vector3[] rawSkeleton = skeletonAction.GetBonePositions();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10453));
		SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * L_2 = __this->get_skeletonAction_4();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10477));
		NullCheck(L_2);
		Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* L_3 = SteamVR_Action_Skeleton_GetBonePositions_mB8ED80319622D467201E3562AEDCE36C6601D531(L_2, (bool)0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10477));
		V_1 = L_3;
		// if (mirroring == MirrorType.LeftToRight || mirroring == MirrorType.RightToLeft)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10454));
		int32_t L_4 = __this->get_mirroring_22();
		if ((((int32_t)L_4) == ((int32_t)1)))
		{
			goto IL_002d;
		}
	}
	{
		int32_t L_5 = __this->get_mirroring_22();
		G_B4_0 = ((((int32_t)L_5) == ((int32_t)2))? 1 : 0);
		goto IL_002e;
	}

IL_002d:
	{
		G_B4_0 = 1;
	}

IL_002e:
	{
		V_2 = (bool)G_B4_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10455));
		bool L_6 = V_2;
		if (!L_6)
		{
			goto IL_005e;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10456));
		// for (int boneIndex = 0; boneIndex < rawSkeleton.Length; boneIndex++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10457));
		V_3 = 0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10458));
		goto IL_0051;
	}

IL_0037:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10459));
		// rawSkeleton[boneIndex] = MirrorPosition(boneIndex, rawSkeleton[boneIndex]);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10460));
		Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* L_7 = V_1;
		int32_t L_8 = V_3;
		int32_t L_9 = V_3;
		Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* L_10 = V_1;
		int32_t L_11 = V_3;
		NullCheck(L_10);
		int32_t L_12 = L_11;
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_13 = (L_10)->GetAt(static_cast<il2cpp_array_size_t>(L_12));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10478));
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A_il2cpp_TypeInfo_var);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_14 = SteamVR_Behaviour_Skeleton_MirrorPosition_mB9224FC4CCE63FEC7C3884B98E2D6109DE157016(L_9, L_13, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10478));
		NullCheck(L_7);
		(L_7)->SetAt(static_cast<il2cpp_array_size_t>(L_8), (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 )L_14);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10461));
		// for (int boneIndex = 0; boneIndex < rawSkeleton.Length; boneIndex++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10462));
		int32_t L_15 = V_3;
		V_3 = ((int32_t)il2cpp_codegen_add((int32_t)L_15, (int32_t)1));
	}

IL_0051:
	{
		// for (int boneIndex = 0; boneIndex < rawSkeleton.Length; boneIndex++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10463));
		int32_t L_16 = V_3;
		Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* L_17 = V_1;
		NullCheck(L_17);
		V_4 = (bool)((((int32_t)L_16) < ((int32_t)(((int32_t)((int32_t)(((RuntimeArray*)L_17)->max_length))))))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10464));
		bool L_18 = V_4;
		if (L_18)
		{
			goto IL_0037;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10465));
	}

IL_005e:
	{
		// return rawSkeleton;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10466));
		Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* L_19 = V_1;
		V_5 = L_19;
		goto IL_00a9;
	}

IL_0063:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10467));
		// if (fallbackPoser != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10468));
		SteamVR_Skeleton_Poser_t8BAF9FB80E002A7B21C380E9137C955DA4292CBA * L_20 = __this->get_fallbackPoser_23();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10479));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_21 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_20, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10479));
		V_6 = L_21;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10469));
		bool L_22 = V_6;
		if (!L_22)
		{
			goto IL_0097;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10470));
		// return fallbackPoser.GetBlendedPose(skeletonAction, inputSource).bonePositions;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10471));
		SteamVR_Skeleton_Poser_t8BAF9FB80E002A7B21C380E9137C955DA4292CBA * L_23 = __this->get_fallbackPoser_23();
		SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * L_24 = __this->get_skeletonAction_4();
		int32_t L_25 = __this->get_inputSource_5();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10480));
		NullCheck(L_23);
		SteamVR_Skeleton_PoseSnapshot_t0E1C4250EA9F357DFC204D8E5D9C2111593C3E18 * L_26 = SteamVR_Skeleton_Poser_GetBlendedPose_mE28BCF648FE33845102DB4CAF065D11F4EF43FE1(L_23, L_24, L_25, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10480));
		NullCheck(L_26);
		Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* L_27 = L_26->get_bonePositions_3();
		V_5 = L_27;
		goto IL_00a9;
	}

IL_0097:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10472));
		// Debug.LogError("Skeleton Action is not bound, and you have not provided a fallback SkeletonPoser. Please create one to drive hand animation when no skeleton data is available.", this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10473));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10481));
		IL2CPP_RUNTIME_CLASS_INIT(Debug_t7B5FCB117E2FD63B6838BC52821B252E2BFB61C4_il2cpp_TypeInfo_var);
		Debug_LogError_m97139CB2EE76D5CD8308C1AD0499A5F163FC7F51(_stringLiteralB2D273CF4E41155A2EF5D712B354AEA95E06A703, __this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10481));
		// return null;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10474));
		V_5 = (Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28*)NULL;
		goto IL_00a9;
	}

IL_00a9:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10475));
		Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* L_28 = V_5;
		return L_28;
	}
}
// UnityEngine.Quaternion[] Valve.VR.SteamVR_Behaviour_Skeleton::GetBoneRotations()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3* SteamVR_Behaviour_Skeleton_GetBoneRotations_mDB798AEB8FCA9F3E884563A4E4FBCA07EE3D464B (SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Skeleton_GetBoneRotations_mDB798AEB8FCA9F3E884563A4E4FBCA07EE3D464B_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3* V_1 = NULL;
	bool V_2 = false;
	int32_t V_3 = 0;
	bool V_4 = false;
	QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3* V_5 = NULL;
	bool V_6 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_1), (&V_3));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Behaviour_Skeleton_GetBoneRotations_mDB798AEB8FCA9F3E884563A4E4FBCA07EE3D464B_RuntimeMethod_var, methodExecutionContextThis, NULL, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10482));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 10483));
	int32_t G_B4_0 = 0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10484));
		// if (skeletonAvailable)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10485));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10511));
		bool L_0 = SteamVR_Behaviour_Skeleton_get_skeletonAvailable_m29DBA8C30D07CAF0C3F1423F7886AB2F3D8422E2(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10511));
		V_0 = L_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10486));
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_0063;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10487));
		// Quaternion[] rawSkeleton = skeletonAction.GetBoneRotations();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10488));
		SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * L_2 = __this->get_skeletonAction_4();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10512));
		NullCheck(L_2);
		QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3* L_3 = SteamVR_Action_Skeleton_GetBoneRotations_m7239E024A6D2E783C25D633A0476CA9428D465C4(L_2, (bool)0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10512));
		V_1 = L_3;
		// if (mirroring == MirrorType.LeftToRight || mirroring == MirrorType.RightToLeft)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10489));
		int32_t L_4 = __this->get_mirroring_22();
		if ((((int32_t)L_4) == ((int32_t)1)))
		{
			goto IL_002d;
		}
	}
	{
		int32_t L_5 = __this->get_mirroring_22();
		G_B4_0 = ((((int32_t)L_5) == ((int32_t)2))? 1 : 0);
		goto IL_002e;
	}

IL_002d:
	{
		G_B4_0 = 1;
	}

IL_002e:
	{
		V_2 = (bool)G_B4_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10490));
		bool L_6 = V_2;
		if (!L_6)
		{
			goto IL_005e;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10491));
		// for (int boneIndex = 0; boneIndex < rawSkeleton.Length; boneIndex++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10492));
		V_3 = 0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10493));
		goto IL_0051;
	}

IL_0037:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10494));
		// rawSkeleton[boneIndex] = MirrorRotation(boneIndex, rawSkeleton[boneIndex]);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10495));
		QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3* L_7 = V_1;
		int32_t L_8 = V_3;
		int32_t L_9 = V_3;
		QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3* L_10 = V_1;
		int32_t L_11 = V_3;
		NullCheck(L_10);
		int32_t L_12 = L_11;
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_13 = (L_10)->GetAt(static_cast<il2cpp_array_size_t>(L_12));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10513));
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A_il2cpp_TypeInfo_var);
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_14 = SteamVR_Behaviour_Skeleton_MirrorRotation_m942A7A6E456AD7426D166B074280E0B01E5799C8(L_9, L_13, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10513));
		NullCheck(L_7);
		(L_7)->SetAt(static_cast<il2cpp_array_size_t>(L_8), (Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357 )L_14);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10496));
		// for (int boneIndex = 0; boneIndex < rawSkeleton.Length; boneIndex++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10497));
		int32_t L_15 = V_3;
		V_3 = ((int32_t)il2cpp_codegen_add((int32_t)L_15, (int32_t)1));
	}

IL_0051:
	{
		// for (int boneIndex = 0; boneIndex < rawSkeleton.Length; boneIndex++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10498));
		int32_t L_16 = V_3;
		QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3* L_17 = V_1;
		NullCheck(L_17);
		V_4 = (bool)((((int32_t)L_16) < ((int32_t)(((int32_t)((int32_t)(((RuntimeArray*)L_17)->max_length))))))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10499));
		bool L_18 = V_4;
		if (L_18)
		{
			goto IL_0037;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10500));
	}

IL_005e:
	{
		// return rawSkeleton;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10501));
		QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3* L_19 = V_1;
		V_5 = L_19;
		goto IL_00a9;
	}

IL_0063:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10502));
		// if (fallbackPoser != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10503));
		SteamVR_Skeleton_Poser_t8BAF9FB80E002A7B21C380E9137C955DA4292CBA * L_20 = __this->get_fallbackPoser_23();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10514));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_21 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_20, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10514));
		V_6 = L_21;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10504));
		bool L_22 = V_6;
		if (!L_22)
		{
			goto IL_0097;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10505));
		// return fallbackPoser.GetBlendedPose(skeletonAction, inputSource).boneRotations;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10506));
		SteamVR_Skeleton_Poser_t8BAF9FB80E002A7B21C380E9137C955DA4292CBA * L_23 = __this->get_fallbackPoser_23();
		SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * L_24 = __this->get_skeletonAction_4();
		int32_t L_25 = __this->get_inputSource_5();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10515));
		NullCheck(L_23);
		SteamVR_Skeleton_PoseSnapshot_t0E1C4250EA9F357DFC204D8E5D9C2111593C3E18 * L_26 = SteamVR_Skeleton_Poser_GetBlendedPose_mE28BCF648FE33845102DB4CAF065D11F4EF43FE1(L_23, L_24, L_25, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10515));
		NullCheck(L_26);
		QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3* L_27 = L_26->get_boneRotations_4();
		V_5 = L_27;
		goto IL_00a9;
	}

IL_0097:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10507));
		// Debug.LogError("Skeleton Action is not bound, and you have not provided a fallback SkeletonPoser. Please create one to drive hand animation when no skeleton data is available.", this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10508));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10516));
		IL2CPP_RUNTIME_CLASS_INIT(Debug_t7B5FCB117E2FD63B6838BC52821B252E2BFB61C4_il2cpp_TypeInfo_var);
		Debug_LogError_m97139CB2EE76D5CD8308C1AD0499A5F163FC7F51(_stringLiteralB2D273CF4E41155A2EF5D712B354AEA95E06A703, __this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10516));
		// return null;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10509));
		V_5 = (QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3*)NULL;
		goto IL_00a9;
	}

IL_00a9:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10510));
		QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3* L_28 = V_5;
		return L_28;
	}
}
// UnityEngine.Vector3 Valve.VR.SteamVR_Behaviour_Skeleton::MirrorPosition(System.Int32,UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  SteamVR_Behaviour_Skeleton_MirrorPosition_mB9224FC4CCE63FEC7C3884B98E2D6109DE157016 (int32_t ___boneIndex0, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___rawPosition1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Skeleton_MirrorPosition_mB9224FC4CCE63FEC7C3884B98E2D6109DE157016_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	bool V_1 = false;
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_2;
	memset((&V_2), 0, sizeof(V_2));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___boneIndex0), (&___rawPosition1));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Behaviour_Skeleton_MirrorPosition_mB9224FC4CCE63FEC7C3884B98E2D6109DE157016_RuntimeMethod_var, NULL, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10517));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 10518));
	int32_t G_B3_0 = 0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10519));
		// if (boneIndex == SteamVR_Skeleton_JointIndexes.wrist || IsMetacarpal(boneIndex))
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10520));
		int32_t L_0 = ___boneIndex0;
		if ((((int32_t)L_0) == ((int32_t)1)))
		{
			goto IL_000d;
		}
	}
	{
		int32_t L_1 = ___boneIndex0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10532));
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A_il2cpp_TypeInfo_var);
		bool L_2 = SteamVR_Behaviour_Skeleton_IsMetacarpal_mCE1D2618F91173E18ACEAAC758D247607CEFE3F0(L_1, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10532));
		G_B3_0 = ((int32_t)(L_2));
		goto IL_000e;
	}

IL_000d:
	{
		G_B3_0 = 1;
	}

IL_000e:
	{
		V_0 = (bool)G_B3_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10521));
		bool L_3 = V_0;
		if (!L_3)
		{
			goto IL_0032;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10522));
		// rawPosition.Scale(new Vector3(-1, 1, 1));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10523));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10533));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_4;
		memset((&L_4), 0, sizeof(L_4));
		Vector3__ctor_m08F61F548AA5836D8789843ACB4A81E4963D2EE1((&L_4), (-1.0f), (1.0f), (1.0f), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10533));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10534));
		Vector3_Scale_mD40CDE2B62BCBABD49426FAE104814F29CF2AA0B((Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 *)(&___rawPosition1), L_4, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10534));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10524));
		goto IL_0049;
	}

IL_0032:
	{
		// else if (boneIndex != SteamVR_Skeleton_JointIndexes.root)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10525));
		int32_t L_5 = ___boneIndex0;
		V_1 = (bool)((!(((uint32_t)L_5) <= ((uint32_t)0)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10526));
		bool L_6 = V_1;
		if (!L_6)
		{
			goto IL_0049;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10527));
		// rawPosition = rawPosition * -1;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10528));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_7 = ___rawPosition1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10535));
		IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_8 = Vector3_op_Multiply_m1C5F07723615156ACF035D88A1280A9E8F35A04E(L_7, (-1.0f), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10535));
		___rawPosition1 = L_8;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10529));
	}

IL_0049:
	{
		// return rawPosition;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10530));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_9 = ___rawPosition1;
		V_2 = L_9;
		goto IL_004d;
	}

IL_004d:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10531));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_10 = V_2;
		return L_10;
	}
}
// UnityEngine.Quaternion Valve.VR.SteamVR_Behaviour_Skeleton::MirrorRotation(System.Int32,UnityEngine.Quaternion)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  SteamVR_Behaviour_Skeleton_MirrorRotation_m942A7A6E456AD7426D166B074280E0B01E5799C8 (int32_t ___boneIndex0, Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  ___rawRotation1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Skeleton_MirrorRotation_m942A7A6E456AD7426D166B074280E0B01E5799C8_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	bool V_1 = false;
	Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  V_2;
	memset((&V_2), 0, sizeof(V_2));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___boneIndex0), (&___rawRotation1));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Behaviour_Skeleton_MirrorRotation_m942A7A6E456AD7426D166B074280E0B01E5799C8_RuntimeMethod_var, NULL, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10536));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 10537));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10538));
		// if (boneIndex == SteamVR_Skeleton_JointIndexes.wrist)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10539));
		int32_t L_0 = ___boneIndex0;
		V_0 = (bool)((((int32_t)L_0) == ((int32_t)1))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10540));
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_0031;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10541));
		// rawRotation.y = rawRotation.y * -1;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10542));
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_2 = ___rawRotation1;
		float L_3 = L_2.get_y_1();
		(&___rawRotation1)->set_y_1(((float)il2cpp_codegen_multiply((float)L_3, (float)(-1.0f))));
		// rawRotation.z = rawRotation.z * -1;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10543));
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_4 = ___rawRotation1;
		float L_5 = L_4.get_z_2();
		(&___rawRotation1)->set_z_2(((float)il2cpp_codegen_multiply((float)L_5, (float)(-1.0f))));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10544));
	}

IL_0031:
	{
		// if (IsMetacarpal(boneIndex))
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10545));
		int32_t L_6 = ___boneIndex0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10552));
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A_il2cpp_TypeInfo_var);
		bool L_7 = SteamVR_Behaviour_Skeleton_IsMetacarpal_mCE1D2618F91173E18ACEAAC758D247607CEFE3F0(L_6, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10552));
		V_1 = L_7;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10546));
		bool L_8 = V_1;
		if (!L_8)
		{
			goto IL_004a;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10547));
		// rawRotation = rightFlipAngle * rawRotation;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10548));
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A_il2cpp_TypeInfo_var);
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_9 = ((SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A_StaticFields*)il2cpp_codegen_static_fields_for(SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A_il2cpp_TypeInfo_var))->get_rightFlipAngle_37();
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_10 = ___rawRotation1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10553));
		IL2CPP_RUNTIME_CLASS_INIT(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357_il2cpp_TypeInfo_var);
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_11 = Quaternion_op_Multiply_mDB9F738AA8160E3D85549F4FEDA23BC658B5A790(L_9, L_10, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10553));
		___rawRotation1 = L_11;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10549));
	}

IL_004a:
	{
		// return rawRotation;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10550));
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_12 = ___rawRotation1;
		V_2 = L_12;
		goto IL_004e;
	}

IL_004e:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10551));
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_13 = V_2;
		return L_13;
	}
}
// System.Void Valve.VR.SteamVR_Behaviour_Skeleton::UpdatePose()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_Skeleton_UpdatePose_m12A5825F692EB2C33CEE63E994F23AB27D42383F (SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Skeleton_UpdatePose_m12A5825F692EB2C33CEE63E994F23AB27D42383F_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_0;
	memset((&V_0), 0, sizeof(V_0));
	Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  V_1;
	memset((&V_1), 0, sizeof(V_1));
	bool V_2 = false;
	bool V_3 = false;
	bool V_4 = false;
	bool V_5 = false;
	bool V_6 = false;
	bool V_7 = false;
	bool V_8 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0), (&V_1));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Behaviour_Skeleton_UpdatePose_m12A5825F692EB2C33CEE63E994F23AB27D42383F_RuntimeMethod_var, methodExecutionContextThis, NULL, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10554));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 10555));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10556));
		// if (skeletonAction == null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10557));
		SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * L_0 = __this->get_skeletonAction_4();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10592));
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734_il2cpp_TypeInfo_var);
		bool L_1 = SteamVR_Action_op_Equality_m16F1109154021CF7DC424B937A8AA5FC34463EE2(L_0, (SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10592));
		V_2 = L_1;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10558));
		bool L_2 = V_2;
		if (!L_2)
		{
			goto IL_0016;
		}
	}
	{
		// return;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10559));
		goto IL_0138;
	}

IL_0016:
	{
		// Vector3 skeletonPosition = skeletonAction.GetLocalPosition();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10560));
		SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * L_3 = __this->get_skeletonAction_4();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10593));
		NullCheck(L_3);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_4 = SteamVR_Action_Skeleton_GetLocalPosition_mB9C362EEA9A30E590A62D20B986A94C98AA1FAD5(L_3, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10593));
		V_0 = L_4;
		// Quaternion skeletonRotation = skeletonAction.GetLocalRotation();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10561));
		SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * L_5 = __this->get_skeletonAction_4();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10594));
		NullCheck(L_5);
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_6 = SteamVR_Action_Skeleton_GetLocalRotation_m917F58C641A69D3E71DC1F48AF8B2EE2A8C143D2(L_5, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10594));
		V_1 = L_6;
		// if (origin == null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10562));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_7 = __this->get_origin_8();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10595));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_8 = Object_op_Equality_mBC2401774F3BE33E8CF6F0A8148E66C95D6CFF1C(L_7, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10595));
		V_3 = L_8;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10563));
		bool L_9 = V_3;
		if (!L_9)
		{
			goto IL_0084;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10564));
		// if (this.transform.parent != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10565));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10596));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_10 = Component_get_transform_m00F05BD782F920C301A7EBA480F3B7A904C07EC9(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10596));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10597));
		NullCheck(L_10);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_11 = Transform_get_parent_m8FA24E38A1FA29D90CBF3CDC9F9F017C65BB3403(L_10, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10597));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10598));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_12 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_11, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10598));
		V_4 = L_12;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10566));
		bool L_13 = V_4;
		if (!L_13)
		{
			goto IL_0081;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10567));
		// skeletonPosition = this.transform.parent.TransformPoint(skeletonPosition);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10568));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10599));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_14 = Component_get_transform_m00F05BD782F920C301A7EBA480F3B7A904C07EC9(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10599));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10600));
		NullCheck(L_14);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_15 = Transform_get_parent_m8FA24E38A1FA29D90CBF3CDC9F9F017C65BB3403(L_14, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10600));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_16 = V_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10601));
		NullCheck(L_15);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_17 = Transform_TransformPoint_mA96DC2A20EE7F4F915F7509863A18D99F5DD76CB(L_15, L_16, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10601));
		V_0 = L_17;
		// skeletonRotation = this.transform.parent.rotation * skeletonRotation;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10569));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10602));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_18 = Component_get_transform_m00F05BD782F920C301A7EBA480F3B7A904C07EC9(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10602));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10603));
		NullCheck(L_18);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_19 = Transform_get_parent_m8FA24E38A1FA29D90CBF3CDC9F9F017C65BB3403(L_18, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10603));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10604));
		NullCheck(L_19);
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_20 = Transform_get_rotation_m3AB90A67403249AECCA5E02BC70FCE8C90FE9FB9(L_19, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10604));
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_21 = V_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10605));
		IL2CPP_RUNTIME_CLASS_INIT(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357_il2cpp_TypeInfo_var);
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_22 = Quaternion_op_Multiply_mDB9F738AA8160E3D85549F4FEDA23BC658B5A790(L_20, L_21, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10605));
		V_1 = L_22;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10570));
	}

IL_0081:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10571));
		goto IL_00a5;
	}

IL_0084:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10572));
		// skeletonPosition = origin.TransformPoint(skeletonPosition);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10573));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_23 = __this->get_origin_8();
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_24 = V_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10606));
		NullCheck(L_23);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_25 = Transform_TransformPoint_mA96DC2A20EE7F4F915F7509863A18D99F5DD76CB(L_23, L_24, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10606));
		V_0 = L_25;
		// skeletonRotation = origin.rotation * skeletonRotation;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10574));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_26 = __this->get_origin_8();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10607));
		NullCheck(L_26);
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_27 = Transform_get_rotation_m3AB90A67403249AECCA5E02BC70FCE8C90FE9FB9(L_26, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10607));
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_28 = V_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10608));
		IL2CPP_RUNTIME_CLASS_INIT(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357_il2cpp_TypeInfo_var);
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_29 = Quaternion_op_Multiply_mDB9F738AA8160E3D85549F4FEDA23BC658B5A790(L_27, L_28, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10608));
		V_1 = L_29;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10575));
	}

IL_00a5:
	{
		// if (skeletonAction.poseChanged)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10576));
		SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * L_30 = __this->get_skeletonAction_4();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10609));
		NullCheck(L_30);
		bool L_31 = SteamVR_Action_Skeleton_get_poseChanged_m248D619571236D9D7833B76A03BA70B033516FFA(L_30, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10609));
		V_5 = L_31;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10577));
		bool L_32 = V_5;
		if (!L_32)
		{
			goto IL_00fc;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10578));
		// if (onTransformChanged != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10579));
		SteamVR_Behaviour_SkeletonEvent_t2A4AAE28B8BB6F5E52B7A7FAF6ADF1F3DE537627 * L_33 = __this->get_onTransformChanged_14();
		V_6 = (bool)((!(((RuntimeObject*)(SteamVR_Behaviour_SkeletonEvent_t2A4AAE28B8BB6F5E52B7A7FAF6ADF1F3DE537627 *)L_33) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10580));
		bool L_34 = V_6;
		if (!L_34)
		{
			goto IL_00d9;
		}
	}
	{
		// onTransformChanged.Invoke(this, inputSource);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10581));
		SteamVR_Behaviour_SkeletonEvent_t2A4AAE28B8BB6F5E52B7A7FAF6ADF1F3DE537627 * L_35 = __this->get_onTransformChanged_14();
		int32_t L_36 = __this->get_inputSource_5();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10610));
		NullCheck(L_35);
		UnityEvent_2_Invoke_mA149632942D05C483CA654D6D8355DB4EA1ED032(L_35, __this, L_36, /*hidden argument*/UnityEvent_2_Invoke_mA149632942D05C483CA654D6D8355DB4EA1ED032_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10610));
	}

IL_00d9:
	{
		// if (onTransformChangedEvent != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10582));
		ChangeHandler_tB89A36613D65385655B73DBDA42D2F08868FD67F * L_37 = __this->get_onTransformChangedEvent_19();
		V_7 = (bool)((!(((RuntimeObject*)(ChangeHandler_tB89A36613D65385655B73DBDA42D2F08868FD67F *)L_37) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10583));
		bool L_38 = V_7;
		if (!L_38)
		{
			goto IL_00fb;
		}
	}
	{
		// onTransformChangedEvent.Invoke(this, inputSource);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10584));
		ChangeHandler_tB89A36613D65385655B73DBDA42D2F08868FD67F * L_39 = __this->get_onTransformChangedEvent_19();
		int32_t L_40 = __this->get_inputSource_5();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10611));
		NullCheck(L_39);
		ChangeHandler_Invoke_mBE36CDFEB7A200641B44807449FCECD8AF874176(L_39, __this, L_40, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10611));
	}

IL_00fb:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10585));
	}

IL_00fc:
	{
		// this.transform.position = skeletonPosition;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10586));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10612));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_41 = Component_get_transform_m00F05BD782F920C301A7EBA480F3B7A904C07EC9(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10612));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_42 = V_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10613));
		NullCheck(L_41);
		Transform_set_position_mDA89E4893F14ECA5CBEEE7FB80A5BF7C1B8EA6DC(L_41, L_42, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10613));
		// this.transform.rotation = skeletonRotation;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10587));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10614));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_43 = Component_get_transform_m00F05BD782F920C301A7EBA480F3B7A904C07EC9(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10614));
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_44 = V_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10615));
		NullCheck(L_43);
		Transform_set_rotation_m429694E264117C6DC682EC6AF45C7864E5155935(L_43, L_44, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10615));
		// if (onTransformUpdated != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10588));
		SteamVR_Behaviour_SkeletonEvent_t2A4AAE28B8BB6F5E52B7A7FAF6ADF1F3DE537627 * L_45 = __this->get_onTransformUpdated_13();
		V_8 = (bool)((!(((RuntimeObject*)(SteamVR_Behaviour_SkeletonEvent_t2A4AAE28B8BB6F5E52B7A7FAF6ADF1F3DE537627 *)L_45) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10589));
		bool L_46 = V_8;
		if (!L_46)
		{
			goto IL_0138;
		}
	}
	{
		// onTransformUpdated.Invoke(this, inputSource);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10590));
		SteamVR_Behaviour_SkeletonEvent_t2A4AAE28B8BB6F5E52B7A7FAF6ADF1F3DE537627 * L_47 = __this->get_onTransformUpdated_13();
		int32_t L_48 = __this->get_inputSource_5();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10616));
		NullCheck(L_47);
		UnityEvent_2_Invoke_mA149632942D05C483CA654D6D8355DB4EA1ED032(L_47, __this, L_48, /*hidden argument*/UnityEvent_2_Invoke_mA149632942D05C483CA654D6D8355DB4EA1ED032_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10616));
	}

IL_0138:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10591));
		return;
	}
}
// System.Void Valve.VR.SteamVR_Behaviour_Skeleton::ForceToReferencePose(Valve.VR.EVRSkeletalReferencePose)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_Skeleton_ForceToReferencePose_m7BC9ED8113B723A8C89BDB04983982F175708345 (SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A * __this, int32_t ___referencePose0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Skeleton_ForceToReferencePose_m7BC9ED8113B723A8C89BDB04983982F175708345_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	RigidTransformU5BU5D_tC98EB3576009E5D825D0D43671A65D32A2449ECC* V_1 = NULL;
	bool V_2 = false;
	bool V_3 = false;
	bool V_4 = false;
	bool V_5 = false;
	int32_t V_6 = 0;
	bool V_7 = false;
	int32_t V_8 = 0;
	bool V_9 = false;
	bool V_10 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___referencePose0));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0), (&V_1), (&V_6), (&V_8));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Behaviour_Skeleton_ForceToReferencePose_m7BC9ED8113B723A8C89BDB04983982F175708345_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10617));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 10618));
	int32_t G_B3_0 = 0;
	int32_t G_B10_0 = 0;
	int32_t G_B15_0 = 0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10619));
		// bool temporarySession = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10620));
		V_0 = (bool)0;
		// if (Application.isEditor && Application.isPlaying == false)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10621));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10669));
		bool L_0 = Application_get_isEditor_m347E6EE16E5109EF613C83ED98DB1EC6E3EF5E26(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10669));
		if (!L_0)
		{
			goto IL_0014;
		}
	}
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10670));
		bool L_1 = Application_get_isPlaying_mF43B519662E7433DD90D883E5AE22EC3CFB65CA5(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10670));
		G_B3_0 = ((((int32_t)L_1) == ((int32_t)0))? 1 : 0);
		goto IL_0015;
	}

IL_0014:
	{
		G_B3_0 = 0;
	}

IL_0015:
	{
		V_2 = (bool)G_B3_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10622));
		bool L_2 = V_2;
		if (!L_2)
		{
			goto IL_0050;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10623));
		// temporarySession = SteamVR.InitializeTemporarySession(true);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10624));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10671));
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_tE14648C0E73A16927B96F72915B425561B0D057F_il2cpp_TypeInfo_var);
		bool L_3 = SteamVR_InitializeTemporarySession_m818DDDB2FEA8F2196C51DF54AC83CACE0191FE30((bool)1, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10671));
		V_0 = L_3;
		// Awake();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10625));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10672));
		VirtActionInvoker0::Invoke(4 /* System.Void Valve.VR.SteamVR_Behaviour_Skeleton::Awake() */, __this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10672));
		// skeletonAction.actionSet.Activate();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10626));
		SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * L_4 = __this->get_skeletonAction_4();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10673));
		NullCheck(L_4);
		SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * L_5 = VirtFuncInvoker0< SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * >::Invoke(19 /* Valve.VR.SteamVR_ActionSet Valve.VR.SteamVR_Action::get_actionSet() */, L_4);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10673));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10674));
		NullCheck(L_5);
		SteamVR_ActionSet_Activate_m675A0B29BB6BBB783FEB8F1F1086037F16420509(L_5, 0, 0, (bool)0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10674));
		// SteamVR_ActionSet_Manager.UpdateActionStates(true);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10627));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10675));
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_ActionSet_Manager_t52D7B7C8EA8A71B9AB6EB15002686B1F3C40B7DB_il2cpp_TypeInfo_var);
		SteamVR_ActionSet_Manager_UpdateActionStates_m6F0D76FF654C97F1700EBBB1D6E00A7FEBE426AF((bool)1, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10675));
		// skeletonAction.UpdateValueWithoutEvents();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10628));
		SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * L_6 = __this->get_skeletonAction_4();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10676));
		NullCheck(L_6);
		SteamVR_Action_Skeleton_UpdateValueWithoutEvents_mDEFBA29DA9DD73B2577B692E21B71CAE9650735C(L_6, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10676));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10629));
	}

IL_0050:
	{
		// if (skeletonAction.active == false)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10630));
		SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * L_7 = __this->get_skeletonAction_4();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10677));
		NullCheck(L_7);
		bool L_8 = VirtFuncInvoker0< bool >::Invoke(21 /* System.Boolean Valve.VR.SteamVR_Action::get_active() */, L_7);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10677));
		V_3 = (bool)((((int32_t)L_8) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10631));
		bool L_9 = V_3;
		if (!L_9)
		{
			goto IL_008f;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10632));
		// Debug.LogError("<b>[SteamVR Input]</b> Please turn on your " + inputSource.ToString() + " controller and ensure SteamVR is open.", this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10633));
		int32_t* L_10 = __this->get_address_of_inputSource_5();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10678));
		RuntimeObject * L_11 = Box(SteamVR_Input_Sources_tCE41AA589FB3B9516BDE0DFABDCB4AAEA29528F7_il2cpp_TypeInfo_var, L_10);
		NullCheck(L_11);
		String_t* L_12 = VirtFuncInvoker0< String_t* >::Invoke(3 /* System.String System.Object::ToString() */, L_11);
		*L_10 = *(int32_t*)UnBox(L_11);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10678));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10679));
		String_t* L_13 = String_Concat_mF4626905368D6558695A823466A1AF65EADB9923(_stringLiteral10F48A333A65006B04813F9005BE901966239428, L_12, _stringLiteralE1618CDFD1BD995E3B0B980123E8C0041512616B, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10679));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10680));
		IL2CPP_RUNTIME_CLASS_INIT(Debug_t7B5FCB117E2FD63B6838BC52821B252E2BFB61C4_il2cpp_TypeInfo_var);
		Debug_LogError_m97139CB2EE76D5CD8308C1AD0499A5F163FC7F51(L_13, __this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10680));
		// return;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10634));
		goto IL_01b7;
	}

IL_008f:
	{
		// SteamVR_Utils.RigidTransform[] transforms = skeletonAction.GetReferenceTransforms(EVRSkeletalTransformSpace.Parent, referencePose);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10635));
		SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * L_14 = __this->get_skeletonAction_4();
		int32_t L_15 = ___referencePose0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10681));
		NullCheck(L_14);
		RigidTransformU5BU5D_tC98EB3576009E5D825D0D43671A65D32A2449ECC* L_16 = SteamVR_Action_Skeleton_GetReferenceTransforms_m003738CB3D282D68A3B67970CDF7F508117FD296(L_14, 1, L_15, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10681));
		V_1 = L_16;
		// if (transforms == null || transforms.Length == 0)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10636));
		RigidTransformU5BU5D_tC98EB3576009E5D825D0D43671A65D32A2449ECC* L_17 = V_1;
		if (!L_17)
		{
			goto IL_00a7;
		}
	}
	{
		RigidTransformU5BU5D_tC98EB3576009E5D825D0D43671A65D32A2449ECC* L_18 = V_1;
		NullCheck(L_18);
		G_B10_0 = ((((int32_t)(((RuntimeArray*)L_18)->max_length)) == ((int32_t)0))? 1 : 0);
		goto IL_00a8;
	}

IL_00a7:
	{
		G_B10_0 = 1;
	}

IL_00a8:
	{
		V_4 = (bool)G_B10_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10637));
		bool L_19 = V_4;
		if (!L_19)
		{
			goto IL_00d7;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10638));
		// Debug.LogError("<b>[SteamVR Input]</b> Unable to get the reference transform for " + inputSource.ToString() + ". Please make sure SteamVR is open and both controllers are connected.", this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10639));
		int32_t* L_20 = __this->get_address_of_inputSource_5();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10682));
		RuntimeObject * L_21 = Box(SteamVR_Input_Sources_tCE41AA589FB3B9516BDE0DFABDCB4AAEA29528F7_il2cpp_TypeInfo_var, L_20);
		NullCheck(L_21);
		String_t* L_22 = VirtFuncInvoker0< String_t* >::Invoke(3 /* System.String System.Object::ToString() */, L_21);
		*L_20 = *(int32_t*)UnBox(L_21);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10682));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10683));
		String_t* L_23 = String_Concat_mF4626905368D6558695A823466A1AF65EADB9923(_stringLiteralE2A944A620EA883F0C78E73BC291E675AFC7B603, L_22, _stringLiteralB91DDC2EFB03413C08CDC78EFC577F9BF1680A14, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10683));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10684));
		IL2CPP_RUNTIME_CLASS_INIT(Debug_t7B5FCB117E2FD63B6838BC52821B252E2BFB61C4_il2cpp_TypeInfo_var);
		Debug_LogError_m97139CB2EE76D5CD8308C1AD0499A5F163FC7F51(L_23, __this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10684));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10640));
	}

IL_00d7:
	{
		// if (mirroring == MirrorType.LeftToRight || mirroring == MirrorType.RightToLeft)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10641));
		int32_t L_24 = __this->get_mirroring_22();
		if ((((int32_t)L_24) == ((int32_t)1)))
		{
			goto IL_00eb;
		}
	}
	{
		int32_t L_25 = __this->get_mirroring_22();
		G_B15_0 = ((((int32_t)L_25) == ((int32_t)2))? 1 : 0);
		goto IL_00ec;
	}

IL_00eb:
	{
		G_B15_0 = 1;
	}

IL_00ec:
	{
		V_5 = (bool)G_B15_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10642));
		bool L_26 = V_5;
		if (!L_26)
		{
			goto IL_0156;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10643));
		// for (int boneIndex = 0; boneIndex < transforms.Length; boneIndex++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10644));
		V_6 = 0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10645));
		goto IL_0146;
	}

IL_00f8:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10646));
		// bones[boneIndex].localPosition = MirrorPosition(boneIndex, transforms[boneIndex].pos);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10647));
		TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804* L_27 = __this->get_bones_35();
		int32_t L_28 = V_6;
		NullCheck(L_27);
		int32_t L_29 = L_28;
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_30 = (L_27)->GetAt(static_cast<il2cpp_array_size_t>(L_29));
		int32_t L_31 = V_6;
		RigidTransformU5BU5D_tC98EB3576009E5D825D0D43671A65D32A2449ECC* L_32 = V_1;
		int32_t L_33 = V_6;
		NullCheck(L_32);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_34 = ((L_32)->GetAddressAt(static_cast<il2cpp_array_size_t>(L_33)))->get_pos_0();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10685));
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A_il2cpp_TypeInfo_var);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_35 = SteamVR_Behaviour_Skeleton_MirrorPosition_mB9224FC4CCE63FEC7C3884B98E2D6109DE157016(L_31, L_34, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10685));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10686));
		NullCheck(L_30);
		Transform_set_localPosition_m275F5550DD939F83AFEB5E8D681131172E2E1728(L_30, L_35, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10686));
		// bones[boneIndex].localRotation = MirrorRotation(boneIndex, transforms[boneIndex].rot);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10648));
		TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804* L_36 = __this->get_bones_35();
		int32_t L_37 = V_6;
		NullCheck(L_36);
		int32_t L_38 = L_37;
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_39 = (L_36)->GetAt(static_cast<il2cpp_array_size_t>(L_38));
		int32_t L_40 = V_6;
		RigidTransformU5BU5D_tC98EB3576009E5D825D0D43671A65D32A2449ECC* L_41 = V_1;
		int32_t L_42 = V_6;
		NullCheck(L_41);
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_43 = ((L_41)->GetAddressAt(static_cast<il2cpp_array_size_t>(L_42)))->get_rot_1();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10687));
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_44 = SteamVR_Behaviour_Skeleton_MirrorRotation_m942A7A6E456AD7426D166B074280E0B01E5799C8(L_40, L_43, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10687));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10688));
		NullCheck(L_39);
		Transform_set_localRotation_mE2BECB0954FFC1D93FB631600D9A9BEFF41D9C8A(L_39, L_44, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10688));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10649));
		// for (int boneIndex = 0; boneIndex < transforms.Length; boneIndex++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10650));
		int32_t L_45 = V_6;
		V_6 = ((int32_t)il2cpp_codegen_add((int32_t)L_45, (int32_t)1));
	}

IL_0146:
	{
		// for (int boneIndex = 0; boneIndex < transforms.Length; boneIndex++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10651));
		int32_t L_46 = V_6;
		RigidTransformU5BU5D_tC98EB3576009E5D825D0D43671A65D32A2449ECC* L_47 = V_1;
		NullCheck(L_47);
		V_7 = (bool)((((int32_t)L_46) < ((int32_t)(((int32_t)((int32_t)(((RuntimeArray*)L_47)->max_length))))))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10652));
		bool L_48 = V_7;
		if (L_48)
		{
			goto IL_00f8;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10653));
		goto IL_01aa;
	}

IL_0156:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10654));
		// for (int boneIndex = 0; boneIndex < transforms.Length; boneIndex++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10655));
		V_8 = 0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10656));
		goto IL_019c;
	}

IL_015c:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10657));
		// bones[boneIndex].localPosition = transforms[boneIndex].pos;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10658));
		TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804* L_49 = __this->get_bones_35();
		int32_t L_50 = V_8;
		NullCheck(L_49);
		int32_t L_51 = L_50;
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_52 = (L_49)->GetAt(static_cast<il2cpp_array_size_t>(L_51));
		RigidTransformU5BU5D_tC98EB3576009E5D825D0D43671A65D32A2449ECC* L_53 = V_1;
		int32_t L_54 = V_8;
		NullCheck(L_53);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_55 = ((L_53)->GetAddressAt(static_cast<il2cpp_array_size_t>(L_54)))->get_pos_0();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10689));
		NullCheck(L_52);
		Transform_set_localPosition_m275F5550DD939F83AFEB5E8D681131172E2E1728(L_52, L_55, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10689));
		// bones[boneIndex].localRotation = transforms[boneIndex].rot;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10659));
		TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804* L_56 = __this->get_bones_35();
		int32_t L_57 = V_8;
		NullCheck(L_56);
		int32_t L_58 = L_57;
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_59 = (L_56)->GetAt(static_cast<il2cpp_array_size_t>(L_58));
		RigidTransformU5BU5D_tC98EB3576009E5D825D0D43671A65D32A2449ECC* L_60 = V_1;
		int32_t L_61 = V_8;
		NullCheck(L_60);
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_62 = ((L_60)->GetAddressAt(static_cast<il2cpp_array_size_t>(L_61)))->get_rot_1();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10690));
		NullCheck(L_59);
		Transform_set_localRotation_mE2BECB0954FFC1D93FB631600D9A9BEFF41D9C8A(L_59, L_62, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10690));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10660));
		// for (int boneIndex = 0; boneIndex < transforms.Length; boneIndex++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10661));
		int32_t L_63 = V_8;
		V_8 = ((int32_t)il2cpp_codegen_add((int32_t)L_63, (int32_t)1));
	}

IL_019c:
	{
		// for (int boneIndex = 0; boneIndex < transforms.Length; boneIndex++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10662));
		int32_t L_64 = V_8;
		RigidTransformU5BU5D_tC98EB3576009E5D825D0D43671A65D32A2449ECC* L_65 = V_1;
		NullCheck(L_65);
		V_9 = (bool)((((int32_t)L_64) < ((int32_t)(((int32_t)((int32_t)(((RuntimeArray*)L_65)->max_length))))))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10663));
		bool L_66 = V_9;
		if (L_66)
		{
			goto IL_015c;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10664));
	}

IL_01aa:
	{
		// if (temporarySession)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10665));
		bool L_67 = V_0;
		V_10 = L_67;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10666));
		bool L_68 = V_10;
		if (!L_68)
		{
			goto IL_01b7;
		}
	}
	{
		// SteamVR.ExitTemporarySession();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10667));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10691));
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_tE14648C0E73A16927B96F72915B425561B0D057F_il2cpp_TypeInfo_var);
		SteamVR_ExitTemporarySession_mE459ACE55EF1DA53089F0A28A653A1DD7770EBC1(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10691));
	}

IL_01b7:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10668));
		return;
	}
}
// System.Boolean Valve.VR.SteamVR_Behaviour_Skeleton::IsMetacarpal(System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Behaviour_Skeleton_IsMetacarpal_mCE1D2618F91173E18ACEAAC758D247607CEFE3F0 (int32_t ___boneIndex0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Skeleton_IsMetacarpal_mCE1D2618F91173E18ACEAAC758D247607CEFE3F0_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___boneIndex0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Behaviour_Skeleton_IsMetacarpal_mCE1D2618F91173E18ACEAAC758D247607CEFE3F0_RuntimeMethod_var, NULL, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10692));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 10693));
	int32_t G_B6_0 = 0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10694));
		// return (boneIndex == SteamVR_Skeleton_JointIndexes.indexMetacarpal ||
		//     boneIndex == SteamVR_Skeleton_JointIndexes.middleMetacarpal ||
		//     boneIndex == SteamVR_Skeleton_JointIndexes.ringMetacarpal ||
		//     boneIndex == SteamVR_Skeleton_JointIndexes.pinkyMetacarpal ||
		//     boneIndex == SteamVR_Skeleton_JointIndexes.thumbMetacarpal);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10695));
		int32_t L_0 = ___boneIndex0;
		if ((((int32_t)L_0) == ((int32_t)6)))
		{
			goto IL_001a;
		}
	}
	{
		int32_t L_1 = ___boneIndex0;
		if ((((int32_t)L_1) == ((int32_t)((int32_t)11))))
		{
			goto IL_001a;
		}
	}
	{
		int32_t L_2 = ___boneIndex0;
		if ((((int32_t)L_2) == ((int32_t)((int32_t)16))))
		{
			goto IL_001a;
		}
	}
	{
		int32_t L_3 = ___boneIndex0;
		if ((((int32_t)L_3) == ((int32_t)((int32_t)21))))
		{
			goto IL_001a;
		}
	}
	{
		int32_t L_4 = ___boneIndex0;
		G_B6_0 = ((((int32_t)L_4) == ((int32_t)2))? 1 : 0);
		goto IL_001b;
	}

IL_001a:
	{
		G_B6_0 = 1;
	}

IL_001b:
	{
		V_0 = (bool)G_B6_0;
		goto IL_001e;
	}

IL_001e:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10696));
		bool L_5 = V_0;
		return L_5;
	}
}
// System.Void Valve.VR.SteamVR_Behaviour_Skeleton::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_Skeleton__ctor_m17A8835FCCADE3C113890BE1BCA5C9F2B3EA9E85 (SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Skeleton__ctor_m17A8835FCCADE3C113890BE1BCA5C9F2B3EA9E85_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Behaviour_Skeleton__ctor_m17A8835FCCADE3C113890BE1BCA5C9F2B3EA9E85_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10697));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 10698));
	{
		// public EVRSkeletalMotionRange rangeOfMotion = EVRSkeletalMotionRange.WithoutController;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10699));
		__this->set_rangeOfMotion_6(1);
		// public bool updatePose = true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10700));
		__this->set_updatePose_9((bool)1);
		// public bool onlySetRotations = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10701));
		__this->set_onlySetRotations_10((bool)0);
		// public float skeletonBlend = 1f;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10702));
		__this->set_skeletonBlend_11((1.0f));
		// protected SteamVR_Skeleton_PoseSnapshot blendSnapshot = null;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10703));
		__this->set_blendSnapshot_26((SteamVR_Skeleton_PoseSnapshot_t0E1C4250EA9F357DFC204D8E5D9C2111593C3E18 *)NULL);
		// protected EVRSkeletalMotionRange? temporaryRangeOfMotion = null;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10704));
		Nullable_1_t1A7B9FD0D5A1C2016BC211A63A5BB64D3B4E70DD * L_0 = __this->get_address_of_temporaryRangeOfMotion_36();
		il2cpp_codegen_initobj(L_0, sizeof(Nullable_1_t1A7B9FD0D5A1C2016BC211A63A5BB64D3B4E70DD ));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10705));
		MonoBehaviour__ctor_mEAEC84B222C60319D593E456D769B3311DFCEF97(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10705));
		return;
	}
}
// System.Void Valve.VR.SteamVR_Behaviour_Skeleton::.cctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_Skeleton__cctor_m06F36667084711207F0F24732006D1E982190A96 (const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Skeleton__cctor_m06F36667084711207F0F24732006D1E982190A96_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Behaviour_Skeleton__cctor_m06F36667084711207F0F24732006D1E982190A96_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10706));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 10707));
	{
		// protected static readonly Quaternion rightFlipAngle = Quaternion.AngleAxis(180, Vector3.right);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10708));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10709));
		IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_0 = Vector3_get_right_m6DD9559CA0C75BBA42D9140021C4C2A9AAA9B3F5(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10709));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10710));
		IL2CPP_RUNTIME_CLASS_INIT(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357_il2cpp_TypeInfo_var);
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_1 = Quaternion_AngleAxis_m07DACF59F0403451DABB9BC991C53EE3301E88B0((180.0f), L_0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10710));
		((SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A_StaticFields*)il2cpp_codegen_static_fields_for(SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A_il2cpp_TypeInfo_var))->set_rightFlipAngle_37(L_1);
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Valve.VR.SteamVR_Behaviour_Skeleton_<DoBlendRoutine>d__152::.ctor(System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void U3CDoBlendRoutineU3Ed__152__ctor_m3CFC1BF114C96CFC002A0C92C1B2794F788B107E (U3CDoBlendRoutineU3Ed__152_tFF832A9C1A3DA477A5CB7789B762723F29BB50D6 * __this, int32_t ___U3CU3E1__state0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (U3CDoBlendRoutineU3Ed__152__ctor_m3CFC1BF114C96CFC002A0C92C1B2794F788B107E_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, U3CDoBlendRoutineU3Ed__152__ctor_m3CFC1BF114C96CFC002A0C92C1B2794F788B107E_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		Object__ctor_m925ECA5E85CA100E3FB86A4F9E15C120E9A184C0(__this, /*hidden argument*/NULL);
		int32_t L_0 = ___U3CU3E1__state0;
		__this->set_U3CU3E1__state_0(L_0);
		return;
	}
}
// System.Void Valve.VR.SteamVR_Behaviour_Skeleton_<DoBlendRoutine>d__152::System.IDisposable.Dispose()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void U3CDoBlendRoutineU3Ed__152_System_IDisposable_Dispose_mFC418AB1129C1187992B615A3194F61B2AB680C9 (U3CDoBlendRoutineU3Ed__152_tFF832A9C1A3DA477A5CB7789B762723F29BB50D6 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (U3CDoBlendRoutineU3Ed__152_System_IDisposable_Dispose_mFC418AB1129C1187992B615A3194F61B2AB680C9_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, U3CDoBlendRoutineU3Ed__152_System_IDisposable_Dispose_mFC418AB1129C1187992B615A3194F61B2AB680C9_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		return;
	}
}
// System.Boolean Valve.VR.SteamVR_Behaviour_Skeleton_<DoBlendRoutine>d__152::MoveNext()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool U3CDoBlendRoutineU3Ed__152_MoveNext_m951C2CEF7277AB9A570F8893DAC0463C9CD0C3F1 (U3CDoBlendRoutineU3Ed__152_tFF832A9C1A3DA477A5CB7789B762723F29BB50D6 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (U3CDoBlendRoutineU3Ed__152_MoveNext_m951C2CEF7277AB9A570F8893DAC0463C9CD0C3F1_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	int32_t V_0 = 0;
	bool V_1 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, U3CDoBlendRoutineU3Ed__152_MoveNext_m951C2CEF7277AB9A570F8893DAC0463C9CD0C3F1_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10711));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 10712));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10713));
		int32_t L_0 = __this->get_U3CU3E1__state_0();
		V_0 = L_0;
		int32_t L_1 = V_0;
		if (!L_1)
		{
			goto IL_0012;
		}
	}
	{
		goto IL_000c;
	}

IL_000c:
	{
		int32_t L_2 = V_0;
		if ((((int32_t)L_2) == ((int32_t)1)))
		{
			goto IL_0014;
		}
	}
	{
		goto IL_0016;
	}

IL_0012:
	{
		goto IL_0018;
	}

IL_0014:
	{
		goto IL_0062;
	}

IL_0016:
	{
		return (bool)0;
	}

IL_0018:
	{
		__this->set_U3CU3E1__state_0((-1));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10714));
		// float startTime = Time.time;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10715));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10729));
		float L_3 = Time_get_time_m7863349C8845BBA36629A2B3F8EF1C3BEA350FD8(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10729));
		__this->set_U3CstartTimeU3E5__1_5(L_3);
		// float endTime = startTime + overTime;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10716));
		float L_4 = __this->get_U3CstartTimeU3E5__1_5();
		float L_5 = __this->get_overTime_3();
		__this->set_U3CendTimeU3E5__2_6(((float)il2cpp_codegen_add((float)L_4, (float)L_5)));
		// float startAmount = skeletonBlend;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10717));
		SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A * L_6 = __this->get_U3CU3E4__this_4();
		NullCheck(L_6);
		float L_7 = L_6->get_skeletonBlend_11();
		__this->set_U3CstartAmountU3E5__3_7(L_7);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10718));
		goto IL_0099;
	}

IL_0051:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10719));
		// yield return null;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10720));
		__this->set_U3CU3E2__current_1(NULL);
		__this->set_U3CU3E1__state_0(1);
		return (bool)1;
	}

IL_0062:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10721));
		__this->set_U3CU3E1__state_0((-1));
		// skeletonBlend = Mathf.Lerp(startAmount, blendToAmount, (Time.time - startTime) / overTime);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10722));
		SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A * L_8 = __this->get_U3CU3E4__this_4();
		float L_9 = __this->get_U3CstartAmountU3E5__3_7();
		float L_10 = __this->get_blendToAmount_2();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10730));
		float L_11 = Time_get_time_m7863349C8845BBA36629A2B3F8EF1C3BEA350FD8(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10730));
		float L_12 = __this->get_U3CstartTimeU3E5__1_5();
		float L_13 = __this->get_overTime_3();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10731));
		IL2CPP_RUNTIME_CLASS_INIT(Mathf_tFBDE6467D269BFE410605C7D806FD9991D4A89CB_il2cpp_TypeInfo_var);
		float L_14 = Mathf_Lerp_m9A74C5A0C37D0CDF45EE66E7774D12A9B93B1364(L_9, L_10, ((float)((float)((float)il2cpp_codegen_subtract((float)L_11, (float)L_12))/(float)L_13)), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10731));
		NullCheck(L_8);
		L_8->set_skeletonBlend_11(L_14);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10723));
	}

IL_0099:
	{
		// while (Time.time < endTime)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10724));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10732));
		float L_15 = Time_get_time_m7863349C8845BBA36629A2B3F8EF1C3BEA350FD8(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10732));
		float L_16 = __this->get_U3CendTimeU3E5__2_6();
		V_1 = (bool)((((float)L_15) < ((float)L_16))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10725));
		bool L_17 = V_1;
		if (L_17)
		{
			goto IL_0051;
		}
	}
	{
		// skeletonBlend = blendToAmount;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10726));
		SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A * L_18 = __this->get_U3CU3E4__this_4();
		float L_19 = __this->get_blendToAmount_2();
		NullCheck(L_18);
		L_18->set_skeletonBlend_11(L_19);
		// blendRoutine = null;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10727));
		SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A * L_20 = __this->get_U3CU3E4__this_4();
		NullCheck(L_20);
		L_20->set_blendRoutine_32((Coroutine_tAE7DB2FC70A0AE6477F896F852057CB0754F06EC *)NULL);
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10728));
		return (bool)0;
	}
}
// System.Object Valve.VR.SteamVR_Behaviour_Skeleton_<DoBlendRoutine>d__152::System.Collections.Generic.IEnumerator<System.Object>.get_Current()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject * U3CDoBlendRoutineU3Ed__152_System_Collections_Generic_IEnumeratorU3CSystem_ObjectU3E_get_Current_m1D860E4DA9A7FD6B2EF15EBAF4B90D5F136858BA (U3CDoBlendRoutineU3Ed__152_tFF832A9C1A3DA477A5CB7789B762723F29BB50D6 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (U3CDoBlendRoutineU3Ed__152_System_Collections_Generic_IEnumeratorU3CSystem_ObjectU3E_get_Current_m1D860E4DA9A7FD6B2EF15EBAF4B90D5F136858BA_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, U3CDoBlendRoutineU3Ed__152_System_Collections_Generic_IEnumeratorU3CSystem_ObjectU3E_get_Current_m1D860E4DA9A7FD6B2EF15EBAF4B90D5F136858BA_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		RuntimeObject * L_0 = __this->get_U3CU3E2__current_1();
		return L_0;
	}
}
// System.Void Valve.VR.SteamVR_Behaviour_Skeleton_<DoBlendRoutine>d__152::System.Collections.IEnumerator.Reset()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void U3CDoBlendRoutineU3Ed__152_System_Collections_IEnumerator_Reset_m501E6355475FA4D9806B15ACCCE37D1A06EAC4FE (U3CDoBlendRoutineU3Ed__152_tFF832A9C1A3DA477A5CB7789B762723F29BB50D6 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (U3CDoBlendRoutineU3Ed__152_System_Collections_IEnumerator_Reset_m501E6355475FA4D9806B15ACCCE37D1A06EAC4FE_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, U3CDoBlendRoutineU3Ed__152_System_Collections_IEnumerator_Reset_m501E6355475FA4D9806B15ACCCE37D1A06EAC4FE_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		NotSupportedException_tE75B318D6590A02A5D9B29FD97409B1750FA0010 * L_0 = (NotSupportedException_tE75B318D6590A02A5D9B29FD97409B1750FA0010 *)il2cpp_codegen_object_new(NotSupportedException_tE75B318D6590A02A5D9B29FD97409B1750FA0010_il2cpp_TypeInfo_var);
		NotSupportedException__ctor_mA121DE1CAC8F25277DEB489DC7771209D91CAE33(L_0, /*hidden argument*/NULL);
		IL2CPP_RAISE_MANAGED_EXCEPTION(L_0, U3CDoBlendRoutineU3Ed__152_System_Collections_IEnumerator_Reset_m501E6355475FA4D9806B15ACCCE37D1A06EAC4FE_RuntimeMethod_var);
	}
}
// System.Object Valve.VR.SteamVR_Behaviour_Skeleton_<DoBlendRoutine>d__152::System.Collections.IEnumerator.get_Current()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject * U3CDoBlendRoutineU3Ed__152_System_Collections_IEnumerator_get_Current_mBBFAF4F7EED53A4784FCEB7C17D3C06E6462C350 (U3CDoBlendRoutineU3Ed__152_tFF832A9C1A3DA477A5CB7789B762723F29BB50D6 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (U3CDoBlendRoutineU3Ed__152_System_Collections_IEnumerator_get_Current_mBBFAF4F7EED53A4784FCEB7C17D3C06E6462C350_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, U3CDoBlendRoutineU3Ed__152_System_Collections_IEnumerator_get_Current_mBBFAF4F7EED53A4784FCEB7C17D3C06E6462C350_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		RuntimeObject * L_0 = __this->get_U3CU3E2__current_1();
		return L_0;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Valve.VR.SteamVR_Behaviour_Skeleton_<DoRangeOfMotionBlend>d__156::.ctor(System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void U3CDoRangeOfMotionBlendU3Ed__156__ctor_m844C5227B6A1E8DFC65302D6B11586B7DC5EE1B8 (U3CDoRangeOfMotionBlendU3Ed__156_tA971D0B47D544B2CDCFFBDE43070BD5D7572E0C9 * __this, int32_t ___U3CU3E1__state0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (U3CDoRangeOfMotionBlendU3Ed__156__ctor_m844C5227B6A1E8DFC65302D6B11586B7DC5EE1B8_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, U3CDoRangeOfMotionBlendU3Ed__156__ctor_m844C5227B6A1E8DFC65302D6B11586B7DC5EE1B8_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		Object__ctor_m925ECA5E85CA100E3FB86A4F9E15C120E9A184C0(__this, /*hidden argument*/NULL);
		int32_t L_0 = ___U3CU3E1__state0;
		__this->set_U3CU3E1__state_0(L_0);
		return;
	}
}
// System.Void Valve.VR.SteamVR_Behaviour_Skeleton_<DoRangeOfMotionBlend>d__156::System.IDisposable.Dispose()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void U3CDoRangeOfMotionBlendU3Ed__156_System_IDisposable_Dispose_m060638A22FB55D0936A81802400ECA855193FB53 (U3CDoRangeOfMotionBlendU3Ed__156_tA971D0B47D544B2CDCFFBDE43070BD5D7572E0C9 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (U3CDoRangeOfMotionBlendU3Ed__156_System_IDisposable_Dispose_m060638A22FB55D0936A81802400ECA855193FB53_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, U3CDoRangeOfMotionBlendU3Ed__156_System_IDisposable_Dispose_m060638A22FB55D0936A81802400ECA855193FB53_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		return;
	}
}
// System.Boolean Valve.VR.SteamVR_Behaviour_Skeleton_<DoRangeOfMotionBlend>d__156::MoveNext()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool U3CDoRangeOfMotionBlendU3Ed__156_MoveNext_m02E353A8E02832802C7D7285543CB3BB5B406528 (U3CDoRangeOfMotionBlendU3Ed__156_tA971D0B47D544B2CDCFFBDE43070BD5D7572E0C9 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (U3CDoRangeOfMotionBlendU3Ed__156_MoveNext_m02E353A8E02832802C7D7285543CB3BB5B406528_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	int32_t V_0 = 0;
	bool V_1 = false;
	bool V_2 = false;
	bool V_3 = false;
	bool V_4 = false;
	bool V_5 = false;
	int32_t V_6 = 0;
	bool V_7 = false;
	bool V_8 = false;
	bool V_9 = false;
	bool V_10 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, U3CDoRangeOfMotionBlendU3Ed__156_MoveNext_m02E353A8E02832802C7D7285543CB3BB5B406528_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10733));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 10734));
	int32_t G_B16_0 = 0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10735));
		int32_t L_0 = __this->get_U3CU3E1__state_0();
		V_0 = L_0;
		int32_t L_1 = V_0;
		if (!L_1)
		{
			goto IL_0012;
		}
	}
	{
		goto IL_000c;
	}

IL_000c:
	{
		int32_t L_2 = V_0;
		if ((((int32_t)L_2) == ((int32_t)1)))
		{
			goto IL_0014;
		}
	}
	{
		goto IL_0016;
	}

IL_0012:
	{
		goto IL_0018;
	}

IL_0014:
	{
		goto IL_0054;
	}

IL_0016:
	{
		return (bool)0;
	}

IL_0018:
	{
		__this->set_U3CU3E1__state_0((-1));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10736));
		// float startTime = Time.time;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10737));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10801));
		float L_3 = Time_get_time_m7863349C8845BBA36629A2B3F8EF1C3BEA350FD8(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10801));
		__this->set_U3CstartTimeU3E5__1_6(L_3);
		// float endTime = startTime + overTime;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10738));
		float L_4 = __this->get_U3CstartTimeU3E5__1_6();
		float L_5 = __this->get_overTime_4();
		__this->set_U3CendTimeU3E5__2_7(((float)il2cpp_codegen_add((float)L_4, (float)L_5)));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10739));
		goto IL_0433;
	}

IL_0043:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10740));
		// yield return null;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10741));
		__this->set_U3CU3E2__current_1(NULL);
		__this->set_U3CU3E1__state_0(1);
		return (bool)1;
	}

IL_0054:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10742));
		__this->set_U3CU3E1__state_0((-1));
		// float lerp = (Time.time - startTime) / overTime;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10743));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10802));
		float L_6 = Time_get_time_m7863349C8845BBA36629A2B3F8EF1C3BEA350FD8(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10802));
		float L_7 = __this->get_U3CstartTimeU3E5__1_6();
		float L_8 = __this->get_overTime_4();
		__this->set_U3ClerpU3E5__7_12(((float)((float)((float)il2cpp_codegen_subtract((float)L_6, (float)L_7))/(float)L_8)));
		// if (skeletonBlend > 0)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10744));
		SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A * L_9 = __this->get_U3CU3E4__this_5();
		NullCheck(L_9);
		float L_10 = L_9->get_skeletonBlend_11();
		V_1 = (bool)((((float)L_10) > ((float)(0.0f)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10745));
		bool L_11 = V_1;
		if (!L_11)
		{
			goto IL_03c6;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10746));
		// skeletonAction.SetRangeOfMotion(oldRangeOfMotion);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10747));
		SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A * L_12 = __this->get_U3CU3E4__this_5();
		NullCheck(L_12);
		SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * L_13 = L_12->get_skeletonAction_4();
		int32_t L_14 = __this->get_oldRangeOfMotion_2();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10803));
		NullCheck(L_13);
		SteamVR_Action_Skeleton_SetRangeOfMotion_mF9A18F8B97BE27E61EF44516E381801FA301FC11(L_13, L_14, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10803));
		// skeletonAction.UpdateValueWithoutEvents();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10748));
		SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A * L_15 = __this->get_U3CU3E4__this_5();
		NullCheck(L_15);
		SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * L_16 = L_15->get_skeletonAction_4();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10804));
		NullCheck(L_16);
		SteamVR_Action_Skeleton_UpdateValueWithoutEvents_mDEFBA29DA9DD73B2577B692E21B71CAE9650735C(L_16, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10804));
		// oldBonePositions = (Vector3[])GetBonePositions().Clone();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10749));
		SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A * L_17 = __this->get_U3CU3E4__this_5();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10805));
		NullCheck(L_17);
		Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* L_18 = SteamVR_Behaviour_Skeleton_GetBonePositions_m75282A7A4582E34D6C613827729532F3C279238D(L_17, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10805));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10806));
		NullCheck((RuntimeArray *)(RuntimeArray *)L_18);
		RuntimeObject * L_19 = Array_Clone_mE8C710213E323617A6F46F2B36DCDDD4C7CF5176((RuntimeArray *)(RuntimeArray *)L_18, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10806));
		__this->set_U3ColdBonePositionsU3E5__3_8(((Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28*)Castclass((RuntimeObject*)L_19, Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28_il2cpp_TypeInfo_var)));
		// oldBoneRotations = (Quaternion[])GetBoneRotations().Clone();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10750));
		SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A * L_20 = __this->get_U3CU3E4__this_5();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10807));
		NullCheck(L_20);
		QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3* L_21 = SteamVR_Behaviour_Skeleton_GetBoneRotations_mDB798AEB8FCA9F3E884563A4E4FBCA07EE3D464B(L_20, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10807));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10808));
		NullCheck((RuntimeArray *)(RuntimeArray *)L_21);
		RuntimeObject * L_22 = Array_Clone_mE8C710213E323617A6F46F2B36DCDDD4C7CF5176((RuntimeArray *)(RuntimeArray *)L_21, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10808));
		__this->set_U3ColdBoneRotationsU3E5__4_9(((QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3*)Castclass((RuntimeObject*)L_22, QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3_il2cpp_TypeInfo_var)));
		// skeletonAction.SetRangeOfMotion(newRangeOfMotion);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10751));
		SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A * L_23 = __this->get_U3CU3E4__this_5();
		NullCheck(L_23);
		SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * L_24 = L_23->get_skeletonAction_4();
		int32_t L_25 = __this->get_newRangeOfMotion_3();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10809));
		NullCheck(L_24);
		SteamVR_Action_Skeleton_SetRangeOfMotion_mF9A18F8B97BE27E61EF44516E381801FA301FC11(L_24, L_25, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10809));
		// skeletonAction.UpdateValueWithoutEvents();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10752));
		SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A * L_26 = __this->get_U3CU3E4__this_5();
		NullCheck(L_26);
		SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * L_27 = L_26->get_skeletonAction_4();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10810));
		NullCheck(L_27);
		SteamVR_Action_Skeleton_UpdateValueWithoutEvents_mDEFBA29DA9DD73B2577B692E21B71CAE9650735C(L_27, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10810));
		// newBonePositions = GetBonePositions();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10753));
		SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A * L_28 = __this->get_U3CU3E4__this_5();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10811));
		NullCheck(L_28);
		Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* L_29 = SteamVR_Behaviour_Skeleton_GetBonePositions_m75282A7A4582E34D6C613827729532F3C279238D(L_28, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10811));
		__this->set_U3CnewBonePositionsU3E5__5_10(L_29);
		// newBoneRotations = GetBoneRotations();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10754));
		SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A * L_30 = __this->get_U3CU3E4__this_5();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10812));
		NullCheck(L_30);
		QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3* L_31 = SteamVR_Behaviour_Skeleton_GetBoneRotations_mDB798AEB8FCA9F3E884563A4E4FBCA07EE3D464B(L_30, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10812));
		__this->set_U3CnewBoneRotationsU3E5__6_11(L_31);
		// for (int boneIndex = 0; boneIndex < bones.Length; boneIndex++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10755));
		__this->set_U3CboneIndexU3E5__8_13(0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10756));
		goto IL_03a7;
	}

IL_0142:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10757));
		// if (bones[boneIndex] == null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10758));
		SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A * L_32 = __this->get_U3CU3E4__this_5();
		NullCheck(L_32);
		TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804* L_33 = L_32->get_bones_35();
		int32_t L_34 = __this->get_U3CboneIndexU3E5__8_13();
		NullCheck(L_33);
		int32_t L_35 = L_34;
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_36 = (L_33)->GetAt(static_cast<il2cpp_array_size_t>(L_35));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10813));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_37 = Object_op_Equality_mBC2401774F3BE33E8CF6F0A8148E66C95D6CFF1C(L_36, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10813));
		V_2 = L_37;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10759));
		bool L_38 = V_2;
		if (!L_38)
		{
			goto IL_0164;
		}
	}
	{
		// continue;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10760));
		goto IL_0395;
	}

IL_0164:
	{
		// if (SteamVR_Utils.IsValid(newBoneRotations[boneIndex]) == false || SteamVR_Utils.IsValid(oldBoneRotations[boneIndex]) == false)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10761));
		QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3* L_39 = __this->get_U3CnewBoneRotationsU3E5__6_11();
		int32_t L_40 = __this->get_U3CboneIndexU3E5__8_13();
		NullCheck(L_39);
		int32_t L_41 = L_40;
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_42 = (L_39)->GetAt(static_cast<il2cpp_array_size_t>(L_41));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10814));
		bool L_43 = SteamVR_Utils_IsValid_m95AA389AAA38C1A4601031F97FBD8D2BB79914E5(L_42, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10814));
		if (!L_43)
		{
			goto IL_0197;
		}
	}
	{
		QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3* L_44 = __this->get_U3ColdBoneRotationsU3E5__4_9();
		int32_t L_45 = __this->get_U3CboneIndexU3E5__8_13();
		NullCheck(L_44);
		int32_t L_46 = L_45;
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_47 = (L_44)->GetAt(static_cast<il2cpp_array_size_t>(L_46));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10815));
		bool L_48 = SteamVR_Utils_IsValid_m95AA389AAA38C1A4601031F97FBD8D2BB79914E5(L_47, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10815));
		G_B16_0 = ((((int32_t)L_48) == ((int32_t)0))? 1 : 0);
		goto IL_0198;
	}

IL_0197:
	{
		G_B16_0 = 1;
	}

IL_0198:
	{
		V_3 = (bool)G_B16_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10762));
		bool L_49 = V_3;
		if (!L_49)
		{
			goto IL_01a2;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10763));
		// continue;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10764));
		goto IL_0395;
	}

IL_01a2:
	{
		// Vector3 blendedRangeOfMotionPosition = Vector3.Lerp(oldBonePositions[boneIndex], newBonePositions[boneIndex], lerp);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10765));
		Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* L_50 = __this->get_U3ColdBonePositionsU3E5__3_8();
		int32_t L_51 = __this->get_U3CboneIndexU3E5__8_13();
		NullCheck(L_50);
		int32_t L_52 = L_51;
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_53 = (L_50)->GetAt(static_cast<il2cpp_array_size_t>(L_52));
		Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* L_54 = __this->get_U3CnewBonePositionsU3E5__5_10();
		int32_t L_55 = __this->get_U3CboneIndexU3E5__8_13();
		NullCheck(L_54);
		int32_t L_56 = L_55;
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_57 = (L_54)->GetAt(static_cast<il2cpp_array_size_t>(L_56));
		float L_58 = __this->get_U3ClerpU3E5__7_12();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10816));
		IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_59 = Vector3_Lerp_m5BA75496B803820CC64079383956D73C6FD4A8A1(L_53, L_57, L_58, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10816));
		__this->set_U3CblendedRangeOfMotionPositionU3E5__9_14(L_59);
		// Quaternion blendedRangeOfMotionRotation = Quaternion.Lerp(oldBoneRotations[boneIndex], newBoneRotations[boneIndex], lerp);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10766));
		QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3* L_60 = __this->get_U3ColdBoneRotationsU3E5__4_9();
		int32_t L_61 = __this->get_U3CboneIndexU3E5__8_13();
		NullCheck(L_60);
		int32_t L_62 = L_61;
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_63 = (L_60)->GetAt(static_cast<il2cpp_array_size_t>(L_62));
		QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3* L_64 = __this->get_U3CnewBoneRotationsU3E5__6_11();
		int32_t L_65 = __this->get_U3CboneIndexU3E5__8_13();
		NullCheck(L_64);
		int32_t L_66 = L_65;
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_67 = (L_64)->GetAt(static_cast<il2cpp_array_size_t>(L_66));
		float L_68 = __this->get_U3ClerpU3E5__7_12();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10817));
		IL2CPP_RUNTIME_CLASS_INIT(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357_il2cpp_TypeInfo_var);
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_69 = Quaternion_Lerp_m749B3988EE2EF387CC9BFB76C81B7465A7534E27(L_63, L_67, L_68, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10817));
		__this->set_U3CblendedRangeOfMotionRotationU3E5__10_15(L_69);
		// if (skeletonBlend < 1)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10767));
		SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A * L_70 = __this->get_U3CU3E4__this_5();
		NullCheck(L_70);
		float L_71 = L_70->get_skeletonBlend_11();
		V_4 = (bool)((((float)L_71) < ((float)(1.0f)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10768));
		bool L_72 = V_4;
		if (!L_72)
		{
			goto IL_034a;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10769));
		// if (blendPoser != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10770));
		SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A * L_73 = __this->get_U3CU3E4__this_5();
		NullCheck(L_73);
		SteamVR_Skeleton_Poser_t8BAF9FB80E002A7B21C380E9137C955DA4292CBA * L_74 = L_73->get_blendPoser_25();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10818));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_75 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_74, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10818));
		V_5 = L_75;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10771));
		bool L_76 = V_5;
		if (!L_76)
		{
			goto IL_02c7;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10772));
		// SetBonePosition(boneIndex, Vector3.Lerp(blendSnapshot.bonePositions[boneIndex], blendedRangeOfMotionPosition, skeletonBlend));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10773));
		SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A * L_77 = __this->get_U3CU3E4__this_5();
		int32_t L_78 = __this->get_U3CboneIndexU3E5__8_13();
		SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A * L_79 = __this->get_U3CU3E4__this_5();
		NullCheck(L_79);
		SteamVR_Skeleton_PoseSnapshot_t0E1C4250EA9F357DFC204D8E5D9C2111593C3E18 * L_80 = L_79->get_blendSnapshot_26();
		NullCheck(L_80);
		Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* L_81 = L_80->get_bonePositions_3();
		int32_t L_82 = __this->get_U3CboneIndexU3E5__8_13();
		NullCheck(L_81);
		int32_t L_83 = L_82;
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_84 = (L_81)->GetAt(static_cast<il2cpp_array_size_t>(L_83));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_85 = __this->get_U3CblendedRangeOfMotionPositionU3E5__9_14();
		SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A * L_86 = __this->get_U3CU3E4__this_5();
		NullCheck(L_86);
		float L_87 = L_86->get_skeletonBlend_11();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10819));
		IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_88 = Vector3_Lerp_m5BA75496B803820CC64079383956D73C6FD4A8A1(L_84, L_85, L_87, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10819));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10820));
		NullCheck(L_77);
		VirtActionInvoker2< int32_t, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  >::Invoke(13 /* System.Void Valve.VR.SteamVR_Behaviour_Skeleton::SetBonePosition(System.Int32,UnityEngine.Vector3) */, L_77, L_78, L_88);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10820));
		// SetBoneRotation(boneIndex, Quaternion.Lerp(GetBlendPoseForBone(boneIndex, blendedRangeOfMotionRotation), blendedRangeOfMotionRotation, skeletonBlend));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10774));
		SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A * L_89 = __this->get_U3CU3E4__this_5();
		int32_t L_90 = __this->get_U3CboneIndexU3E5__8_13();
		SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A * L_91 = __this->get_U3CU3E4__this_5();
		int32_t L_92 = __this->get_U3CboneIndexU3E5__8_13();
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_93 = __this->get_U3CblendedRangeOfMotionRotationU3E5__10_15();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10821));
		NullCheck(L_91);
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_94 = VirtFuncInvoker2< Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357 , int32_t, Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  >::Invoke(11 /* UnityEngine.Quaternion Valve.VR.SteamVR_Behaviour_Skeleton::GetBlendPoseForBone(System.Int32,UnityEngine.Quaternion) */, L_91, L_92, L_93);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10821));
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_95 = __this->get_U3CblendedRangeOfMotionRotationU3E5__10_15();
		SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A * L_96 = __this->get_U3CU3E4__this_5();
		NullCheck(L_96);
		float L_97 = L_96->get_skeletonBlend_11();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10822));
		IL2CPP_RUNTIME_CLASS_INIT(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357_il2cpp_TypeInfo_var);
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_98 = Quaternion_Lerp_m749B3988EE2EF387CC9BFB76C81B7465A7534E27(L_94, L_95, L_97, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10822));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10823));
		NullCheck(L_89);
		VirtActionInvoker2< int32_t, Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  >::Invoke(14 /* System.Void Valve.VR.SteamVR_Behaviour_Skeleton::SetBoneRotation(System.Int32,UnityEngine.Quaternion) */, L_89, L_90, L_98);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10823));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10775));
		goto IL_0347;
	}

IL_02c7:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10776));
		// SetBonePosition(boneIndex, Vector3.Lerp(bones[boneIndex].localPosition, blendedRangeOfMotionPosition, skeletonBlend));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10777));
		SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A * L_99 = __this->get_U3CU3E4__this_5();
		int32_t L_100 = __this->get_U3CboneIndexU3E5__8_13();
		SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A * L_101 = __this->get_U3CU3E4__this_5();
		NullCheck(L_101);
		TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804* L_102 = L_101->get_bones_35();
		int32_t L_103 = __this->get_U3CboneIndexU3E5__8_13();
		NullCheck(L_102);
		int32_t L_104 = L_103;
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_105 = (L_102)->GetAt(static_cast<il2cpp_array_size_t>(L_104));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10824));
		NullCheck(L_105);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_106 = Transform_get_localPosition_m812D43318E05BDCB78310EB7308785A13D85EFD8(L_105, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10824));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_107 = __this->get_U3CblendedRangeOfMotionPositionU3E5__9_14();
		SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A * L_108 = __this->get_U3CU3E4__this_5();
		NullCheck(L_108);
		float L_109 = L_108->get_skeletonBlend_11();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10825));
		IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_110 = Vector3_Lerp_m5BA75496B803820CC64079383956D73C6FD4A8A1(L_106, L_107, L_109, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10825));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10826));
		NullCheck(L_99);
		VirtActionInvoker2< int32_t, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  >::Invoke(13 /* System.Void Valve.VR.SteamVR_Behaviour_Skeleton::SetBonePosition(System.Int32,UnityEngine.Vector3) */, L_99, L_100, L_110);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10826));
		// SetBoneRotation(boneIndex, Quaternion.Lerp(bones[boneIndex].localRotation, blendedRangeOfMotionRotation, skeletonBlend));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10778));
		SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A * L_111 = __this->get_U3CU3E4__this_5();
		int32_t L_112 = __this->get_U3CboneIndexU3E5__8_13();
		SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A * L_113 = __this->get_U3CU3E4__this_5();
		NullCheck(L_113);
		TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804* L_114 = L_113->get_bones_35();
		int32_t L_115 = __this->get_U3CboneIndexU3E5__8_13();
		NullCheck(L_114);
		int32_t L_116 = L_115;
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_117 = (L_114)->GetAt(static_cast<il2cpp_array_size_t>(L_116));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10827));
		NullCheck(L_117);
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_118 = Transform_get_localRotation_mEDA319E1B42EF12A19A95AC0824345B6574863FE(L_117, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10827));
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_119 = __this->get_U3CblendedRangeOfMotionRotationU3E5__10_15();
		SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A * L_120 = __this->get_U3CU3E4__this_5();
		NullCheck(L_120);
		float L_121 = L_120->get_skeletonBlend_11();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10828));
		IL2CPP_RUNTIME_CLASS_INIT(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357_il2cpp_TypeInfo_var);
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_122 = Quaternion_Lerp_m749B3988EE2EF387CC9BFB76C81B7465A7534E27(L_118, L_119, L_121, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10828));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10829));
		NullCheck(L_111);
		VirtActionInvoker2< int32_t, Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  >::Invoke(14 /* System.Void Valve.VR.SteamVR_Behaviour_Skeleton::SetBoneRotation(System.Int32,UnityEngine.Quaternion) */, L_111, L_112, L_122);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10829));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10779));
	}

IL_0347:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10780));
		goto IL_037c;
	}

IL_034a:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10781));
		// SetBonePosition(boneIndex, blendedRangeOfMotionPosition);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10782));
		SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A * L_123 = __this->get_U3CU3E4__this_5();
		int32_t L_124 = __this->get_U3CboneIndexU3E5__8_13();
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_125 = __this->get_U3CblendedRangeOfMotionPositionU3E5__9_14();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10830));
		NullCheck(L_123);
		VirtActionInvoker2< int32_t, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  >::Invoke(13 /* System.Void Valve.VR.SteamVR_Behaviour_Skeleton::SetBonePosition(System.Int32,UnityEngine.Vector3) */, L_123, L_124, L_125);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10830));
		// SetBoneRotation(boneIndex, blendedRangeOfMotionRotation);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10783));
		SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A * L_126 = __this->get_U3CU3E4__this_5();
		int32_t L_127 = __this->get_U3CboneIndexU3E5__8_13();
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_128 = __this->get_U3CblendedRangeOfMotionRotationU3E5__10_15();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10831));
		NullCheck(L_126);
		VirtActionInvoker2< int32_t, Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  >::Invoke(14 /* System.Void Valve.VR.SteamVR_Behaviour_Skeleton::SetBoneRotation(System.Int32,UnityEngine.Quaternion) */, L_126, L_127, L_128);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10831));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10784));
	}

IL_037c:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10785));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * L_129 = __this->get_address_of_U3CblendedRangeOfMotionPositionU3E5__9_14();
		il2cpp_codegen_initobj(L_129, sizeof(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 ));
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357 * L_130 = __this->get_address_of_U3CblendedRangeOfMotionRotationU3E5__10_15();
		il2cpp_codegen_initobj(L_130, sizeof(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357 ));
	}

IL_0395:
	{
		// for (int boneIndex = 0; boneIndex < bones.Length; boneIndex++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10786));
		int32_t L_131 = __this->get_U3CboneIndexU3E5__8_13();
		V_6 = L_131;
		int32_t L_132 = V_6;
		__this->set_U3CboneIndexU3E5__8_13(((int32_t)il2cpp_codegen_add((int32_t)L_132, (int32_t)1)));
	}

IL_03a7:
	{
		// for (int boneIndex = 0; boneIndex < bones.Length; boneIndex++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10787));
		int32_t L_133 = __this->get_U3CboneIndexU3E5__8_13();
		SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A * L_134 = __this->get_U3CU3E4__this_5();
		NullCheck(L_134);
		TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804* L_135 = L_134->get_bones_35();
		NullCheck(L_135);
		V_7 = (bool)((((int32_t)L_133) < ((int32_t)(((int32_t)((int32_t)(((RuntimeArray*)L_135)->max_length))))))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10788));
		bool L_136 = V_7;
		if (L_136)
		{
			goto IL_0142;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10789));
	}

IL_03c6:
	{
		// if (onBoneTransformsUpdated != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10790));
		SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A * L_137 = __this->get_U3CU3E4__this_5();
		NullCheck(L_137);
		SteamVR_Behaviour_SkeletonEvent_t2A4AAE28B8BB6F5E52B7A7FAF6ADF1F3DE537627 * L_138 = L_137->get_onBoneTransformsUpdated_12();
		V_8 = (bool)((!(((RuntimeObject*)(SteamVR_Behaviour_SkeletonEvent_t2A4AAE28B8BB6F5E52B7A7FAF6ADF1F3DE537627 *)L_138) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10791));
		bool L_139 = V_8;
		if (!L_139)
		{
			goto IL_03fc;
		}
	}
	{
		// onBoneTransformsUpdated.Invoke(this, inputSource);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10792));
		SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A * L_140 = __this->get_U3CU3E4__this_5();
		NullCheck(L_140);
		SteamVR_Behaviour_SkeletonEvent_t2A4AAE28B8BB6F5E52B7A7FAF6ADF1F3DE537627 * L_141 = L_140->get_onBoneTransformsUpdated_12();
		SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A * L_142 = __this->get_U3CU3E4__this_5();
		SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A * L_143 = __this->get_U3CU3E4__this_5();
		NullCheck(L_143);
		int32_t L_144 = L_143->get_inputSource_5();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10832));
		NullCheck(L_141);
		UnityEvent_2_Invoke_mA149632942D05C483CA654D6D8355DB4EA1ED032(L_141, L_142, L_144, /*hidden argument*/UnityEvent_2_Invoke_mA149632942D05C483CA654D6D8355DB4EA1ED032_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10832));
	}

IL_03fc:
	{
		// if (onBoneTransformsUpdatedEvent != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10793));
		SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A * L_145 = __this->get_U3CU3E4__this_5();
		NullCheck(L_145);
		UpdateHandler_t529F28858847FB086B7F9A7A7E52860C7430976A * L_146 = L_145->get_onBoneTransformsUpdatedEvent_17();
		V_9 = (bool)((!(((RuntimeObject*)(UpdateHandler_t529F28858847FB086B7F9A7A7E52860C7430976A *)L_146) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10794));
		bool L_147 = V_9;
		if (!L_147)
		{
			goto IL_0432;
		}
	}
	{
		// onBoneTransformsUpdatedEvent.Invoke(this, inputSource);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10795));
		SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A * L_148 = __this->get_U3CU3E4__this_5();
		NullCheck(L_148);
		UpdateHandler_t529F28858847FB086B7F9A7A7E52860C7430976A * L_149 = L_148->get_onBoneTransformsUpdatedEvent_17();
		SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A * L_150 = __this->get_U3CU3E4__this_5();
		SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A * L_151 = __this->get_U3CU3E4__this_5();
		NullCheck(L_151);
		int32_t L_152 = L_151->get_inputSource_5();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10833));
		NullCheck(L_149);
		UpdateHandler_Invoke_m8827E292EA413A4EF794103BB153F8CC8A719E89(L_149, L_150, L_152, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10833));
	}

IL_0432:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10796));
	}

IL_0433:
	{
		// while (Time.time < endTime)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10797));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10834));
		float L_153 = Time_get_time_m7863349C8845BBA36629A2B3F8EF1C3BEA350FD8(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10834));
		float L_154 = __this->get_U3CendTimeU3E5__2_7();
		V_10 = (bool)((((float)L_153) < ((float)L_154))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10798));
		bool L_155 = V_10;
		if (L_155)
		{
			goto IL_0043;
		}
	}
	{
		// rangeOfMotionBlendRoutine = null;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10799));
		SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A * L_156 = __this->get_U3CU3E4__this_5();
		NullCheck(L_156);
		L_156->set_rangeOfMotionBlendRoutine_33((Coroutine_tAE7DB2FC70A0AE6477F896F852057CB0754F06EC *)NULL);
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10800));
		return (bool)0;
	}
}
// System.Object Valve.VR.SteamVR_Behaviour_Skeleton_<DoRangeOfMotionBlend>d__156::System.Collections.Generic.IEnumerator<System.Object>.get_Current()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject * U3CDoRangeOfMotionBlendU3Ed__156_System_Collections_Generic_IEnumeratorU3CSystem_ObjectU3E_get_Current_mB7294D7479BA67AEF908EC66E5527FB65EB63FDE (U3CDoRangeOfMotionBlendU3Ed__156_tA971D0B47D544B2CDCFFBDE43070BD5D7572E0C9 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (U3CDoRangeOfMotionBlendU3Ed__156_System_Collections_Generic_IEnumeratorU3CSystem_ObjectU3E_get_Current_mB7294D7479BA67AEF908EC66E5527FB65EB63FDE_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, U3CDoRangeOfMotionBlendU3Ed__156_System_Collections_Generic_IEnumeratorU3CSystem_ObjectU3E_get_Current_mB7294D7479BA67AEF908EC66E5527FB65EB63FDE_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		RuntimeObject * L_0 = __this->get_U3CU3E2__current_1();
		return L_0;
	}
}
// System.Void Valve.VR.SteamVR_Behaviour_Skeleton_<DoRangeOfMotionBlend>d__156::System.Collections.IEnumerator.Reset()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void U3CDoRangeOfMotionBlendU3Ed__156_System_Collections_IEnumerator_Reset_m5BD6EDC1366B3079A2DAB49B328087F5877FCA55 (U3CDoRangeOfMotionBlendU3Ed__156_tA971D0B47D544B2CDCFFBDE43070BD5D7572E0C9 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (U3CDoRangeOfMotionBlendU3Ed__156_System_Collections_IEnumerator_Reset_m5BD6EDC1366B3079A2DAB49B328087F5877FCA55_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, U3CDoRangeOfMotionBlendU3Ed__156_System_Collections_IEnumerator_Reset_m5BD6EDC1366B3079A2DAB49B328087F5877FCA55_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		NotSupportedException_tE75B318D6590A02A5D9B29FD97409B1750FA0010 * L_0 = (NotSupportedException_tE75B318D6590A02A5D9B29FD97409B1750FA0010 *)il2cpp_codegen_object_new(NotSupportedException_tE75B318D6590A02A5D9B29FD97409B1750FA0010_il2cpp_TypeInfo_var);
		NotSupportedException__ctor_mA121DE1CAC8F25277DEB489DC7771209D91CAE33(L_0, /*hidden argument*/NULL);
		IL2CPP_RAISE_MANAGED_EXCEPTION(L_0, U3CDoRangeOfMotionBlendU3Ed__156_System_Collections_IEnumerator_Reset_m5BD6EDC1366B3079A2DAB49B328087F5877FCA55_RuntimeMethod_var);
	}
}
// System.Object Valve.VR.SteamVR_Behaviour_Skeleton_<DoRangeOfMotionBlend>d__156::System.Collections.IEnumerator.get_Current()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject * U3CDoRangeOfMotionBlendU3Ed__156_System_Collections_IEnumerator_get_Current_mC214ACC1FAAA14231ED18F1ADB628EE4DFF14AFF (U3CDoRangeOfMotionBlendU3Ed__156_tA971D0B47D544B2CDCFFBDE43070BD5D7572E0C9 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (U3CDoRangeOfMotionBlendU3Ed__156_System_Collections_IEnumerator_get_Current_mC214ACC1FAAA14231ED18F1ADB628EE4DFF14AFF_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, U3CDoRangeOfMotionBlendU3Ed__156_System_Collections_IEnumerator_get_Current_mC214ACC1FAAA14231ED18F1ADB628EE4DFF14AFF_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		RuntimeObject * L_0 = __this->get_U3CU3E2__current_1();
		return L_0;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Valve.VR.SteamVR_Behaviour_Skeleton_ActiveChangeHandler::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ActiveChangeHandler__ctor_m3C554A7BE2239768B1F08C773B3DFAF5196DA837 (ActiveChangeHandler_tB3A5BB1A449EFD685FB81C2673E955D602F14A0E * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Void Valve.VR.SteamVR_Behaviour_Skeleton_ActiveChangeHandler::Invoke(Valve.VR.SteamVR_Behaviour_Skeleton,Valve.VR.SteamVR_Input_Sources,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ActiveChangeHandler_Invoke_m92525FCA2995BF8E75C15D9E023EB3B5A8ECBA3F (ActiveChangeHandler_tB3A5BB1A449EFD685FB81C2673E955D602F14A0E * __this, SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A * ___fromAction0, int32_t ___inputSource1, bool ___active2, const RuntimeMethod* method)
{
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 3)
			{
				// open
				typedef void (*FunctionPointerType) (SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A *, int32_t, bool, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___fromAction0, ___inputSource1, ___active2, targetMethod);
			}
			else
			{
				// closed
				typedef void (*FunctionPointerType) (void*, SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A *, int32_t, bool, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___inputSource1, ___active2, targetMethod);
			}
		}
		else if (___parameterCount != 3)
		{
			// open
			if (il2cpp_codegen_method_is_virtual(targetMethod) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker2< int32_t, bool >::Invoke(targetMethod, ___fromAction0, ___inputSource1, ___active2);
					else
						GenericVirtActionInvoker2< int32_t, bool >::Invoke(targetMethod, ___fromAction0, ___inputSource1, ___active2);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker2< int32_t, bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), ___fromAction0, ___inputSource1, ___active2);
					else
						VirtActionInvoker2< int32_t, bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), ___fromAction0, ___inputSource1, ___active2);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(&___inputSource1) - 1), ___active2, targetMethod);
				}
				typedef void (*FunctionPointerType) (SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A *, int32_t, bool, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___fromAction0, ___inputSource1, ___active2, targetMethod);
			}
		}
		else
		{
			// closed
			if (targetThis != NULL && il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker3< SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A *, int32_t, bool >::Invoke(targetMethod, targetThis, ___fromAction0, ___inputSource1, ___active2);
					else
						GenericVirtActionInvoker3< SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A *, int32_t, bool >::Invoke(targetMethod, targetThis, ___fromAction0, ___inputSource1, ___active2);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker3< SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A *, int32_t, bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___fromAction0, ___inputSource1, ___active2);
					else
						VirtActionInvoker3< SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A *, int32_t, bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___fromAction0, ___inputSource1, ___active2);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, int32_t, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(___fromAction0) - 1), ___inputSource1, ___active2, targetMethod);
				}
				if (targetThis == NULL)
				{
					typedef void (*FunctionPointerType) (SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A *, int32_t, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___fromAction0, ___inputSource1, ___active2, targetMethod);
				}
				else
				{
					typedef void (*FunctionPointerType) (void*, SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A *, int32_t, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___inputSource1, ___active2, targetMethod);
				}
			}
		}
	}
}
// System.IAsyncResult Valve.VR.SteamVR_Behaviour_Skeleton_ActiveChangeHandler::BeginInvoke(Valve.VR.SteamVR_Behaviour_Skeleton,Valve.VR.SteamVR_Input_Sources,System.Boolean,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* ActiveChangeHandler_BeginInvoke_m91F11D36D2E0CDD1AD8195432797D217BD59909D (ActiveChangeHandler_tB3A5BB1A449EFD685FB81C2673E955D602F14A0E * __this, SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A * ___fromAction0, int32_t ___inputSource1, bool ___active2, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback3, RuntimeObject * ___object4, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (ActiveChangeHandler_BeginInvoke_m91F11D36D2E0CDD1AD8195432797D217BD59909D_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[4] = {0};
	__d_args[0] = ___fromAction0;
	__d_args[1] = Box(SteamVR_Input_Sources_tCE41AA589FB3B9516BDE0DFABDCB4AAEA29528F7_il2cpp_TypeInfo_var, &___inputSource1);
	__d_args[2] = Box(Boolean_tB53F6830F670160873277339AA58F15CAED4399C_il2cpp_TypeInfo_var, &___active2);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback3, (RuntimeObject*)___object4);
}
// System.Void Valve.VR.SteamVR_Behaviour_Skeleton_ActiveChangeHandler::EndInvoke(System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ActiveChangeHandler_EndInvoke_m6C89AD78F75DE90557EBA89793B0B4B4BBD6DE8C (ActiveChangeHandler_tB3A5BB1A449EFD685FB81C2673E955D602F14A0E * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Valve.VR.SteamVR_Behaviour_Skeleton_ChangeHandler::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ChangeHandler__ctor_m390C3F2C7A0DA278E92DD5569F460924F76898E0 (ChangeHandler_tB89A36613D65385655B73DBDA42D2F08868FD67F * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Void Valve.VR.SteamVR_Behaviour_Skeleton_ChangeHandler::Invoke(Valve.VR.SteamVR_Behaviour_Skeleton,Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ChangeHandler_Invoke_mBE36CDFEB7A200641B44807449FCECD8AF874176 (ChangeHandler_tB89A36613D65385655B73DBDA42D2F08868FD67F * __this, SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A * ___fromAction0, int32_t ___inputSource1, const RuntimeMethod* method)
{
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 2)
			{
				// open
				typedef void (*FunctionPointerType) (SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A *, int32_t, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___fromAction0, ___inputSource1, targetMethod);
			}
			else
			{
				// closed
				typedef void (*FunctionPointerType) (void*, SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A *, int32_t, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___inputSource1, targetMethod);
			}
		}
		else if (___parameterCount != 2)
		{
			// open
			if (il2cpp_codegen_method_is_virtual(targetMethod) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker1< int32_t >::Invoke(targetMethod, ___fromAction0, ___inputSource1);
					else
						GenericVirtActionInvoker1< int32_t >::Invoke(targetMethod, ___fromAction0, ___inputSource1);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker1< int32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), ___fromAction0, ___inputSource1);
					else
						VirtActionInvoker1< int32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), ___fromAction0, ___inputSource1);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(&___inputSource1) - 1), targetMethod);
				}
				typedef void (*FunctionPointerType) (SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A *, int32_t, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___fromAction0, ___inputSource1, targetMethod);
			}
		}
		else
		{
			// closed
			if (targetThis != NULL && il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker2< SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A *, int32_t >::Invoke(targetMethod, targetThis, ___fromAction0, ___inputSource1);
					else
						GenericVirtActionInvoker2< SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A *, int32_t >::Invoke(targetMethod, targetThis, ___fromAction0, ___inputSource1);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker2< SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A *, int32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___fromAction0, ___inputSource1);
					else
						VirtActionInvoker2< SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A *, int32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___fromAction0, ___inputSource1);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, int32_t, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(___fromAction0) - 1), ___inputSource1, targetMethod);
				}
				if (targetThis == NULL)
				{
					typedef void (*FunctionPointerType) (SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A *, int32_t, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___fromAction0, ___inputSource1, targetMethod);
				}
				else
				{
					typedef void (*FunctionPointerType) (void*, SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A *, int32_t, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___inputSource1, targetMethod);
				}
			}
		}
	}
}
// System.IAsyncResult Valve.VR.SteamVR_Behaviour_Skeleton_ChangeHandler::BeginInvoke(Valve.VR.SteamVR_Behaviour_Skeleton,Valve.VR.SteamVR_Input_Sources,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* ChangeHandler_BeginInvoke_m3008D7C90DA806880138D2FD68EF045135288C4F (ChangeHandler_tB89A36613D65385655B73DBDA42D2F08868FD67F * __this, SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A * ___fromAction0, int32_t ___inputSource1, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback2, RuntimeObject * ___object3, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (ChangeHandler_BeginInvoke_m3008D7C90DA806880138D2FD68EF045135288C4F_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[3] = {0};
	__d_args[0] = ___fromAction0;
	__d_args[1] = Box(SteamVR_Input_Sources_tCE41AA589FB3B9516BDE0DFABDCB4AAEA29528F7_il2cpp_TypeInfo_var, &___inputSource1);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback2, (RuntimeObject*)___object3);
}
// System.Void Valve.VR.SteamVR_Behaviour_Skeleton_ChangeHandler::EndInvoke(System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ChangeHandler_EndInvoke_m681C9B83D6B4DDE5F703A05F116CDDE06196B22A (ChangeHandler_tB89A36613D65385655B73DBDA42D2F08868FD67F * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Valve.VR.SteamVR_Behaviour_Skeleton_DeviceConnectedChangeHandler::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void DeviceConnectedChangeHandler__ctor_m2D7B3AC923A11B20DA69258BB25F35B27AD4835E (DeviceConnectedChangeHandler_t0F6018732B70A6C87D60D7C71A04183CE5B1E617 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Void Valve.VR.SteamVR_Behaviour_Skeleton_DeviceConnectedChangeHandler::Invoke(Valve.VR.SteamVR_Behaviour_Skeleton,Valve.VR.SteamVR_Input_Sources,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void DeviceConnectedChangeHandler_Invoke_m0C99D561FBE9074CCA3C5304F7A3EBCF8D9CBEB2 (DeviceConnectedChangeHandler_t0F6018732B70A6C87D60D7C71A04183CE5B1E617 * __this, SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A * ___fromAction0, int32_t ___inputSource1, bool ___deviceConnected2, const RuntimeMethod* method)
{
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 3)
			{
				// open
				typedef void (*FunctionPointerType) (SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A *, int32_t, bool, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___fromAction0, ___inputSource1, ___deviceConnected2, targetMethod);
			}
			else
			{
				// closed
				typedef void (*FunctionPointerType) (void*, SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A *, int32_t, bool, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___inputSource1, ___deviceConnected2, targetMethod);
			}
		}
		else if (___parameterCount != 3)
		{
			// open
			if (il2cpp_codegen_method_is_virtual(targetMethod) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker2< int32_t, bool >::Invoke(targetMethod, ___fromAction0, ___inputSource1, ___deviceConnected2);
					else
						GenericVirtActionInvoker2< int32_t, bool >::Invoke(targetMethod, ___fromAction0, ___inputSource1, ___deviceConnected2);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker2< int32_t, bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), ___fromAction0, ___inputSource1, ___deviceConnected2);
					else
						VirtActionInvoker2< int32_t, bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), ___fromAction0, ___inputSource1, ___deviceConnected2);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(&___inputSource1) - 1), ___deviceConnected2, targetMethod);
				}
				typedef void (*FunctionPointerType) (SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A *, int32_t, bool, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___fromAction0, ___inputSource1, ___deviceConnected2, targetMethod);
			}
		}
		else
		{
			// closed
			if (targetThis != NULL && il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker3< SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A *, int32_t, bool >::Invoke(targetMethod, targetThis, ___fromAction0, ___inputSource1, ___deviceConnected2);
					else
						GenericVirtActionInvoker3< SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A *, int32_t, bool >::Invoke(targetMethod, targetThis, ___fromAction0, ___inputSource1, ___deviceConnected2);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker3< SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A *, int32_t, bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___fromAction0, ___inputSource1, ___deviceConnected2);
					else
						VirtActionInvoker3< SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A *, int32_t, bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___fromAction0, ___inputSource1, ___deviceConnected2);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, int32_t, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(___fromAction0) - 1), ___inputSource1, ___deviceConnected2, targetMethod);
				}
				if (targetThis == NULL)
				{
					typedef void (*FunctionPointerType) (SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A *, int32_t, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___fromAction0, ___inputSource1, ___deviceConnected2, targetMethod);
				}
				else
				{
					typedef void (*FunctionPointerType) (void*, SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A *, int32_t, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___inputSource1, ___deviceConnected2, targetMethod);
				}
			}
		}
	}
}
// System.IAsyncResult Valve.VR.SteamVR_Behaviour_Skeleton_DeviceConnectedChangeHandler::BeginInvoke(Valve.VR.SteamVR_Behaviour_Skeleton,Valve.VR.SteamVR_Input_Sources,System.Boolean,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* DeviceConnectedChangeHandler_BeginInvoke_mF03CCF5F465DF6E9F5D448C0391BCA91C3F35F1B (DeviceConnectedChangeHandler_t0F6018732B70A6C87D60D7C71A04183CE5B1E617 * __this, SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A * ___fromAction0, int32_t ___inputSource1, bool ___deviceConnected2, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback3, RuntimeObject * ___object4, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (DeviceConnectedChangeHandler_BeginInvoke_mF03CCF5F465DF6E9F5D448C0391BCA91C3F35F1B_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[4] = {0};
	__d_args[0] = ___fromAction0;
	__d_args[1] = Box(SteamVR_Input_Sources_tCE41AA589FB3B9516BDE0DFABDCB4AAEA29528F7_il2cpp_TypeInfo_var, &___inputSource1);
	__d_args[2] = Box(Boolean_tB53F6830F670160873277339AA58F15CAED4399C_il2cpp_TypeInfo_var, &___deviceConnected2);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback3, (RuntimeObject*)___object4);
}
// System.Void Valve.VR.SteamVR_Behaviour_Skeleton_DeviceConnectedChangeHandler::EndInvoke(System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void DeviceConnectedChangeHandler_EndInvoke_m8F89E4532152C05C920ECA0FD643717009B69457 (DeviceConnectedChangeHandler_t0F6018732B70A6C87D60D7C71A04183CE5B1E617 * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Valve.VR.SteamVR_Behaviour_Skeleton_TrackingChangeHandler::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void TrackingChangeHandler__ctor_m5F1206C83147D0D3D797F7CC96E3F054B8D18A77 (TrackingChangeHandler_t0354ED148830BCEA31C451E8C314757B70B5D63F * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Void Valve.VR.SteamVR_Behaviour_Skeleton_TrackingChangeHandler::Invoke(Valve.VR.SteamVR_Behaviour_Skeleton,Valve.VR.SteamVR_Input_Sources,Valve.VR.ETrackingResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void TrackingChangeHandler_Invoke_mB11B131DB495AA43338E55645109AB8BDEF630E6 (TrackingChangeHandler_t0354ED148830BCEA31C451E8C314757B70B5D63F * __this, SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A * ___fromAction0, int32_t ___inputSource1, int32_t ___trackingState2, const RuntimeMethod* method)
{
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 3)
			{
				// open
				typedef void (*FunctionPointerType) (SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A *, int32_t, int32_t, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___fromAction0, ___inputSource1, ___trackingState2, targetMethod);
			}
			else
			{
				// closed
				typedef void (*FunctionPointerType) (void*, SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A *, int32_t, int32_t, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___inputSource1, ___trackingState2, targetMethod);
			}
		}
		else if (___parameterCount != 3)
		{
			// open
			if (il2cpp_codegen_method_is_virtual(targetMethod) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker2< int32_t, int32_t >::Invoke(targetMethod, ___fromAction0, ___inputSource1, ___trackingState2);
					else
						GenericVirtActionInvoker2< int32_t, int32_t >::Invoke(targetMethod, ___fromAction0, ___inputSource1, ___trackingState2);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker2< int32_t, int32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), ___fromAction0, ___inputSource1, ___trackingState2);
					else
						VirtActionInvoker2< int32_t, int32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), ___fromAction0, ___inputSource1, ___trackingState2);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, int32_t, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(&___inputSource1) - 1), ___trackingState2, targetMethod);
				}
				typedef void (*FunctionPointerType) (SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A *, int32_t, int32_t, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___fromAction0, ___inputSource1, ___trackingState2, targetMethod);
			}
		}
		else
		{
			// closed
			if (targetThis != NULL && il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker3< SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A *, int32_t, int32_t >::Invoke(targetMethod, targetThis, ___fromAction0, ___inputSource1, ___trackingState2);
					else
						GenericVirtActionInvoker3< SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A *, int32_t, int32_t >::Invoke(targetMethod, targetThis, ___fromAction0, ___inputSource1, ___trackingState2);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker3< SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A *, int32_t, int32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___fromAction0, ___inputSource1, ___trackingState2);
					else
						VirtActionInvoker3< SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A *, int32_t, int32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___fromAction0, ___inputSource1, ___trackingState2);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, int32_t, int32_t, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(___fromAction0) - 1), ___inputSource1, ___trackingState2, targetMethod);
				}
				if (targetThis == NULL)
				{
					typedef void (*FunctionPointerType) (SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A *, int32_t, int32_t, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___fromAction0, ___inputSource1, ___trackingState2, targetMethod);
				}
				else
				{
					typedef void (*FunctionPointerType) (void*, SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A *, int32_t, int32_t, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___inputSource1, ___trackingState2, targetMethod);
				}
			}
		}
	}
}
// System.IAsyncResult Valve.VR.SteamVR_Behaviour_Skeleton_TrackingChangeHandler::BeginInvoke(Valve.VR.SteamVR_Behaviour_Skeleton,Valve.VR.SteamVR_Input_Sources,Valve.VR.ETrackingResult,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* TrackingChangeHandler_BeginInvoke_m7F4C8EDAEDC0EB2EB09B9C9622F7D09F70C61902 (TrackingChangeHandler_t0354ED148830BCEA31C451E8C314757B70B5D63F * __this, SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A * ___fromAction0, int32_t ___inputSource1, int32_t ___trackingState2, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback3, RuntimeObject * ___object4, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (TrackingChangeHandler_BeginInvoke_m7F4C8EDAEDC0EB2EB09B9C9622F7D09F70C61902_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[4] = {0};
	__d_args[0] = ___fromAction0;
	__d_args[1] = Box(SteamVR_Input_Sources_tCE41AA589FB3B9516BDE0DFABDCB4AAEA29528F7_il2cpp_TypeInfo_var, &___inputSource1);
	__d_args[2] = Box(ETrackingResult_t989C2212A7DBCBBF86EA2C1E776BC60223B3126E_il2cpp_TypeInfo_var, &___trackingState2);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback3, (RuntimeObject*)___object4);
}
// System.Void Valve.VR.SteamVR_Behaviour_Skeleton_TrackingChangeHandler::EndInvoke(System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void TrackingChangeHandler_EndInvoke_mF1599531EE047A0393609EC862123B37D0FF8C53 (TrackingChangeHandler_t0354ED148830BCEA31C451E8C314757B70B5D63F * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Valve.VR.SteamVR_Behaviour_Skeleton_UpdateHandler::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UpdateHandler__ctor_m3DEA4148F4E013B063062EC5774A7A13E0352747 (UpdateHandler_t529F28858847FB086B7F9A7A7E52860C7430976A * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Void Valve.VR.SteamVR_Behaviour_Skeleton_UpdateHandler::Invoke(Valve.VR.SteamVR_Behaviour_Skeleton,Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UpdateHandler_Invoke_m8827E292EA413A4EF794103BB153F8CC8A719E89 (UpdateHandler_t529F28858847FB086B7F9A7A7E52860C7430976A * __this, SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A * ___fromAction0, int32_t ___inputSource1, const RuntimeMethod* method)
{
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 2)
			{
				// open
				typedef void (*FunctionPointerType) (SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A *, int32_t, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___fromAction0, ___inputSource1, targetMethod);
			}
			else
			{
				// closed
				typedef void (*FunctionPointerType) (void*, SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A *, int32_t, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___inputSource1, targetMethod);
			}
		}
		else if (___parameterCount != 2)
		{
			// open
			if (il2cpp_codegen_method_is_virtual(targetMethod) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker1< int32_t >::Invoke(targetMethod, ___fromAction0, ___inputSource1);
					else
						GenericVirtActionInvoker1< int32_t >::Invoke(targetMethod, ___fromAction0, ___inputSource1);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker1< int32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), ___fromAction0, ___inputSource1);
					else
						VirtActionInvoker1< int32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), ___fromAction0, ___inputSource1);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(&___inputSource1) - 1), targetMethod);
				}
				typedef void (*FunctionPointerType) (SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A *, int32_t, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___fromAction0, ___inputSource1, targetMethod);
			}
		}
		else
		{
			// closed
			if (targetThis != NULL && il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker2< SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A *, int32_t >::Invoke(targetMethod, targetThis, ___fromAction0, ___inputSource1);
					else
						GenericVirtActionInvoker2< SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A *, int32_t >::Invoke(targetMethod, targetThis, ___fromAction0, ___inputSource1);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker2< SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A *, int32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___fromAction0, ___inputSource1);
					else
						VirtActionInvoker2< SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A *, int32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___fromAction0, ___inputSource1);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, int32_t, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(___fromAction0) - 1), ___inputSource1, targetMethod);
				}
				if (targetThis == NULL)
				{
					typedef void (*FunctionPointerType) (SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A *, int32_t, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___fromAction0, ___inputSource1, targetMethod);
				}
				else
				{
					typedef void (*FunctionPointerType) (void*, SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A *, int32_t, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___inputSource1, targetMethod);
				}
			}
		}
	}
}
// System.IAsyncResult Valve.VR.SteamVR_Behaviour_Skeleton_UpdateHandler::BeginInvoke(Valve.VR.SteamVR_Behaviour_Skeleton,Valve.VR.SteamVR_Input_Sources,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* UpdateHandler_BeginInvoke_mC7F8AD7BCDC463BCE3670EF86097ADAEA8FD3C5E (UpdateHandler_t529F28858847FB086B7F9A7A7E52860C7430976A * __this, SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A * ___fromAction0, int32_t ___inputSource1, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback2, RuntimeObject * ___object3, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (UpdateHandler_BeginInvoke_mC7F8AD7BCDC463BCE3670EF86097ADAEA8FD3C5E_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[3] = {0};
	__d_args[0] = ___fromAction0;
	__d_args[1] = Box(SteamVR_Input_Sources_tCE41AA589FB3B9516BDE0DFABDCB4AAEA29528F7_il2cpp_TypeInfo_var, &___inputSource1);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback2, (RuntimeObject*)___object3);
}
// System.Void Valve.VR.SteamVR_Behaviour_Skeleton_UpdateHandler::EndInvoke(System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UpdateHandler_EndInvoke_m1D388172A18369CA220223C2C13A65C0182642A4 (UpdateHandler_t529F28858847FB086B7F9A7A7E52860C7430976A * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Valve.VR.SteamVR_Behaviour_Skeleton_ValidPoseChangeHandler::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ValidPoseChangeHandler__ctor_mCFC7817BC310A49AF7F3D96AF425481F6CB4B536 (ValidPoseChangeHandler_tB007A90D7183653C99CE0E9FA649882562C1BE53 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Void Valve.VR.SteamVR_Behaviour_Skeleton_ValidPoseChangeHandler::Invoke(Valve.VR.SteamVR_Behaviour_Skeleton,Valve.VR.SteamVR_Input_Sources,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ValidPoseChangeHandler_Invoke_mC8E9C4FFBF81127EA0DE513D296C84C8E3DB06AD (ValidPoseChangeHandler_tB007A90D7183653C99CE0E9FA649882562C1BE53 * __this, SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A * ___fromAction0, int32_t ___inputSource1, bool ___validPose2, const RuntimeMethod* method)
{
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 3)
			{
				// open
				typedef void (*FunctionPointerType) (SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A *, int32_t, bool, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___fromAction0, ___inputSource1, ___validPose2, targetMethod);
			}
			else
			{
				// closed
				typedef void (*FunctionPointerType) (void*, SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A *, int32_t, bool, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___inputSource1, ___validPose2, targetMethod);
			}
		}
		else if (___parameterCount != 3)
		{
			// open
			if (il2cpp_codegen_method_is_virtual(targetMethod) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker2< int32_t, bool >::Invoke(targetMethod, ___fromAction0, ___inputSource1, ___validPose2);
					else
						GenericVirtActionInvoker2< int32_t, bool >::Invoke(targetMethod, ___fromAction0, ___inputSource1, ___validPose2);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker2< int32_t, bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), ___fromAction0, ___inputSource1, ___validPose2);
					else
						VirtActionInvoker2< int32_t, bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), ___fromAction0, ___inputSource1, ___validPose2);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(&___inputSource1) - 1), ___validPose2, targetMethod);
				}
				typedef void (*FunctionPointerType) (SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A *, int32_t, bool, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___fromAction0, ___inputSource1, ___validPose2, targetMethod);
			}
		}
		else
		{
			// closed
			if (targetThis != NULL && il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker3< SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A *, int32_t, bool >::Invoke(targetMethod, targetThis, ___fromAction0, ___inputSource1, ___validPose2);
					else
						GenericVirtActionInvoker3< SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A *, int32_t, bool >::Invoke(targetMethod, targetThis, ___fromAction0, ___inputSource1, ___validPose2);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker3< SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A *, int32_t, bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___fromAction0, ___inputSource1, ___validPose2);
					else
						VirtActionInvoker3< SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A *, int32_t, bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___fromAction0, ___inputSource1, ___validPose2);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, int32_t, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(___fromAction0) - 1), ___inputSource1, ___validPose2, targetMethod);
				}
				if (targetThis == NULL)
				{
					typedef void (*FunctionPointerType) (SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A *, int32_t, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___fromAction0, ___inputSource1, ___validPose2, targetMethod);
				}
				else
				{
					typedef void (*FunctionPointerType) (void*, SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A *, int32_t, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___inputSource1, ___validPose2, targetMethod);
				}
			}
		}
	}
}
// System.IAsyncResult Valve.VR.SteamVR_Behaviour_Skeleton_ValidPoseChangeHandler::BeginInvoke(Valve.VR.SteamVR_Behaviour_Skeleton,Valve.VR.SteamVR_Input_Sources,System.Boolean,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* ValidPoseChangeHandler_BeginInvoke_m6535B5B602C12A1ED567C6399E3E5F397607041B (ValidPoseChangeHandler_tB007A90D7183653C99CE0E9FA649882562C1BE53 * __this, SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A * ___fromAction0, int32_t ___inputSource1, bool ___validPose2, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback3, RuntimeObject * ___object4, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (ValidPoseChangeHandler_BeginInvoke_m6535B5B602C12A1ED567C6399E3E5F397607041B_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[4] = {0};
	__d_args[0] = ___fromAction0;
	__d_args[1] = Box(SteamVR_Input_Sources_tCE41AA589FB3B9516BDE0DFABDCB4AAEA29528F7_il2cpp_TypeInfo_var, &___inputSource1);
	__d_args[2] = Box(Boolean_tB53F6830F670160873277339AA58F15CAED4399C_il2cpp_TypeInfo_var, &___validPose2);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback3, (RuntimeObject*)___object4);
}
// System.Void Valve.VR.SteamVR_Behaviour_Skeleton_ValidPoseChangeHandler::EndInvoke(System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ValidPoseChangeHandler_EndInvoke_mA4171E2EF1BE2C21F6A1036A605258B0238C7C50 (ValidPoseChangeHandler_tB007A90D7183653C99CE0E9FA649882562C1BE53 * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Valve.VR.SteamVR_Behaviour_SkeletonCustom::AssignBonesArray()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_SkeletonCustom_AssignBonesArray_mBC0E357C3F265DB8DD0EBD24726563D65F825AF0 (SteamVR_Behaviour_SkeletonCustom_t9C282A2B1009A9AEBA27B48F403138E32EC623E7 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_SkeletonCustom_AssignBonesArray_mBC0E357C3F265DB8DD0EBD24726563D65F825AF0_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Behaviour_SkeletonCustom_AssignBonesArray_mBC0E357C3F265DB8DD0EBD24726563D65F825AF0_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10835));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 10836));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10837));
		// bones[SteamVR_Skeleton_JointIndexes.wrist] = _wrist;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10838));
		TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804* L_0 = ((SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A *)__this)->get_bones_35();
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_1 = __this->get__wrist_38();
		NullCheck(L_0);
		ArrayElementTypeCheck (L_0, L_1);
		(L_0)->SetAt(static_cast<il2cpp_array_size_t>(1), (Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA *)L_1);
		// bones[SteamVR_Skeleton_JointIndexes.thumbProximal] = _thumbProximal;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10839));
		TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804* L_2 = ((SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A *)__this)->get_bones_35();
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_3 = __this->get__thumbProximal_40();
		NullCheck(L_2);
		ArrayElementTypeCheck (L_2, L_3);
		(L_2)->SetAt(static_cast<il2cpp_array_size_t>(2), (Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA *)L_3);
		// bones[SteamVR_Skeleton_JointIndexes.thumbMiddle] = _thumbMiddle;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10840));
		TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804* L_4 = ((SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A *)__this)->get_bones_35();
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_5 = __this->get__thumbMiddle_41();
		NullCheck(L_4);
		ArrayElementTypeCheck (L_4, L_5);
		(L_4)->SetAt(static_cast<il2cpp_array_size_t>(3), (Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA *)L_5);
		// bones[SteamVR_Skeleton_JointIndexes.thumbDistal] = _thumbDistal;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10841));
		TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804* L_6 = ((SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A *)__this)->get_bones_35();
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_7 = __this->get__thumbDistal_42();
		NullCheck(L_6);
		ArrayElementTypeCheck (L_6, L_7);
		(L_6)->SetAt(static_cast<il2cpp_array_size_t>(4), (Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA *)L_7);
		// bones[SteamVR_Skeleton_JointIndexes.thumbTip] = _thumbTip;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10842));
		TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804* L_8 = ((SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A *)__this)->get_bones_35();
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_9 = __this->get__thumbTip_43();
		NullCheck(L_8);
		ArrayElementTypeCheck (L_8, L_9);
		(L_8)->SetAt(static_cast<il2cpp_array_size_t>(5), (Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA *)L_9);
		// bones[SteamVR_Skeleton_JointIndexes.thumbAux] = _thumbAux;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10843));
		TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804* L_10 = ((SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A *)__this)->get_bones_35();
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_11 = __this->get__thumbAux_44();
		NullCheck(L_10);
		ArrayElementTypeCheck (L_10, L_11);
		(L_10)->SetAt(static_cast<il2cpp_array_size_t>(((int32_t)26)), (Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA *)L_11);
		// bones[SteamVR_Skeleton_JointIndexes.indexProximal] = _indexProximal;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10844));
		TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804* L_12 = ((SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A *)__this)->get_bones_35();
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_13 = __this->get__indexProximal_46();
		NullCheck(L_12);
		ArrayElementTypeCheck (L_12, L_13);
		(L_12)->SetAt(static_cast<il2cpp_array_size_t>(7), (Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA *)L_13);
		// bones[SteamVR_Skeleton_JointIndexes.indexMiddle] = _indexMiddle;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10845));
		TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804* L_14 = ((SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A *)__this)->get_bones_35();
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_15 = __this->get__indexMiddle_47();
		NullCheck(L_14);
		ArrayElementTypeCheck (L_14, L_15);
		(L_14)->SetAt(static_cast<il2cpp_array_size_t>(8), (Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA *)L_15);
		// bones[SteamVR_Skeleton_JointIndexes.indexDistal] = _indexDistal;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10846));
		TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804* L_16 = ((SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A *)__this)->get_bones_35();
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_17 = __this->get__indexDistal_48();
		NullCheck(L_16);
		ArrayElementTypeCheck (L_16, L_17);
		(L_16)->SetAt(static_cast<il2cpp_array_size_t>(((int32_t)9)), (Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA *)L_17);
		// bones[SteamVR_Skeleton_JointIndexes.indexTip] = _indexTip;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10847));
		TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804* L_18 = ((SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A *)__this)->get_bones_35();
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_19 = __this->get__indexTip_49();
		NullCheck(L_18);
		ArrayElementTypeCheck (L_18, L_19);
		(L_18)->SetAt(static_cast<il2cpp_array_size_t>(((int32_t)10)), (Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA *)L_19);
		// bones[SteamVR_Skeleton_JointIndexes.indexAux] = _indexAux;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10848));
		TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804* L_20 = ((SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A *)__this)->get_bones_35();
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_21 = __this->get__indexAux_50();
		NullCheck(L_20);
		ArrayElementTypeCheck (L_20, L_21);
		(L_20)->SetAt(static_cast<il2cpp_array_size_t>(((int32_t)27)), (Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA *)L_21);
		// bones[SteamVR_Skeleton_JointIndexes.middleProximal] = _middleProximal;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10849));
		TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804* L_22 = ((SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A *)__this)->get_bones_35();
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_23 = __this->get__middleProximal_52();
		NullCheck(L_22);
		ArrayElementTypeCheck (L_22, L_23);
		(L_22)->SetAt(static_cast<il2cpp_array_size_t>(((int32_t)12)), (Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA *)L_23);
		// bones[SteamVR_Skeleton_JointIndexes.middleMiddle] = _middleMiddle;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10850));
		TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804* L_24 = ((SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A *)__this)->get_bones_35();
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_25 = __this->get__middleMiddle_53();
		NullCheck(L_24);
		ArrayElementTypeCheck (L_24, L_25);
		(L_24)->SetAt(static_cast<il2cpp_array_size_t>(((int32_t)13)), (Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA *)L_25);
		// bones[SteamVR_Skeleton_JointIndexes.middleDistal] = _middleDistal;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10851));
		TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804* L_26 = ((SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A *)__this)->get_bones_35();
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_27 = __this->get__middleDistal_54();
		NullCheck(L_26);
		ArrayElementTypeCheck (L_26, L_27);
		(L_26)->SetAt(static_cast<il2cpp_array_size_t>(((int32_t)14)), (Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA *)L_27);
		// bones[SteamVR_Skeleton_JointIndexes.middleTip] = _middleTip;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10852));
		TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804* L_28 = ((SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A *)__this)->get_bones_35();
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_29 = __this->get__middleTip_55();
		NullCheck(L_28);
		ArrayElementTypeCheck (L_28, L_29);
		(L_28)->SetAt(static_cast<il2cpp_array_size_t>(((int32_t)15)), (Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA *)L_29);
		// bones[SteamVR_Skeleton_JointIndexes.middleAux] = _middleAux;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10853));
		TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804* L_30 = ((SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A *)__this)->get_bones_35();
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_31 = __this->get__middleAux_56();
		NullCheck(L_30);
		ArrayElementTypeCheck (L_30, L_31);
		(L_30)->SetAt(static_cast<il2cpp_array_size_t>(((int32_t)28)), (Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA *)L_31);
		// bones[SteamVR_Skeleton_JointIndexes.ringProximal] = _ringProximal;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10854));
		TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804* L_32 = ((SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A *)__this)->get_bones_35();
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_33 = __this->get__ringProximal_58();
		NullCheck(L_32);
		ArrayElementTypeCheck (L_32, L_33);
		(L_32)->SetAt(static_cast<il2cpp_array_size_t>(((int32_t)17)), (Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA *)L_33);
		// bones[SteamVR_Skeleton_JointIndexes.ringMiddle] = _ringMiddle;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10855));
		TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804* L_34 = ((SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A *)__this)->get_bones_35();
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_35 = __this->get__ringMiddle_59();
		NullCheck(L_34);
		ArrayElementTypeCheck (L_34, L_35);
		(L_34)->SetAt(static_cast<il2cpp_array_size_t>(((int32_t)18)), (Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA *)L_35);
		// bones[SteamVR_Skeleton_JointIndexes.ringDistal] = _ringDistal;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10856));
		TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804* L_36 = ((SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A *)__this)->get_bones_35();
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_37 = __this->get__ringDistal_60();
		NullCheck(L_36);
		ArrayElementTypeCheck (L_36, L_37);
		(L_36)->SetAt(static_cast<il2cpp_array_size_t>(((int32_t)19)), (Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA *)L_37);
		// bones[SteamVR_Skeleton_JointIndexes.ringTip] = _ringTip;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10857));
		TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804* L_38 = ((SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A *)__this)->get_bones_35();
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_39 = __this->get__ringTip_61();
		NullCheck(L_38);
		ArrayElementTypeCheck (L_38, L_39);
		(L_38)->SetAt(static_cast<il2cpp_array_size_t>(((int32_t)20)), (Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA *)L_39);
		// bones[SteamVR_Skeleton_JointIndexes.ringAux] = _ringAux;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10858));
		TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804* L_40 = ((SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A *)__this)->get_bones_35();
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_41 = __this->get__ringAux_62();
		NullCheck(L_40);
		ArrayElementTypeCheck (L_40, L_41);
		(L_40)->SetAt(static_cast<il2cpp_array_size_t>(((int32_t)29)), (Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA *)L_41);
		// bones[SteamVR_Skeleton_JointIndexes.pinkyProximal] = _pinkyProximal;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10859));
		TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804* L_42 = ((SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A *)__this)->get_bones_35();
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_43 = __this->get__pinkyProximal_64();
		NullCheck(L_42);
		ArrayElementTypeCheck (L_42, L_43);
		(L_42)->SetAt(static_cast<il2cpp_array_size_t>(((int32_t)22)), (Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA *)L_43);
		// bones[SteamVR_Skeleton_JointIndexes.pinkyMiddle] = _pinkyMiddle;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10860));
		TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804* L_44 = ((SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A *)__this)->get_bones_35();
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_45 = __this->get__pinkyMiddle_65();
		NullCheck(L_44);
		ArrayElementTypeCheck (L_44, L_45);
		(L_44)->SetAt(static_cast<il2cpp_array_size_t>(((int32_t)23)), (Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA *)L_45);
		// bones[SteamVR_Skeleton_JointIndexes.pinkyDistal] = _pinkyDistal;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10861));
		TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804* L_46 = ((SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A *)__this)->get_bones_35();
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_47 = __this->get__pinkyDistal_66();
		NullCheck(L_46);
		ArrayElementTypeCheck (L_46, L_47);
		(L_46)->SetAt(static_cast<il2cpp_array_size_t>(((int32_t)24)), (Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA *)L_47);
		// bones[SteamVR_Skeleton_JointIndexes.pinkyTip] = _pinkyTip;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10862));
		TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804* L_48 = ((SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A *)__this)->get_bones_35();
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_49 = __this->get__pinkyTip_67();
		NullCheck(L_48);
		ArrayElementTypeCheck (L_48, L_49);
		(L_48)->SetAt(static_cast<il2cpp_array_size_t>(((int32_t)25)), (Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA *)L_49);
		// bones[SteamVR_Skeleton_JointIndexes.pinkyAux] = _pinkyAux;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10863));
		TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804* L_50 = ((SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A *)__this)->get_bones_35();
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_51 = __this->get__pinkyAux_68();
		NullCheck(L_50);
		ArrayElementTypeCheck (L_50, L_51);
		(L_50)->SetAt(static_cast<il2cpp_array_size_t>(((int32_t)30)), (Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA *)L_51);
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10864));
		return;
	}
}
// System.Void Valve.VR.SteamVR_Behaviour_SkeletonCustom::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_SkeletonCustom__ctor_mE33662F16E792F1961913A771E275CE90D627F1E (SteamVR_Behaviour_SkeletonCustom_t9C282A2B1009A9AEBA27B48F403138E32EC623E7 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_SkeletonCustom__ctor_mE33662F16E792F1961913A771E275CE90D627F1E_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Behaviour_SkeletonCustom__ctor_mE33662F16E792F1961913A771E275CE90D627F1E_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A_il2cpp_TypeInfo_var);
		SteamVR_Behaviour_Skeleton__ctor_m17A8835FCCADE3C113890BE1BCA5C9F2B3EA9E85(__this, /*hidden argument*/NULL);
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Valve.VR.SteamVR_Behaviour_SkeletonEvent::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_SkeletonEvent__ctor_m46F44931D19EC5405BD2E090465D85804F06324F (SteamVR_Behaviour_SkeletonEvent_t2A4AAE28B8BB6F5E52B7A7FAF6ADF1F3DE537627 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_SkeletonEvent__ctor_m46F44931D19EC5405BD2E090465D85804F06324F_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Behaviour_SkeletonEvent__ctor_m46F44931D19EC5405BD2E090465D85804F06324F_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		UnityEvent_2__ctor_m3F350BFADEB9F4B824F64E47402AB7BAC7F62A9E(__this, /*hidden argument*/UnityEvent_2__ctor_m3F350BFADEB9F4B824F64E47402AB7BAC7F62A9E_RuntimeMethod_var);
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Valve.VR.SteamVR_Behaviour_Skeleton_ConnectedChangedEvent::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_Skeleton_ConnectedChangedEvent__ctor_m5DD8EACEFBCDEF6BE0AE61BE1FC26FBF1F8EB6CF (SteamVR_Behaviour_Skeleton_ConnectedChangedEvent_t448A3C929AA8F491BB03F8340DC791D40A546C85 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Skeleton_ConnectedChangedEvent__ctor_m5DD8EACEFBCDEF6BE0AE61BE1FC26FBF1F8EB6CF_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Behaviour_Skeleton_ConnectedChangedEvent__ctor_m5DD8EACEFBCDEF6BE0AE61BE1FC26FBF1F8EB6CF_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		UnityEvent_3__ctor_m572ABF176FBC7C0C230E5F33E58FB5BEF2FB59AE(__this, /*hidden argument*/UnityEvent_3__ctor_m572ABF176FBC7C0C230E5F33E58FB5BEF2FB59AE_RuntimeMethod_var);
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Valve.VR.SteamVR_Behaviour_Skeleton_TrackingChangedEvent::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_Skeleton_TrackingChangedEvent__ctor_mC3CA08280EC00CE2BD1861112B52CF3F30ADFA8C (SteamVR_Behaviour_Skeleton_TrackingChangedEvent_tE5D388C0E5523A46227EEF4DC31BB575AE0E6E90 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Skeleton_TrackingChangedEvent__ctor_mC3CA08280EC00CE2BD1861112B52CF3F30ADFA8C_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Behaviour_Skeleton_TrackingChangedEvent__ctor_mC3CA08280EC00CE2BD1861112B52CF3F30ADFA8C_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		UnityEvent_3__ctor_m4B73B3F2ED1B60992244628A5E78170B8628C013(__this, /*hidden argument*/UnityEvent_3__ctor_m4B73B3F2ED1B60992244628A5E78170B8628C013_RuntimeMethod_var);
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Boolean Valve.VR.SteamVR_Behaviour_Vector2::get_isActive()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Behaviour_Vector2_get_isActive_mC0F11ED81119D1F6819FC33BD07899381E13AFB1 (SteamVR_Behaviour_Vector2_t4F9DB23C7DF068052EAAECC07B5D28C1A6971C46 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Vector2_get_isActive_mC0F11ED81119D1F6819FC33BD07899381E13AFB1_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Behaviour_Vector2_get_isActive_mC0F11ED81119D1F6819FC33BD07899381E13AFB1_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10865));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 10866));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10867));
		// public bool isActive { get { return vector2Action.GetActive(inputSource); } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10868));
		SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 * L_0 = __this->get_vector2Action_4();
		int32_t L_1 = __this->get_inputSource_5();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10870));
		NullCheck(L_0);
		bool L_2 = VirtFuncInvoker1< bool, int32_t >::Invoke(31 /* System.Boolean Valve.VR.SteamVR_Action::GetActive(Valve.VR.SteamVR_Input_Sources) */, L_0, L_1);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10870));
		V_0 = L_2;
		goto IL_0015;
	}

IL_0015:
	{
		// public bool isActive { get { return vector2Action.GetActive(inputSource); } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10869));
		bool L_3 = V_0;
		return L_3;
	}
}
// System.Void Valve.VR.SteamVR_Behaviour_Vector2::OnEnable()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_Vector2_OnEnable_mA29B13262AA398FA2E67A0C3912371EDB78207B8 (SteamVR_Behaviour_Vector2_t4F9DB23C7DF068052EAAECC07B5D28C1A6971C46 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Vector2_OnEnable_mA29B13262AA398FA2E67A0C3912371EDB78207B8_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Behaviour_Vector2_OnEnable_mA29B13262AA398FA2E67A0C3912371EDB78207B8_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10871));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 10872));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10873));
		// if (vector2Action == null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10874));
		SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 * L_0 = __this->get_vector2Action_4();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10881));
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734_il2cpp_TypeInfo_var);
		bool L_1 = SteamVR_Action_op_Equality_m16F1109154021CF7DC424B937A8AA5FC34463EE2(L_0, (SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10881));
		V_0 = L_1;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10875));
		bool L_2 = V_0;
		if (!L_2)
		{
			goto IL_0020;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10876));
		// Debug.LogError("[SteamVR] Vector2 action not set.", this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10877));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10882));
		IL2CPP_RUNTIME_CLASS_INIT(Debug_t7B5FCB117E2FD63B6838BC52821B252E2BFB61C4_il2cpp_TypeInfo_var);
		Debug_LogError_m97139CB2EE76D5CD8308C1AD0499A5F163FC7F51(_stringLiteralA68F7597FD04F11DD2B6E704B46AE0F6A0899716, __this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10882));
		// return;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10878));
		goto IL_0027;
	}

IL_0020:
	{
		// AddHandlers();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10879));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10883));
		SteamVR_Behaviour_Vector2_AddHandlers_mC05D9F4C900DFCEEB7E92A1B33D6B02D2941228B(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10883));
	}

IL_0027:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10880));
		return;
	}
}
// System.Void Valve.VR.SteamVR_Behaviour_Vector2::OnDisable()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_Vector2_OnDisable_m2D449C3E672D95A92FAE853BFA40A88194BC0969 (SteamVR_Behaviour_Vector2_t4F9DB23C7DF068052EAAECC07B5D28C1A6971C46 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Vector2_OnDisable_m2D449C3E672D95A92FAE853BFA40A88194BC0969_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Behaviour_Vector2_OnDisable_m2D449C3E672D95A92FAE853BFA40A88194BC0969_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10884));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 10885));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10886));
		// RemoveHandlers();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10887));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10889));
		SteamVR_Behaviour_Vector2_RemoveHandlers_mAA7C45E84F7DBCB10D7FA01AA967FC8650519514(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10889));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10888));
		return;
	}
}
// System.Void Valve.VR.SteamVR_Behaviour_Vector2::AddHandlers()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_Vector2_AddHandlers_mC05D9F4C900DFCEEB7E92A1B33D6B02D2941228B (SteamVR_Behaviour_Vector2_t4F9DB23C7DF068052EAAECC07B5D28C1A6971C46 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Vector2_AddHandlers_mC05D9F4C900DFCEEB7E92A1B33D6B02D2941228B_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Behaviour_Vector2_AddHandlers_mC05D9F4C900DFCEEB7E92A1B33D6B02D2941228B_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10890));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 10891));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10892));
		// vector2Action[inputSource].onUpdate += SteamVR_Behaviour_Vector2_OnUpdate;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10893));
		SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 * L_0 = __this->get_vector2Action_4();
		int32_t L_1 = __this->get_inputSource_5();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10897));
		NullCheck(L_0);
		SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * L_2 = VirtFuncInvoker1< SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 *, int32_t >::Invoke(36 /* SourceElement Valve.VR.SteamVR_Action`2<Valve.VR.SteamVR_Action_Vector2_Source_Map,Valve.VR.SteamVR_Action_Vector2_Source>::get_Item(Valve.VR.SteamVR_Input_Sources) */, L_0, L_1);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10897));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10898));
		UpdateHandler_t5CC79EAAED92D106A0FBE46F2E73949A31CDA177 * L_3 = (UpdateHandler_t5CC79EAAED92D106A0FBE46F2E73949A31CDA177 *)il2cpp_codegen_object_new(UpdateHandler_t5CC79EAAED92D106A0FBE46F2E73949A31CDA177_il2cpp_TypeInfo_var);
		UpdateHandler__ctor_mEFB9316D6DB2AE3E0C8C6495E4F31F5AF7B96EA7(L_3, __this, (intptr_t)((intptr_t)SteamVR_Behaviour_Vector2_SteamVR_Behaviour_Vector2_OnUpdate_m5FBD9BD66968730F6A07EC8DB43A81E5AB0508FC_RuntimeMethod_var), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10898));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10899));
		NullCheck(L_2);
		SteamVR_Action_Vector2_Source_add_onUpdate_mF42BBDFA8EFE2D15571BE512017F7D2C8A016345(L_2, L_3, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10899));
		// vector2Action[inputSource].onChange += SteamVR_Behaviour_Vector2_OnChange;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10894));
		SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 * L_4 = __this->get_vector2Action_4();
		int32_t L_5 = __this->get_inputSource_5();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10900));
		NullCheck(L_4);
		SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * L_6 = VirtFuncInvoker1< SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 *, int32_t >::Invoke(36 /* SourceElement Valve.VR.SteamVR_Action`2<Valve.VR.SteamVR_Action_Vector2_Source_Map,Valve.VR.SteamVR_Action_Vector2_Source>::get_Item(Valve.VR.SteamVR_Input_Sources) */, L_4, L_5);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10900));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10901));
		ChangeHandler_t716932883EC2BC15936E355D02A9D68B8F9EA6B6 * L_7 = (ChangeHandler_t716932883EC2BC15936E355D02A9D68B8F9EA6B6 *)il2cpp_codegen_object_new(ChangeHandler_t716932883EC2BC15936E355D02A9D68B8F9EA6B6_il2cpp_TypeInfo_var);
		ChangeHandler__ctor_mFF4992C9413970CEDCB6B9790954BA7C6C6C61B3(L_7, __this, (intptr_t)((intptr_t)SteamVR_Behaviour_Vector2_SteamVR_Behaviour_Vector2_OnChange_mD4CAC74D32F7CCDF7593747535879B7611DF8CF0_RuntimeMethod_var), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10901));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10902));
		NullCheck(L_6);
		SteamVR_Action_Vector2_Source_add_onChange_m0E890E6CFC54755D7CA6271AACB94F0D16195BFC(L_6, L_7, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10902));
		// vector2Action[inputSource].onAxis += SteamVR_Behaviour_Vector2_OnAxis;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10895));
		SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 * L_8 = __this->get_vector2Action_4();
		int32_t L_9 = __this->get_inputSource_5();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10903));
		NullCheck(L_8);
		SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * L_10 = VirtFuncInvoker1< SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 *, int32_t >::Invoke(36 /* SourceElement Valve.VR.SteamVR_Action`2<Valve.VR.SteamVR_Action_Vector2_Source_Map,Valve.VR.SteamVR_Action_Vector2_Source>::get_Item(Valve.VR.SteamVR_Input_Sources) */, L_8, L_9);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10903));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10904));
		AxisHandler_t97FB692AF5465040A2929AB663941933E3567689 * L_11 = (AxisHandler_t97FB692AF5465040A2929AB663941933E3567689 *)il2cpp_codegen_object_new(AxisHandler_t97FB692AF5465040A2929AB663941933E3567689_il2cpp_TypeInfo_var);
		AxisHandler__ctor_m43DE295DBA352E97E0ADDF76C348978B40EA4116(L_11, __this, (intptr_t)((intptr_t)SteamVR_Behaviour_Vector2_SteamVR_Behaviour_Vector2_OnAxis_m4A512AD29A9677D0DA0309B8A8DBACE6ABA3940A_RuntimeMethod_var), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10904));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10905));
		NullCheck(L_10);
		SteamVR_Action_Vector2_Source_add_onAxis_m61879208AE0900224DF6DAC2B5F9AB437F3E3F65(L_10, L_11, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10905));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10896));
		return;
	}
}
// System.Void Valve.VR.SteamVR_Behaviour_Vector2::RemoveHandlers()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_Vector2_RemoveHandlers_mAA7C45E84F7DBCB10D7FA01AA967FC8650519514 (SteamVR_Behaviour_Vector2_t4F9DB23C7DF068052EAAECC07B5D28C1A6971C46 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Vector2_RemoveHandlers_mAA7C45E84F7DBCB10D7FA01AA967FC8650519514_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Behaviour_Vector2_RemoveHandlers_mAA7C45E84F7DBCB10D7FA01AA967FC8650519514_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10906));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 10907));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10908));
		// if (vector2Action != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10909));
		SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 * L_0 = __this->get_vector2Action_4();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10917));
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734_il2cpp_TypeInfo_var);
		bool L_1 = SteamVR_Action_op_Inequality_m7114B6E3669F8C55CD3B5E4EC3A897648CBD0F8A(L_0, (SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10917));
		V_0 = L_1;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10910));
		bool L_2 = V_0;
		if (!L_2)
		{
			goto IL_007c;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10911));
		// vector2Action[inputSource].onUpdate -= SteamVR_Behaviour_Vector2_OnUpdate;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10912));
		SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 * L_3 = __this->get_vector2Action_4();
		int32_t L_4 = __this->get_inputSource_5();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10918));
		NullCheck(L_3);
		SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * L_5 = VirtFuncInvoker1< SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 *, int32_t >::Invoke(36 /* SourceElement Valve.VR.SteamVR_Action`2<Valve.VR.SteamVR_Action_Vector2_Source_Map,Valve.VR.SteamVR_Action_Vector2_Source>::get_Item(Valve.VR.SteamVR_Input_Sources) */, L_3, L_4);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10918));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10919));
		UpdateHandler_t5CC79EAAED92D106A0FBE46F2E73949A31CDA177 * L_6 = (UpdateHandler_t5CC79EAAED92D106A0FBE46F2E73949A31CDA177 *)il2cpp_codegen_object_new(UpdateHandler_t5CC79EAAED92D106A0FBE46F2E73949A31CDA177_il2cpp_TypeInfo_var);
		UpdateHandler__ctor_mEFB9316D6DB2AE3E0C8C6495E4F31F5AF7B96EA7(L_6, __this, (intptr_t)((intptr_t)SteamVR_Behaviour_Vector2_SteamVR_Behaviour_Vector2_OnUpdate_m5FBD9BD66968730F6A07EC8DB43A81E5AB0508FC_RuntimeMethod_var), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10919));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10920));
		NullCheck(L_5);
		SteamVR_Action_Vector2_Source_remove_onUpdate_m7FA21E9B212C4E869AFE43AAE5D3138799CA8320(L_5, L_6, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10920));
		// vector2Action[inputSource].onChange -= SteamVR_Behaviour_Vector2_OnChange;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10913));
		SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 * L_7 = __this->get_vector2Action_4();
		int32_t L_8 = __this->get_inputSource_5();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10921));
		NullCheck(L_7);
		SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * L_9 = VirtFuncInvoker1< SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 *, int32_t >::Invoke(36 /* SourceElement Valve.VR.SteamVR_Action`2<Valve.VR.SteamVR_Action_Vector2_Source_Map,Valve.VR.SteamVR_Action_Vector2_Source>::get_Item(Valve.VR.SteamVR_Input_Sources) */, L_7, L_8);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10921));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10922));
		ChangeHandler_t716932883EC2BC15936E355D02A9D68B8F9EA6B6 * L_10 = (ChangeHandler_t716932883EC2BC15936E355D02A9D68B8F9EA6B6 *)il2cpp_codegen_object_new(ChangeHandler_t716932883EC2BC15936E355D02A9D68B8F9EA6B6_il2cpp_TypeInfo_var);
		ChangeHandler__ctor_mFF4992C9413970CEDCB6B9790954BA7C6C6C61B3(L_10, __this, (intptr_t)((intptr_t)SteamVR_Behaviour_Vector2_SteamVR_Behaviour_Vector2_OnChange_mD4CAC74D32F7CCDF7593747535879B7611DF8CF0_RuntimeMethod_var), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10922));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10923));
		NullCheck(L_9);
		SteamVR_Action_Vector2_Source_remove_onChange_m6B9FFEDD2003E99E2C81E03B744E35528BCABEE1(L_9, L_10, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10923));
		// vector2Action[inputSource].onAxis -= SteamVR_Behaviour_Vector2_OnAxis;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10914));
		SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 * L_11 = __this->get_vector2Action_4();
		int32_t L_12 = __this->get_inputSource_5();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10924));
		NullCheck(L_11);
		SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * L_13 = VirtFuncInvoker1< SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 *, int32_t >::Invoke(36 /* SourceElement Valve.VR.SteamVR_Action`2<Valve.VR.SteamVR_Action_Vector2_Source_Map,Valve.VR.SteamVR_Action_Vector2_Source>::get_Item(Valve.VR.SteamVR_Input_Sources) */, L_11, L_12);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10924));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10925));
		AxisHandler_t97FB692AF5465040A2929AB663941933E3567689 * L_14 = (AxisHandler_t97FB692AF5465040A2929AB663941933E3567689 *)il2cpp_codegen_object_new(AxisHandler_t97FB692AF5465040A2929AB663941933E3567689_il2cpp_TypeInfo_var);
		AxisHandler__ctor_m43DE295DBA352E97E0ADDF76C348978B40EA4116(L_14, __this, (intptr_t)((intptr_t)SteamVR_Behaviour_Vector2_SteamVR_Behaviour_Vector2_OnAxis_m4A512AD29A9677D0DA0309B8A8DBACE6ABA3940A_RuntimeMethod_var), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10925));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10926));
		NullCheck(L_13);
		SteamVR_Action_Vector2_Source_remove_onAxis_mF3D7E276BA4A72809424D8F02B91BC600C706A45(L_13, L_14, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10926));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10915));
	}

IL_007c:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10916));
		return;
	}
}
// System.Void Valve.VR.SteamVR_Behaviour_Vector2::SteamVR_Behaviour_Vector2_OnUpdate(Valve.VR.SteamVR_Action_Vector2,Valve.VR.SteamVR_Input_Sources,UnityEngine.Vector2,UnityEngine.Vector2)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_Vector2_SteamVR_Behaviour_Vector2_OnUpdate_m5FBD9BD66968730F6A07EC8DB43A81E5AB0508FC (SteamVR_Behaviour_Vector2_t4F9DB23C7DF068052EAAECC07B5D28C1A6971C46 * __this, SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 * ___fromAction0, int32_t ___fromSource1, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___newAxis2, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___newDelta3, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Vector2_SteamVR_Behaviour_Vector2_OnUpdate_m5FBD9BD66968730F6A07EC8DB43A81E5AB0508FC_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	bool V_1 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___fromAction0), (&___fromSource1), (&___newAxis2), (&___newDelta3));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Behaviour_Vector2_SteamVR_Behaviour_Vector2_OnUpdate_m5FBD9BD66968730F6A07EC8DB43A81E5AB0508FC_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10927));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 10928));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10929));
		// if (onUpdate != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10930));
		SteamVR_Behaviour_Vector2Event_tE9ABC41564061B6A2699778A901EC2A11DD2FBA5 * L_0 = __this->get_onUpdate_7();
		V_0 = (bool)((!(((RuntimeObject*)(SteamVR_Behaviour_Vector2Event_tE9ABC41564061B6A2699778A901EC2A11DD2FBA5 *)L_0) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10931));
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_0021;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10932));
		// onUpdate.Invoke(this, fromSource, newAxis, newDelta);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10933));
		SteamVR_Behaviour_Vector2Event_tE9ABC41564061B6A2699778A901EC2A11DD2FBA5 * L_2 = __this->get_onUpdate_7();
		int32_t L_3 = ___fromSource1;
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_4 = ___newAxis2;
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_5 = ___newDelta3;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10941));
		NullCheck(L_2);
		UnityEvent_4_Invoke_m6CED405A95F61142712F4A0D69660CD9E94E65F6(L_2, __this, L_3, L_4, L_5, /*hidden argument*/UnityEvent_4_Invoke_m6CED405A95F61142712F4A0D69660CD9E94E65F6_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10941));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10934));
	}

IL_0021:
	{
		// if (onUpdateEvent != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10935));
		UpdateHandler_tD71CF662F9B99D2E790533F02BA2B95FF3C1C1DF * L_6 = __this->get_onUpdateEvent_10();
		V_1 = (bool)((!(((RuntimeObject*)(UpdateHandler_tD71CF662F9B99D2E790533F02BA2B95FF3C1C1DF *)L_6) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10936));
		bool L_7 = V_1;
		if (!L_7)
		{
			goto IL_0041;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10937));
		// onUpdateEvent.Invoke(this, fromSource, newAxis, newDelta);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10938));
		UpdateHandler_tD71CF662F9B99D2E790533F02BA2B95FF3C1C1DF * L_8 = __this->get_onUpdateEvent_10();
		int32_t L_9 = ___fromSource1;
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_10 = ___newAxis2;
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_11 = ___newDelta3;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10942));
		NullCheck(L_8);
		UpdateHandler_Invoke_m436FA7CA597C931E6DF6A85337EECBF39F57D607(L_8, __this, L_9, L_10, L_11, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10942));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10939));
	}

IL_0041:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10940));
		return;
	}
}
// System.Void Valve.VR.SteamVR_Behaviour_Vector2::SteamVR_Behaviour_Vector2_OnChange(Valve.VR.SteamVR_Action_Vector2,Valve.VR.SteamVR_Input_Sources,UnityEngine.Vector2,UnityEngine.Vector2)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_Vector2_SteamVR_Behaviour_Vector2_OnChange_mD4CAC74D32F7CCDF7593747535879B7611DF8CF0 (SteamVR_Behaviour_Vector2_t4F9DB23C7DF068052EAAECC07B5D28C1A6971C46 * __this, SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 * ___fromAction0, int32_t ___fromSource1, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___newAxis2, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___newDelta3, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Vector2_SteamVR_Behaviour_Vector2_OnChange_mD4CAC74D32F7CCDF7593747535879B7611DF8CF0_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	bool V_1 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___fromAction0), (&___fromSource1), (&___newAxis2), (&___newDelta3));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Behaviour_Vector2_SteamVR_Behaviour_Vector2_OnChange_mD4CAC74D32F7CCDF7593747535879B7611DF8CF0_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10943));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 10944));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10945));
		// if (onChange != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10946));
		SteamVR_Behaviour_Vector2Event_tE9ABC41564061B6A2699778A901EC2A11DD2FBA5 * L_0 = __this->get_onChange_6();
		V_0 = (bool)((!(((RuntimeObject*)(SteamVR_Behaviour_Vector2Event_tE9ABC41564061B6A2699778A901EC2A11DD2FBA5 *)L_0) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10947));
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_0021;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10948));
		// onChange.Invoke(this, fromSource, newAxis, newDelta);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10949));
		SteamVR_Behaviour_Vector2Event_tE9ABC41564061B6A2699778A901EC2A11DD2FBA5 * L_2 = __this->get_onChange_6();
		int32_t L_3 = ___fromSource1;
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_4 = ___newAxis2;
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_5 = ___newDelta3;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10957));
		NullCheck(L_2);
		UnityEvent_4_Invoke_m6CED405A95F61142712F4A0D69660CD9E94E65F6(L_2, __this, L_3, L_4, L_5, /*hidden argument*/UnityEvent_4_Invoke_m6CED405A95F61142712F4A0D69660CD9E94E65F6_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10957));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10950));
	}

IL_0021:
	{
		// if (onChangeEvent != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10951));
		ChangeHandler_t37E638BA62CC9B06D1DD916B56CFB6E3A61C31DE * L_6 = __this->get_onChangeEvent_9();
		V_1 = (bool)((!(((RuntimeObject*)(ChangeHandler_t37E638BA62CC9B06D1DD916B56CFB6E3A61C31DE *)L_6) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10952));
		bool L_7 = V_1;
		if (!L_7)
		{
			goto IL_0041;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10953));
		// onChangeEvent.Invoke(this, fromSource, newAxis, newDelta);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10954));
		ChangeHandler_t37E638BA62CC9B06D1DD916B56CFB6E3A61C31DE * L_8 = __this->get_onChangeEvent_9();
		int32_t L_9 = ___fromSource1;
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_10 = ___newAxis2;
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_11 = ___newDelta3;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10958));
		NullCheck(L_8);
		ChangeHandler_Invoke_m62A161B16882357E45336EB0E4E4B35583C224C2(L_8, __this, L_9, L_10, L_11, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10958));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10955));
	}

IL_0041:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10956));
		return;
	}
}
// System.Void Valve.VR.SteamVR_Behaviour_Vector2::SteamVR_Behaviour_Vector2_OnAxis(Valve.VR.SteamVR_Action_Vector2,Valve.VR.SteamVR_Input_Sources,UnityEngine.Vector2,UnityEngine.Vector2)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_Vector2_SteamVR_Behaviour_Vector2_OnAxis_m4A512AD29A9677D0DA0309B8A8DBACE6ABA3940A (SteamVR_Behaviour_Vector2_t4F9DB23C7DF068052EAAECC07B5D28C1A6971C46 * __this, SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 * ___fromAction0, int32_t ___fromSource1, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___newAxis2, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___newDelta3, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Vector2_SteamVR_Behaviour_Vector2_OnAxis_m4A512AD29A9677D0DA0309B8A8DBACE6ABA3940A_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	bool V_1 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___fromAction0), (&___fromSource1), (&___newAxis2), (&___newDelta3));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Behaviour_Vector2_SteamVR_Behaviour_Vector2_OnAxis_m4A512AD29A9677D0DA0309B8A8DBACE6ABA3940A_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10959));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 10960));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10961));
		// if (onAxis != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10962));
		SteamVR_Behaviour_Vector2Event_tE9ABC41564061B6A2699778A901EC2A11DD2FBA5 * L_0 = __this->get_onAxis_8();
		V_0 = (bool)((!(((RuntimeObject*)(SteamVR_Behaviour_Vector2Event_tE9ABC41564061B6A2699778A901EC2A11DD2FBA5 *)L_0) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10963));
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_0021;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10964));
		// onAxis.Invoke(this, fromSource, newAxis, newDelta);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10965));
		SteamVR_Behaviour_Vector2Event_tE9ABC41564061B6A2699778A901EC2A11DD2FBA5 * L_2 = __this->get_onAxis_8();
		int32_t L_3 = ___fromSource1;
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_4 = ___newAxis2;
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_5 = ___newDelta3;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10973));
		NullCheck(L_2);
		UnityEvent_4_Invoke_m6CED405A95F61142712F4A0D69660CD9E94E65F6(L_2, __this, L_3, L_4, L_5, /*hidden argument*/UnityEvent_4_Invoke_m6CED405A95F61142712F4A0D69660CD9E94E65F6_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10973));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10966));
	}

IL_0021:
	{
		// if (onAxisEvent != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10967));
		AxisHandler_tBA72843A01CF3BF4DFCBECF1BC75EB817AE2D064 * L_6 = __this->get_onAxisEvent_11();
		V_1 = (bool)((!(((RuntimeObject*)(AxisHandler_tBA72843A01CF3BF4DFCBECF1BC75EB817AE2D064 *)L_6) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10968));
		bool L_7 = V_1;
		if (!L_7)
		{
			goto IL_0041;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10969));
		// onAxisEvent.Invoke(this, fromSource, newAxis, newDelta);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10970));
		AxisHandler_tBA72843A01CF3BF4DFCBECF1BC75EB817AE2D064 * L_8 = __this->get_onAxisEvent_11();
		int32_t L_9 = ___fromSource1;
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_10 = ___newAxis2;
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_11 = ___newDelta3;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10974));
		NullCheck(L_8);
		AxisHandler_Invoke_m4CFE2495B68A51C1E9F7FE310F6D5714BD5D5754(L_8, __this, L_9, L_10, L_11, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10974));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10971));
	}

IL_0041:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10972));
		return;
	}
}
// System.String Valve.VR.SteamVR_Behaviour_Vector2::GetLocalizedName(Valve.VR.EVRInputStringBits[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR String_t* SteamVR_Behaviour_Vector2_GetLocalizedName_m6B57CC11DBDC04BCB16053C579FB0919D383D05C (SteamVR_Behaviour_Vector2_t4F9DB23C7DF068052EAAECC07B5D28C1A6971C46 * __this, EVRInputStringBitsU5BU5D_t9F9E9B47CD745CAAB4F8EDC305D84DDF9E5BE511* ___localizedParts0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Vector2_GetLocalizedName_m6B57CC11DBDC04BCB16053C579FB0919D383D05C_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	String_t* V_1 = NULL;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___localizedParts0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Behaviour_Vector2_GetLocalizedName_m6B57CC11DBDC04BCB16053C579FB0919D383D05C_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10975));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 10976));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10977));
		// if (vector2Action != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10978));
		SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 * L_0 = __this->get_vector2Action_4();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10983));
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734_il2cpp_TypeInfo_var);
		bool L_1 = SteamVR_Action_op_Inequality_m7114B6E3669F8C55CD3B5E4EC3A897648CBD0F8A(L_0, (SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10983));
		V_0 = L_1;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10979));
		bool L_2 = V_0;
		if (!L_2)
		{
			goto IL_0026;
		}
	}
	{
		// return vector2Action.GetLocalizedOriginPart(inputSource, localizedParts);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10980));
		SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 * L_3 = __this->get_vector2Action_4();
		int32_t L_4 = __this->get_inputSource_5();
		EVRInputStringBitsU5BU5D_t9F9E9B47CD745CAAB4F8EDC305D84DDF9E5BE511* L_5 = ___localizedParts0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10984));
		NullCheck(L_3);
		String_t* L_6 = SteamVR_Action_In_2_GetLocalizedOriginPart_m36E1DB926E7A1E477057A130BB2121200989C1D5(L_3, L_4, L_5, /*hidden argument*/SteamVR_Action_In_2_GetLocalizedOriginPart_m36E1DB926E7A1E477057A130BB2121200989C1D5_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10984));
		V_1 = L_6;
		goto IL_002a;
	}

IL_0026:
	{
		// return null;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10981));
		V_1 = (String_t*)NULL;
		goto IL_002a;
	}

IL_002a:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 10982));
		String_t* L_7 = V_1;
		return L_7;
	}
}
// System.Void Valve.VR.SteamVR_Behaviour_Vector2::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_Vector2__ctor_m02B0D1C514750F0EE8806389ECD6650C6B005CA8 (SteamVR_Behaviour_Vector2_t4F9DB23C7DF068052EAAECC07B5D28C1A6971C46 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Vector2__ctor_m02B0D1C514750F0EE8806389ECD6650C6B005CA8_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Behaviour_Vector2__ctor_m02B0D1C514750F0EE8806389ECD6650C6B005CA8_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		MonoBehaviour__ctor_mEAEC84B222C60319D593E456D769B3311DFCEF97(__this, /*hidden argument*/NULL);
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR float SteamVR_Action_Vibration_Source_get_timeLastExecuted_m43631CC69AD4730B6DAD747F8917FF1968E1782C_inline (SteamVR_Action_Vibration_Source_tB30315A543AA13F11BB80C1D5C7DEDF37058C151 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vibration_Source_get_timeLastExecuted_m43631CC69AD4730B6DAD747F8917FF1968E1782CSteamVR12_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Vibration_Source_get_timeLastExecuted_m43631CC69AD4730B6DAD747F8917FF1968E1782C_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 8961));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 8962));
	{
		// public float timeLastExecuted { get; protected set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 8963));
		float L_0 = __this->get_U3CtimeLastExecutedU3Ek__BackingField_7();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Action_Vibration_Source_set_timeLastExecuted_m4CC891E603F4C83A336138B5DB8628B429BA45D5_inline (SteamVR_Action_Vibration_Source_tB30315A543AA13F11BB80C1D5C7DEDF37058C151 * __this, float ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vibration_Source_set_timeLastExecuted_m4CC891E603F4C83A336138B5DB8628B429BA45D5SteamVR12_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Vibration_Source_set_timeLastExecuted_m4CC891E603F4C83A336138B5DB8628B429BA45D5_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 8964));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 8965));
	{
		// public float timeLastExecuted { get; protected set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 8966));
		float L_0 = ___value0;
		__this->set_U3CtimeLastExecutedU3Ek__BackingField_7(L_0);
		return;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR int32_t SteamVR_Action_Source_get_inputSource_mAA1928183BB06E5C8CF950F65BA80635C25535D4_inline (SteamVR_Action_Source_t9D7428CDE39924074518EE6233D9A4FAB0C33CB0 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Source_get_inputSource_mAA1928183BB06E5C8CF950F65BA80635C25535D4SteamVR12_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Source_get_inputSource_mAA1928183BB06E5C8CF950F65BA80635C25535D4_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3501));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 3502));
	{
		// public SteamVR_Input_Sources inputSource { get; protected set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3503));
		int32_t L_0 = __this->get_U3CinputSourceU3Ek__BackingField_0();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  SteamVR_Action_Pose_Source_get_localPosition_mE065A826D8D1A8CF44D9E7F0D038F24D70985833_inline (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Pose_Source_get_localPosition_mE065A826D8D1A8CF44D9E7F0D038F24D70985833SteamVR12_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Pose_Source_get_localPosition_mE065A826D8D1A8CF44D9E7F0D038F24D70985833_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5697));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 5698));
	{
		// public Vector3 localPosition { get; protected set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5699));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_0 = __this->get_U3ClocalPositionU3Ek__BackingField_23();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  SteamVR_Action_Pose_Source_get_localRotation_m307D9DD92DFFFCC30446A71D9BD15674A797ED2A_inline (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Pose_Source_get_localRotation_m307D9DD92DFFFCC30446A71D9BD15674A797ED2ASteamVR12_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Pose_Source_get_localRotation_m307D9DD92DFFFCC30446A71D9BD15674A797ED2A_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5703));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 5704));
	{
		// public Quaternion localRotation { get; protected set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5705));
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_0 = __this->get_U3ClocalRotationU3Ek__BackingField_24();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  SteamVR_Action_Pose_Source_get_velocity_m2B71BB7981006080D113442CB374529602A310BF_inline (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Pose_Source_get_velocity_m2B71BB7981006080D113442CB374529602A310BFSteamVR12_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Pose_Source_get_velocity_m2B71BB7981006080D113442CB374529602A310BF_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5721));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 5722));
	{
		// public Vector3 velocity { get; protected set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5723));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_0 = __this->get_U3CvelocityU3Ek__BackingField_27();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  SteamVR_Action_Pose_Source_get_angularVelocity_mACAA45CB05DB94C9292ED147F3156109DAFA0209_inline (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Pose_Source_get_angularVelocity_mACAA45CB05DB94C9292ED147F3156109DAFA0209SteamVR12_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Pose_Source_get_angularVelocity_mACAA45CB05DB94C9292ED147F3156109DAFA0209_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5733));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 5734));
	{
		// public Vector3 angularVelocity { get; protected set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5735));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_0 = __this->get_U3CangularVelocityU3Ek__BackingField_29();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Behaviour_Skeleton_set_proximals_mDDA03D4409588EB318C40F83363ABB3C4D463069_inline (SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A * __this, TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804* ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Skeleton_set_proximals_mDDA03D4409588EB318C40F83363ABB3C4D463069SteamVR12_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Behaviour_Skeleton_set_proximals_mDDA03D4409588EB318C40F83363ABB3C4D463069_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9887));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 9888));
	{
		// public Transform[] proximals { get; protected set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9889));
		TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804* L_0 = ___value0;
		__this->set_U3CproximalsU3Ek__BackingField_27(L_0);
		return;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Behaviour_Skeleton_set_middles_mB85213CC9E37A3B86AEEA3A14EA16DB460136773_inline (SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A * __this, TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804* ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Skeleton_set_middles_mB85213CC9E37A3B86AEEA3A14EA16DB460136773SteamVR12_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Behaviour_Skeleton_set_middles_mB85213CC9E37A3B86AEEA3A14EA16DB460136773_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9893));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 9894));
	{
		// public Transform[] middles { get; protected set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9895));
		TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804* L_0 = ___value0;
		__this->set_U3CmiddlesU3Ek__BackingField_28(L_0);
		return;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Behaviour_Skeleton_set_distals_m7D276F9D28125233D7AD24EA8A2F0F9F0A0B4541_inline (SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A * __this, TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804* ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Skeleton_set_distals_m7D276F9D28125233D7AD24EA8A2F0F9F0A0B4541SteamVR12_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Behaviour_Skeleton_set_distals_m7D276F9D28125233D7AD24EA8A2F0F9F0A0B4541_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9899));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 9900));
	{
		// public Transform[] distals { get; protected set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9901));
		TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804* L_0 = ___value0;
		__this->set_U3CdistalsU3Ek__BackingField_29(L_0);
		return;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Behaviour_Skeleton_set_tips_m7ED7EAB9823F9DC1C4E8E888D6C1FBE636C07331_inline (SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A * __this, TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804* ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Skeleton_set_tips_m7ED7EAB9823F9DC1C4E8E888D6C1FBE636C07331SteamVR12_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Behaviour_Skeleton_set_tips_m7ED7EAB9823F9DC1C4E8E888D6C1FBE636C07331_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9905));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 9906));
	{
		// public Transform[] tips { get; protected set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9907));
		TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804* L_0 = ___value0;
		__this->set_U3CtipsU3Ek__BackingField_30(L_0);
		return;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Behaviour_Skeleton_set_auxs_m825F3D35FF398084D053A9968403269EA25E2A8A_inline (SteamVR_Behaviour_Skeleton_t48A89F31D902871C78B4B4328FCB268F88A94C2A * __this, TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804* ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Skeleton_set_auxs_m825F3D35FF398084D053A9968403269EA25E2A8ASteamVR12_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Behaviour_Skeleton_set_auxs_m825F3D35FF398084D053A9968403269EA25E2A8A_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9911));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 9912));
	{
		// public Transform[] auxs { get; protected set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 9913));
		TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804* L_0 = ___value0;
		__this->set_U3CauxsU3Ek__BackingField_31(L_0);
		return;
	}
}
IL2CPP_EXTERN_C inline IL2CPP_METHOD_ATTR bool Nullable_1_get_HasValue_mB0A6989529561627BBB65E6E4342DAA6549DD5A9_gshared_inline (Nullable_1_tBCA4780CE8E9555A53CF0BA48AF742DA998C0833 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (Nullable_1_get_HasValue_mB0A6989529561627BBB65E6E4342DAA6549DD5A9SteamVR12_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, Nullable_1_get_HasValue_mB0A6989529561627BBB65E6E4342DAA6549DD5A9_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		bool L_0 = (bool)__this->get_has_value_1();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline IL2CPP_METHOD_ATTR int32_t Nullable_1_GetValueOrDefault_m256BDDFFC9F6CE76EBBC5A9A6ED0A6FFB9F0455F_gshared_inline (Nullable_1_tBCA4780CE8E9555A53CF0BA48AF742DA998C0833 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (Nullable_1_GetValueOrDefault_m256BDDFFC9F6CE76EBBC5A9A6ED0A6FFB9F0455FSteamVR12_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, Nullable_1_GetValueOrDefault_m256BDDFFC9F6CE76EBBC5A9A6ED0A6FFB9F0455F_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		int32_t L_0 = (int32_t)__this->get_value_0();
		return L_0;
	}
}
